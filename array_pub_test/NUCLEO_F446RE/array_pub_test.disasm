
NUCLEO_F446RE/array_pub_test.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080050e5


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 00 02 20 e5 50 00 08 19 51 00 08 19 51 00 08     ... .P...Q...Q..
 8000010:	19 51 00 08 19 51 00 08 19 51 00 08 00 00 00 00     .Q...Q...Q......
	...
 800002c:	a9 4f 00 08 19 51 00 08 00 00 00 00 4f 50 00 08     .O...Q......OP..
 800003c:	af 50 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .P...Q...Q...Q..
 800004c:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 800005c:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 800006c:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 800007c:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 800008c:	3d 2d 00 08 41 2d 00 08 19 51 00 08 31 2d 00 08     =-..A-...Q..1-..
 800009c:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 80000ac:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 80000bc:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 80000cc:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 80000dc:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 80000ec:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 80000fc:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 800010c:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 800011c:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 800012c:	19 51 00 08 19 51 00 08 00 00 00 00 00 00 00 00     .Q...Q..........
 800013c:	51 2d 00 08 55 2d 00 08 19 51 00 08 45 2d 00 08     Q-..U-...Q..E-..
 800014c:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 800015c:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 800016c:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
	...
 8000184:	19 51 00 08 00 00 00 00 00 00 00 00 19 51 00 08     .Q...........Q..
	...
 800019c:	19 51 00 08 00 00 00 00 00 00 00 00 00 00 00 00     .Q..............
 80001ac:	19 51 00 08 19 51 00 08 19 51 00 08 19 51 00 08     .Q...Q...Q...Q..
 80001bc:	19 51 00 08 19 51 00 08                             .Q...Q..

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000260 	.word	0x20000260
 80001e0:	00000000 	.word	0x00000000
 80001e4:	0800650c 	.word	0x0800650c

080001e8 <frame_dummy>:
 80001e8:	4b0c      	ldr	r3, [pc, #48]	; (800021c <frame_dummy+0x34>)
 80001ea:	b143      	cbz	r3, 80001fe <frame_dummy+0x16>
 80001ec:	480c      	ldr	r0, [pc, #48]	; (8000220 <frame_dummy+0x38>)
 80001ee:	490d      	ldr	r1, [pc, #52]	; (8000224 <frame_dummy+0x3c>)
 80001f0:	b510      	push	{r4, lr}
 80001f2:	f3af 8000 	nop.w
 80001f6:	480c      	ldr	r0, [pc, #48]	; (8000228 <frame_dummy+0x40>)
 80001f8:	6803      	ldr	r3, [r0, #0]
 80001fa:	b923      	cbnz	r3, 8000206 <frame_dummy+0x1e>
 80001fc:	bd10      	pop	{r4, pc}
 80001fe:	480a      	ldr	r0, [pc, #40]	; (8000228 <frame_dummy+0x40>)
 8000200:	6803      	ldr	r3, [r0, #0]
 8000202:	b933      	cbnz	r3, 8000212 <frame_dummy+0x2a>
 8000204:	4770      	bx	lr
 8000206:	4b09      	ldr	r3, [pc, #36]	; (800022c <frame_dummy+0x44>)
 8000208:	2b00      	cmp	r3, #0
 800020a:	d0f7      	beq.n	80001fc <frame_dummy+0x14>
 800020c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000210:	4718      	bx	r3
 8000212:	4b06      	ldr	r3, [pc, #24]	; (800022c <frame_dummy+0x44>)
 8000214:	2b00      	cmp	r3, #0
 8000216:	d0f5      	beq.n	8000204 <frame_dummy+0x1c>
 8000218:	4718      	bx	r3
 800021a:	bf00      	nop
 800021c:	00000000 	.word	0x00000000
 8000220:	0800650c 	.word	0x0800650c
 8000224:	20000264 	.word	0x20000264
 8000228:	2000025c 	.word	0x2000025c
 800022c:	00000000 	.word	0x00000000

08000230 <std_msgs::Time::serialize(unsigned char*) const>:
 8000230:	6843      	ldr	r3, [r0, #4]
 8000232:	700b      	strb	r3, [r1, #0]
 8000234:	6843      	ldr	r3, [r0, #4]
 8000236:	0a1b      	lsrs	r3, r3, #8
 8000238:	704b      	strb	r3, [r1, #1]
 800023a:	88c3      	ldrh	r3, [r0, #6]
 800023c:	708b      	strb	r3, [r1, #2]
 800023e:	79c3      	ldrb	r3, [r0, #7]
 8000240:	70cb      	strb	r3, [r1, #3]
 8000242:	6883      	ldr	r3, [r0, #8]
 8000244:	710b      	strb	r3, [r1, #4]
 8000246:	6883      	ldr	r3, [r0, #8]
 8000248:	0a1b      	lsrs	r3, r3, #8
 800024a:	714b      	strb	r3, [r1, #5]
 800024c:	8943      	ldrh	r3, [r0, #10]
 800024e:	718b      	strb	r3, [r1, #6]
 8000250:	7ac3      	ldrb	r3, [r0, #11]
 8000252:	71cb      	strb	r3, [r1, #7]
 8000254:	2008      	movs	r0, #8
 8000256:	4770      	bx	lr

08000258 <std_msgs::Time::deserialize(unsigned char*)>:
 8000258:	780b      	ldrb	r3, [r1, #0]
 800025a:	6043      	str	r3, [r0, #4]
 800025c:	784a      	ldrb	r2, [r1, #1]
 800025e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000262:	6043      	str	r3, [r0, #4]
 8000264:	788a      	ldrb	r2, [r1, #2]
 8000266:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800026a:	6043      	str	r3, [r0, #4]
 800026c:	78ca      	ldrb	r2, [r1, #3]
 800026e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000272:	6043      	str	r3, [r0, #4]
 8000274:	790b      	ldrb	r3, [r1, #4]
 8000276:	6083      	str	r3, [r0, #8]
 8000278:	794a      	ldrb	r2, [r1, #5]
 800027a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800027e:	6083      	str	r3, [r0, #8]
 8000280:	798a      	ldrb	r2, [r1, #6]
 8000282:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000286:	6083      	str	r3, [r0, #8]
 8000288:	79ca      	ldrb	r2, [r1, #7]
 800028a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800028e:	6083      	str	r3, [r0, #8]
 8000290:	2008      	movs	r0, #8
 8000292:	4770      	bx	lr

08000294 <std_msgs::Time::getType()>:
 8000294:	4800      	ldr	r0, [pc, #0]	; (8000298 <std_msgs::Time::getType()+0x4>)
 8000296:	4770      	bx	lr
 8000298:	08006106 	.word	0x08006106

0800029c <std_msgs::Time::getMD5()>:
 800029c:	4800      	ldr	r0, [pc, #0]	; (80002a0 <std_msgs::Time::getMD5()+0x4>)
 800029e:	4770      	bx	lr
 80002a0:	080060e5 	.word	0x080060e5

080002a4 <rosserial_msgs::TopicInfo::getType()>:
 80002a4:	4800      	ldr	r0, [pc, #0]	; (80002a8 <rosserial_msgs::TopicInfo::getType()+0x4>)
 80002a6:	4770      	bx	lr
 80002a8:	08006077 	.word	0x08006077

080002ac <rosserial_msgs::TopicInfo::getMD5()>:
 80002ac:	4800      	ldr	r0, [pc, #0]	; (80002b0 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 80002ae:	4770      	bx	lr
 80002b0:	08006056 	.word	0x08006056

080002b4 <rosserial_msgs::Log::getType()>:
 80002b4:	4800      	ldr	r0, [pc, #0]	; (80002b8 <rosserial_msgs::Log::getType()+0x4>)
 80002b6:	4770      	bx	lr
 80002b8:	08006043 	.word	0x08006043

080002bc <rosserial_msgs::Log::getMD5()>:
 80002bc:	4800      	ldr	r0, [pc, #0]	; (80002c0 <rosserial_msgs::Log::getMD5()+0x4>)
 80002be:	4770      	bx	lr
 80002c0:	08006022 	.word	0x08006022

080002c4 <rosserial_msgs::RequestParamResponse::getType()>:
 80002c4:	4800      	ldr	r0, [pc, #0]	; (80002c8 <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 80002c6:	4770      	bx	lr
 80002c8:	08006090 	.word	0x08006090

080002cc <rosserial_msgs::RequestParamResponse::getMD5()>:
 80002cc:	4800      	ldr	r0, [pc, #0]	; (80002d0 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 80002ce:	4770      	bx	lr
 80002d0:	08006001 	.word	0x08006001

080002d4 <basic_lecture::simple_msg_single::serialize(unsigned char*) const>:
 80002d4:	7903      	ldrb	r3, [r0, #4]
 80002d6:	700b      	strb	r3, [r1, #0]
 80002d8:	6882      	ldr	r2, [r0, #8]
 80002da:	68c3      	ldr	r3, [r0, #12]
 80002dc:	704a      	strb	r2, [r1, #1]
 80002de:	0a10      	lsrs	r0, r2, #8
 80002e0:	7088      	strb	r0, [r1, #2]
 80002e2:	0c10      	lsrs	r0, r2, #16
 80002e4:	0e12      	lsrs	r2, r2, #24
 80002e6:	710a      	strb	r2, [r1, #4]
 80002e8:	0a1a      	lsrs	r2, r3, #8
 80002ea:	714b      	strb	r3, [r1, #5]
 80002ec:	718a      	strb	r2, [r1, #6]
 80002ee:	0c1a      	lsrs	r2, r3, #16
 80002f0:	0e1b      	lsrs	r3, r3, #24
 80002f2:	70c8      	strb	r0, [r1, #3]
 80002f4:	71ca      	strb	r2, [r1, #7]
 80002f6:	720b      	strb	r3, [r1, #8]
 80002f8:	2009      	movs	r0, #9
 80002fa:	4770      	bx	lr

080002fc <basic_lecture::simple_msg_single::deserialize(unsigned char*)>:
 80002fc:	780b      	ldrb	r3, [r1, #0]
 80002fe:	7103      	strb	r3, [r0, #4]
 8000300:	f851 2f01 	ldr.w	r2, [r1, #1]!
 8000304:	684b      	ldr	r3, [r1, #4]
 8000306:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800030a:	2009      	movs	r0, #9
 800030c:	4770      	bx	lr
	...

08000310 <basic_lecture::simple_msg_single::getType()>:
 8000310:	4800      	ldr	r0, [pc, #0]	; (8000314 <basic_lecture::simple_msg_single::getType()+0x4>)
 8000312:	4770      	bx	lr
 8000314:	08005fe1 	.word	0x08005fe1

08000318 <basic_lecture::simple_msg_single::getMD5()>:
 8000318:	4800      	ldr	r0, [pc, #0]	; (800031c <basic_lecture::simple_msg_single::getMD5()+0x4>)
 800031a:	4770      	bx	lr
 800031c:	08005fc0 	.word	0x08005fc0

08000320 <basic_lecture::simple_msg::serialize(unsigned char*) const>:
 8000320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000322:	6843      	ldr	r3, [r0, #4]
 8000324:	700b      	strb	r3, [r1, #0]
 8000326:	6843      	ldr	r3, [r0, #4]
 8000328:	0a1b      	lsrs	r3, r3, #8
 800032a:	704b      	strb	r3, [r1, #1]
 800032c:	88c3      	ldrh	r3, [r0, #6]
 800032e:	708b      	strb	r3, [r1, #2]
 8000330:	79c3      	ldrb	r3, [r0, #7]
 8000332:	70cb      	strb	r3, [r1, #3]
 8000334:	4604      	mov	r4, r0
 8000336:	460d      	mov	r5, r1
 8000338:	2700      	movs	r7, #0
 800033a:	2604      	movs	r6, #4
 800033c:	6863      	ldr	r3, [r4, #4]
 800033e:	429f      	cmp	r7, r3
 8000340:	d209      	bcs.n	8000356 <basic_lecture::simple_msg::serialize(unsigned char*) const+0x36>
 8000342:	013b      	lsls	r3, r7, #4
 8000344:	69a0      	ldr	r0, [r4, #24]
 8000346:	58c2      	ldr	r2, [r0, r3]
 8000348:	19a9      	adds	r1, r5, r6
 800034a:	6812      	ldr	r2, [r2, #0]
 800034c:	4418      	add	r0, r3
 800034e:	4790      	blx	r2
 8000350:	3701      	adds	r7, #1
 8000352:	4406      	add	r6, r0
 8000354:	e7f2      	b.n	800033c <basic_lecture::simple_msg::serialize(unsigned char*) const+0x1c>
 8000356:	4630      	mov	r0, r6
 8000358:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800035c <basic_lecture::simple_msg::getType()>:
 800035c:	4800      	ldr	r0, [pc, #0]	; (8000360 <basic_lecture::simple_msg::getType()+0x4>)
 800035e:	4770      	bx	lr
 8000360:	08005fa7 	.word	0x08005fa7

08000364 <basic_lecture::simple_msg::getMD5()>:
 8000364:	4800      	ldr	r0, [pc, #0]	; (8000368 <basic_lecture::simple_msg::getMD5()+0x4>)
 8000366:	4770      	bx	lr
 8000368:	08005f86 	.word	0x08005f86

0800036c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 800036c:	f890 05e8 	ldrb.w	r0, [r0, #1512]	; 0x5e8
 8000370:	4770      	bx	lr

08000372 <basic_lecture::simple_msg::deserialize(unsigned char*)>:
 8000372:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000376:	6843      	ldr	r3, [r0, #4]
 8000378:	680d      	ldr	r5, [r1, #0]
 800037a:	429d      	cmp	r5, r3
 800037c:	4604      	mov	r4, r0
 800037e:	460f      	mov	r7, r1
 8000380:	d904      	bls.n	800038c <basic_lecture::simple_msg::deserialize(unsigned char*)+0x1a>
 8000382:	0129      	lsls	r1, r5, #4
 8000384:	6980      	ldr	r0, [r0, #24]
 8000386:	f005 fb79 	bl	8005a7c <realloc>
 800038a:	61a0      	str	r0, [r4, #24]
 800038c:	6065      	str	r5, [r4, #4]
 800038e:	2600      	movs	r6, #0
 8000390:	2504      	movs	r5, #4
 8000392:	f104 0808 	add.w	r8, r4, #8
 8000396:	f104 0918 	add.w	r9, r4, #24
 800039a:	6863      	ldr	r3, [r4, #4]
 800039c:	429e      	cmp	r6, r3
 800039e:	d210      	bcs.n	80003c2 <basic_lecture::simple_msg::deserialize(unsigned char*)+0x50>
 80003a0:	1979      	adds	r1, r7, r5
 80003a2:	4640      	mov	r0, r8
 80003a4:	f7ff ffaa 	bl	80002fc <basic_lecture::simple_msg_single::deserialize(unsigned char*)>
 80003a8:	69a3      	ldr	r3, [r4, #24]
 80003aa:	4405      	add	r5, r0
 80003ac:	4642      	mov	r2, r8
 80003ae:	eb03 1306 	add.w	r3, r3, r6, lsl #4
 80003b2:	f852 1b04 	ldr.w	r1, [r2], #4
 80003b6:	f843 1b04 	str.w	r1, [r3], #4
 80003ba:	454a      	cmp	r2, r9
 80003bc:	d1f9      	bne.n	80003b2 <basic_lecture::simple_msg::deserialize(unsigned char*)+0x40>
 80003be:	3601      	adds	r6, #1
 80003c0:	e7eb      	b.n	800039a <basic_lecture::simple_msg::deserialize(unsigned char*)+0x28>
 80003c2:	4628      	mov	r0, r5
 80003c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080003c8 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 80003c8:	3801      	subs	r0, #1
 80003ca:	2300      	movs	r3, #0
 80003cc:	fa21 f203 	lsr.w	r2, r1, r3
 80003d0:	3308      	adds	r3, #8
 80003d2:	2b20      	cmp	r3, #32
 80003d4:	f800 2f01 	strb.w	r2, [r0, #1]!
 80003d8:	d1f8      	bne.n	80003cc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 80003da:	4770      	bx	lr

080003dc <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 80003dc:	6843      	ldr	r3, [r0, #4]
 80003de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80003e2:	700b      	strb	r3, [r1, #0]
 80003e4:	6843      	ldr	r3, [r0, #4]
 80003e6:	0a1b      	lsrs	r3, r3, #8
 80003e8:	704b      	strb	r3, [r1, #1]
 80003ea:	88c3      	ldrh	r3, [r0, #6]
 80003ec:	708b      	strb	r3, [r1, #2]
 80003ee:	79c3      	ldrb	r3, [r0, #7]
 80003f0:	70cb      	strb	r3, [r1, #3]
 80003f2:	460d      	mov	r5, r1
 80003f4:	1d0a      	adds	r2, r1, #4
 80003f6:	4604      	mov	r4, r0
 80003f8:	2100      	movs	r1, #0
 80003fa:	6860      	ldr	r0, [r4, #4]
 80003fc:	4281      	cmp	r1, r0
 80003fe:	eba2 0305 	sub.w	r3, r2, r5
 8000402:	f102 0204 	add.w	r2, r2, #4
 8000406:	d20f      	bcs.n	8000428 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 8000408:	68e3      	ldr	r3, [r4, #12]
 800040a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800040e:	f802 3c04 	strb.w	r3, [r2, #-4]
 8000412:	0a18      	lsrs	r0, r3, #8
 8000414:	f802 0c03 	strb.w	r0, [r2, #-3]
 8000418:	0c18      	lsrs	r0, r3, #16
 800041a:	0e1b      	lsrs	r3, r3, #24
 800041c:	f802 0c02 	strb.w	r0, [r2, #-2]
 8000420:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000424:	3101      	adds	r1, #1
 8000426:	e7e8      	b.n	80003fa <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 8000428:	6922      	ldr	r2, [r4, #16]
 800042a:	54ea      	strb	r2, [r5, r3]
 800042c:	6921      	ldr	r1, [r4, #16]
 800042e:	18ea      	adds	r2, r5, r3
 8000430:	0a09      	lsrs	r1, r1, #8
 8000432:	7051      	strb	r1, [r2, #1]
 8000434:	8a61      	ldrh	r1, [r4, #18]
 8000436:	7091      	strb	r1, [r2, #2]
 8000438:	7ce1      	ldrb	r1, [r4, #19]
 800043a:	70d1      	strb	r1, [r2, #3]
 800043c:	3304      	adds	r3, #4
 800043e:	442b      	add	r3, r5
 8000440:	2100      	movs	r1, #0
 8000442:	6922      	ldr	r2, [r4, #16]
 8000444:	4291      	cmp	r1, r2
 8000446:	eba3 0605 	sub.w	r6, r3, r5
 800044a:	f103 0304 	add.w	r3, r3, #4
 800044e:	d20f      	bcs.n	8000470 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 8000450:	69a2      	ldr	r2, [r4, #24]
 8000452:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8000456:	f803 2c04 	strb.w	r2, [r3, #-4]
 800045a:	0a10      	lsrs	r0, r2, #8
 800045c:	f803 0c03 	strb.w	r0, [r3, #-3]
 8000460:	0c10      	lsrs	r0, r2, #16
 8000462:	0e12      	lsrs	r2, r2, #24
 8000464:	f803 0c02 	strb.w	r0, [r3, #-2]
 8000468:	f803 2c01 	strb.w	r2, [r3, #-1]
 800046c:	3101      	adds	r1, #1
 800046e:	e7e8      	b.n	8000442 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 8000470:	69e3      	ldr	r3, [r4, #28]
 8000472:	55ab      	strb	r3, [r5, r6]
 8000474:	69e2      	ldr	r2, [r4, #28]
 8000476:	19ab      	adds	r3, r5, r6
 8000478:	0a12      	lsrs	r2, r2, #8
 800047a:	705a      	strb	r2, [r3, #1]
 800047c:	8be2      	ldrh	r2, [r4, #30]
 800047e:	709a      	strb	r2, [r3, #2]
 8000480:	7fe2      	ldrb	r2, [r4, #31]
 8000482:	70da      	strb	r2, [r3, #3]
 8000484:	3604      	adds	r6, #4
 8000486:	2700      	movs	r7, #0
 8000488:	69e3      	ldr	r3, [r4, #28]
 800048a:	429f      	cmp	r7, r3
 800048c:	d214      	bcs.n	80004b8 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 800048e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000490:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8000494:	f005 fb4d 	bl	8005b32 <strlen>
 8000498:	4680      	mov	r8, r0
 800049a:	4601      	mov	r1, r0
 800049c:	19a8      	adds	r0, r5, r6
 800049e:	f7ff ff93 	bl	80003c8 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80004a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80004a4:	3604      	adds	r6, #4
 80004a6:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 80004aa:	19a8      	adds	r0, r5, r6
 80004ac:	4642      	mov	r2, r8
 80004ae:	f005 f84f 	bl	8005550 <memcpy>
 80004b2:	4446      	add	r6, r8
 80004b4:	3701      	adds	r7, #1
 80004b6:	e7e7      	b.n	8000488 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 80004b8:	4630      	mov	r0, r6
 80004ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080004be <rosserial_msgs::Log::serialize(unsigned char*) const>:
 80004be:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004c0:	460e      	mov	r6, r1
 80004c2:	7903      	ldrb	r3, [r0, #4]
 80004c4:	f806 3b01 	strb.w	r3, [r6], #1
 80004c8:	4605      	mov	r5, r0
 80004ca:	6880      	ldr	r0, [r0, #8]
 80004cc:	460f      	mov	r7, r1
 80004ce:	f005 fb30 	bl	8005b32 <strlen>
 80004d2:	4604      	mov	r4, r0
 80004d4:	4601      	mov	r1, r0
 80004d6:	4630      	mov	r0, r6
 80004d8:	f7ff ff76 	bl	80003c8 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80004dc:	4622      	mov	r2, r4
 80004de:	68a9      	ldr	r1, [r5, #8]
 80004e0:	1d78      	adds	r0, r7, #5
 80004e2:	f005 f835 	bl	8005550 <memcpy>
 80004e6:	1d60      	adds	r0, r4, #5
 80004e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080004ea <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 80004ea:	8883      	ldrh	r3, [r0, #4]
 80004ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80004f0:	700b      	strb	r3, [r1, #0]
 80004f2:	8883      	ldrh	r3, [r0, #4]
 80004f4:	0a1b      	lsrs	r3, r3, #8
 80004f6:	704b      	strb	r3, [r1, #1]
 80004f8:	4605      	mov	r5, r0
 80004fa:	6880      	ldr	r0, [r0, #8]
 80004fc:	460c      	mov	r4, r1
 80004fe:	f005 fb18 	bl	8005b32 <strlen>
 8000502:	4607      	mov	r7, r0
 8000504:	4601      	mov	r1, r0
 8000506:	1ca0      	adds	r0, r4, #2
 8000508:	f7ff ff5e 	bl	80003c8 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800050c:	463a      	mov	r2, r7
 800050e:	68a9      	ldr	r1, [r5, #8]
 8000510:	1da0      	adds	r0, r4, #6
 8000512:	f005 f81d 	bl	8005550 <memcpy>
 8000516:	68e8      	ldr	r0, [r5, #12]
 8000518:	f005 fb0b 	bl	8005b32 <strlen>
 800051c:	f107 0806 	add.w	r8, r7, #6
 8000520:	4606      	mov	r6, r0
 8000522:	4601      	mov	r1, r0
 8000524:	370a      	adds	r7, #10
 8000526:	eb04 0008 	add.w	r0, r4, r8
 800052a:	f7ff ff4d 	bl	80003c8 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800052e:	4632      	mov	r2, r6
 8000530:	68e9      	ldr	r1, [r5, #12]
 8000532:	19e0      	adds	r0, r4, r7
 8000534:	f005 f80c 	bl	8005550 <memcpy>
 8000538:	6928      	ldr	r0, [r5, #16]
 800053a:	f005 fafa 	bl	8005b32 <strlen>
 800053e:	443e      	add	r6, r7
 8000540:	4601      	mov	r1, r0
 8000542:	4607      	mov	r7, r0
 8000544:	19a0      	adds	r0, r4, r6
 8000546:	3604      	adds	r6, #4
 8000548:	f7ff ff3e 	bl	80003c8 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800054c:	463a      	mov	r2, r7
 800054e:	19a0      	adds	r0, r4, r6
 8000550:	6929      	ldr	r1, [r5, #16]
 8000552:	443e      	add	r6, r7
 8000554:	f004 fffc 	bl	8005550 <memcpy>
 8000558:	696b      	ldr	r3, [r5, #20]
 800055a:	55a3      	strb	r3, [r4, r6]
 800055c:	4434      	add	r4, r6
 800055e:	0a1a      	lsrs	r2, r3, #8
 8000560:	7062      	strb	r2, [r4, #1]
 8000562:	0c1a      	lsrs	r2, r3, #16
 8000564:	0e1b      	lsrs	r3, r3, #24
 8000566:	70a2      	strb	r2, [r4, #2]
 8000568:	70e3      	strb	r3, [r4, #3]
 800056a:	1d30      	adds	r0, r6, #4
 800056c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000570 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 8000570:	b510      	push	{r4, lr}
 8000572:	2300      	movs	r3, #0
 8000574:	6003      	str	r3, [r0, #0]
 8000576:	3901      	subs	r1, #1
 8000578:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800057c:	fa02 f403 	lsl.w	r4, r2, r3
 8000580:	6802      	ldr	r2, [r0, #0]
 8000582:	3308      	adds	r3, #8
 8000584:	4322      	orrs	r2, r4
 8000586:	2b20      	cmp	r3, #32
 8000588:	6002      	str	r2, [r0, #0]
 800058a:	d1f5      	bne.n	8000578 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 800058c:	bd10      	pop	{r4, pc}

0800058e <rosserial_msgs::Log::deserialize(unsigned char*)>:
 800058e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000590:	460c      	mov	r4, r1
 8000592:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000596:	7103      	strb	r3, [r0, #4]
 8000598:	4605      	mov	r5, r0
 800059a:	a801      	add	r0, sp, #4
 800059c:	f7ff ffe8 	bl	8000570 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80005a0:	9b01      	ldr	r3, [sp, #4]
 80005a2:	1d62      	adds	r2, r4, #5
 80005a4:	1d58      	adds	r0, r3, #5
 80005a6:	1b11      	subs	r1, r2, r4
 80005a8:	4288      	cmp	r0, r1
 80005aa:	d904      	bls.n	80005b6 <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 80005ac:	f812 1b01 	ldrb.w	r1, [r2], #1
 80005b0:	f802 1c02 	strb.w	r1, [r2, #-2]
 80005b4:	e7f7      	b.n	80005a6 <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 80005b6:	4423      	add	r3, r4
 80005b8:	2200      	movs	r2, #0
 80005ba:	3404      	adds	r4, #4
 80005bc:	711a      	strb	r2, [r3, #4]
 80005be:	60ac      	str	r4, [r5, #8]
 80005c0:	b003      	add	sp, #12
 80005c2:	bd30      	pop	{r4, r5, pc}

080005c4 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 80005c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80005c6:	780b      	ldrb	r3, [r1, #0]
 80005c8:	8083      	strh	r3, [r0, #4]
 80005ca:	784a      	ldrb	r2, [r1, #1]
 80005cc:	b085      	sub	sp, #20
 80005ce:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80005d2:	8083      	strh	r3, [r0, #4]
 80005d4:	460c      	mov	r4, r1
 80005d6:	4606      	mov	r6, r0
 80005d8:	3102      	adds	r1, #2
 80005da:	a801      	add	r0, sp, #4
 80005dc:	f7ff ffc8 	bl	8000570 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80005e0:	9f01      	ldr	r7, [sp, #4]
 80005e2:	1da3      	adds	r3, r4, #6
 80005e4:	1dbd      	adds	r5, r7, #6
 80005e6:	1b1a      	subs	r2, r3, r4
 80005e8:	4295      	cmp	r5, r2
 80005ea:	d904      	bls.n	80005f6 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 80005ec:	f813 2b01 	ldrb.w	r2, [r3], #1
 80005f0:	f803 2c02 	strb.w	r2, [r3, #-2]
 80005f4:	e7f7      	b.n	80005e6 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 80005f6:	19e3      	adds	r3, r4, r7
 80005f8:	2200      	movs	r2, #0
 80005fa:	715a      	strb	r2, [r3, #5]
 80005fc:	1d63      	adds	r3, r4, #5
 80005fe:	60b3      	str	r3, [r6, #8]
 8000600:	1961      	adds	r1, r4, r5
 8000602:	a802      	add	r0, sp, #8
 8000604:	f7ff ffb4 	bl	8000570 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000608:	1d2b      	adds	r3, r5, #4
 800060a:	9d02      	ldr	r5, [sp, #8]
 800060c:	f107 020a 	add.w	r2, r7, #10
 8000610:	441d      	add	r5, r3
 8000612:	4422      	add	r2, r4
 8000614:	1b11      	subs	r1, r2, r4
 8000616:	428d      	cmp	r5, r1
 8000618:	d904      	bls.n	8000624 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 800061a:	f812 1b01 	ldrb.w	r1, [r2], #1
 800061e:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000622:	e7f7      	b.n	8000614 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 8000624:	1961      	adds	r1, r4, r5
 8000626:	3b01      	subs	r3, #1
 8000628:	4423      	add	r3, r4
 800062a:	2200      	movs	r2, #0
 800062c:	f801 2c01 	strb.w	r2, [r1, #-1]
 8000630:	a803      	add	r0, sp, #12
 8000632:	60f3      	str	r3, [r6, #12]
 8000634:	f7ff ff9c 	bl	8000570 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000638:	9803      	ldr	r0, [sp, #12]
 800063a:	3504      	adds	r5, #4
 800063c:	4428      	add	r0, r5
 800063e:	1963      	adds	r3, r4, r5
 8000640:	1b1a      	subs	r2, r3, r4
 8000642:	4290      	cmp	r0, r2
 8000644:	d904      	bls.n	8000650 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 8000646:	f813 2b01 	ldrb.w	r2, [r3], #1
 800064a:	f803 2c02 	strb.w	r2, [r3, #-2]
 800064e:	e7f7      	b.n	8000640 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 8000650:	1822      	adds	r2, r4, r0
 8000652:	3d01      	subs	r5, #1
 8000654:	2300      	movs	r3, #0
 8000656:	4425      	add	r5, r4
 8000658:	f802 3c01 	strb.w	r3, [r2, #-1]
 800065c:	6135      	str	r5, [r6, #16]
 800065e:	7893      	ldrb	r3, [r2, #2]
 8000660:	7851      	ldrb	r1, [r2, #1]
 8000662:	78d2      	ldrb	r2, [r2, #3]
 8000664:	041b      	lsls	r3, r3, #16
 8000666:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800066a:	5c21      	ldrb	r1, [r4, r0]
 800066c:	430b      	orrs	r3, r1
 800066e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000672:	3004      	adds	r0, #4
 8000674:	6173      	str	r3, [r6, #20]
 8000676:	b005      	add	sp, #20
 8000678:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800067a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 800067a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800067e:	6843      	ldr	r3, [r0, #4]
 8000680:	680d      	ldr	r5, [r1, #0]
 8000682:	429d      	cmp	r5, r3
 8000684:	4604      	mov	r4, r0
 8000686:	460e      	mov	r6, r1
 8000688:	d904      	bls.n	8000694 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 800068a:	00a9      	lsls	r1, r5, #2
 800068c:	68c0      	ldr	r0, [r0, #12]
 800068e:	f005 f9f5 	bl	8005a7c <realloc>
 8000692:	60e0      	str	r0, [r4, #12]
 8000694:	6065      	str	r5, [r4, #4]
 8000696:	1d32      	adds	r2, r6, #4
 8000698:	2100      	movs	r1, #0
 800069a:	6860      	ldr	r0, [r4, #4]
 800069c:	4281      	cmp	r1, r0
 800069e:	eba2 0306 	sub.w	r3, r2, r6
 80006a2:	f102 0204 	add.w	r2, r2, #4
 80006a6:	d213      	bcs.n	80006d0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 80006a8:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 80006ac:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 80006b0:	041b      	lsls	r3, r3, #16
 80006b2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 80006b6:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 80006ba:	4303      	orrs	r3, r0
 80006bc:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 80006c0:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 80006c4:	68e0      	ldr	r0, [r4, #12]
 80006c6:	60a3      	str	r3, [r4, #8]
 80006c8:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 80006cc:	3101      	adds	r1, #1
 80006ce:	e7e4      	b.n	800069a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 80006d0:	18f2      	adds	r2, r6, r3
 80006d2:	5cf1      	ldrb	r1, [r6, r3]
 80006d4:	7895      	ldrb	r5, [r2, #2]
 80006d6:	7850      	ldrb	r0, [r2, #1]
 80006d8:	78d2      	ldrb	r2, [r2, #3]
 80006da:	042d      	lsls	r5, r5, #16
 80006dc:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 80006e0:	430d      	orrs	r5, r1
 80006e2:	1d1f      	adds	r7, r3, #4
 80006e4:	6923      	ldr	r3, [r4, #16]
 80006e6:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 80006ea:	429d      	cmp	r5, r3
 80006ec:	d904      	bls.n	80006f8 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 80006ee:	00a9      	lsls	r1, r5, #2
 80006f0:	69a0      	ldr	r0, [r4, #24]
 80006f2:	f005 f9c3 	bl	8005a7c <realloc>
 80006f6:	61a0      	str	r0, [r4, #24]
 80006f8:	6125      	str	r5, [r4, #16]
 80006fa:	19f3      	adds	r3, r6, r7
 80006fc:	2100      	movs	r1, #0
 80006fe:	6922      	ldr	r2, [r4, #16]
 8000700:	4291      	cmp	r1, r2
 8000702:	eba3 0506 	sub.w	r5, r3, r6
 8000706:	f103 0304 	add.w	r3, r3, #4
 800070a:	d213      	bcs.n	8000734 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 800070c:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8000710:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8000714:	0412      	lsls	r2, r2, #16
 8000716:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800071a:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 800071e:	4302      	orrs	r2, r0
 8000720:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8000724:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000728:	69a0      	ldr	r0, [r4, #24]
 800072a:	6162      	str	r2, [r4, #20]
 800072c:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 8000730:	3101      	adds	r1, #1
 8000732:	e7e4      	b.n	80006fe <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 8000734:	1973      	adds	r3, r6, r5
 8000736:	5d72      	ldrb	r2, [r6, r5]
 8000738:	789f      	ldrb	r7, [r3, #2]
 800073a:	7859      	ldrb	r1, [r3, #1]
 800073c:	78db      	ldrb	r3, [r3, #3]
 800073e:	043f      	lsls	r7, r7, #16
 8000740:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 8000744:	4317      	orrs	r7, r2
 8000746:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 800074a:	69e3      	ldr	r3, [r4, #28]
 800074c:	429f      	cmp	r7, r3
 800074e:	f105 0504 	add.w	r5, r5, #4
 8000752:	d904      	bls.n	800075e <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 8000754:	00b9      	lsls	r1, r7, #2
 8000756:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8000758:	f005 f990 	bl	8005a7c <realloc>
 800075c:	6260      	str	r0, [r4, #36]	; 0x24
 800075e:	61e7      	str	r7, [r4, #28]
 8000760:	2700      	movs	r7, #0
 8000762:	46b8      	mov	r8, r7
 8000764:	69e3      	ldr	r3, [r4, #28]
 8000766:	429f      	cmp	r7, r3
 8000768:	d21a      	bcs.n	80007a0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 800076a:	1971      	adds	r1, r6, r5
 800076c:	a801      	add	r0, sp, #4
 800076e:	f7ff feff 	bl	8000570 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000772:	1d2b      	adds	r3, r5, #4
 8000774:	9d01      	ldr	r5, [sp, #4]
 8000776:	18f2      	adds	r2, r6, r3
 8000778:	441d      	add	r5, r3
 800077a:	1b91      	subs	r1, r2, r6
 800077c:	42a9      	cmp	r1, r5
 800077e:	d204      	bcs.n	800078a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 8000780:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000784:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000788:	e7f7      	b.n	800077a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 800078a:	1972      	adds	r2, r6, r5
 800078c:	3b01      	subs	r3, #1
 800078e:	f802 8c01 	strb.w	r8, [r2, #-1]
 8000792:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8000794:	4433      	add	r3, r6
 8000796:	6223      	str	r3, [r4, #32]
 8000798:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 800079c:	3701      	adds	r7, #1
 800079e:	e7e1      	b.n	8000764 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 80007a0:	4628      	mov	r0, r5
 80007a2:	b002      	add	sp, #8
 80007a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080007a8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 80007a8:	b530      	push	{r4, r5, lr}
 80007aa:	b085      	sub	sp, #20
 80007ac:	4604      	mov	r4, r0
 80007ae:	4b09      	ldr	r3, [pc, #36]	; (80007d4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 80007b0:	9301      	str	r3, [sp, #4]
 80007b2:	2300      	movs	r3, #0
 80007b4:	9302      	str	r3, [sp, #8]
 80007b6:	9303      	str	r3, [sp, #12]
 80007b8:	f854 3bec 	ldr.w	r3, [r4], #236
 80007bc:	aa01      	add	r2, sp, #4
 80007be:	681b      	ldr	r3, [r3, #0]
 80007c0:	210a      	movs	r1, #10
 80007c2:	4605      	mov	r5, r0
 80007c4:	4798      	blx	r3
 80007c6:	4620      	mov	r0, r4
 80007c8:	f004 fa1f 	bl	8004c0a <mbed::Timer::read_ms()>
 80007cc:	f8c5 00fc 	str.w	r0, [r5, #252]	; 0xfc
 80007d0:	b005      	add	sp, #20
 80007d2:	bd30      	pop	{r4, r5, pc}
 80007d4:	08005ee4 	.word	0x08005ee4

080007d8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 80007d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007dc:	b086      	sub	sp, #24
 80007de:	4b2b      	ldr	r3, [pc, #172]	; (800088c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 80007e0:	9300      	str	r3, [sp, #0]
 80007e2:	2200      	movs	r2, #0
 80007e4:	4b2a      	ldr	r3, [pc, #168]	; (8000890 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 80007e6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80007ea:	4605      	mov	r5, r0
 80007ec:	9302      	str	r3, [sp, #8]
 80007ee:	9303      	str	r3, [sp, #12]
 80007f0:	9304      	str	r3, [sp, #16]
 80007f2:	9205      	str	r2, [sp, #20]
 80007f4:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 80007f8:	f500 66ae 	add.w	r6, r0, #1392	; 0x570
 80007fc:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000800:	6823      	ldr	r3, [r4, #0]
 8000802:	b1bb      	cbz	r3, 8000834 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 8000804:	6858      	ldr	r0, [r3, #4]
 8000806:	689a      	ldr	r2, [r3, #8]
 8000808:	f8ad 2004 	strh.w	r2, [sp, #4]
 800080c:	681a      	ldr	r2, [r3, #0]
 800080e:	6803      	ldr	r3, [r0, #0]
 8000810:	9202      	str	r2, [sp, #8]
 8000812:	689b      	ldr	r3, [r3, #8]
 8000814:	4798      	blx	r3
 8000816:	6823      	ldr	r3, [r4, #0]
 8000818:	9003      	str	r0, [sp, #12]
 800081a:	6858      	ldr	r0, [r3, #4]
 800081c:	6803      	ldr	r3, [r0, #0]
 800081e:	68db      	ldr	r3, [r3, #12]
 8000820:	4798      	blx	r3
 8000822:	6821      	ldr	r1, [r4, #0]
 8000824:	682b      	ldr	r3, [r5, #0]
 8000826:	9004      	str	r0, [sp, #16]
 8000828:	9705      	str	r7, [sp, #20]
 800082a:	681b      	ldr	r3, [r3, #0]
 800082c:	6909      	ldr	r1, [r1, #16]
 800082e:	466a      	mov	r2, sp
 8000830:	4628      	mov	r0, r5
 8000832:	4798      	blx	r3
 8000834:	3404      	adds	r4, #4
 8000836:	42b4      	cmp	r4, r6
 8000838:	d1e2      	bne.n	8000800 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 800083a:	f205 56d4 	addw	r6, r5, #1492	; 0x5d4
 800083e:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000842:	6820      	ldr	r0, [r4, #0]
 8000844:	b1c8      	cbz	r0, 800087a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 8000846:	6843      	ldr	r3, [r0, #4]
 8000848:	f8ad 3004 	strh.w	r3, [sp, #4]
 800084c:	6883      	ldr	r3, [r0, #8]
 800084e:	9302      	str	r3, [sp, #8]
 8000850:	6803      	ldr	r3, [r0, #0]
 8000852:	689b      	ldr	r3, [r3, #8]
 8000854:	4798      	blx	r3
 8000856:	9003      	str	r0, [sp, #12]
 8000858:	6820      	ldr	r0, [r4, #0]
 800085a:	6803      	ldr	r3, [r0, #0]
 800085c:	68db      	ldr	r3, [r3, #12]
 800085e:	4798      	blx	r3
 8000860:	682b      	ldr	r3, [r5, #0]
 8000862:	9004      	str	r0, [sp, #16]
 8000864:	6820      	ldr	r0, [r4, #0]
 8000866:	f8d3 8000 	ldr.w	r8, [r3]
 800086a:	6803      	ldr	r3, [r0, #0]
 800086c:	9705      	str	r7, [sp, #20]
 800086e:	685b      	ldr	r3, [r3, #4]
 8000870:	4798      	blx	r3
 8000872:	466a      	mov	r2, sp
 8000874:	4601      	mov	r1, r0
 8000876:	4628      	mov	r0, r5
 8000878:	47c0      	blx	r8
 800087a:	3404      	adds	r4, #4
 800087c:	42a6      	cmp	r6, r4
 800087e:	d1e0      	bne.n	8000842 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 8000880:	2301      	movs	r3, #1
 8000882:	f885 35e8 	strb.w	r3, [r5, #1512]	; 0x5e8
 8000886:	b006      	add	sp, #24
 8000888:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800088c:	08005efc 	.word	0x08005efc
 8000890:	0800619a 	.word	0x0800619a

08000894 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 8000894:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000896:	b085      	sub	sp, #20
 8000898:	f100 05ec 	add.w	r5, r0, #236	; 0xec
 800089c:	4b1f      	ldr	r3, [pc, #124]	; (800091c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 800089e:	9301      	str	r3, [sp, #4]
 80008a0:	4604      	mov	r4, r0
 80008a2:	2300      	movs	r3, #0
 80008a4:	4628      	mov	r0, r5
 80008a6:	9302      	str	r3, [sp, #8]
 80008a8:	9303      	str	r3, [sp, #12]
 80008aa:	460e      	mov	r6, r1
 80008ac:	f004 f9ad 	bl	8004c0a <mbed::Timer::read_ms()>
 80008b0:	f8d4 20fc 	ldr.w	r2, [r4, #252]	; 0xfc
 80008b4:	4631      	mov	r1, r6
 80008b6:	1a87      	subs	r7, r0, r2
 80008b8:	a801      	add	r0, sp, #4
 80008ba:	f7ff fccd 	bl	8000258 <std_msgs::Time::deserialize(unsigned char*)>
 80008be:	9b02      	ldr	r3, [sp, #8]
 80008c0:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 80008c4:	fbb7 f2f6 	udiv	r2, r7, r6
 80008c8:	4413      	add	r3, r2
 80008ca:	9302      	str	r3, [sp, #8]
 80008cc:	fb06 7212 	mls	r2, r6, r2, r7
 80008d0:	9b03      	ldr	r3, [sp, #12]
 80008d2:	4f13      	ldr	r7, [pc, #76]	; (8000920 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 80008d4:	4628      	mov	r0, r5
 80008d6:	fb07 3202 	mla	r2, r7, r2, r3
 80008da:	9203      	str	r2, [sp, #12]
 80008dc:	f004 f995 	bl	8004c0a <mbed::Timer::read_ms()>
 80008e0:	9a02      	ldr	r2, [sp, #8]
 80008e2:	fbb0 f3f6 	udiv	r3, r0, r6
 80008e6:	3a01      	subs	r2, #1
 80008e8:	1ad2      	subs	r2, r2, r3
 80008ea:	9903      	ldr	r1, [sp, #12]
 80008ec:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80008f0:	4a0c      	ldr	r2, [pc, #48]	; (8000924 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x90>)
 80008f2:	fb06 0313 	mls	r3, r6, r3, r0
 80008f6:	440a      	add	r2, r1
 80008f8:	fb07 2313 	mls	r3, r7, r3, r2
 80008fc:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8000900:	f504 7182 	add.w	r1, r4, #260	; 0x104
 8000904:	f504 7080 	add.w	r0, r4, #256	; 0x100
 8000908:	f000 fa8c 	bl	8000e24 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 800090c:	4628      	mov	r0, r5
 800090e:	f004 f97c 	bl	8004c0a <mbed::Timer::read_ms()>
 8000912:	f8c4 05f0 	str.w	r0, [r4, #1520]	; 0x5f0
 8000916:	b005      	add	sp, #20
 8000918:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800091a:	bf00      	nop
 800091c:	08005ee4 	.word	0x08005ee4
 8000920:	000f4240 	.word	0x000f4240
 8000924:	3b9aca00 	.word	0x3b9aca00

08000928 <_GLOBAL__sub_I_nh>:
 8000928:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800092a:	4c40      	ldr	r4, [pc, #256]	; (8000a2c <_GLOBAL__sub_I_nh+0x104>)
 800092c:	4b40      	ldr	r3, [pc, #256]	; (8000a30 <_GLOBAL__sub_I_nh+0x108>)
 800092e:	4620      	mov	r0, r4
 8000930:	2500      	movs	r5, #0
 8000932:	f840 3b04 	str.w	r3, [r0], #4
 8000936:	2304      	movs	r3, #4
 8000938:	2203      	movs	r2, #3
 800093a:	2102      	movs	r1, #2
 800093c:	f104 06ec 	add.w	r6, r4, #236	; 0xec
 8000940:	e88d 0028 	stmia.w	sp, {r3, r5}
 8000944:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000948:	f000 fb62 	bl	8001010 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 800094c:	4630      	mov	r0, r6
 800094e:	f004 f972 	bl	8004c36 <mbed::Timer::Timer()>
 8000952:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000956:	4630      	mov	r0, r6
 8000958:	f44f 7600 	mov.w	r6, #512	; 0x200
 800095c:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 8000960:	f004 f927 	bl	8004bb2 <mbed::Timer::start()>
 8000964:	4632      	mov	r2, r6
 8000966:	4629      	mov	r1, r5
 8000968:	f504 7086 	add.w	r0, r4, #268	; 0x10c
 800096c:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
 8000970:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8000974:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8000978:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
 800097c:	f004 fe0d 	bl	800559a <memset>
 8000980:	4632      	mov	r2, r6
 8000982:	4629      	mov	r1, r5
 8000984:	2664      	movs	r6, #100	; 0x64
 8000986:	f504 7043 	add.w	r0, r4, #780	; 0x30c
 800098a:	f004 fe06 	bl	800559a <memset>
 800098e:	4632      	mov	r2, r6
 8000990:	4629      	mov	r1, r5
 8000992:	f204 500c 	addw	r0, r4, #1292	; 0x50c
 8000996:	f004 fe00 	bl	800559a <memset>
 800099a:	4632      	mov	r2, r6
 800099c:	4629      	mov	r1, r5
 800099e:	f504 60ae 	add.w	r0, r4, #1392	; 0x570
 80009a2:	f004 fdfa 	bl	800559a <memset>
 80009a6:	4b23      	ldr	r3, [pc, #140]	; (8000a34 <_GLOBAL__sub_I_nh+0x10c>)
 80009a8:	f8c4 35fc 	str.w	r3, [r4, #1532]	; 0x5fc
 80009ac:	f504 63c2 	add.w	r3, r4, #1552	; 0x610
 80009b0:	2200      	movs	r2, #0
 80009b2:	601a      	str	r2, [r3, #0]
 80009b4:	4920      	ldr	r1, [pc, #128]	; (8000a38 <_GLOBAL__sub_I_nh+0x110>)
 80009b6:	4a21      	ldr	r2, [pc, #132]	; (8000a3c <_GLOBAL__sub_I_nh+0x114>)
 80009b8:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 80009bc:	4620      	mov	r0, r4
 80009be:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
 80009c2:	f8c4 55dc 	str.w	r5, [r4, #1500]	; 0x5dc
 80009c6:	f8c4 55e0 	str.w	r5, [r4, #1504]	; 0x5e0
 80009ca:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
 80009ce:	f884 55e8 	strb.w	r5, [r4, #1512]	; 0x5e8
 80009d2:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 80009d6:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 80009da:	f8c4 55f4 	str.w	r5, [r4, #1524]	; 0x5f4
 80009de:	f884 55f8 	strb.w	r5, [r4, #1528]	; 0x5f8
 80009e2:	f8c4 5600 	str.w	r5, [r4, #1536]	; 0x600
 80009e6:	f8c4 5604 	str.w	r5, [r4, #1540]	; 0x604
 80009ea:	f8c4 5608 	str.w	r5, [r4, #1544]	; 0x608
 80009ee:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 80009f2:	f8c4 5614 	str.w	r5, [r4, #1556]	; 0x614
 80009f6:	f8c4 5618 	str.w	r5, [r4, #1560]	; 0x618
 80009fa:	f8c4 561c 	str.w	r5, [r4, #1564]	; 0x61c
 80009fe:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
 8000a02:	f004 fa79 	bl	8004ef8 <__aeabi_atexit>
 8000a06:	4b0e      	ldr	r3, [pc, #56]	; (8000a40 <_GLOBAL__sub_I_nh+0x118>)
 8000a08:	4a0e      	ldr	r2, [pc, #56]	; (8000a44 <_GLOBAL__sub_I_nh+0x11c>)
 8000a0a:	731d      	strb	r5, [r3, #12]
 8000a0c:	e883 0024 	stmia.w	r3, {r2, r5}
 8000a10:	2000      	movs	r0, #0
 8000a12:	4a0d      	ldr	r2, [pc, #52]	; (8000a48 <_GLOBAL__sub_I_nh+0x120>)
 8000a14:	609a      	str	r2, [r3, #8]
 8000a16:	2100      	movs	r1, #0
 8000a18:	4a0c      	ldr	r2, [pc, #48]	; (8000a4c <_GLOBAL__sub_I_nh+0x124>)
 8000a1a:	619d      	str	r5, [r3, #24]
 8000a1c:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8000a20:	490b      	ldr	r1, [pc, #44]	; (8000a50 <_GLOBAL__sub_I_nh+0x128>)
 8000a22:	6115      	str	r5, [r2, #16]
 8000a24:	e882 000a 	stmia.w	r2, {r1, r3}
 8000a28:	b002      	add	sp, #8
 8000a2a:	bd70      	pop	{r4, r5, r6, pc}
 8000a2c:	200002a0 	.word	0x200002a0
 8000a30:	08005f74 	.word	0x08005f74
 8000a34:	08005f2c 	.word	0x08005f2c
 8000a38:	08000de5 	.word	0x08000de5
 8000a3c:	200001c4 	.word	0x200001c4
 8000a40:	20000280 	.word	0x20000280
 8000a44:	08005f5c 	.word	0x08005f5c
 8000a48:	08005f44 	.word	0x08005f44
 8000a4c:	200008c4 	.word	0x200008c4
 8000a50:	08005f80 	.word	0x08005f80

08000a54 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8000a54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000a56:	2963      	cmp	r1, #99	; 0x63
 8000a58:	b085      	sub	sp, #20
 8000a5a:	4604      	mov	r4, r0
 8000a5c:	460e      	mov	r6, r1
 8000a5e:	dd03      	ble.n	8000a68 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8000a60:	f890 55e8 	ldrb.w	r5, [r0, #1512]	; 0x5e8
 8000a64:	2d00      	cmp	r5, #0
 8000a66:	d04d      	beq.n	8000b04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000a68:	6813      	ldr	r3, [r2, #0]
 8000a6a:	f204 3113 	addw	r1, r4, #787	; 0x313
 8000a6e:	681b      	ldr	r3, [r3, #0]
 8000a70:	4610      	mov	r0, r2
 8000a72:	4798      	blx	r3
 8000a74:	23ff      	movs	r3, #255	; 0xff
 8000a76:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
 8000a7a:	23fe      	movs	r3, #254	; 0xfe
 8000a7c:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8000a80:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
 8000a84:	b2c3      	uxtb	r3, r0
 8000a86:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
 8000a8a:	4413      	add	r3, r2
 8000a8c:	43db      	mvns	r3, r3
 8000a8e:	f884 6311 	strb.w	r6, [r4, #785]	; 0x311
 8000a92:	f346 2607 	sbfx	r6, r6, #8, #8
 8000a96:	f884 230f 	strb.w	r2, [r4, #783]	; 0x30f
 8000a9a:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
 8000a9e:	f884 6312 	strb.w	r6, [r4, #786]	; 0x312
 8000aa2:	f204 3111 	addw	r1, r4, #785	; 0x311
 8000aa6:	2205      	movs	r2, #5
 8000aa8:	2300      	movs	r3, #0
 8000aaa:	1d86      	adds	r6, r0, #6
 8000aac:	42b2      	cmp	r2, r6
 8000aae:	dc04      	bgt.n	8000aba <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8000ab0:	f811 5b01 	ldrb.w	r5, [r1], #1
 8000ab4:	3201      	adds	r2, #1
 8000ab6:	442b      	add	r3, r5
 8000ab8:	e7f8      	b.n	8000aac <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 8000aba:	f100 0508 	add.w	r5, r0, #8
 8000abe:	4420      	add	r0, r4
 8000ac0:	43db      	mvns	r3, r3
 8000ac2:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8000ac6:	f880 3313 	strb.w	r3, [r0, #787]	; 0x313
 8000aca:	dc0c      	bgt.n	8000ae6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 8000acc:	f504 7743 	add.w	r7, r4, #780	; 0x30c
 8000ad0:	463e      	mov	r6, r7
 8000ad2:	3404      	adds	r4, #4
 8000ad4:	1bf3      	subs	r3, r6, r7
 8000ad6:	429d      	cmp	r5, r3
 8000ad8:	dd14      	ble.n	8000b04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000ada:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000ade:	4620      	mov	r0, r4
 8000ae0:	f000 fb06 	bl	80010f0 <BufferedSerial::putc(int)>
 8000ae4:	e7f6      	b.n	8000ad4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 8000ae6:	4b09      	ldr	r3, [pc, #36]	; (8000b0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 8000ae8:	9301      	str	r3, [sp, #4]
 8000aea:	2303      	movs	r3, #3
 8000aec:	f88d 3008 	strb.w	r3, [sp, #8]
 8000af0:	4b07      	ldr	r3, [pc, #28]	; (8000b10 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 8000af2:	9303      	str	r3, [sp, #12]
 8000af4:	6823      	ldr	r3, [r4, #0]
 8000af6:	aa01      	add	r2, sp, #4
 8000af8:	681b      	ldr	r3, [r3, #0]
 8000afa:	2107      	movs	r1, #7
 8000afc:	4620      	mov	r0, r4
 8000afe:	4798      	blx	r3
 8000b00:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000b04:	4628      	mov	r0, r5
 8000b06:	b005      	add	sp, #20
 8000b08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000b0a:	bf00      	nop
 8000b0c:	08005f14 	.word	0x08005f14
 8000b10:	080060ac 	.word	0x080060ac

08000b14 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8000b14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8000b18:	f100 08ec 	add.w	r8, r0, #236	; 0xec
 8000b1c:	4604      	mov	r4, r0
 8000b1e:	4640      	mov	r0, r8
 8000b20:	f004 f873 	bl	8004c0a <mbed::Timer::read_ms()>
 8000b24:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	; 0x5f0
 8000b28:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000b2c:	1ac3      	subs	r3, r0, r3
 8000b2e:	4293      	cmp	r3, r2
 8000b30:	bf84      	itt	hi
 8000b32:	2300      	movhi	r3, #0
 8000b34:	f884 35e8 	strbhi.w	r3, [r4, #1512]	; 0x5e8
 8000b38:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	; 0x5d4
 8000b3c:	4605      	mov	r5, r0
 8000b3e:	b133      	cbz	r3, 8000b4e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 8000b40:	f8d4 35f4 	ldr.w	r3, [r4, #1524]	; 0x5f4
 8000b44:	4283      	cmp	r3, r0
 8000b46:	bf3c      	itt	cc
 8000b48:	2300      	movcc	r3, #0
 8000b4a:	f8c4 35d4 	strcc.w	r3, [r4, #1492]	; 0x5d4
 8000b4e:	f104 0904 	add.w	r9, r4, #4
 8000b52:	2600      	movs	r6, #0
 8000b54:	f504 7786 	add.w	r7, r4, #268	; 0x10c
 8000b58:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000b5c:	b9ab      	cbnz	r3, 8000b8a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x76>
 8000b5e:	4648      	mov	r0, r9
 8000b60:	f000 f96e 	bl	8000e40 <BufferedSerial::readable()>
 8000b64:	b9e8      	cbnz	r0, 8000ba2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x8e>
 8000b66:	f894 05e8 	ldrb.w	r0, [r4, #1512]	; 0x5e8
 8000b6a:	b160      	cbz	r0, 8000b86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
 8000b6c:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	; 0x5ec
 8000b70:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8000b74:	1aeb      	subs	r3, r5, r3
 8000b76:	4293      	cmp	r3, r2
 8000b78:	d904      	bls.n	8000b84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x70>
 8000b7a:	4620      	mov	r0, r4
 8000b7c:	f7ff fe14 	bl	80007a8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000b80:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000b84:	2000      	movs	r0, #0
 8000b86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000b8a:	4640      	mov	r0, r8
 8000b8c:	f004 f83d 	bl	8004c0a <mbed::Timer::read_ms()>
 8000b90:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000b94:	1b40      	subs	r0, r0, r5
 8000b96:	4298      	cmp	r0, r3
 8000b98:	d9e1      	bls.n	8000b5e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4a>
 8000b9a:	f06f 0001 	mvn.w	r0, #1
 8000b9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000ba2:	4648      	mov	r0, r9
 8000ba4:	f000 f956 	bl	8000e54 <BufferedSerial::getc()>
 8000ba8:	2800      	cmp	r0, #0
 8000baa:	dbdc      	blt.n	8000b66 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x52>
 8000bac:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8000bb0:	f8d4 a5d4 	ldr.w	r10, [r4, #1492]	; 0x5d4
 8000bb4:	4403      	add	r3, r0
 8000bb6:	f1ba 0f07 	cmp.w	r10, #7
 8000bba:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 8000bbe:	d112      	bne.n	8000be6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd2>
 8000bc0:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8000bc4:	1c5a      	adds	r2, r3, #1
 8000bc6:	4423      	add	r3, r4
 8000bc8:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
 8000bcc:	f883 010c 	strb.w	r0, [r3, #268]	; 0x10c
 8000bd0:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000bd4:	3b01      	subs	r3, #1
 8000bd6:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000bda:	2b00      	cmp	r3, #0
 8000bdc:	d1bc      	bne.n	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000bde:	2308      	movs	r3, #8
 8000be0:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000be4:	e7b8      	b.n	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000be6:	f1ba 0f00 	cmp.w	r10, #0
 8000bea:	d114      	bne.n	8000c16 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x102>
 8000bec:	28ff      	cmp	r0, #255	; 0xff
 8000bee:	d107      	bne.n	8000c00 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xec>
 8000bf0:	2301      	movs	r3, #1
 8000bf2:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000bf6:	f105 0314 	add.w	r3, r5, #20
 8000bfa:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 8000bfe:	e7ab      	b.n	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c00:	4640      	mov	r0, r8
 8000c02:	f004 f802 	bl	8004c0a <mbed::Timer::read_ms()>
 8000c06:	f241 3388 	movw	r3, #5000	; 0x1388
 8000c0a:	1b40      	subs	r0, r0, r5
 8000c0c:	4298      	cmp	r0, r3
 8000c0e:	d9a3      	bls.n	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c10:	f884 a5e8 	strb.w	r10, [r4, #1512]	; 0x5e8
 8000c14:	e7c1      	b.n	8000b9a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
 8000c16:	f1ba 0f01 	cmp.w	r10, #1
 8000c1a:	d10d      	bne.n	8000c38 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x124>
 8000c1c:	28fe      	cmp	r0, #254	; 0xfe
 8000c1e:	d101      	bne.n	8000c24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x110>
 8000c20:	2302      	movs	r3, #2
 8000c22:	e7dd      	b.n	8000be0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000c24:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8000c28:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000c2c:	2b00      	cmp	r3, #0
 8000c2e:	d193      	bne.n	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c30:	4620      	mov	r0, r4
 8000c32:	f7ff fdb9 	bl	80007a8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000c36:	e78f      	b.n	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c38:	f1ba 0f02 	cmp.w	r10, #2
 8000c3c:	d109      	bne.n	8000c52 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8000c3e:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000c42:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
 8000c46:	2303      	movs	r3, #3
 8000c48:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000c4c:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8000c50:	e782      	b.n	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c52:	f1ba 0f03 	cmp.w	r10, #3
 8000c56:	d107      	bne.n	8000c68 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x154>
 8000c58:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000c5c:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000c60:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000c64:	2304      	movs	r3, #4
 8000c66:	e7bb      	b.n	8000be0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000c68:	f1ba 0f04 	cmp.w	r10, #4
 8000c6c:	d10b      	bne.n	8000c86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8000c6e:	425a      	negs	r2, r3
 8000c70:	b2d2      	uxtb	r2, r2
 8000c72:	b2db      	uxtb	r3, r3
 8000c74:	bf58      	it	pl
 8000c76:	4253      	negpl	r3, r2
 8000c78:	2bff      	cmp	r3, #255	; 0xff
 8000c7a:	d101      	bne.n	8000c80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16c>
 8000c7c:	2305      	movs	r3, #5
 8000c7e:	e7af      	b.n	8000be0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000c80:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000c84:	e768      	b.n	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c86:	f1ba 0f05 	cmp.w	r10, #5
 8000c8a:	d103      	bne.n	8000c94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
 8000c8c:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000c90:	2306      	movs	r3, #6
 8000c92:	e7d9      	b.n	8000c48 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x134>
 8000c94:	f1ba 0f06 	cmp.w	r10, #6
 8000c98:	d10b      	bne.n	8000cb2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19e>
 8000c9a:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000c9e:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000ca2:	2307      	movs	r3, #7
 8000ca4:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000ca8:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000cac:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000cb0:	e793      	b.n	8000bda <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xc6>
 8000cb2:	f1ba 0f08 	cmp.w	r10, #8
 8000cb6:	f47f af4f 	bne.w	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000cba:	425a      	negs	r2, r3
 8000cbc:	b2d2      	uxtb	r2, r2
 8000cbe:	b2db      	uxtb	r3, r3
 8000cc0:	bf58      	it	pl
 8000cc2:	4253      	negpl	r3, r2
 8000cc4:	2bff      	cmp	r3, #255	; 0xff
 8000cc6:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000cca:	f47f af45 	bne.w	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000cce:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000cd2:	b96b      	cbnz	r3, 8000cf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1dc>
 8000cd4:	4620      	mov	r0, r4
 8000cd6:	f7ff fd67 	bl	80007a8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000cda:	4620      	mov	r0, r4
 8000cdc:	f7ff fd7c 	bl	80007d8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8000ce0:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000ce4:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8000ce8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000cec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000cf0:	2b0a      	cmp	r3, #10
 8000cf2:	d104      	bne.n	8000cfe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
 8000cf4:	4639      	mov	r1, r7
 8000cf6:	4620      	mov	r0, r4
 8000cf8:	f7ff fdcc 	bl	8000894 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 8000cfc:	e72c      	b.n	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000cfe:	2b06      	cmp	r3, #6
 8000d00:	d108      	bne.n	8000d14 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
 8000d02:	4639      	mov	r1, r7
 8000d04:	f204 50fc 	addw	r0, r4, #1532	; 0x5fc
 8000d08:	f7ff fcb7 	bl	800067a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8000d0c:	2301      	movs	r3, #1
 8000d0e:	f884 35f8 	strb.w	r3, [r4, #1528]	; 0x5f8
 8000d12:	e721      	b.n	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000d14:	2b0b      	cmp	r3, #11
 8000d16:	d102      	bne.n	8000d1e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20a>
 8000d18:	f884 65e8 	strb.w	r6, [r4, #1512]	; 0x5e8
 8000d1c:	e71c      	b.n	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000d1e:	33f8      	adds	r3, #248	; 0xf8
 8000d20:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8000d24:	2800      	cmp	r0, #0
 8000d26:	f43f af17 	beq.w	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000d2a:	6803      	ldr	r3, [r0, #0]
 8000d2c:	4639      	mov	r1, r7
 8000d2e:	681b      	ldr	r3, [r3, #0]
 8000d30:	4798      	blx	r3
 8000d32:	e711      	b.n	8000b58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>

08000d34 <main>:
 8000d34:	4c26      	ldr	r4, [pc, #152]	; (8000dd0 <main+0x9c>)
 8000d36:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8000d3a:	b508      	push	{r3, lr}
 8000d3c:	1d20      	adds	r0, r4, #4
 8000d3e:	f8c4 10e8 	str.w	r1, [r4, #232]	; 0xe8
 8000d42:	f003 fe53 	bl	80049ec <mbed::SerialBase::baud(int)>
 8000d46:	2300      	movs	r3, #0
 8000d48:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000d4c:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000d50:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
 8000d54:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 8000d58:	f504 62a1 	add.w	r2, r4, #1288	; 0x508
 8000d5c:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8000d60:	2900      	cmp	r1, #0
 8000d62:	d130      	bne.n	8000dc6 <main+0x92>
 8000d64:	4a1b      	ldr	r2, [pc, #108]	; (8000dd4 <main+0xa0>)
 8000d66:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8000d6a:	337d      	adds	r3, #125	; 0x7d
 8000d6c:	f8c1 250c 	str.w	r2, [r1, #1292]	; 0x50c
 8000d70:	6093      	str	r3, [r2, #8]
 8000d72:	60d4      	str	r4, [r2, #12]
 8000d74:	200a      	movs	r0, #10
 8000d76:	4c18      	ldr	r4, [pc, #96]	; (8000dd8 <main+0xa4>)
 8000d78:	4d16      	ldr	r5, [pc, #88]	; (8000dd4 <main+0xa0>)
 8000d7a:	4e15      	ldr	r6, [pc, #84]	; (8000dd0 <main+0x9c>)
 8000d7c:	f003 ffba 	bl	8004cf4 <wait_ms>
 8000d80:	2302      	movs	r3, #2
 8000d82:	2020      	movs	r0, #32
 8000d84:	6063      	str	r3, [r4, #4]
 8000d86:	f004 f8c5 	bl	8004f14 <operator new[](unsigned int)>
 8000d8a:	4b14      	ldr	r3, [pc, #80]	; (8000ddc <main+0xa8>)
 8000d8c:	6003      	str	r3, [r0, #0]
 8000d8e:	2200      	movs	r2, #0
 8000d90:	6103      	str	r3, [r0, #16]
 8000d92:	4b13      	ldr	r3, [pc, #76]	; (8000de0 <main+0xac>)
 8000d94:	7102      	strb	r2, [r0, #4]
 8000d96:	2200      	movs	r2, #0
 8000d98:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8000d9c:	2301      	movs	r3, #1
 8000d9e:	7503      	strb	r3, [r0, #20]
 8000da0:	2200      	movs	r2, #0
 8000da2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000da6:	e9c0 2306 	strd	r2, r3, [r0, #24]
 8000daa:	61a0      	str	r0, [r4, #24]
 8000dac:	68e8      	ldr	r0, [r5, #12]
 8000dae:	68a9      	ldr	r1, [r5, #8]
 8000db0:	6803      	ldr	r3, [r0, #0]
 8000db2:	4622      	mov	r2, r4
 8000db4:	681b      	ldr	r3, [r3, #0]
 8000db6:	4798      	blx	r3
 8000db8:	4630      	mov	r0, r6
 8000dba:	f7ff feab 	bl	8000b14 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8000dbe:	2014      	movs	r0, #20
 8000dc0:	f003 ff98 	bl	8004cf4 <wait_ms>
 8000dc4:	e7f2      	b.n	8000dac <main+0x78>
 8000dc6:	3301      	adds	r3, #1
 8000dc8:	2b19      	cmp	r3, #25
 8000dca:	d1c7      	bne.n	8000d5c <main+0x28>
 8000dcc:	e7d2      	b.n	8000d74 <main+0x40>
 8000dce:	bf00      	nop
 8000dd0:	200002a0 	.word	0x200002a0
 8000dd4:	200008c4 	.word	0x200008c4
 8000dd8:	20000280 	.word	0x20000280
 8000ddc:	08005f44 	.word	0x08005f44
 8000de0:	3ff00000 	.word	0x3ff00000

08000de4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 8000de4:	b510      	push	{r4, lr}
 8000de6:	4b04      	ldr	r3, [pc, #16]	; (8000df8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 8000de8:	4604      	mov	r4, r0
 8000dea:	f840 3b04 	str.w	r3, [r0], #4
 8000dee:	f000 f8c3 	bl	8000f78 <BufferedSerial::~BufferedSerial()>
 8000df2:	4620      	mov	r0, r4
 8000df4:	bd10      	pop	{r4, pc}
 8000df6:	bf00      	nop
 8000df8:	08005f74 	.word	0x08005f74

08000dfc <_start>:
 8000dfc:	4807      	ldr	r0, [pc, #28]	; (8000e1c <_start+0x20>)
 8000dfe:	4a08      	ldr	r2, [pc, #32]	; (8000e20 <_start+0x24>)
 8000e00:	b508      	push	{r3, lr}
 8000e02:	1a12      	subs	r2, r2, r0
 8000e04:	2100      	movs	r1, #0
 8000e06:	f004 fbc8 	bl	800559a <memset>
 8000e0a:	f004 f833 	bl	8004e74 <software_init_hook>
 8000e0e:	f004 fb19 	bl	8005444 <__libc_init_array>
 8000e12:	f004 f836 	bl	8004e82 <__wrap_main>
 8000e16:	f004 f871 	bl	8004efc <__wrap_exit>
 8000e1a:	bf00      	nop
 8000e1c:	20000260 	.word	0x20000260
 8000e20:	20002848 	.word	0x20002848

08000e24 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 8000e24:	b530      	push	{r4, r5, lr}
 8000e26:	6802      	ldr	r2, [r0, #0]
 8000e28:	680d      	ldr	r5, [r1, #0]
 8000e2a:	4c04      	ldr	r4, [pc, #16]	; (8000e3c <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 8000e2c:	fbb5 f3f4 	udiv	r3, r5, r4
 8000e30:	441a      	add	r2, r3
 8000e32:	fb04 5313 	mls	r3, r4, r3, r5
 8000e36:	6002      	str	r2, [r0, #0]
 8000e38:	600b      	str	r3, [r1, #0]
 8000e3a:	bd30      	pop	{r4, r5, pc}
 8000e3c:	3b9aca00 	.word	0x3b9aca00

08000e40 <BufferedSerial::readable()>:
 8000e40:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 8000e44:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 8000e48:	1a10      	subs	r0, r2, r0
 8000e4a:	bf18      	it	ne
 8000e4c:	2001      	movne	r0, #1
 8000e4e:	4770      	bx	lr

08000e50 <BufferedSerial::writeable()>:
 8000e50:	2001      	movs	r0, #1
 8000e52:	4770      	bx	lr

08000e54 <BufferedSerial::getc()>:
 8000e54:	b510      	push	{r4, lr}
 8000e56:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 8000e5a:	f8d0 10bc 	ldr.w	r1, [r0, #188]	; 0xbc
 8000e5e:	4603      	mov	r3, r0
 8000e60:	1c50      	adds	r0, r2, #1
 8000e62:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
 8000e66:	5c88      	ldrb	r0, [r1, r2]
 8000e68:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8000e6c:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
 8000e70:	3a01      	subs	r2, #1
 8000e72:	fbb4 f1f2 	udiv	r1, r4, r2
 8000e76:	fb02 4211 	mls	r2, r2, r1, r4
 8000e7a:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 8000e7e:	bd10      	pop	{r4, pc}

08000e80 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 8000e80:	4603      	mov	r3, r0
 8000e82:	b110      	cbz	r0, 8000e8a <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 8000e84:	c907      	ldmia	r1, {r0, r1, r2}
 8000e86:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8000e8a:	4770      	bx	lr

08000e8c <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 8000e8c:	4770      	bx	lr

08000e8e <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 8000e8e:	6842      	ldr	r2, [r0, #4]
 8000e90:	6881      	ldr	r1, [r0, #8]
 8000e92:	6803      	ldr	r3, [r0, #0]
 8000e94:	f012 0f01 	tst.w	r2, #1
 8000e98:	ea4f 0262 	mov.w	r2, r2, asr #1
 8000e9c:	bf1c      	itt	ne
 8000e9e:	5888      	ldrne	r0, [r1, r2]
 8000ea0:	58c3      	ldrne	r3, [r0, r3]
 8000ea2:	1888      	adds	r0, r1, r2
 8000ea4:	4718      	bx	r3

08000ea6 <mbed::Callback<void ()>::~Callback()>:
 8000ea6:	68c3      	ldr	r3, [r0, #12]
 8000ea8:	b510      	push	{r4, lr}
 8000eaa:	4604      	mov	r4, r0
 8000eac:	b10b      	cbz	r3, 8000eb2 <mbed::Callback<void ()>::~Callback()+0xc>
 8000eae:	689b      	ldr	r3, [r3, #8]
 8000eb0:	4798      	blx	r3
 8000eb2:	4620      	mov	r0, r4
 8000eb4:	bd10      	pop	{r4, pc}

08000eb6 <BufferedSerial::txIrq()>:
 8000eb6:	b530      	push	{r4, r5, lr}
 8000eb8:	4604      	mov	r4, r0
 8000eba:	b085      	sub	sp, #20
 8000ebc:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8000ec0:	4628      	mov	r0, r5
 8000ec2:	f002 fa73 	bl	80033ac <serial_writable>
 8000ec6:	b330      	cbz	r0, 8000f16 <BufferedSerial::txIrq()+0x60>
 8000ec8:	f8d4 20d0 	ldr.w	r2, [r4, #208]	; 0xd0
 8000ecc:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8000ed0:	429a      	cmp	r2, r3
 8000ed2:	d016      	beq.n	8000f02 <BufferedSerial::txIrq()+0x4c>
 8000ed4:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8000ed8:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 8000edc:	1c59      	adds	r1, r3, #1
 8000ede:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
 8000ee2:	5cd1      	ldrb	r1, [r2, r3]
 8000ee4:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 8000ee8:	f8d4 00d4 	ldr.w	r0, [r4, #212]	; 0xd4
 8000eec:	3b01      	subs	r3, #1
 8000eee:	fbb0 f2f3 	udiv	r2, r0, r3
 8000ef2:	fb03 0312 	mls	r3, r3, r2, r0
 8000ef6:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 8000efa:	4628      	mov	r0, r5
 8000efc:	f002 fa60 	bl	80033c0 <serial_putc>
 8000f00:	e7de      	b.n	8000ec0 <BufferedSerial::txIrq()+0xa>
 8000f02:	2300      	movs	r3, #0
 8000f04:	4620      	mov	r0, r4
 8000f06:	2201      	movs	r2, #1
 8000f08:	4669      	mov	r1, sp
 8000f0a:	9303      	str	r3, [sp, #12]
 8000f0c:	f003 fdfc 	bl	8004b08 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000f10:	4668      	mov	r0, sp
 8000f12:	f7ff ffc8 	bl	8000ea6 <mbed::Callback<void ()>::~Callback()>
 8000f16:	b005      	add	sp, #20
 8000f18:	bd30      	pop	{r4, r5, pc}

08000f1a <mbed::Callback<void (int)>::~Callback()>:
 8000f1a:	68c3      	ldr	r3, [r0, #12]
 8000f1c:	b510      	push	{r4, lr}
 8000f1e:	4604      	mov	r4, r0
 8000f20:	b10b      	cbz	r3, 8000f26 <mbed::Callback<void (int)>::~Callback()+0xc>
 8000f22:	689b      	ldr	r3, [r3, #8]
 8000f24:	4798      	blx	r3
 8000f26:	4620      	mov	r0, r4
 8000f28:	bd10      	pop	{r4, pc}
	...

08000f2c <mbed::SerialBase::~SerialBase()>:
 8000f2c:	b570      	push	{r4, r5, r6, lr}
 8000f2e:	4606      	mov	r6, r0
 8000f30:	4b0b      	ldr	r3, [pc, #44]	; (8000f60 <mbed::SerialBase::~SerialBase()+0x34>)
 8000f32:	f846 3b98 	str.w	r3, [r6], #152
 8000f36:	4604      	mov	r4, r0
 8000f38:	b146      	cbz	r6, 8000f4c <mbed::SerialBase::~SerialBase()+0x20>
 8000f3a:	f100 05b8 	add.w	r5, r0, #184	; 0xb8
 8000f3e:	42b5      	cmp	r5, r6
 8000f40:	d004      	beq.n	8000f4c <mbed::SerialBase::~SerialBase()+0x20>
 8000f42:	3d10      	subs	r5, #16
 8000f44:	4628      	mov	r0, r5
 8000f46:	f7ff ffae 	bl	8000ea6 <mbed::Callback<void ()>::~Callback()>
 8000f4a:	e7f8      	b.n	8000f3e <mbed::SerialBase::~SerialBase()+0x12>
 8000f4c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8000f50:	f7ff ffe3 	bl	8000f1a <mbed::Callback<void (int)>::~Callback()>
 8000f54:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8000f58:	f7ff ffdf 	bl	8000f1a <mbed::Callback<void (int)>::~Callback()>
 8000f5c:	4620      	mov	r0, r4
 8000f5e:	bd70      	pop	{r4, r5, r6, pc}
 8000f60:	0800642c 	.word	0x0800642c

08000f64 <mbed::SerialBase::~SerialBase()>:
 8000f64:	b510      	push	{r4, lr}
 8000f66:	4604      	mov	r4, r0
 8000f68:	f7ff ffe0 	bl	8000f2c <mbed::SerialBase::~SerialBase()>
 8000f6c:	4620      	mov	r0, r4
 8000f6e:	f003 ffe1 	bl	8004f34 <operator delete(void*)>
 8000f72:	4620      	mov	r0, r4
 8000f74:	bd10      	pop	{r4, pc}
	...

08000f78 <BufferedSerial::~BufferedSerial()>:
 8000f78:	b530      	push	{r4, r5, lr}
 8000f7a:	4b13      	ldr	r3, [pc, #76]	; (8000fc8 <BufferedSerial::~BufferedSerial()+0x50>)
 8000f7c:	6003      	str	r3, [r0, #0]
 8000f7e:	b085      	sub	sp, #20
 8000f80:	2500      	movs	r5, #0
 8000f82:	462a      	mov	r2, r5
 8000f84:	4669      	mov	r1, sp
 8000f86:	4604      	mov	r4, r0
 8000f88:	9503      	str	r5, [sp, #12]
 8000f8a:	f003 fdbd 	bl	8004b08 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000f8e:	4668      	mov	r0, sp
 8000f90:	f7ff ff89 	bl	8000ea6 <mbed::Callback<void ()>::~Callback()>
 8000f94:	2201      	movs	r2, #1
 8000f96:	4669      	mov	r1, sp
 8000f98:	4620      	mov	r0, r4
 8000f9a:	9503      	str	r5, [sp, #12]
 8000f9c:	f003 fdb4 	bl	8004b08 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000fa0:	4668      	mov	r0, sp
 8000fa2:	f7ff ff80 	bl	8000ea6 <mbed::Callback<void ()>::~Callback()>
 8000fa6:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8000faa:	f000 f923 	bl	80011f4 <Buffer<char>::~Buffer()>
 8000fae:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8000fb2:	f000 f91f 	bl	80011f4 <Buffer<char>::~Buffer()>
 8000fb6:	4b05      	ldr	r3, [pc, #20]	; (8000fcc <BufferedSerial::~BufferedSerial()+0x54>)
 8000fb8:	6023      	str	r3, [r4, #0]
 8000fba:	4620      	mov	r0, r4
 8000fbc:	f7ff ffb6 	bl	8000f2c <mbed::SerialBase::~SerialBase()>
 8000fc0:	4620      	mov	r0, r4
 8000fc2:	b005      	add	sp, #20
 8000fc4:	bd30      	pop	{r4, r5, pc}
 8000fc6:	bf00      	nop
 8000fc8:	080061a4 	.word	0x080061a4
 8000fcc:	08006444 	.word	0x08006444

08000fd0 <BufferedSerial::~BufferedSerial()>:
 8000fd0:	b510      	push	{r4, lr}
 8000fd2:	4604      	mov	r4, r0
 8000fd4:	f7ff ffd0 	bl	8000f78 <BufferedSerial::~BufferedSerial()>
 8000fd8:	4620      	mov	r0, r4
 8000fda:	f003 ffab 	bl	8004f34 <operator delete(void*)>
 8000fde:	4620      	mov	r0, r4
 8000fe0:	bd10      	pop	{r4, pc}
	...

08000fe4 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 8000fe4:	b510      	push	{r4, lr}
 8000fe6:	b086      	sub	sp, #24
 8000fe8:	e88d 000c 	stmia.w	sp, {r2, r3}
 8000fec:	9b01      	ldr	r3, [sp, #4]
 8000fee:	9202      	str	r2, [sp, #8]
 8000ff0:	9303      	str	r3, [sp, #12]
 8000ff2:	9104      	str	r1, [sp, #16]
 8000ff4:	4b05      	ldr	r3, [pc, #20]	; (800100c <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 8000ff6:	f89d 2020 	ldrb.w	r2, [sp, #32]
 8000ffa:	9305      	str	r3, [sp, #20]
 8000ffc:	a902      	add	r1, sp, #8
 8000ffe:	f003 fd83 	bl	8004b08 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001002:	a802      	add	r0, sp, #8
 8001004:	f7ff ff4f 	bl	8000ea6 <mbed::Callback<void ()>::~Callback()>
 8001008:	b006      	add	sp, #24
 800100a:	bd10      	pop	{r4, pc}
 800100c:	08006114 	.word	0x08006114

08001010 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 8001010:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8001012:	4604      	mov	r4, r0
 8001014:	461d      	mov	r5, r3
 8001016:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 800101a:	9e08      	ldr	r6, [sp, #32]
 800101c:	f003 fdac 	bl	8004b78 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 8001020:	4620      	mov	r0, r4
 8001022:	4b0f      	ldr	r3, [pc, #60]	; (8001060 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 8001024:	f840 3bbc 	str.w	r3, [r0], #188
 8001028:	4629      	mov	r1, r5
 800102a:	f000 f8f2 	bl	8001212 <Buffer<char>::Buffer(unsigned long)>
 800102e:	fb06 f105 	mul.w	r1, r6, r5
 8001032:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8001036:	f000 f8ec 	bl	8001212 <Buffer<char>::Buffer(unsigned long)>
 800103a:	4b0a      	ldr	r3, [pc, #40]	; (8001064 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x54>)
 800103c:	9302      	str	r3, [sp, #8]
 800103e:	2300      	movs	r3, #0
 8001040:	9303      	str	r3, [sp, #12]
 8001042:	9300      	str	r3, [sp, #0]
 8001044:	ab04      	add	r3, sp, #16
 8001046:	4620      	mov	r0, r4
 8001048:	e913 000c 	ldmdb	r3, {r2, r3}
 800104c:	4621      	mov	r1, r4
 800104e:	f7ff ffc9 	bl	8000fe4 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001052:	4620      	mov	r0, r4
 8001054:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 8001058:	f8c4 60e0 	str.w	r6, [r4, #224]	; 0xe0
 800105c:	b004      	add	sp, #16
 800105e:	bd70      	pop	{r4, r5, r6, pc}
 8001060:	080061a4 	.word	0x080061a4
 8001064:	080010cf 	.word	0x080010cf

08001068 <BufferedSerial::prime()>:
 8001068:	b570      	push	{r4, r5, r6, lr}
 800106a:	4604      	mov	r4, r0
 800106c:	b086      	sub	sp, #24
 800106e:	304c      	adds	r0, #76	; 0x4c
 8001070:	f002 f99c 	bl	80033ac <serial_writable>
 8001074:	b1c0      	cbz	r0, 80010a8 <BufferedSerial::prime()+0x40>
 8001076:	ad02      	add	r5, sp, #8
 8001078:	2201      	movs	r2, #1
 800107a:	4629      	mov	r1, r5
 800107c:	2600      	movs	r6, #0
 800107e:	4620      	mov	r0, r4
 8001080:	9605      	str	r6, [sp, #20]
 8001082:	f003 fd41 	bl	8004b08 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001086:	4628      	mov	r0, r5
 8001088:	f7ff ff0d 	bl	8000ea6 <mbed::Callback<void ()>::~Callback()>
 800108c:	4620      	mov	r0, r4
 800108e:	f7ff ff12 	bl	8000eb6 <BufferedSerial::txIrq()>
 8001092:	4b06      	ldr	r3, [pc, #24]	; (80010ac <BufferedSerial::prime()+0x44>)
 8001094:	9302      	str	r3, [sp, #8]
 8001096:	2301      	movs	r3, #1
 8001098:	9603      	str	r6, [sp, #12]
 800109a:	9300      	str	r3, [sp, #0]
 800109c:	e895 000c 	ldmia.w	r5, {r2, r3}
 80010a0:	4621      	mov	r1, r4
 80010a2:	4620      	mov	r0, r4
 80010a4:	f7ff ff9e 	bl	8000fe4 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 80010a8:	b006      	add	sp, #24
 80010aa:	bd70      	pop	{r4, r5, r6, pc}
 80010ac:	08000eb7 	.word	0x08000eb7

080010b0 <Buffer<char>::put(char)>:
 80010b0:	6843      	ldr	r3, [r0, #4]
 80010b2:	6802      	ldr	r2, [r0, #0]
 80010b4:	b510      	push	{r4, lr}
 80010b6:	1c5c      	adds	r4, r3, #1
 80010b8:	6044      	str	r4, [r0, #4]
 80010ba:	54d1      	strb	r1, [r2, r3]
 80010bc:	68c3      	ldr	r3, [r0, #12]
 80010be:	6841      	ldr	r1, [r0, #4]
 80010c0:	3b01      	subs	r3, #1
 80010c2:	fbb1 f2f3 	udiv	r2, r1, r3
 80010c6:	fb03 1312 	mls	r3, r3, r2, r1
 80010ca:	6043      	str	r3, [r0, #4]
 80010cc:	bd10      	pop	{r4, pc}

080010ce <BufferedSerial::rxIrq()>:
 80010ce:	b538      	push	{r3, r4, r5, lr}
 80010d0:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 80010d4:	4604      	mov	r4, r0
 80010d6:	4628      	mov	r0, r5
 80010d8:	f002 f94c 	bl	8003374 <serial_readable>
 80010dc:	b138      	cbz	r0, 80010ee <BufferedSerial::rxIrq()+0x20>
 80010de:	4628      	mov	r0, r5
 80010e0:	f002 f952 	bl	8003388 <serial_getc>
 80010e4:	b2c1      	uxtb	r1, r0
 80010e6:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 80010ea:	f7ff ffe1 	bl	80010b0 <Buffer<char>::put(char)>
 80010ee:	bd38      	pop	{r3, r4, r5, pc}

080010f0 <BufferedSerial::putc(int)>:
 80010f0:	b538      	push	{r3, r4, r5, lr}
 80010f2:	4605      	mov	r5, r0
 80010f4:	460c      	mov	r4, r1
 80010f6:	30cc      	adds	r0, #204	; 0xcc
 80010f8:	b2c9      	uxtb	r1, r1
 80010fa:	f7ff ffd9 	bl	80010b0 <Buffer<char>::put(char)>
 80010fe:	4628      	mov	r0, r5
 8001100:	f7ff ffb2 	bl	8001068 <BufferedSerial::prime()>
 8001104:	4620      	mov	r0, r4
 8001106:	bd38      	pop	{r3, r4, r5, pc}

08001108 <BufferedSerial::puts(char const*)>:
 8001108:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800110c:	4607      	mov	r7, r0
 800110e:	460c      	mov	r4, r1
 8001110:	b1b1      	cbz	r1, 8001140 <BufferedSerial::puts(char const*)+0x38>
 8001112:	460d      	mov	r5, r1
 8001114:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8001118:	462e      	mov	r6, r5
 800111a:	f816 1b01 	ldrb.w	r1, [r6], #1
 800111e:	b121      	cbz	r1, 800112a <BufferedSerial::puts(char const*)+0x22>
 8001120:	4640      	mov	r0, r8
 8001122:	f7ff ffc5 	bl	80010b0 <Buffer<char>::put(char)>
 8001126:	4635      	mov	r5, r6
 8001128:	e7f6      	b.n	8001118 <BufferedSerial::puts(char const*)+0x10>
 800112a:	210a      	movs	r1, #10
 800112c:	4640      	mov	r0, r8
 800112e:	f7ff ffbf 	bl	80010b0 <Buffer<char>::put(char)>
 8001132:	1b2c      	subs	r4, r5, r4
 8001134:	4638      	mov	r0, r7
 8001136:	f7ff ff97 	bl	8001068 <BufferedSerial::prime()>
 800113a:	1c60      	adds	r0, r4, #1
 800113c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001140:	4608      	mov	r0, r1
 8001142:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001146 <BufferedSerial::write(void const*, unsigned int)>:
 8001146:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800114a:	4607      	mov	r7, r0
 800114c:	460d      	mov	r5, r1
 800114e:	b191      	cbz	r1, 8001176 <BufferedSerial::write(void const*, unsigned int)+0x30>
 8001150:	b1a2      	cbz	r2, 800117c <BufferedSerial::write(void const*, unsigned int)+0x36>
 8001152:	188c      	adds	r4, r1, r2
 8001154:	460e      	mov	r6, r1
 8001156:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 800115a:	42b4      	cmp	r4, r6
 800115c:	d005      	beq.n	800116a <BufferedSerial::write(void const*, unsigned int)+0x24>
 800115e:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001162:	4640      	mov	r0, r8
 8001164:	f7ff ffa4 	bl	80010b0 <Buffer<char>::put(char)>
 8001168:	e7f7      	b.n	800115a <BufferedSerial::write(void const*, unsigned int)+0x14>
 800116a:	4638      	mov	r0, r7
 800116c:	f7ff ff7c 	bl	8001068 <BufferedSerial::prime()>
 8001170:	1b60      	subs	r0, r4, r5
 8001172:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001176:	4608      	mov	r0, r1
 8001178:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800117c:	4610      	mov	r0, r2
 800117e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08001184 <BufferedSerial::printf(char const*, ...)>:
 8001184:	b40e      	push	{r1, r2, r3}
 8001186:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800118a:	b085      	sub	sp, #20
 800118c:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 8001190:	af02      	add	r7, sp, #8
 8001192:	1dd3      	adds	r3, r2, #7
 8001194:	f023 0307 	bic.w	r3, r3, #7
 8001198:	f107 0424 	add.w	r4, r7, #36	; 0x24
 800119c:	ebad 0d03 	sub.w	sp, sp, r3
 80011a0:	f854 8b04 	ldr.w	r8, [r4], #4
 80011a4:	ae02      	add	r6, sp, #8
 80011a6:	4605      	mov	r5, r0
 80011a8:	2100      	movs	r1, #0
 80011aa:	4630      	mov	r0, r6
 80011ac:	f004 f9f5 	bl	800559a <memset>
 80011b0:	4622      	mov	r2, r4
 80011b2:	4641      	mov	r1, r8
 80011b4:	4630      	mov	r0, r6
 80011b6:	607c      	str	r4, [r7, #4]
 80011b8:	f004 fcdc 	bl	8005b74 <vsiprintf>
 80011bc:	f8d5 30dc 	ldr.w	r3, [r5, #220]	; 0xdc
 80011c0:	4283      	cmp	r3, r0
 80011c2:	4602      	mov	r2, r0
 80011c4:	d20c      	bcs.n	80011e0 <BufferedSerial::printf(char const*, ...)+0x5c>
 80011c6:	9000      	str	r0, [sp, #0]
 80011c8:	225d      	movs	r2, #93	; 0x5d
 80011ca:	4808      	ldr	r0, [pc, #32]	; (80011ec <BufferedSerial::printf(char const*, ...)+0x68>)
 80011cc:	4908      	ldr	r1, [pc, #32]	; (80011f0 <BufferedSerial::printf(char const*, ...)+0x6c>)
 80011ce:	f000 f917 	bl	8001400 <error>
 80011d2:	2000      	movs	r0, #0
 80011d4:	370c      	adds	r7, #12
 80011d6:	46bd      	mov	sp, r7
 80011d8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80011dc:	b003      	add	sp, #12
 80011de:	4770      	bx	lr
 80011e0:	4631      	mov	r1, r6
 80011e2:	4628      	mov	r0, r5
 80011e4:	f7ff ffaf 	bl	8001146 <BufferedSerial::write(void const*, unsigned int)>
 80011e8:	e7f4      	b.n	80011d4 <BufferedSerial::printf(char const*, ...)+0x50>
 80011ea:	bf00      	nop
 80011ec:	08006161 	.word	0x08006161
 80011f0:	08006120 	.word	0x08006120

080011f4 <Buffer<char>::~Buffer()>:
 80011f4:	b510      	push	{r4, lr}
 80011f6:	4604      	mov	r4, r0
 80011f8:	6800      	ldr	r0, [r0, #0]
 80011fa:	b108      	cbz	r0, 8001200 <Buffer<char>::~Buffer()+0xc>
 80011fc:	f003 fe96 	bl	8004f2c <operator delete[](void*)>
 8001200:	4620      	mov	r0, r4
 8001202:	bd10      	pop	{r4, pc}

08001204 <Buffer<char>::clear()>:
 8001204:	2100      	movs	r1, #0
 8001206:	6041      	str	r1, [r0, #4]
 8001208:	68c2      	ldr	r2, [r0, #12]
 800120a:	6081      	str	r1, [r0, #8]
 800120c:	6800      	ldr	r0, [r0, #0]
 800120e:	f004 b9c4 	b.w	800559a <memset>

08001212 <Buffer<char>::Buffer(unsigned long)>:
 8001212:	b538      	push	{r3, r4, r5, lr}
 8001214:	4604      	mov	r4, r0
 8001216:	4608      	mov	r0, r1
 8001218:	460d      	mov	r5, r1
 800121a:	f003 fe7b 	bl	8004f14 <operator new[](unsigned int)>
 800121e:	60e5      	str	r5, [r4, #12]
 8001220:	6020      	str	r0, [r4, #0]
 8001222:	4620      	mov	r0, r4
 8001224:	f7ff ffee 	bl	8001204 <Buffer<char>::clear()>
 8001228:	4620      	mov	r0, r4
 800122a:	bd38      	pop	{r3, r4, r5, pc}

0800122c <_gpio_init_out.part.2>:
 800122c:	b538      	push	{r3, r4, r5, lr}
 800122e:	4604      	mov	r4, r0
 8001230:	460d      	mov	r5, r1
 8001232:	6803      	ldr	r3, [r0, #0]
 8001234:	b15a      	cbz	r2, 800124e <_gpio_init_out.part.2+0x22>
 8001236:	6882      	ldr	r2, [r0, #8]
 8001238:	6013      	str	r3, [r2, #0]
 800123a:	4620      	mov	r0, r4
 800123c:	2101      	movs	r1, #1
 800123e:	f001 fcbf 	bl	8002bc0 <gpio_dir>
 8001242:	4629      	mov	r1, r5
 8001244:	4620      	mov	r0, r4
 8001246:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800124a:	f001 bcb5 	b.w	8002bb8 <gpio_mode>
 800124e:	68c2      	ldr	r2, [r0, #12]
 8001250:	041b      	lsls	r3, r3, #16
 8001252:	e7f1      	b.n	8001238 <_gpio_init_out.part.2+0xc>

08001254 <gpio_init_out_ex>:
 8001254:	b570      	push	{r4, r5, r6, lr}
 8001256:	460e      	mov	r6, r1
 8001258:	4604      	mov	r4, r0
 800125a:	4615      	mov	r5, r2
 800125c:	f001 fc8c 	bl	8002b78 <gpio_init>
 8001260:	3601      	adds	r6, #1
 8001262:	d006      	beq.n	8001272 <gpio_init_out_ex+0x1e>
 8001264:	462a      	mov	r2, r5
 8001266:	4620      	mov	r0, r4
 8001268:	2100      	movs	r1, #0
 800126a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800126e:	f7ff bfdd 	b.w	800122c <_gpio_init_out.part.2>
 8001272:	bd70      	pop	{r4, r5, r6, pc}

08001274 <gpio_init_out>:
 8001274:	2200      	movs	r2, #0
 8001276:	f7ff bfed 	b.w	8001254 <gpio_init_out_ex>
	...

0800127c <get_us_ticker_data>:
 800127c:	4800      	ldr	r0, [pc, #0]	; (8001280 <get_us_ticker_data+0x4>)
 800127e:	4770      	bx	lr
 8001280:	080061d0 	.word	0x080061d0

08001284 <us_ticker_irq_handler>:
 8001284:	4801      	ldr	r0, [pc, #4]	; (800128c <us_ticker_irq_handler+0x8>)
 8001286:	f000 b803 	b.w	8001290 <ticker_irq_handler>
 800128a:	bf00      	nop
 800128c:	080061d0 	.word	0x080061d0

08001290 <ticker_irq_handler>:
 8001290:	6803      	ldr	r3, [r0, #0]
 8001292:	b570      	push	{r4, r5, r6, lr}
 8001294:	68db      	ldr	r3, [r3, #12]
 8001296:	4604      	mov	r4, r0
 8001298:	4798      	blx	r3
 800129a:	6863      	ldr	r3, [r4, #4]
 800129c:	685a      	ldr	r2, [r3, #4]
 800129e:	6823      	ldr	r3, [r4, #0]
 80012a0:	b91a      	cbnz	r2, 80012aa <ticker_irq_handler+0x1a>
 80012a2:	689b      	ldr	r3, [r3, #8]
 80012a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80012a8:	4718      	bx	r3
 80012aa:	685b      	ldr	r3, [r3, #4]
 80012ac:	6815      	ldr	r5, [r2, #0]
 80012ae:	4798      	blx	r3
 80012b0:	6863      	ldr	r3, [r4, #4]
 80012b2:	1a28      	subs	r0, r5, r0
 80012b4:	2800      	cmp	r0, #0
 80012b6:	685a      	ldr	r2, [r3, #4]
 80012b8:	dc07      	bgt.n	80012ca <ticker_irq_handler+0x3a>
 80012ba:	6891      	ldr	r1, [r2, #8]
 80012bc:	6059      	str	r1, [r3, #4]
 80012be:	681b      	ldr	r3, [r3, #0]
 80012c0:	2b00      	cmp	r3, #0
 80012c2:	d0ea      	beq.n	800129a <ticker_irq_handler+0xa>
 80012c4:	6850      	ldr	r0, [r2, #4]
 80012c6:	4798      	blx	r3
 80012c8:	e7e7      	b.n	800129a <ticker_irq_handler+0xa>
 80012ca:	6823      	ldr	r3, [r4, #0]
 80012cc:	6810      	ldr	r0, [r2, #0]
 80012ce:	691b      	ldr	r3, [r3, #16]
 80012d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80012d4:	4718      	bx	r3

080012d6 <ticker_read>:
 80012d6:	6803      	ldr	r3, [r0, #0]
 80012d8:	685b      	ldr	r3, [r3, #4]
 80012da:	4718      	bx	r3

080012dc <pinmap_pinout>:
 80012dc:	b510      	push	{r4, lr}
 80012de:	4604      	mov	r4, r0
 80012e0:	3001      	adds	r0, #1
 80012e2:	d10d      	bne.n	8001300 <pinmap_pinout+0x24>
 80012e4:	bd10      	pop	{r4, pc}
 80012e6:	429c      	cmp	r4, r3
 80012e8:	d109      	bne.n	80012fe <pinmap_pinout+0x22>
 80012ea:	4620      	mov	r0, r4
 80012ec:	6889      	ldr	r1, [r1, #8]
 80012ee:	f001 fd97 	bl	8002e20 <pin_function>
 80012f2:	4620      	mov	r0, r4
 80012f4:	2100      	movs	r1, #0
 80012f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80012fa:	f001 be15 	b.w	8002f28 <pin_mode>
 80012fe:	310c      	adds	r1, #12
 8001300:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001304:	1c5a      	adds	r2, r3, #1
 8001306:	d1ee      	bne.n	80012e6 <pinmap_pinout+0xa>
 8001308:	4802      	ldr	r0, [pc, #8]	; (8001314 <pinmap_pinout+0x38>)
 800130a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800130e:	f000 b877 	b.w	8001400 <error>
 8001312:	bf00      	nop
 8001314:	0800621d 	.word	0x0800621d

08001318 <pinmap_merge>:
 8001318:	4288      	cmp	r0, r1
 800131a:	b508      	push	{r3, lr}
 800131c:	d008      	beq.n	8001330 <pinmap_merge+0x18>
 800131e:	1c43      	adds	r3, r0, #1
 8001320:	d006      	beq.n	8001330 <pinmap_merge+0x18>
 8001322:	3101      	adds	r1, #1
 8001324:	d006      	beq.n	8001334 <pinmap_merge+0x1c>
 8001326:	4804      	ldr	r0, [pc, #16]	; (8001338 <pinmap_merge+0x20>)
 8001328:	f000 f86a 	bl	8001400 <error>
 800132c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001330:	4608      	mov	r0, r1
 8001332:	bd08      	pop	{r3, pc}
 8001334:	4601      	mov	r1, r0
 8001336:	e7fb      	b.n	8001330 <pinmap_merge+0x18>
 8001338:	080061ec 	.word	0x080061ec

0800133c <pinmap_find_peripheral>:
 800133c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001340:	1c5a      	adds	r2, r3, #1
 8001342:	d101      	bne.n	8001348 <pinmap_find_peripheral+0xc>
 8001344:	4618      	mov	r0, r3
 8001346:	4770      	bx	lr
 8001348:	4283      	cmp	r3, r0
 800134a:	d101      	bne.n	8001350 <pinmap_find_peripheral+0x14>
 800134c:	6848      	ldr	r0, [r1, #4]
 800134e:	4770      	bx	lr
 8001350:	310c      	adds	r1, #12
 8001352:	e7f3      	b.n	800133c <pinmap_find_peripheral>

08001354 <pinmap_peripheral>:
 8001354:	1c42      	adds	r2, r0, #1
 8001356:	b510      	push	{r4, lr}
 8001358:	4604      	mov	r4, r0
 800135a:	d007      	beq.n	800136c <pinmap_peripheral+0x18>
 800135c:	f7ff ffee 	bl	800133c <pinmap_find_peripheral>
 8001360:	1c43      	adds	r3, r0, #1
 8001362:	4604      	mov	r4, r0
 8001364:	d102      	bne.n	800136c <pinmap_peripheral+0x18>
 8001366:	4802      	ldr	r0, [pc, #8]	; (8001370 <pinmap_peripheral+0x1c>)
 8001368:	f000 f84a 	bl	8001400 <error>
 800136c:	4620      	mov	r0, r4
 800136e:	bd10      	pop	{r4, pc}
 8001370:	080061fd 	.word	0x080061fd

08001374 <mbed_die>:
 8001374:	b500      	push	{lr}
 8001376:	b089      	sub	sp, #36	; 0x24
 8001378:	f000 f818 	bl	80013ac <core_util_critical_section_enter>
 800137c:	2105      	movs	r1, #5
 800137e:	a801      	add	r0, sp, #4
 8001380:	f7ff ff78 	bl	8001274 <gpio_init_out>
 8001384:	9b03      	ldr	r3, [sp, #12]
 8001386:	9a01      	ldr	r2, [sp, #4]
 8001388:	601a      	str	r2, [r3, #0]
 800138a:	2096      	movs	r0, #150	; 0x96
 800138c:	f003 fcb2 	bl	8004cf4 <wait_ms>
 8001390:	9b01      	ldr	r3, [sp, #4]
 8001392:	9a04      	ldr	r2, [sp, #16]
 8001394:	041b      	lsls	r3, r3, #16
 8001396:	6013      	str	r3, [r2, #0]
 8001398:	2096      	movs	r0, #150	; 0x96
 800139a:	f003 fcab 	bl	8004cf4 <wait_ms>
 800139e:	e7f1      	b.n	8001384 <mbed_die+0x10>

080013a0 <core_util_are_interrupts_enabled>:
 80013a0:	f3ef 8010 	mrs	r0, PRIMASK
 80013a4:	43c0      	mvns	r0, r0
 80013a6:	f000 0001 	and.w	r0, r0, #1
 80013aa:	4770      	bx	lr

080013ac <core_util_critical_section_enter>:
 80013ac:	b508      	push	{r3, lr}
 80013ae:	f7ff fff7 	bl	80013a0 <core_util_are_interrupts_enabled>
 80013b2:	b672      	cpsid	i
 80013b4:	4b06      	ldr	r3, [pc, #24]	; (80013d0 <core_util_critical_section_enter+0x24>)
 80013b6:	681a      	ldr	r2, [r3, #0]
 80013b8:	b922      	cbnz	r2, 80013c4 <core_util_critical_section_enter+0x18>
 80013ba:	f080 0001 	eor.w	r0, r0, #1
 80013be:	4a05      	ldr	r2, [pc, #20]	; (80013d4 <core_util_critical_section_enter+0x28>)
 80013c0:	b2c0      	uxtb	r0, r0
 80013c2:	7010      	strb	r0, [r2, #0]
 80013c4:	681a      	ldr	r2, [r3, #0]
 80013c6:	681a      	ldr	r2, [r3, #0]
 80013c8:	3201      	adds	r2, #1
 80013ca:	601a      	str	r2, [r3, #0]
 80013cc:	bd08      	pop	{r3, pc}
 80013ce:	bf00      	nop
 80013d0:	200008e4 	.word	0x200008e4
 80013d4:	200008e0 	.word	0x200008e0

080013d8 <core_util_critical_section_exit>:
 80013d8:	b508      	push	{r3, lr}
 80013da:	4b07      	ldr	r3, [pc, #28]	; (80013f8 <core_util_critical_section_exit+0x20>)
 80013dc:	681a      	ldr	r2, [r3, #0]
 80013de:	b152      	cbz	r2, 80013f6 <core_util_critical_section_exit+0x1e>
 80013e0:	f7ff ffde 	bl	80013a0 <core_util_are_interrupts_enabled>
 80013e4:	681a      	ldr	r2, [r3, #0]
 80013e6:	3a01      	subs	r2, #1
 80013e8:	601a      	str	r2, [r3, #0]
 80013ea:	681b      	ldr	r3, [r3, #0]
 80013ec:	b91b      	cbnz	r3, 80013f6 <core_util_critical_section_exit+0x1e>
 80013ee:	4b03      	ldr	r3, [pc, #12]	; (80013fc <core_util_critical_section_exit+0x24>)
 80013f0:	781b      	ldrb	r3, [r3, #0]
 80013f2:	b903      	cbnz	r3, 80013f6 <core_util_critical_section_exit+0x1e>
 80013f4:	b662      	cpsie	i
 80013f6:	bd08      	pop	{r3, pc}
 80013f8:	200008e4 	.word	0x200008e4
 80013fc:	200008e0 	.word	0x200008e0

08001400 <error>:
 8001400:	b40f      	push	{r0, r1, r2, r3}
 8001402:	2001      	movs	r0, #1
 8001404:	b508      	push	{r3, lr}
 8001406:	f003 fd79 	bl	8004efc <__wrap_exit>

0800140a <default_idle_hook>:
 800140a:	f001 bc02 	b.w	8002c12 <hal_sleep>
	...

08001410 <rtos_idle_loop>:
 8001410:	b508      	push	{r3, lr}
 8001412:	4c02      	ldr	r4, [pc, #8]	; (800141c <rtos_idle_loop+0xc>)
 8001414:	6823      	ldr	r3, [r4, #0]
 8001416:	4798      	blx	r3
 8001418:	e7fc      	b.n	8001414 <rtos_idle_loop+0x4>
 800141a:	bf00      	nop
 800141c:	200001c8 	.word	0x200001c8

08001420 <rt_put_prio>:
 8001420:	b530      	push	{r4, r5, lr}
 8001422:	7802      	ldrb	r2, [r0, #0]
 8001424:	788c      	ldrb	r4, [r1, #2]
 8001426:	6843      	ldr	r3, [r0, #4]
 8001428:	3a01      	subs	r2, #1
 800142a:	b2d2      	uxtb	r2, r2
 800142c:	b113      	cbz	r3, 8001434 <rt_put_prio+0x14>
 800142e:	789d      	ldrb	r5, [r3, #2]
 8001430:	42a5      	cmp	r5, r4
 8001432:	d207      	bcs.n	8001444 <rt_put_prio+0x24>
 8001434:	2a02      	cmp	r2, #2
 8001436:	604b      	str	r3, [r1, #4]
 8001438:	6041      	str	r1, [r0, #4]
 800143a:	d806      	bhi.n	800144a <rt_put_prio+0x2a>
 800143c:	b103      	cbz	r3, 8001440 <rt_put_prio+0x20>
 800143e:	6099      	str	r1, [r3, #8]
 8001440:	6088      	str	r0, [r1, #8]
 8001442:	bd30      	pop	{r4, r5, pc}
 8001444:	4618      	mov	r0, r3
 8001446:	685b      	ldr	r3, [r3, #4]
 8001448:	e7f0      	b.n	800142c <rt_put_prio+0xc>
 800144a:	2300      	movs	r3, #0
 800144c:	608b      	str	r3, [r1, #8]
 800144e:	bd30      	pop	{r4, r5, pc}

08001450 <rt_get_first>:
 8001450:	7802      	ldrb	r2, [r0, #0]
 8001452:	6843      	ldr	r3, [r0, #4]
 8001454:	3a01      	subs	r2, #1
 8001456:	6859      	ldr	r1, [r3, #4]
 8001458:	6041      	str	r1, [r0, #4]
 800145a:	2a02      	cmp	r2, #2
 800145c:	f04f 0200 	mov.w	r2, #0
 8001460:	d805      	bhi.n	800146e <rt_get_first+0x1e>
 8001462:	b109      	cbz	r1, 8001468 <rt_get_first+0x18>
 8001464:	6088      	str	r0, [r1, #8]
 8001466:	605a      	str	r2, [r3, #4]
 8001468:	609a      	str	r2, [r3, #8]
 800146a:	4618      	mov	r0, r3
 800146c:	4770      	bx	lr
 800146e:	605a      	str	r2, [r3, #4]
 8001470:	e7fb      	b.n	800146a <rt_get_first+0x1a>
	...

08001474 <rt_put_rdy_first>:
 8001474:	4b03      	ldr	r3, [pc, #12]	; (8001484 <rt_put_rdy_first+0x10>)
 8001476:	685a      	ldr	r2, [r3, #4]
 8001478:	6042      	str	r2, [r0, #4]
 800147a:	2200      	movs	r2, #0
 800147c:	6082      	str	r2, [r0, #8]
 800147e:	6058      	str	r0, [r3, #4]
 8001480:	4770      	bx	lr
 8001482:	bf00      	nop
 8001484:	20001d54 	.word	0x20001d54

08001488 <rt_put_dly>:
 8001488:	4b10      	ldr	r3, [pc, #64]	; (80014cc <rt_put_dly+0x44>)
 800148a:	68da      	ldr	r2, [r3, #12]
 800148c:	b510      	push	{r4, lr}
 800148e:	b18a      	cbz	r2, 80014b4 <rt_put_dly+0x2c>
 8001490:	8a9a      	ldrh	r2, [r3, #20]
 8001492:	68dc      	ldr	r4, [r3, #12]
 8001494:	428a      	cmp	r2, r1
 8001496:	d30c      	bcc.n	80014b2 <rt_put_dly+0x2a>
 8001498:	60c4      	str	r4, [r0, #12]
 800149a:	60d8      	str	r0, [r3, #12]
 800149c:	68c4      	ldr	r4, [r0, #12]
 800149e:	6103      	str	r3, [r0, #16]
 80014a0:	b104      	cbz	r4, 80014a4 <rt_put_dly+0x1c>
 80014a2:	6120      	str	r0, [r4, #16]
 80014a4:	1a52      	subs	r2, r2, r1
 80014a6:	b292      	uxth	r2, r2
 80014a8:	8282      	strh	r2, [r0, #20]
 80014aa:	8a99      	ldrh	r1, [r3, #20]
 80014ac:	1a8a      	subs	r2, r1, r2
 80014ae:	829a      	strh	r2, [r3, #20]
 80014b0:	bd10      	pop	{r4, pc}
 80014b2:	b93c      	cbnz	r4, 80014c4 <rt_put_dly+0x3c>
 80014b4:	2400      	movs	r4, #0
 80014b6:	1a8a      	subs	r2, r1, r2
 80014b8:	60c4      	str	r4, [r0, #12]
 80014ba:	60d8      	str	r0, [r3, #12]
 80014bc:	6103      	str	r3, [r0, #16]
 80014be:	829a      	strh	r2, [r3, #20]
 80014c0:	8284      	strh	r4, [r0, #20]
 80014c2:	bd10      	pop	{r4, pc}
 80014c4:	8aa3      	ldrh	r3, [r4, #20]
 80014c6:	441a      	add	r2, r3
 80014c8:	4623      	mov	r3, r4
 80014ca:	e7e2      	b.n	8001492 <rt_put_dly+0xa>
 80014cc:	20001d6c 	.word	0x20001d6c

080014d0 <rt_dec_dly>:
 80014d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80014d4:	4d17      	ldr	r5, [pc, #92]	; (8001534 <rt_dec_dly+0x64>)
 80014d6:	68eb      	ldr	r3, [r5, #12]
 80014d8:	b153      	cbz	r3, 80014f0 <rt_dec_dly+0x20>
 80014da:	8aab      	ldrh	r3, [r5, #20]
 80014dc:	4f16      	ldr	r7, [pc, #88]	; (8001538 <rt_dec_dly+0x68>)
 80014de:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800153c <rt_dec_dly+0x6c>
 80014e2:	3b01      	subs	r3, #1
 80014e4:	82ab      	strh	r3, [r5, #20]
 80014e6:	2600      	movs	r6, #0
 80014e8:	8aaa      	ldrh	r2, [r5, #20]
 80014ea:	b90a      	cbnz	r2, 80014f0 <rt_dec_dly+0x20>
 80014ec:	68ec      	ldr	r4, [r5, #12]
 80014ee:	b90c      	cbnz	r4, 80014f4 <rt_dec_dly+0x24>
 80014f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80014f4:	68a3      	ldr	r3, [r4, #8]
 80014f6:	b133      	cbz	r3, 8001506 <rt_dec_dly+0x36>
 80014f8:	6861      	ldr	r1, [r4, #4]
 80014fa:	6059      	str	r1, [r3, #4]
 80014fc:	6861      	ldr	r1, [r4, #4]
 80014fe:	b109      	cbz	r1, 8001504 <rt_dec_dly+0x34>
 8001500:	608b      	str	r3, [r1, #8]
 8001502:	6062      	str	r2, [r4, #4]
 8001504:	60a6      	str	r6, [r4, #8]
 8001506:	4621      	mov	r1, r4
 8001508:	4638      	mov	r0, r7
 800150a:	f7ff ff89 	bl	8001420 <rt_put_prio>
 800150e:	8aa3      	ldrh	r3, [r4, #20]
 8001510:	82ab      	strh	r3, [r5, #20]
 8001512:	7863      	ldrb	r3, [r4, #1]
 8001514:	2b04      	cmp	r3, #4
 8001516:	bf01      	itttt	eq
 8001518:	f8d8 3000 	ldreq.w	r3, [r8]
 800151c:	8ae2      	ldrheq	r2, [r4, #22]
 800151e:	189b      	addeq	r3, r3, r2
 8001520:	82a3      	strheq	r3, [r4, #20]
 8001522:	2301      	movs	r3, #1
 8001524:	7063      	strb	r3, [r4, #1]
 8001526:	68e3      	ldr	r3, [r4, #12]
 8001528:	60eb      	str	r3, [r5, #12]
 800152a:	b10b      	cbz	r3, 8001530 <rt_dec_dly+0x60>
 800152c:	611d      	str	r5, [r3, #16]
 800152e:	60e6      	str	r6, [r4, #12]
 8001530:	6126      	str	r6, [r4, #16]
 8001532:	e7d9      	b.n	80014e8 <rt_dec_dly+0x18>
 8001534:	20001d6c 	.word	0x20001d6c
 8001538:	20001d54 	.word	0x20001d54
 800153c:	200027b4 	.word	0x200027b4

08001540 <rt_rmv_list>:
 8001540:	6883      	ldr	r3, [r0, #8]
 8001542:	b12b      	cbz	r3, 8001550 <rt_rmv_list+0x10>
 8001544:	6842      	ldr	r2, [r0, #4]
 8001546:	605a      	str	r2, [r3, #4]
 8001548:	6842      	ldr	r2, [r0, #4]
 800154a:	b15a      	cbz	r2, 8001564 <rt_rmv_list+0x24>
 800154c:	6093      	str	r3, [r2, #8]
 800154e:	4770      	bx	lr
 8001550:	4b05      	ldr	r3, [pc, #20]	; (8001568 <rt_rmv_list+0x28>)
 8001552:	685a      	ldr	r2, [r3, #4]
 8001554:	4290      	cmp	r0, r2
 8001556:	d102      	bne.n	800155e <rt_rmv_list+0x1e>
 8001558:	6842      	ldr	r2, [r0, #4]
 800155a:	605a      	str	r2, [r3, #4]
 800155c:	4770      	bx	lr
 800155e:	4613      	mov	r3, r2
 8001560:	2a00      	cmp	r2, #0
 8001562:	d1f6      	bne.n	8001552 <rt_rmv_list+0x12>
 8001564:	4770      	bx	lr
 8001566:	bf00      	nop
 8001568:	20001d54 	.word	0x20001d54

0800156c <rt_resort_prio>:
 800156c:	b510      	push	{r4, lr}
 800156e:	6884      	ldr	r4, [r0, #8]
 8001570:	4601      	mov	r1, r0
 8001572:	b92c      	cbnz	r4, 8001580 <rt_resort_prio+0x14>
 8001574:	7843      	ldrb	r3, [r0, #1]
 8001576:	2b01      	cmp	r3, #1
 8001578:	d10d      	bne.n	8001596 <rt_resort_prio+0x2a>
 800157a:	4c07      	ldr	r4, [pc, #28]	; (8001598 <rt_resort_prio+0x2c>)
 800157c:	e003      	b.n	8001586 <rt_resort_prio+0x1a>
 800157e:	68a4      	ldr	r4, [r4, #8]
 8001580:	7823      	ldrb	r3, [r4, #0]
 8001582:	2b00      	cmp	r3, #0
 8001584:	d0fb      	beq.n	800157e <rt_resort_prio+0x12>
 8001586:	4608      	mov	r0, r1
 8001588:	f7ff ffda 	bl	8001540 <rt_rmv_list>
 800158c:	4620      	mov	r0, r4
 800158e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001592:	f7ff bf45 	b.w	8001420 <rt_put_prio>
 8001596:	bd10      	pop	{r4, pc}
 8001598:	20001d54 	.word	0x20001d54

0800159c <rt_rmv_dly>:
 800159c:	6903      	ldr	r3, [r0, #16]
 800159e:	b510      	push	{r4, lr}
 80015a0:	b163      	cbz	r3, 80015bc <rt_rmv_dly+0x20>
 80015a2:	68c2      	ldr	r2, [r0, #12]
 80015a4:	60da      	str	r2, [r3, #12]
 80015a6:	68c2      	ldr	r2, [r0, #12]
 80015a8:	b14a      	cbz	r2, 80015be <rt_rmv_dly+0x22>
 80015aa:	8a99      	ldrh	r1, [r3, #20]
 80015ac:	8a84      	ldrh	r4, [r0, #20]
 80015ae:	4421      	add	r1, r4
 80015b0:	8299      	strh	r1, [r3, #20]
 80015b2:	6113      	str	r3, [r2, #16]
 80015b4:	2300      	movs	r3, #0
 80015b6:	60c3      	str	r3, [r0, #12]
 80015b8:	2300      	movs	r3, #0
 80015ba:	6103      	str	r3, [r0, #16]
 80015bc:	bd10      	pop	{r4, pc}
 80015be:	829a      	strh	r2, [r3, #20]
 80015c0:	e7fa      	b.n	80015b8 <rt_rmv_dly+0x1c>
	...

080015c4 <rt_psq_enq>:
 80015c4:	b470      	push	{r4, r5, r6}
 80015c6:	4b11      	ldr	r3, [pc, #68]	; (800160c <rt_psq_enq+0x48>)
 80015c8:	78dd      	ldrb	r5, [r3, #3]
 80015ca:	f3ef 8610 	mrs	r6, PRIMASK
 80015ce:	f3ef 8210 	mrs	r2, PRIMASK
 80015d2:	b672      	cpsid	i
 80015d4:	789a      	ldrb	r2, [r3, #2]
 80015d6:	4295      	cmp	r5, r2
 80015d8:	d911      	bls.n	80015fe <rt_psq_enq+0x3a>
 80015da:	3201      	adds	r2, #1
 80015dc:	709a      	strb	r2, [r3, #2]
 80015de:	781a      	ldrb	r2, [r3, #0]
 80015e0:	1c54      	adds	r4, r2, #1
 80015e2:	42a5      	cmp	r5, r4
 80015e4:	bf08      	it	eq
 80015e6:	2400      	moveq	r4, #0
 80015e8:	701c      	strb	r4, [r3, #0]
 80015ea:	b906      	cbnz	r6, 80015ee <rt_psq_enq+0x2a>
 80015ec:	b662      	cpsie	i
 80015ee:	4295      	cmp	r5, r2
 80015f0:	d907      	bls.n	8001602 <rt_psq_enq+0x3e>
 80015f2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80015f6:	bc70      	pop	{r4, r5, r6}
 80015f8:	6058      	str	r0, [r3, #4]
 80015fa:	6099      	str	r1, [r3, #8]
 80015fc:	4770      	bx	lr
 80015fe:	2e00      	cmp	r6, #0
 8001600:	d0f4      	beq.n	80015ec <rt_psq_enq+0x28>
 8001602:	2002      	movs	r0, #2
 8001604:	bc70      	pop	{r4, r5, r6}
 8001606:	f000 b829 	b.w	800165c <os_error>
 800160a:	bf00      	nop
 800160c:	20001d88 	.word	0x20001d88

08001610 <pre_main>:
 8001610:	b508      	push	{r3, lr}
 8001612:	480b      	ldr	r0, [pc, #44]	; (8001640 <pre_main+0x30>)
 8001614:	f000 fca4 	bl	8001f60 <osMutexCreate>
 8001618:	4b0a      	ldr	r3, [pc, #40]	; (8001644 <pre_main+0x34>)
 800161a:	6018      	str	r0, [r3, #0]
 800161c:	480a      	ldr	r0, [pc, #40]	; (8001648 <pre_main+0x38>)
 800161e:	f000 fc9f 	bl	8001f60 <osMutexCreate>
 8001622:	4b0a      	ldr	r3, [pc, #40]	; (800164c <pre_main+0x3c>)
 8001624:	6018      	str	r0, [r3, #0]
 8001626:	480a      	ldr	r0, [pc, #40]	; (8001650 <pre_main+0x40>)
 8001628:	f000 fc9a 	bl	8001f60 <osMutexCreate>
 800162c:	4b09      	ldr	r3, [pc, #36]	; (8001654 <pre_main+0x44>)
 800162e:	6018      	str	r0, [r3, #0]
 8001630:	f003 ff08 	bl	8005444 <__libc_init_array>
 8001634:	2100      	movs	r1, #0
 8001636:	4608      	mov	r0, r1
 8001638:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800163c:	f003 bc21 	b.w	8004e82 <__wrap_main>
 8001640:	0800627c 	.word	0x0800627c
 8001644:	20001e10 	.word	0x20001e10
 8001648:	08006278 	.word	0x08006278
 800164c:	200008f0 	.word	0x200008f0
 8001650:	08006274 	.word	0x08006274
 8001654:	200008e8 	.word	0x200008e8

08001658 <os_idle_demon>:
 8001658:	f7ff beda 	b.w	8001410 <rtos_idle_loop>

0800165c <os_error>:
 800165c:	b510      	push	{r4, lr}
 800165e:	4604      	mov	r4, r0
 8001660:	f000 fbec 	bl	8001e3c <svcThreadGetId>
 8001664:	4621      	mov	r1, r4
 8001666:	4602      	mov	r2, r0
 8001668:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800166c:	4801      	ldr	r0, [pc, #4]	; (8001674 <os_error+0x18>)
 800166e:	f7ff bec7 	b.w	8001400 <error>
 8001672:	bf00      	nop
 8001674:	0800623c 	.word	0x0800623c

08001678 <sysThreadTerminate>:
 8001678:	f003 bc5e 	b.w	8004f38 <thread_terminate_hook>

0800167c <set_stack_heap>:
 800167c:	4a0b      	ldr	r2, [pc, #44]	; (80016ac <set_stack_heap+0x30>)
 800167e:	4b0c      	ldr	r3, [pc, #48]	; (80016b0 <set_stack_heap+0x34>)
 8001680:	480c      	ldr	r0, [pc, #48]	; (80016b4 <set_stack_heap+0x38>)
 8001682:	b430      	push	{r4, r5}
 8001684:	601a      	str	r2, [r3, #0]
 8001686:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 800168a:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
 800168e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001692:	4619      	mov	r1, r3
 8001694:	bf28      	it	cs
 8001696:	f44f 6180 	movcs.w	r1, #1024	; 0x400
 800169a:	4d07      	ldr	r5, [pc, #28]	; (80016b8 <set_stack_heap+0x3c>)
 800169c:	4c07      	ldr	r4, [pc, #28]	; (80016bc <set_stack_heap+0x40>)
 800169e:	6001      	str	r1, [r0, #0]
 80016a0:	1a5b      	subs	r3, r3, r1
 80016a2:	441a      	add	r2, r3
 80016a4:	602a      	str	r2, [r5, #0]
 80016a6:	6023      	str	r3, [r4, #0]
 80016a8:	bc30      	pop	{r4, r5}
 80016aa:	4770      	bx	lr
 80016ac:	20002848 	.word	0x20002848
 80016b0:	20001d44 	.word	0x20001d44
 80016b4:	200008f4 	.word	0x200008f4
 80016b8:	200008f8 	.word	0x200008f8
 80016bc:	20001d40 	.word	0x20001d40

080016c0 <software_init_hook_rtos>:
 80016c0:	f000 fd22 	bl	8002108 <osKernelInitialize>
 80016c4:	f7ff ffda 	bl	800167c <set_stack_heap>
 80016c8:	4803      	ldr	r0, [pc, #12]	; (80016d8 <software_init_hook_rtos+0x18>)
 80016ca:	2100      	movs	r1, #0
 80016cc:	f000 fcd0 	bl	8002070 <osThreadCreate>
 80016d0:	f000 fb36 	bl	8001d40 <osKernelStart>
 80016d4:	e7fe      	b.n	80016d4 <software_init_hook_rtos+0x14>
 80016d6:	0000      	.short	0x0000
 80016d8:	200001cc 	.word	0x200001cc

080016dc <__rtos_malloc_lock>:
 80016dc:	4b02      	ldr	r3, [pc, #8]	; (80016e8 <__rtos_malloc_lock+0xc>)
 80016de:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80016e2:	6818      	ldr	r0, [r3, #0]
 80016e4:	f000 bc5a 	b.w	8001f9c <osMutexWait>
 80016e8:	200008f0 	.word	0x200008f0

080016ec <__rtos_malloc_unlock>:
 80016ec:	4b01      	ldr	r3, [pc, #4]	; (80016f4 <__rtos_malloc_unlock+0x8>)
 80016ee:	6818      	ldr	r0, [r3, #0]
 80016f0:	f000 bc7c 	b.w	8001fec <osMutexRelease>
 80016f4:	200008f0 	.word	0x200008f0

080016f8 <rt_init_stack>:
 80016f8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80016fa:	089b      	lsrs	r3, r3, #2
 80016fc:	bf04      	itt	eq
 80016fe:	4b22      	ldreq	r3, [pc, #136]	; (8001788 <rt_init_stack+0x90>)
 8001700:	881b      	ldrheq	r3, [r3, #0]
 8001702:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001704:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8001706:	bf08      	it	eq
 8001708:	089b      	lsreq	r3, r3, #2
 800170a:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 800170e:	0754      	lsls	r4, r2, #29
 8001710:	bf48      	it	mi
 8001712:	3a04      	submi	r2, #4
 8001714:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 8001718:	e902 0042 	stmdb	r2, {r1, r6}
 800171c:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 8001720:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8001724:	f1a2 070c 	sub.w	r7, r2, #12
 8001728:	f04f 0e00 	mov.w	lr, #0
 800172c:	f846 ef04 	str.w	lr, [r6, #4]!
 8001730:	42be      	cmp	r6, r7
 8001732:	d1fb      	bne.n	800172c <rt_init_stack+0x34>
 8001734:	69c6      	ldr	r6, [r0, #28]
 8001736:	f842 6c20 	str.w	r6, [r2, #-32]
 800173a:	6341      	str	r1, [r0, #52]	; 0x34
 800173c:	4912      	ldr	r1, [pc, #72]	; (8001788 <rt_init_stack+0x90>)
 800173e:	62c4      	str	r4, [r0, #44]	; 0x2c
 8001740:	6809      	ldr	r1, [r1, #0]
 8001742:	00c9      	lsls	r1, r1, #3
 8001744:	d517      	bpl.n	8001776 <rt_init_stack+0x7e>
 8001746:	2b11      	cmp	r3, #17
 8001748:	d915      	bls.n	8001776 <rt_init_stack+0x7e>
 800174a:	3b10      	subs	r3, #16
 800174c:	f06f 0107 	mvn.w	r1, #7
 8001750:	085b      	lsrs	r3, r3, #1
 8001752:	434b      	muls	r3, r1
 8001754:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8001758:	440a      	add	r2, r1
 800175a:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 800175e:	4621      	mov	r1, r4
 8001760:	4291      	cmp	r1, r2
 8001762:	d10b      	bne.n	800177c <rt_init_stack+0x84>
 8001764:	3308      	adds	r3, #8
 8001766:	441c      	add	r4, r3
 8001768:	1f23      	subs	r3, r4, #4
 800176a:	429d      	cmp	r5, r3
 800176c:	bf3c      	itt	cc
 800176e:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 8001772:	f844 3c04 	strcc.w	r3, [r4, #-4]
 8001776:	4b05      	ldr	r3, [pc, #20]	; (800178c <rt_init_stack+0x94>)
 8001778:	602b      	str	r3, [r5, #0]
 800177a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800177c:	f841 0c04 	str.w	r0, [r1, #-4]
 8001780:	f841 0d08 	str.w	r0, [r1, #-8]!
 8001784:	e7ec      	b.n	8001760 <rt_init_stack+0x68>
 8001786:	bf00      	nop
 8001788:	08006284 	.word	0x08006284
 800178c:	e25a2ea5 	.word	0xe25a2ea5

08001790 <rt_ret_val>:
 8001790:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001794:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001796:	b112      	cbz	r2, 800179e <rt_ret_val+0xe>
 8001798:	3360      	adds	r3, #96	; 0x60
 800179a:	6019      	str	r1, [r3, #0]
 800179c:	4770      	bx	lr
 800179e:	3320      	adds	r3, #32
 80017a0:	e7fb      	b.n	800179a <rt_ret_val+0xa>

080017a2 <rt_ret_val2>:
 80017a2:	b510      	push	{r4, lr}
 80017a4:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 80017a8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80017aa:	b11c      	cbz	r4, 80017b4 <rt_ret_val2+0x12>
 80017ac:	3360      	adds	r3, #96	; 0x60
 80017ae:	e883 0006 	stmia.w	r3, {r1, r2}
 80017b2:	bd10      	pop	{r4, pc}
 80017b4:	3320      	adds	r3, #32
 80017b6:	e7fa      	b.n	80017ae <rt_ret_val2+0xc>

080017b8 <rt_psh_req>:
 80017b8:	4b05      	ldr	r3, [pc, #20]	; (80017d0 <rt_psh_req+0x18>)
 80017ba:	781b      	ldrb	r3, [r3, #0]
 80017bc:	b923      	cbnz	r3, 80017c8 <rt_psh_req+0x10>
 80017be:	4b05      	ldr	r3, [pc, #20]	; (80017d4 <rt_psh_req+0x1c>)
 80017c0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80017c4:	601a      	str	r2, [r3, #0]
 80017c6:	4770      	bx	lr
 80017c8:	4b03      	ldr	r3, [pc, #12]	; (80017d8 <rt_psh_req+0x20>)
 80017ca:	2201      	movs	r2, #1
 80017cc:	701a      	strb	r2, [r3, #0]
 80017ce:	4770      	bx	lr
 80017d0:	2000194c 	.word	0x2000194c
 80017d4:	e000ed04 	.word	0xe000ed04
 80017d8:	2000194d 	.word	0x2000194d

080017dc <rt_pop_req>:
 80017dc:	b538      	push	{r3, r4, r5, lr}
 80017de:	4b1a      	ldr	r3, [pc, #104]	; (8001848 <rt_pop_req+0x6c>)
 80017e0:	4c1a      	ldr	r4, [pc, #104]	; (800184c <rt_pop_req+0x70>)
 80017e2:	6818      	ldr	r0, [r3, #0]
 80017e4:	2301      	movs	r3, #1
 80017e6:	7043      	strb	r3, [r0, #1]
 80017e8:	f7ff fe44 	bl	8001474 <rt_put_rdy_first>
 80017ec:	7865      	ldrb	r5, [r4, #1]
 80017ee:	78a3      	ldrb	r3, [r4, #2]
 80017f0:	b93b      	cbnz	r3, 8001802 <rt_pop_req+0x26>
 80017f2:	4817      	ldr	r0, [pc, #92]	; (8001850 <rt_pop_req+0x74>)
 80017f4:	7065      	strb	r5, [r4, #1]
 80017f6:	f7ff fe2b 	bl	8001450 <rt_get_first>
 80017fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80017fe:	f000 bd5d 	b.w	80022bc <rt_switch_req>
 8001802:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8001806:	6858      	ldr	r0, [r3, #4]
 8001808:	7802      	ldrb	r2, [r0, #0]
 800180a:	b99a      	cbnz	r2, 8001834 <rt_pop_req+0x58>
 800180c:	8919      	ldrh	r1, [r3, #8]
 800180e:	f000 f9bb 	bl	8001b88 <rt_evt_psh>
 8001812:	78e3      	ldrb	r3, [r4, #3]
 8001814:	3501      	adds	r5, #1
 8001816:	429d      	cmp	r5, r3
 8001818:	bf08      	it	eq
 800181a:	2500      	moveq	r5, #0
 800181c:	f3ef 8310 	mrs	r3, PRIMASK
 8001820:	f3ef 8210 	mrs	r2, PRIMASK
 8001824:	b672      	cpsid	i
 8001826:	78a2      	ldrb	r2, [r4, #2]
 8001828:	3a01      	subs	r2, #1
 800182a:	70a2      	strb	r2, [r4, #2]
 800182c:	2b00      	cmp	r3, #0
 800182e:	d1de      	bne.n	80017ee <rt_pop_req+0x12>
 8001830:	b662      	cpsie	i
 8001832:	e7dc      	b.n	80017ee <rt_pop_req+0x12>
 8001834:	2a01      	cmp	r2, #1
 8001836:	d103      	bne.n	8001840 <rt_pop_req+0x64>
 8001838:	6899      	ldr	r1, [r3, #8]
 800183a:	f000 f933 	bl	8001aa4 <rt_mbx_psh>
 800183e:	e7e8      	b.n	8001812 <rt_pop_req+0x36>
 8001840:	f001 f844 	bl	80028cc <rt_sem_psh>
 8001844:	e7e5      	b.n	8001812 <rt_pop_req+0x36>
 8001846:	bf00      	nop
 8001848:	2000276c 	.word	0x2000276c
 800184c:	20001d88 	.word	0x20001d88
 8001850:	20001d54 	.word	0x20001d54

08001854 <os_tick_init>:
 8001854:	4b08      	ldr	r3, [pc, #32]	; (8001878 <os_tick_init+0x24>)
 8001856:	681a      	ldr	r2, [r3, #0]
 8001858:	4b08      	ldr	r3, [pc, #32]	; (800187c <os_tick_init+0x28>)
 800185a:	601a      	str	r2, [r3, #0]
 800185c:	2200      	movs	r2, #0
 800185e:	605a      	str	r2, [r3, #4]
 8001860:	2207      	movs	r2, #7
 8001862:	f843 2c04 	str.w	r2, [r3, #-4]
 8001866:	4a06      	ldr	r2, [pc, #24]	; (8001880 <os_tick_init+0x2c>)
 8001868:	6813      	ldr	r3, [r2, #0]
 800186a:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800186e:	6013      	str	r3, [r2, #0]
 8001870:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001874:	4770      	bx	lr
 8001876:	bf00      	nop
 8001878:	0800629c 	.word	0x0800629c
 800187c:	e000e014 	.word	0xe000e014
 8001880:	e000ed20 	.word	0xe000ed20

08001884 <os_tick_irqack>:
 8001884:	4770      	bx	lr
	...

08001888 <rt_systick>:
 8001888:	b508      	push	{r3, lr}
 800188a:	4b0b      	ldr	r3, [pc, #44]	; (80018b8 <rt_systick+0x30>)
 800188c:	6818      	ldr	r0, [r3, #0]
 800188e:	2301      	movs	r3, #1
 8001890:	7043      	strb	r3, [r0, #1]
 8001892:	f7ff fdef 	bl	8001474 <rt_put_rdy_first>
 8001896:	f000 f9ad 	bl	8001bf4 <rt_chk_robin>
 800189a:	4a08      	ldr	r2, [pc, #32]	; (80018bc <rt_systick+0x34>)
 800189c:	6813      	ldr	r3, [r2, #0]
 800189e:	3301      	adds	r3, #1
 80018a0:	6013      	str	r3, [r2, #0]
 80018a2:	f7ff fe15 	bl	80014d0 <rt_dec_dly>
 80018a6:	f000 fc91 	bl	80021cc <sysTimerTick>
 80018aa:	4805      	ldr	r0, [pc, #20]	; (80018c0 <rt_systick+0x38>)
 80018ac:	f7ff fdd0 	bl	8001450 <rt_get_first>
 80018b0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80018b4:	f000 bd02 	b.w	80022bc <rt_switch_req>
 80018b8:	2000276c 	.word	0x2000276c
 80018bc:	200027b4 	.word	0x200027b4
 80018c0:	20001d54 	.word	0x20001d54

080018c4 <rt_stk_check>:
 80018c4:	4b06      	ldr	r3, [pc, #24]	; (80018e0 <rt_stk_check+0x1c>)
 80018c6:	681a      	ldr	r2, [r3, #0]
 80018c8:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80018ca:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80018cc:	4293      	cmp	r3, r2
 80018ce:	d803      	bhi.n	80018d8 <rt_stk_check+0x14>
 80018d0:	681a      	ldr	r2, [r3, #0]
 80018d2:	4b04      	ldr	r3, [pc, #16]	; (80018e4 <rt_stk_check+0x20>)
 80018d4:	429a      	cmp	r2, r3
 80018d6:	d002      	beq.n	80018de <rt_stk_check+0x1a>
 80018d8:	2001      	movs	r0, #1
 80018da:	f7ff bebf 	b.w	800165c <os_error>
 80018de:	4770      	bx	lr
 80018e0:	2000276c 	.word	0x2000276c
 80018e4:	e25a2ea5 	.word	0xe25a2ea5

080018e8 <_init_box>:
 80018e8:	2a00      	cmp	r2, #0
 80018ea:	bfbb      	ittet	lt
 80018ec:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 80018f0:	3207      	addlt	r2, #7
 80018f2:	3203      	addge	r2, #3
 80018f4:	f022 0207 	biclt.w	r2, r2, #7
 80018f8:	bfa8      	it	ge
 80018fa:	f022 0203 	bicge.w	r2, r2, #3
 80018fe:	b510      	push	{r4, lr}
 8001900:	bfb4      	ite	lt
 8001902:	2310      	movlt	r3, #16
 8001904:	230c      	movge	r3, #12
 8001906:	b192      	cbz	r2, 800192e <_init_box+0x46>
 8001908:	18d4      	adds	r4, r2, r3
 800190a:	428c      	cmp	r4, r1
 800190c:	d80f      	bhi.n	800192e <_init_box+0x46>
 800190e:	4401      	add	r1, r0
 8001910:	4403      	add	r3, r0
 8001912:	4254      	negs	r4, r2
 8001914:	6041      	str	r1, [r0, #4]
 8001916:	6003      	str	r3, [r0, #0]
 8001918:	6082      	str	r2, [r0, #8]
 800191a:	4421      	add	r1, r4
 800191c:	1898      	adds	r0, r3, r2
 800191e:	4281      	cmp	r1, r0
 8001920:	d302      	bcc.n	8001928 <_init_box+0x40>
 8001922:	5100      	str	r0, [r0, r4]
 8001924:	4603      	mov	r3, r0
 8001926:	e7f9      	b.n	800191c <_init_box+0x34>
 8001928:	2000      	movs	r0, #0
 800192a:	6018      	str	r0, [r3, #0]
 800192c:	bd10      	pop	{r4, pc}
 800192e:	2001      	movs	r0, #1
 8001930:	bd10      	pop	{r4, pc}

08001932 <rt_alloc_box>:
 8001932:	f3ef 8310 	mrs	r3, PRIMASK
 8001936:	b672      	cpsid	i
 8001938:	6802      	ldr	r2, [r0, #0]
 800193a:	f003 0301 	and.w	r3, r3, #1
 800193e:	b10a      	cbz	r2, 8001944 <rt_alloc_box+0x12>
 8001940:	6811      	ldr	r1, [r2, #0]
 8001942:	6001      	str	r1, [r0, #0]
 8001944:	b903      	cbnz	r3, 8001948 <rt_alloc_box+0x16>
 8001946:	b662      	cpsie	i
 8001948:	4610      	mov	r0, r2
 800194a:	4770      	bx	lr

0800194c <rt_free_box>:
 800194c:	4281      	cmp	r1, r0
 800194e:	d30d      	bcc.n	800196c <rt_free_box+0x20>
 8001950:	6843      	ldr	r3, [r0, #4]
 8001952:	4299      	cmp	r1, r3
 8001954:	d20a      	bcs.n	800196c <rt_free_box+0x20>
 8001956:	f3ef 8310 	mrs	r3, PRIMASK
 800195a:	b672      	cpsid	i
 800195c:	6802      	ldr	r2, [r0, #0]
 800195e:	600a      	str	r2, [r1, #0]
 8001960:	6001      	str	r1, [r0, #0]
 8001962:	f013 0001 	ands.w	r0, r3, #1
 8001966:	d103      	bne.n	8001970 <rt_free_box+0x24>
 8001968:	b662      	cpsie	i
 800196a:	4770      	bx	lr
 800196c:	2001      	movs	r0, #1
 800196e:	4770      	bx	lr
 8001970:	2000      	movs	r0, #0
 8001972:	4770      	bx	lr

08001974 <rt_mbx_init>:
 8001974:	2301      	movs	r3, #1
 8001976:	3910      	subs	r1, #16
 8001978:	7003      	strb	r3, [r0, #0]
 800197a:	0889      	lsrs	r1, r1, #2
 800197c:	2300      	movs	r3, #0
 800197e:	7043      	strb	r3, [r0, #1]
 8001980:	7083      	strb	r3, [r0, #2]
 8001982:	6043      	str	r3, [r0, #4]
 8001984:	8103      	strh	r3, [r0, #8]
 8001986:	8143      	strh	r3, [r0, #10]
 8001988:	8183      	strh	r3, [r0, #12]
 800198a:	81c1      	strh	r1, [r0, #14]
 800198c:	4770      	bx	lr
	...

08001990 <rt_mbx_wait>:
 8001990:	b570      	push	{r4, r5, r6, lr}
 8001992:	8985      	ldrh	r5, [r0, #12]
 8001994:	4604      	mov	r4, r0
 8001996:	4616      	mov	r6, r2
 8001998:	2d00      	cmp	r5, #0
 800199a:	d038      	beq.n	8001a0e <rt_mbx_wait+0x7e>
 800199c:	8943      	ldrh	r3, [r0, #10]
 800199e:	1d1a      	adds	r2, r3, #4
 80019a0:	3301      	adds	r3, #1
 80019a2:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 80019a6:	600a      	str	r2, [r1, #0]
 80019a8:	89c2      	ldrh	r2, [r0, #14]
 80019aa:	b29b      	uxth	r3, r3
 80019ac:	429a      	cmp	r2, r3
 80019ae:	8143      	strh	r3, [r0, #10]
 80019b0:	bf04      	itt	eq
 80019b2:	2300      	moveq	r3, #0
 80019b4:	8143      	strheq	r3, [r0, #10]
 80019b6:	6843      	ldr	r3, [r0, #4]
 80019b8:	b1f3      	cbz	r3, 80019f8 <rt_mbx_wait+0x68>
 80019ba:	7843      	ldrb	r3, [r0, #1]
 80019bc:	2b02      	cmp	r3, #2
 80019be:	d11b      	bne.n	80019f8 <rt_mbx_wait+0x68>
 80019c0:	f7ff fd46 	bl	8001450 <rt_get_first>
 80019c4:	2100      	movs	r1, #0
 80019c6:	4605      	mov	r5, r0
 80019c8:	f7ff fee2 	bl	8001790 <rt_ret_val>
 80019cc:	8923      	ldrh	r3, [r4, #8]
 80019ce:	69e9      	ldr	r1, [r5, #28]
 80019d0:	1d1a      	adds	r2, r3, #4
 80019d2:	3301      	adds	r3, #1
 80019d4:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 80019d8:	89e2      	ldrh	r2, [r4, #14]
 80019da:	b29b      	uxth	r3, r3
 80019dc:	429a      	cmp	r2, r3
 80019de:	8123      	strh	r3, [r4, #8]
 80019e0:	bf08      	it	eq
 80019e2:	2300      	moveq	r3, #0
 80019e4:	4628      	mov	r0, r5
 80019e6:	bf08      	it	eq
 80019e8:	8123      	strheq	r3, [r4, #8]
 80019ea:	f7ff fdd7 	bl	800159c <rt_rmv_dly>
 80019ee:	4628      	mov	r0, r5
 80019f0:	f000 fc7e 	bl	80022f0 <rt_dispatch>
 80019f4:	2000      	movs	r0, #0
 80019f6:	bd70      	pop	{r4, r5, r6, pc}
 80019f8:	f3ef 8010 	mrs	r0, PRIMASK
 80019fc:	f3ef 8310 	mrs	r3, PRIMASK
 8001a00:	b672      	cpsid	i
 8001a02:	3d01      	subs	r5, #1
 8001a04:	81a5      	strh	r5, [r4, #12]
 8001a06:	2800      	cmp	r0, #0
 8001a08:	d1f4      	bne.n	80019f4 <rt_mbx_wait+0x64>
 8001a0a:	b662      	cpsie	i
 8001a0c:	bd70      	pop	{r4, r5, r6, pc}
 8001a0e:	b14a      	cbz	r2, 8001a24 <rt_mbx_wait+0x94>
 8001a10:	6842      	ldr	r2, [r0, #4]
 8001a12:	4b09      	ldr	r3, [pc, #36]	; (8001a38 <rt_mbx_wait+0xa8>)
 8001a14:	b142      	cbz	r2, 8001a28 <rt_mbx_wait+0x98>
 8001a16:	6819      	ldr	r1, [r3, #0]
 8001a18:	f7ff fd02 	bl	8001420 <rt_put_prio>
 8001a1c:	2108      	movs	r1, #8
 8001a1e:	4630      	mov	r0, r6
 8001a20:	f000 fc8a 	bl	8002338 <rt_block>
 8001a24:	2001      	movs	r0, #1
 8001a26:	bd70      	pop	{r4, r5, r6, pc}
 8001a28:	681b      	ldr	r3, [r3, #0]
 8001a2a:	6043      	str	r3, [r0, #4]
 8001a2c:	605a      	str	r2, [r3, #4]
 8001a2e:	6098      	str	r0, [r3, #8]
 8001a30:	2301      	movs	r3, #1
 8001a32:	7043      	strb	r3, [r0, #1]
 8001a34:	e7f2      	b.n	8001a1c <rt_mbx_wait+0x8c>
 8001a36:	bf00      	nop
 8001a38:	2000276c 	.word	0x2000276c

08001a3c <rt_mbx_check>:
 8001a3c:	89c2      	ldrh	r2, [r0, #14]
 8001a3e:	8980      	ldrh	r0, [r0, #12]
 8001a40:	1a10      	subs	r0, r2, r0
 8001a42:	4770      	bx	lr

08001a44 <isr_mbx_send>:
 8001a44:	b508      	push	{r3, lr}
 8001a46:	f7ff fdbd 	bl	80015c4 <rt_psq_enq>
 8001a4a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001a4e:	f7ff beb3 	b.w	80017b8 <rt_psh_req>

08001a52 <isr_mbx_receive>:
 8001a52:	8983      	ldrh	r3, [r0, #12]
 8001a54:	b510      	push	{r4, lr}
 8001a56:	4604      	mov	r4, r0
 8001a58:	b30b      	cbz	r3, 8001a9e <isr_mbx_receive+0x4c>
 8001a5a:	8943      	ldrh	r3, [r0, #10]
 8001a5c:	3304      	adds	r3, #4
 8001a5e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8001a62:	600b      	str	r3, [r1, #0]
 8001a64:	7843      	ldrb	r3, [r0, #1]
 8001a66:	2b02      	cmp	r3, #2
 8001a68:	d104      	bne.n	8001a74 <isr_mbx_receive+0x22>
 8001a6a:	2100      	movs	r1, #0
 8001a6c:	f7ff fdaa 	bl	80015c4 <rt_psq_enq>
 8001a70:	f7ff fea2 	bl	80017b8 <rt_psh_req>
 8001a74:	f3ef 8310 	mrs	r3, PRIMASK
 8001a78:	f3ef 8210 	mrs	r2, PRIMASK
 8001a7c:	b672      	cpsid	i
 8001a7e:	89a2      	ldrh	r2, [r4, #12]
 8001a80:	3a01      	subs	r2, #1
 8001a82:	81a2      	strh	r2, [r4, #12]
 8001a84:	b903      	cbnz	r3, 8001a88 <isr_mbx_receive+0x36>
 8001a86:	b662      	cpsie	i
 8001a88:	8963      	ldrh	r3, [r4, #10]
 8001a8a:	89e2      	ldrh	r2, [r4, #14]
 8001a8c:	3301      	adds	r3, #1
 8001a8e:	b29b      	uxth	r3, r3
 8001a90:	429a      	cmp	r2, r3
 8001a92:	8163      	strh	r3, [r4, #10]
 8001a94:	d101      	bne.n	8001a9a <isr_mbx_receive+0x48>
 8001a96:	2300      	movs	r3, #0
 8001a98:	8163      	strh	r3, [r4, #10]
 8001a9a:	2004      	movs	r0, #4
 8001a9c:	bd10      	pop	{r4, pc}
 8001a9e:	4618      	mov	r0, r3
 8001aa0:	bd10      	pop	{r4, pc}
	...

08001aa4 <rt_mbx_psh>:
 8001aa4:	6843      	ldr	r3, [r0, #4]
 8001aa6:	b570      	push	{r4, r5, r6, lr}
 8001aa8:	4604      	mov	r4, r0
 8001aaa:	460e      	mov	r6, r1
 8001aac:	2b00      	cmp	r3, #0
 8001aae:	d04b      	beq.n	8001b48 <rt_mbx_psh+0xa4>
 8001ab0:	7845      	ldrb	r5, [r0, #1]
 8001ab2:	2d02      	cmp	r5, #2
 8001ab4:	d020      	beq.n	8001af8 <rt_mbx_psh+0x54>
 8001ab6:	2d03      	cmp	r5, #3
 8001ab8:	d00a      	beq.n	8001ad0 <rt_mbx_psh+0x2c>
 8001aba:	2d01      	cmp	r5, #1
 8001abc:	d161      	bne.n	8001b82 <rt_mbx_psh+0xde>
 8001abe:	f7ff fcc7 	bl	8001450 <rt_get_first>
 8001ac2:	4604      	mov	r4, r0
 8001ac4:	4632      	mov	r2, r6
 8001ac6:	2110      	movs	r1, #16
 8001ac8:	f7ff fe6b 	bl	80017a2 <rt_ret_val2>
 8001acc:	7065      	strb	r5, [r4, #1]
 8001ace:	e00e      	b.n	8001aee <rt_mbx_psh+0x4a>
 8001ad0:	4608      	mov	r0, r1
 8001ad2:	f7ff ff2e 	bl	8001932 <rt_alloc_box>
 8001ad6:	4605      	mov	r5, r0
 8001ad8:	2800      	cmp	r0, #0
 8001ada:	d052      	beq.n	8001b82 <rt_mbx_psh+0xde>
 8001adc:	4620      	mov	r0, r4
 8001ade:	f7ff fcb7 	bl	8001450 <rt_get_first>
 8001ae2:	4629      	mov	r1, r5
 8001ae4:	4604      	mov	r4, r0
 8001ae6:	f7ff fe53 	bl	8001790 <rt_ret_val>
 8001aea:	2301      	movs	r3, #1
 8001aec:	7063      	strb	r3, [r4, #1]
 8001aee:	4620      	mov	r0, r4
 8001af0:	f7ff fd54 	bl	800159c <rt_rmv_dly>
 8001af4:	4621      	mov	r1, r4
 8001af6:	e022      	b.n	8001b3e <rt_mbx_psh+0x9a>
 8001af8:	f7ff fcaa 	bl	8001450 <rt_get_first>
 8001afc:	2100      	movs	r1, #0
 8001afe:	4605      	mov	r5, r0
 8001b00:	f7ff fe46 	bl	8001790 <rt_ret_val>
 8001b04:	8923      	ldrh	r3, [r4, #8]
 8001b06:	69e9      	ldr	r1, [r5, #28]
 8001b08:	1d1a      	adds	r2, r3, #4
 8001b0a:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8001b0e:	f3ef 8210 	mrs	r2, PRIMASK
 8001b12:	f3ef 8110 	mrs	r1, PRIMASK
 8001b16:	b672      	cpsid	i
 8001b18:	89a1      	ldrh	r1, [r4, #12]
 8001b1a:	3101      	adds	r1, #1
 8001b1c:	81a1      	strh	r1, [r4, #12]
 8001b1e:	b902      	cbnz	r2, 8001b22 <rt_mbx_psh+0x7e>
 8001b20:	b662      	cpsie	i
 8001b22:	89e2      	ldrh	r2, [r4, #14]
 8001b24:	3301      	adds	r3, #1
 8001b26:	b29b      	uxth	r3, r3
 8001b28:	429a      	cmp	r2, r3
 8001b2a:	8123      	strh	r3, [r4, #8]
 8001b2c:	bf04      	itt	eq
 8001b2e:	2300      	moveq	r3, #0
 8001b30:	8123      	strheq	r3, [r4, #8]
 8001b32:	2301      	movs	r3, #1
 8001b34:	706b      	strb	r3, [r5, #1]
 8001b36:	4628      	mov	r0, r5
 8001b38:	f7ff fd30 	bl	800159c <rt_rmv_dly>
 8001b3c:	4629      	mov	r1, r5
 8001b3e:	4811      	ldr	r0, [pc, #68]	; (8001b84 <rt_mbx_psh+0xe0>)
 8001b40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001b44:	f7ff bc6c 	b.w	8001420 <rt_put_prio>
 8001b48:	8980      	ldrh	r0, [r0, #12]
 8001b4a:	89e1      	ldrh	r1, [r4, #14]
 8001b4c:	4288      	cmp	r0, r1
 8001b4e:	d213      	bcs.n	8001b78 <rt_mbx_psh+0xd4>
 8001b50:	8923      	ldrh	r3, [r4, #8]
 8001b52:	1d1a      	adds	r2, r3, #4
 8001b54:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8001b58:	f3ef 8210 	mrs	r2, PRIMASK
 8001b5c:	f3ef 8510 	mrs	r5, PRIMASK
 8001b60:	b672      	cpsid	i
 8001b62:	3001      	adds	r0, #1
 8001b64:	81a0      	strh	r0, [r4, #12]
 8001b66:	b902      	cbnz	r2, 8001b6a <rt_mbx_psh+0xc6>
 8001b68:	b662      	cpsie	i
 8001b6a:	3301      	adds	r3, #1
 8001b6c:	b29b      	uxth	r3, r3
 8001b6e:	4299      	cmp	r1, r3
 8001b70:	bf08      	it	eq
 8001b72:	2300      	moveq	r3, #0
 8001b74:	8123      	strh	r3, [r4, #8]
 8001b76:	bd70      	pop	{r4, r5, r6, pc}
 8001b78:	2003      	movs	r0, #3
 8001b7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001b7e:	f7ff bd6d 	b.w	800165c <os_error>
 8001b82:	bd70      	pop	{r4, r5, r6, pc}
 8001b84:	20001d54 	.word	0x20001d54

08001b88 <rt_evt_psh>:
 8001b88:	b510      	push	{r4, lr}
 8001b8a:	8b03      	ldrh	r3, [r0, #24]
 8001b8c:	7842      	ldrb	r2, [r0, #1]
 8001b8e:	4319      	orrs	r1, r3
 8001b90:	2a06      	cmp	r2, #6
 8001b92:	4604      	mov	r4, r0
 8001b94:	8301      	strh	r1, [r0, #24]
 8001b96:	8b43      	ldrh	r3, [r0, #26]
 8001b98:	d115      	bne.n	8001bc6 <rt_evt_psh+0x3e>
 8001b9a:	ea33 0201 	bics.w	r2, r3, r1
 8001b9e:	d119      	bne.n	8001bd4 <rt_evt_psh+0x4c>
 8001ba0:	ea21 0103 	bic.w	r1, r1, r3
 8001ba4:	8321      	strh	r1, [r4, #24]
 8001ba6:	4620      	mov	r0, r4
 8001ba8:	f7ff fcf8 	bl	800159c <rt_rmv_dly>
 8001bac:	2301      	movs	r3, #1
 8001bae:	4620      	mov	r0, r4
 8001bb0:	7063      	strb	r3, [r4, #1]
 8001bb2:	8b62      	ldrh	r2, [r4, #26]
 8001bb4:	2108      	movs	r1, #8
 8001bb6:	f7ff fdf4 	bl	80017a2 <rt_ret_val2>
 8001bba:	4621      	mov	r1, r4
 8001bbc:	4806      	ldr	r0, [pc, #24]	; (8001bd8 <rt_evt_psh+0x50>)
 8001bbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001bc2:	f7ff bc2d 	b.w	8001420 <rt_put_prio>
 8001bc6:	2a05      	cmp	r2, #5
 8001bc8:	d104      	bne.n	8001bd4 <rt_evt_psh+0x4c>
 8001bca:	ea11 0203 	ands.w	r2, r1, r3
 8001bce:	d001      	beq.n	8001bd4 <rt_evt_psh+0x4c>
 8001bd0:	8342      	strh	r2, [r0, #26]
 8001bd2:	e7e5      	b.n	8001ba0 <rt_evt_psh+0x18>
 8001bd4:	bd10      	pop	{r4, pc}
 8001bd6:	bf00      	nop
 8001bd8:	20001d54 	.word	0x20001d54

08001bdc <rt_init_robin>:
 8001bdc:	4b03      	ldr	r3, [pc, #12]	; (8001bec <rt_init_robin+0x10>)
 8001bde:	2200      	movs	r2, #0
 8001be0:	601a      	str	r2, [r3, #0]
 8001be2:	4a03      	ldr	r2, [pc, #12]	; (8001bf0 <rt_init_robin+0x14>)
 8001be4:	6812      	ldr	r2, [r2, #0]
 8001be6:	80da      	strh	r2, [r3, #6]
 8001be8:	4770      	bx	lr
 8001bea:	bf00      	nop
 8001bec:	20002758 	.word	0x20002758
 8001bf0:	08006280 	.word	0x08006280

08001bf4 <rt_chk_robin>:
 8001bf4:	b508      	push	{r3, lr}
 8001bf6:	4b0e      	ldr	r3, [pc, #56]	; (8001c30 <rt_chk_robin+0x3c>)
 8001bf8:	685a      	ldr	r2, [r3, #4]
 8001bfa:	4b0e      	ldr	r3, [pc, #56]	; (8001c34 <rt_chk_robin+0x40>)
 8001bfc:	6819      	ldr	r1, [r3, #0]
 8001bfe:	4291      	cmp	r1, r2
 8001c00:	490d      	ldr	r1, [pc, #52]	; (8001c38 <rt_chk_robin+0x44>)
 8001c02:	d005      	beq.n	8001c10 <rt_chk_robin+0x1c>
 8001c04:	601a      	str	r2, [r3, #0]
 8001c06:	88da      	ldrh	r2, [r3, #6]
 8001c08:	6808      	ldr	r0, [r1, #0]
 8001c0a:	3a01      	subs	r2, #1
 8001c0c:	4402      	add	r2, r0
 8001c0e:	809a      	strh	r2, [r3, #4]
 8001c10:	8898      	ldrh	r0, [r3, #4]
 8001c12:	880a      	ldrh	r2, [r1, #0]
 8001c14:	4290      	cmp	r0, r2
 8001c16:	d10a      	bne.n	8001c2e <rt_chk_robin+0x3a>
 8001c18:	2200      	movs	r2, #0
 8001c1a:	4805      	ldr	r0, [pc, #20]	; (8001c30 <rt_chk_robin+0x3c>)
 8001c1c:	601a      	str	r2, [r3, #0]
 8001c1e:	f7ff fc17 	bl	8001450 <rt_get_first>
 8001c22:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001c26:	4601      	mov	r1, r0
 8001c28:	4801      	ldr	r0, [pc, #4]	; (8001c30 <rt_chk_robin+0x3c>)
 8001c2a:	f7ff bbf9 	b.w	8001420 <rt_put_prio>
 8001c2e:	bd08      	pop	{r3, pc}
 8001c30:	20001d54 	.word	0x20001d54
 8001c34:	20002758 	.word	0x20002758
 8001c38:	200027b4 	.word	0x200027b4

08001c3c <rt_timer_insert>:
 8001c3c:	4a0b      	ldr	r2, [pc, #44]	; (8001c6c <rt_timer_insert+0x30>)
 8001c3e:	6813      	ldr	r3, [r2, #0]
 8001c40:	b530      	push	{r4, r5, lr}
 8001c42:	2400      	movs	r4, #0
 8001c44:	b943      	cbnz	r3, 8001c58 <rt_timer_insert+0x1c>
 8001c46:	6003      	str	r3, [r0, #0]
 8001c48:	6081      	str	r1, [r0, #8]
 8001c4a:	b113      	cbz	r3, 8001c52 <rt_timer_insert+0x16>
 8001c4c:	689d      	ldr	r5, [r3, #8]
 8001c4e:	1a69      	subs	r1, r5, r1
 8001c50:	6099      	str	r1, [r3, #8]
 8001c52:	b144      	cbz	r4, 8001c66 <rt_timer_insert+0x2a>
 8001c54:	6020      	str	r0, [r4, #0]
 8001c56:	bd30      	pop	{r4, r5, pc}
 8001c58:	689d      	ldr	r5, [r3, #8]
 8001c5a:	42a9      	cmp	r1, r5
 8001c5c:	d3f3      	bcc.n	8001c46 <rt_timer_insert+0xa>
 8001c5e:	461c      	mov	r4, r3
 8001c60:	1b49      	subs	r1, r1, r5
 8001c62:	681b      	ldr	r3, [r3, #0]
 8001c64:	e7ee      	b.n	8001c44 <rt_timer_insert+0x8>
 8001c66:	6010      	str	r0, [r2, #0]
 8001c68:	bd30      	pop	{r4, r5, pc}
 8001c6a:	bf00      	nop
 8001c6c:	20002768 	.word	0x20002768

08001c70 <rt_ms2tick>:
 8001c70:	b1c0      	cbz	r0, 8001ca4 <rt_ms2tick+0x34>
 8001c72:	1c43      	adds	r3, r0, #1
 8001c74:	d011      	beq.n	8001c9a <rt_ms2tick+0x2a>
 8001c76:	4b0c      	ldr	r3, [pc, #48]	; (8001ca8 <rt_ms2tick+0x38>)
 8001c78:	4298      	cmp	r0, r3
 8001c7a:	d811      	bhi.n	8001ca0 <rt_ms2tick+0x30>
 8001c7c:	4b0b      	ldr	r3, [pc, #44]	; (8001cac <rt_ms2tick+0x3c>)
 8001c7e:	681b      	ldr	r3, [r3, #0]
 8001c80:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001c84:	1e5a      	subs	r2, r3, #1
 8001c86:	fb01 2000 	mla	r0, r1, r0, r2
 8001c8a:	fbb0 f3f3 	udiv	r3, r0, r3
 8001c8e:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001c92:	4283      	cmp	r3, r0
 8001c94:	d806      	bhi.n	8001ca4 <rt_ms2tick+0x34>
 8001c96:	b298      	uxth	r0, r3
 8001c98:	4770      	bx	lr
 8001c9a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001c9e:	4770      	bx	lr
 8001ca0:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001ca4:	4770      	bx	lr
 8001ca6:	bf00      	nop
 8001ca8:	003d0900 	.word	0x003d0900
 8001cac:	08006238 	.word	0x08006238

08001cb0 <rt_tid2ptcb>:
 8001cb0:	b138      	cbz	r0, 8001cc2 <rt_tid2ptcb+0x12>
 8001cb2:	0783      	lsls	r3, r0, #30
 8001cb4:	d104      	bne.n	8001cc0 <rt_tid2ptcb+0x10>
 8001cb6:	7803      	ldrb	r3, [r0, #0]
 8001cb8:	2b00      	cmp	r3, #0
 8001cba:	bf18      	it	ne
 8001cbc:	2000      	movne	r0, #0
 8001cbe:	4770      	bx	lr
 8001cc0:	2000      	movs	r0, #0
 8001cc2:	4770      	bx	lr

08001cc4 <svcKernelStart>:
 8001cc4:	b5b0      	push	{r4, r5, r7, lr}
 8001cc6:	4d0e      	ldr	r5, [pc, #56]	; (8001d00 <svcKernelStart+0x3c>)
 8001cc8:	7828      	ldrb	r0, [r5, #0]
 8001cca:	af00      	add	r7, sp, #0
 8001ccc:	b9a8      	cbnz	r0, 8001cfa <svcKernelStart+0x36>
 8001cce:	4c0d      	ldr	r4, [pc, #52]	; (8001d04 <svcKernelStart+0x40>)
 8001cd0:	6823      	ldr	r3, [r4, #0]
 8001cd2:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 8001cd6:	f000 fb51 	bl	800237c <rt_tsk_prio>
 8001cda:	6823      	ldr	r3, [r4, #0]
 8001cdc:	78da      	ldrb	r2, [r3, #3]
 8001cde:	2aff      	cmp	r2, #255	; 0xff
 8001ce0:	d103      	bne.n	8001cea <svcKernelStart+0x26>
 8001ce2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001ce4:	3220      	adds	r2, #32
 8001ce6:	f382 8809 	msr	PSP, r2
 8001cea:	6862      	ldr	r2, [r4, #4]
 8001cec:	b90a      	cbnz	r2, 8001cf2 <svcKernelStart+0x2e>
 8001cee:	e884 000c 	stmia.w	r4, {r2, r3}
 8001cf2:	f000 fcfb 	bl	80026ec <rt_sys_start>
 8001cf6:	2301      	movs	r3, #1
 8001cf8:	702b      	strb	r3, [r5, #0]
 8001cfa:	2000      	movs	r0, #0
 8001cfc:	bdb0      	pop	{r4, r5, r7, pc}
 8001cfe:	bf00      	nop
 8001d00:	20002765 	.word	0x20002765
 8001d04:	2000276c 	.word	0x2000276c

08001d08 <svcKernelRunning>:
 8001d08:	4b01      	ldr	r3, [pc, #4]	; (8001d10 <svcKernelRunning+0x8>)
 8001d0a:	7818      	ldrb	r0, [r3, #0]
 8001d0c:	4770      	bx	lr
 8001d0e:	bf00      	nop
 8001d10:	20002765 	.word	0x20002765

08001d14 <osKernelRunning>:
 8001d14:	b510      	push	{r4, lr}
 8001d16:	f3ef 8410 	mrs	r4, PRIMASK
 8001d1a:	b934      	cbnz	r4, 8001d2a <osKernelRunning+0x16>
 8001d1c:	f3ef 8405 	mrs	r4, IPSR
 8001d20:	b91c      	cbnz	r4, 8001d2a <osKernelRunning+0x16>
 8001d22:	f3ef 8414 	mrs	r4, CONTROL
 8001d26:	07e4      	lsls	r4, r4, #31
 8001d28:	d402      	bmi.n	8001d30 <osKernelRunning+0x1c>
 8001d2a:	4b03      	ldr	r3, [pc, #12]	; (8001d38 <osKernelRunning+0x24>)
 8001d2c:	7818      	ldrb	r0, [r3, #0]
 8001d2e:	bd10      	pop	{r4, pc}
 8001d30:	f8df c008 	ldr.w	r12, [pc, #8]	; 8001d3c <osKernelRunning+0x28>
 8001d34:	df00      	svc	0
 8001d36:	bd10      	pop	{r4, pc}
 8001d38:	20002765 	.word	0x20002765
 8001d3c:	08001d09 	.word	0x08001d09

08001d40 <osKernelStart>:
 8001d40:	b590      	push	{r4, r7, lr}
 8001d42:	b089      	sub	sp, #36	; 0x24
 8001d44:	af00      	add	r7, sp, #0
 8001d46:	f3ef 8310 	mrs	r3, PRIMASK
 8001d4a:	2b00      	cmp	r3, #0
 8001d4c:	d137      	bne.n	8001dbe <osKernelStart+0x7e>
 8001d4e:	f3ef 8305 	mrs	r3, IPSR
 8001d52:	2b00      	cmp	r3, #0
 8001d54:	d133      	bne.n	8001dbe <osKernelStart+0x7e>
 8001d56:	f7ff ffdd 	bl	8001d14 <osKernelRunning>
 8001d5a:	b928      	cbnz	r0, 8001d68 <osKernelStart+0x28>
 8001d5c:	4c19      	ldr	r4, [pc, #100]	; (8001dc4 <osKernelStart+0x84>)
 8001d5e:	6824      	ldr	r4, [r4, #0]
 8001d60:	b114      	cbz	r4, 8001d68 <osKernelStart+0x28>
 8001d62:	6864      	ldr	r4, [r4, #4]
 8001d64:	b104      	cbz	r4, 8001d68 <osKernelStart+0x28>
 8001d66:	47a0      	blx	r4
 8001d68:	f3ef 8414 	mrs	r4, CONTROL
 8001d6c:	f004 0403 	and.w	r4, r4, #3
 8001d70:	2c02      	cmp	r4, #2
 8001d72:	d018      	beq.n	8001da6 <osKernelStart+0x66>
 8001d74:	2c03      	cmp	r4, #3
 8001d76:	d01c      	beq.n	8001db2 <osKernelStart+0x72>
 8001d78:	2c01      	cmp	r4, #1
 8001d7a:	d01e      	beq.n	8001dba <osKernelStart+0x7a>
 8001d7c:	f107 0420 	add.w	r4, r7, #32
 8001d80:	f384 8809 	msr	PSP, r4
 8001d84:	4c10      	ldr	r4, [pc, #64]	; (8001dc8 <osKernelStart+0x88>)
 8001d86:	7824      	ldrb	r4, [r4, #0]
 8001d88:	07e4      	lsls	r4, r4, #31
 8001d8a:	d510      	bpl.n	8001dae <osKernelStart+0x6e>
 8001d8c:	2402      	movs	r4, #2
 8001d8e:	f384 8814 	msr	CONTROL, r4
 8001d92:	f3bf 8f4f 	dsb	sy
 8001d96:	f3bf 8f6f 	isb	sy
 8001d9a:	f8df c030 	ldr.w	r12, [pc, #48]	; 8001dcc <osKernelStart+0x8c>
 8001d9e:	df00      	svc	0
 8001da0:	3724      	adds	r7, #36	; 0x24
 8001da2:	46bd      	mov	sp, r7
 8001da4:	bd90      	pop	{r4, r7, pc}
 8001da6:	4c08      	ldr	r4, [pc, #32]	; (8001dc8 <osKernelStart+0x88>)
 8001da8:	7824      	ldrb	r4, [r4, #0]
 8001daa:	07e4      	lsls	r4, r4, #31
 8001dac:	d4f5      	bmi.n	8001d9a <osKernelStart+0x5a>
 8001dae:	2403      	movs	r4, #3
 8001db0:	e7ed      	b.n	8001d8e <osKernelStart+0x4e>
 8001db2:	4c05      	ldr	r4, [pc, #20]	; (8001dc8 <osKernelStart+0x88>)
 8001db4:	7824      	ldrb	r4, [r4, #0]
 8001db6:	07e4      	lsls	r4, r4, #31
 8001db8:	d5ef      	bpl.n	8001d9a <osKernelStart+0x5a>
 8001dba:	20ff      	movs	r0, #255	; 0xff
 8001dbc:	e7f0      	b.n	8001da0 <osKernelStart+0x60>
 8001dbe:	2082      	movs	r0, #130	; 0x82
 8001dc0:	e7ee      	b.n	8001da0 <osKernelStart+0x60>
 8001dc2:	bf00      	nop
 8001dc4:	20002754 	.word	0x20002754
 8001dc8:	08006266 	.word	0x08006266
 8001dcc:	08001cc5 	.word	0x08001cc5

08001dd0 <svcThreadCreate>:
 8001dd0:	b570      	push	{r4, r5, r6, lr}
 8001dd2:	460b      	mov	r3, r1
 8001dd4:	4616      	mov	r6, r2
 8001dd6:	4602      	mov	r2, r0
 8001dd8:	b910      	cbnz	r0, 8001de0 <svcThreadCreate+0x10>
 8001dda:	2400      	movs	r4, #0
 8001ddc:	4620      	mov	r0, r4
 8001dde:	bd70      	pop	{r4, r5, r6, pc}
 8001de0:	6800      	ldr	r0, [r0, #0]
 8001de2:	2800      	cmp	r0, #0
 8001de4:	d0f9      	beq.n	8001dda <svcThreadCreate+0xa>
 8001de6:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 8001dea:	1ce5      	adds	r5, r4, #3
 8001dec:	b2ad      	uxth	r5, r5
 8001dee:	2d06      	cmp	r5, #6
 8001df0:	d8f3      	bhi.n	8001dda <svcThreadCreate+0xa>
 8001df2:	68d1      	ldr	r1, [r2, #12]
 8001df4:	b1c1      	cbz	r1, 8001e28 <svcThreadCreate+0x58>
 8001df6:	6912      	ldr	r2, [r2, #16]
 8001df8:	3404      	adds	r4, #4
 8001dfa:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 8001dfe:	f000 fafb 	bl	80023f8 <rt_tsk_create>
 8001e02:	2800      	cmp	r0, #0
 8001e04:	d0e9      	beq.n	8001dda <svcThreadCreate+0xa>
 8001e06:	4b0a      	ldr	r3, [pc, #40]	; (8001e30 <svcThreadCreate+0x60>)
 8001e08:	4a0a      	ldr	r2, [pc, #40]	; (8001e34 <svcThreadCreate+0x64>)
 8001e0a:	3801      	subs	r0, #1
 8001e0c:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8001e10:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001e12:	635a      	str	r2, [r3, #52]	; 0x34
 8001e14:	4b08      	ldr	r3, [pc, #32]	; (8001e38 <svcThreadCreate+0x68>)
 8001e16:	681b      	ldr	r3, [r3, #0]
 8001e18:	b143      	cbz	r3, 8001e2c <svcThreadCreate+0x5c>
 8001e1a:	689b      	ldr	r3, [r3, #8]
 8001e1c:	b133      	cbz	r3, 8001e2c <svcThreadCreate+0x5c>
 8001e1e:	4631      	mov	r1, r6
 8001e20:	78e0      	ldrb	r0, [r4, #3]
 8001e22:	4798      	blx	r3
 8001e24:	63e0      	str	r0, [r4, #60]	; 0x3c
 8001e26:	e7d9      	b.n	8001ddc <svcThreadCreate+0xc>
 8001e28:	460a      	mov	r2, r1
 8001e2a:	e7e5      	b.n	8001df8 <svcThreadCreate+0x28>
 8001e2c:	63e6      	str	r6, [r4, #60]	; 0x3c
 8001e2e:	e7d5      	b.n	8001ddc <svcThreadCreate+0xc>
 8001e30:	20002138 	.word	0x20002138
 8001e34:	08001fbd 	.word	0x08001fbd
 8001e38:	20002754 	.word	0x20002754

08001e3c <svcThreadGetId>:
 8001e3c:	b508      	push	{r3, lr}
 8001e3e:	f000 fa95 	bl	800236c <rt_tsk_self>
 8001e42:	b118      	cbz	r0, 8001e4c <svcThreadGetId+0x10>
 8001e44:	3801      	subs	r0, #1
 8001e46:	4b02      	ldr	r3, [pc, #8]	; (8001e50 <svcThreadGetId+0x14>)
 8001e48:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8001e4c:	bd08      	pop	{r3, pc}
 8001e4e:	bf00      	nop
 8001e50:	20002138 	.word	0x20002138

08001e54 <svcThreadTerminate>:
 8001e54:	b510      	push	{r4, lr}
 8001e56:	f7ff ff2b 	bl	8001cb0 <rt_tid2ptcb>
 8001e5a:	4604      	mov	r4, r0
 8001e5c:	b170      	cbz	r0, 8001e7c <svcThreadTerminate+0x28>
 8001e5e:	4b08      	ldr	r3, [pc, #32]	; (8001e80 <svcThreadTerminate+0x2c>)
 8001e60:	681b      	ldr	r3, [r3, #0]
 8001e62:	b11b      	cbz	r3, 8001e6c <svcThreadTerminate+0x18>
 8001e64:	68db      	ldr	r3, [r3, #12]
 8001e66:	b10b      	cbz	r3, 8001e6c <svcThreadTerminate+0x18>
 8001e68:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8001e6a:	4798      	blx	r3
 8001e6c:	78e0      	ldrb	r0, [r4, #3]
 8001e6e:	f000 fb19 	bl	80024a4 <rt_tsk_delete>
 8001e72:	28ff      	cmp	r0, #255	; 0xff
 8001e74:	bf0c      	ite	eq
 8001e76:	2081      	moveq	r0, #129	; 0x81
 8001e78:	2000      	movne	r0, #0
 8001e7a:	bd10      	pop	{r4, pc}
 8001e7c:	2080      	movs	r0, #128	; 0x80
 8001e7e:	bd10      	pop	{r4, pc}
 8001e80:	20002754 	.word	0x20002754

08001e84 <svcDelay>:
 8001e84:	b508      	push	{r3, lr}
 8001e86:	b128      	cbz	r0, 8001e94 <svcDelay+0x10>
 8001e88:	f7ff fef2 	bl	8001c70 <rt_ms2tick>
 8001e8c:	f000 fd1a 	bl	80028c4 <rt_dly_wait>
 8001e90:	2040      	movs	r0, #64	; 0x40
 8001e92:	bd08      	pop	{r3, pc}
 8001e94:	bd08      	pop	{r3, pc}
	...

08001e98 <osDelay>:
 8001e98:	b510      	push	{r4, lr}
 8001e9a:	f3ef 8410 	mrs	r4, PRIMASK
 8001e9e:	b934      	cbnz	r4, 8001eae <osDelay+0x16>
 8001ea0:	f3ef 8405 	mrs	r4, IPSR
 8001ea4:	b91c      	cbnz	r4, 8001eae <osDelay+0x16>
 8001ea6:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001eb4 <osDelay+0x1c>
 8001eaa:	df00      	svc	0
 8001eac:	bd10      	pop	{r4, pc}
 8001eae:	2082      	movs	r0, #130	; 0x82
 8001eb0:	bd10      	pop	{r4, pc}
 8001eb2:	0000      	.short	0x0000
 8001eb4:	08001e85 	.word	0x08001e85

08001eb8 <svcTimerCall>:
 8001eb8:	0783      	lsls	r3, r0, #30
 8001eba:	d105      	bne.n	8001ec8 <svcTimerCall+0x10>
 8001ebc:	b138      	cbz	r0, 8001ece <svcTimerCall+0x16>
 8001ebe:	6943      	ldr	r3, [r0, #20]
 8001ec0:	6901      	ldr	r1, [r0, #16]
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	4618      	mov	r0, r3
 8001ec6:	4770      	bx	lr
 8001ec8:	2300      	movs	r3, #0
 8001eca:	4619      	mov	r1, r3
 8001ecc:	e7fa      	b.n	8001ec4 <svcTimerCall+0xc>
 8001ece:	4603      	mov	r3, r0
 8001ed0:	e7fb      	b.n	8001eca <svcTimerCall+0x12>
	...

08001ed4 <osTimerCall>:
 8001ed4:	b510      	push	{r4, lr}
 8001ed6:	4604      	mov	r4, r0
 8001ed8:	4608      	mov	r0, r1
 8001eda:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001ee8 <osTimerCall+0x14>
 8001ede:	df00      	svc	0
 8001ee0:	e884 0003 	stmia.w	r4, {r0, r1}
 8001ee4:	4620      	mov	r0, r4
 8001ee6:	bd10      	pop	{r4, pc}
 8001ee8:	08001eb9 	.word	0x08001eb9

08001eec <svcMutexCreate>:
 8001eec:	b510      	push	{r4, lr}
 8001eee:	b148      	cbz	r0, 8001f04 <svcMutexCreate+0x18>
 8001ef0:	6804      	ldr	r4, [r0, #0]
 8001ef2:	b124      	cbz	r4, 8001efe <svcMutexCreate+0x12>
 8001ef4:	7823      	ldrb	r3, [r4, #0]
 8001ef6:	b923      	cbnz	r3, 8001f02 <svcMutexCreate+0x16>
 8001ef8:	4620      	mov	r0, r4
 8001efa:	f000 fc3d 	bl	8002778 <rt_mut_init>
 8001efe:	4620      	mov	r0, r4
 8001f00:	bd10      	pop	{r4, pc}
 8001f02:	2000      	movs	r0, #0
 8001f04:	bd10      	pop	{r4, pc}

08001f06 <svcMutexWait>:
 8001f06:	b570      	push	{r4, r5, r6, lr}
 8001f08:	f010 0403 	ands.w	r4, r0, #3
 8001f0c:	4605      	mov	r5, r0
 8001f0e:	460e      	mov	r6, r1
 8001f10:	d111      	bne.n	8001f36 <svcMutexWait+0x30>
 8001f12:	b180      	cbz	r0, 8001f36 <svcMutexWait+0x30>
 8001f14:	7803      	ldrb	r3, [r0, #0]
 8001f16:	2b03      	cmp	r3, #3
 8001f18:	d10d      	bne.n	8001f36 <svcMutexWait+0x30>
 8001f1a:	4608      	mov	r0, r1
 8001f1c:	f7ff fea8 	bl	8001c70 <rt_ms2tick>
 8001f20:	4601      	mov	r1, r0
 8001f22:	4628      	mov	r0, r5
 8001f24:	f000 fca0 	bl	8002868 <rt_mut_wait>
 8001f28:	2801      	cmp	r0, #1
 8001f2a:	d106      	bne.n	8001f3a <svcMutexWait+0x34>
 8001f2c:	2e00      	cmp	r6, #0
 8001f2e:	bf14      	ite	ne
 8001f30:	20c1      	movne	r0, #193	; 0xc1
 8001f32:	2081      	moveq	r0, #129	; 0x81
 8001f34:	bd70      	pop	{r4, r5, r6, pc}
 8001f36:	2080      	movs	r0, #128	; 0x80
 8001f38:	bd70      	pop	{r4, r5, r6, pc}
 8001f3a:	4620      	mov	r0, r4
 8001f3c:	bd70      	pop	{r4, r5, r6, pc}

08001f3e <svcMutexRelease>:
 8001f3e:	0782      	lsls	r2, r0, #30
 8001f40:	b508      	push	{r3, lr}
 8001f42:	d10a      	bne.n	8001f5a <svcMutexRelease+0x1c>
 8001f44:	b148      	cbz	r0, 8001f5a <svcMutexRelease+0x1c>
 8001f46:	7803      	ldrb	r3, [r0, #0]
 8001f48:	2b03      	cmp	r3, #3
 8001f4a:	d106      	bne.n	8001f5a <svcMutexRelease+0x1c>
 8001f4c:	f000 fc1c 	bl	8002788 <rt_mut_release>
 8001f50:	28ff      	cmp	r0, #255	; 0xff
 8001f52:	bf0c      	ite	eq
 8001f54:	2081      	moveq	r0, #129	; 0x81
 8001f56:	2000      	movne	r0, #0
 8001f58:	bd08      	pop	{r3, pc}
 8001f5a:	2080      	movs	r0, #128	; 0x80
 8001f5c:	bd08      	pop	{r3, pc}
	...

08001f60 <osMutexCreate>:
 8001f60:	b570      	push	{r4, r5, r6, lr}
 8001f62:	4605      	mov	r5, r0
 8001f64:	f3ef 8410 	mrs	r4, PRIMASK
 8001f68:	b994      	cbnz	r4, 8001f90 <osMutexCreate+0x30>
 8001f6a:	f3ef 8605 	mrs	r6, IPSR
 8001f6e:	b97e      	cbnz	r6, 8001f90 <osMutexCreate+0x30>
 8001f70:	f3ef 8414 	mrs	r4, CONTROL
 8001f74:	07e4      	lsls	r4, r4, #31
 8001f76:	d406      	bmi.n	8001f86 <osMutexCreate+0x26>
 8001f78:	4c06      	ldr	r4, [pc, #24]	; (8001f94 <osMutexCreate+0x34>)
 8001f7a:	7824      	ldrb	r4, [r4, #0]
 8001f7c:	b91c      	cbnz	r4, 8001f86 <osMutexCreate+0x26>
 8001f7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001f82:	f7ff bfb3 	b.w	8001eec <svcMutexCreate>
 8001f86:	4628      	mov	r0, r5
 8001f88:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001f98 <osMutexCreate+0x38>
 8001f8c:	df00      	svc	0
 8001f8e:	bd70      	pop	{r4, r5, r6, pc}
 8001f90:	2000      	movs	r0, #0
 8001f92:	bd70      	pop	{r4, r5, r6, pc}
 8001f94:	20002765 	.word	0x20002765
 8001f98:	08001eed 	.word	0x08001eed

08001f9c <osMutexWait>:
 8001f9c:	b510      	push	{r4, lr}
 8001f9e:	f3ef 8410 	mrs	r4, PRIMASK
 8001fa2:	b934      	cbnz	r4, 8001fb2 <osMutexWait+0x16>
 8001fa4:	f3ef 8405 	mrs	r4, IPSR
 8001fa8:	b91c      	cbnz	r4, 8001fb2 <osMutexWait+0x16>
 8001faa:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001fb8 <osMutexWait+0x1c>
 8001fae:	df00      	svc	0
 8001fb0:	bd10      	pop	{r4, pc}
 8001fb2:	2082      	movs	r0, #130	; 0x82
 8001fb4:	bd10      	pop	{r4, pc}
 8001fb6:	0000      	.short	0x0000
 8001fb8:	08001f07 	.word	0x08001f07

08001fbc <osThreadExit>:
 8001fbc:	4808      	ldr	r0, [pc, #32]	; (8001fe0 <osThreadExit+0x24>)
 8001fbe:	b508      	push	{r3, lr}
 8001fc0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001fc4:	6800      	ldr	r0, [r0, #0]
 8001fc6:	f7ff ffe9 	bl	8001f9c <osMutexWait>
 8001fca:	f8df c018 	ldr.w	r12, [pc, #24]	; 8001fe4 <osThreadExit+0x28>
 8001fce:	df00      	svc	0
 8001fd0:	4604      	mov	r4, r0
 8001fd2:	f7ff fb51 	bl	8001678 <sysThreadTerminate>
 8001fd6:	4620      	mov	r0, r4
 8001fd8:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001fe8 <osThreadExit+0x2c>
 8001fdc:	df00      	svc	0
 8001fde:	e7fe      	b.n	8001fde <osThreadExit+0x22>
 8001fe0:	20002760 	.word	0x20002760
 8001fe4:	08001e3d 	.word	0x08001e3d
 8001fe8:	08001e55 	.word	0x08001e55

08001fec <osMutexRelease>:
 8001fec:	b510      	push	{r4, lr}
 8001fee:	f3ef 8410 	mrs	r4, PRIMASK
 8001ff2:	b934      	cbnz	r4, 8002002 <osMutexRelease+0x16>
 8001ff4:	f3ef 8405 	mrs	r4, IPSR
 8001ff8:	b91c      	cbnz	r4, 8002002 <osMutexRelease+0x16>
 8001ffa:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002008 <osMutexRelease+0x1c>
 8001ffe:	df00      	svc	0
 8002000:	bd10      	pop	{r4, pc}
 8002002:	2082      	movs	r0, #130	; 0x82
 8002004:	bd10      	pop	{r4, pc}
 8002006:	0000      	.short	0x0000
 8002008:	08001f3f 	.word	0x08001f3f

0800200c <osThreadContextCreate>:
 800200c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002010:	4680      	mov	r8, r0
 8002012:	460f      	mov	r7, r1
 8002014:	4616      	mov	r6, r2
 8002016:	f3ef 8410 	mrs	r4, PRIMASK
 800201a:	bb04      	cbnz	r4, 800205e <osThreadContextCreate+0x52>
 800201c:	f3ef 8305 	mrs	r3, IPSR
 8002020:	b9d3      	cbnz	r3, 8002058 <osThreadContextCreate+0x4c>
 8002022:	f3ef 8314 	mrs	r3, CONTROL
 8002026:	07db      	lsls	r3, r3, #31
 8002028:	d406      	bmi.n	8002038 <osThreadContextCreate+0x2c>
 800202a:	4b0e      	ldr	r3, [pc, #56]	; (8002064 <osThreadContextCreate+0x58>)
 800202c:	781b      	ldrb	r3, [r3, #0]
 800202e:	b91b      	cbnz	r3, 8002038 <osThreadContextCreate+0x2c>
 8002030:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002034:	f7ff becc 	b.w	8001dd0 <svcThreadCreate>
 8002038:	4d0b      	ldr	r5, [pc, #44]	; (8002068 <osThreadContextCreate+0x5c>)
 800203a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800203e:	6828      	ldr	r0, [r5, #0]
 8002040:	f7ff ffac 	bl	8001f9c <osMutexWait>
 8002044:	4640      	mov	r0, r8
 8002046:	4639      	mov	r1, r7
 8002048:	4632      	mov	r2, r6
 800204a:	f8df c020 	ldr.w	r12, [pc, #32]	; 800206c <osThreadContextCreate+0x60>
 800204e:	df00      	svc	0
 8002050:	4604      	mov	r4, r0
 8002052:	6828      	ldr	r0, [r5, #0]
 8002054:	f7ff ffca 	bl	8001fec <osMutexRelease>
 8002058:	4620      	mov	r0, r4
 800205a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800205e:	2400      	movs	r4, #0
 8002060:	e7fa      	b.n	8002058 <osThreadContextCreate+0x4c>
 8002062:	bf00      	nop
 8002064:	20002765 	.word	0x20002765
 8002068:	20002760 	.word	0x20002760
 800206c:	08001dd1 	.word	0x08001dd1

08002070 <osThreadCreate>:
 8002070:	2200      	movs	r2, #0
 8002072:	f7ff bfcb 	b.w	800200c <osThreadContextCreate>

08002076 <svcMessageCreate>:
 8002076:	b510      	push	{r4, lr}
 8002078:	4604      	mov	r4, r0
 800207a:	b160      	cbz	r0, 8002096 <svcMessageCreate+0x20>
 800207c:	6801      	ldr	r1, [r0, #0]
 800207e:	b151      	cbz	r1, 8002096 <svcMessageCreate+0x20>
 8002080:	6840      	ldr	r0, [r0, #4]
 8002082:	b148      	cbz	r0, 8002098 <svcMessageCreate+0x22>
 8002084:	7803      	ldrb	r3, [r0, #0]
 8002086:	b933      	cbnz	r3, 8002096 <svcMessageCreate+0x20>
 8002088:	3104      	adds	r1, #4
 800208a:	0089      	lsls	r1, r1, #2
 800208c:	b289      	uxth	r1, r1
 800208e:	f7ff fc71 	bl	8001974 <rt_mbx_init>
 8002092:	6860      	ldr	r0, [r4, #4]
 8002094:	bd10      	pop	{r4, pc}
 8002096:	2000      	movs	r0, #0
 8002098:	bd10      	pop	{r4, pc}
	...

0800209c <svcKernelInitialize>:
 800209c:	b538      	push	{r3, r4, r5, lr}
 800209e:	4c11      	ldr	r4, [pc, #68]	; (80020e4 <svcKernelInitialize+0x48>)
 80020a0:	7823      	ldrb	r3, [r4, #0]
 80020a2:	b90b      	cbnz	r3, 80020a8 <svcKernelInitialize+0xc>
 80020a4:	f000 faa8 	bl	80025f8 <rt_sys_init>
 80020a8:	4b0f      	ldr	r3, [pc, #60]	; (80020e8 <svcKernelInitialize+0x4c>)
 80020aa:	7825      	ldrb	r5, [r4, #0]
 80020ac:	681b      	ldr	r3, [r3, #0]
 80020ae:	22ff      	movs	r2, #255	; 0xff
 80020b0:	709a      	strb	r2, [r3, #2]
 80020b2:	b98d      	cbnz	r5, 80020d8 <svcKernelInitialize+0x3c>
 80020b4:	4629      	mov	r1, r5
 80020b6:	480d      	ldr	r0, [pc, #52]	; (80020ec <svcKernelInitialize+0x50>)
 80020b8:	f7ff ffdd 	bl	8002076 <svcMessageCreate>
 80020bc:	4b0c      	ldr	r3, [pc, #48]	; (80020f0 <svcKernelInitialize+0x54>)
 80020be:	462a      	mov	r2, r5
 80020c0:	6018      	str	r0, [r3, #0]
 80020c2:	4629      	mov	r1, r5
 80020c4:	480b      	ldr	r0, [pc, #44]	; (80020f4 <svcKernelInitialize+0x58>)
 80020c6:	f7ff fe83 	bl	8001dd0 <svcThreadCreate>
 80020ca:	4b0b      	ldr	r3, [pc, #44]	; (80020f8 <svcKernelInitialize+0x5c>)
 80020cc:	6018      	str	r0, [r3, #0]
 80020ce:	480b      	ldr	r0, [pc, #44]	; (80020fc <svcKernelInitialize+0x60>)
 80020d0:	f7ff ff46 	bl	8001f60 <osMutexCreate>
 80020d4:	4b0a      	ldr	r3, [pc, #40]	; (8002100 <svcKernelInitialize+0x64>)
 80020d6:	6018      	str	r0, [r3, #0]
 80020d8:	2301      	movs	r3, #1
 80020da:	7023      	strb	r3, [r4, #0]
 80020dc:	4b09      	ldr	r3, [pc, #36]	; (8002104 <svcKernelInitialize+0x68>)
 80020de:	2000      	movs	r0, #0
 80020e0:	7018      	strb	r0, [r3, #0]
 80020e2:	bd38      	pop	{r3, r4, r5, pc}
 80020e4:	20002764 	.word	0x20002764
 80020e8:	2000276c 	.word	0x2000276c
 80020ec:	0800626c 	.word	0x0800626c
 80020f0:	20001e14 	.word	0x20001e14
 80020f4:	08006288 	.word	0x08006288
 80020f8:	20001e0c 	.word	0x20001e0c
 80020fc:	080062a0 	.word	0x080062a0
 8002100:	20002760 	.word	0x20002760
 8002104:	20002765 	.word	0x20002765

08002108 <osKernelInitialize>:
 8002108:	b510      	push	{r4, lr}
 800210a:	f3ef 8410 	mrs	r4, PRIMASK
 800210e:	b974      	cbnz	r4, 800212e <osKernelInitialize+0x26>
 8002110:	f3ef 8405 	mrs	r4, IPSR
 8002114:	b95c      	cbnz	r4, 800212e <osKernelInitialize+0x26>
 8002116:	f3ef 8414 	mrs	r4, CONTROL
 800211a:	07e4      	lsls	r4, r4, #31
 800211c:	d403      	bmi.n	8002126 <osKernelInitialize+0x1e>
 800211e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002122:	f7ff bfbb 	b.w	800209c <svcKernelInitialize>
 8002126:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002134 <osKernelInitialize+0x2c>
 800212a:	df00      	svc	0
 800212c:	bd10      	pop	{r4, pc}
 800212e:	2082      	movs	r0, #130	; 0x82
 8002130:	bd10      	pop	{r4, pc}
 8002132:	0000      	.short	0x0000
 8002134:	0800209d 	.word	0x0800209d

08002138 <svcMessageGet>:
 8002138:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800213c:	460c      	mov	r4, r1
 800213e:	4680      	mov	r8, r0
 8002140:	b318      	cbz	r0, 800218a <svcMessageGet+0x52>
 8002142:	7803      	ldrb	r3, [r0, #0]
 8002144:	2b01      	cmp	r3, #1
 8002146:	d125      	bne.n	8002194 <svcMessageGet+0x5c>
 8002148:	4608      	mov	r0, r1
 800214a:	f7ff fd91 	bl	8001c70 <rt_ms2tick>
 800214e:	a902      	add	r1, sp, #8
 8002150:	4602      	mov	r2, r0
 8002152:	4640      	mov	r0, r8
 8002154:	f7ff fc1c 	bl	8001990 <rt_mbx_wait>
 8002158:	2801      	cmp	r0, #1
 800215a:	d111      	bne.n	8002180 <svcMessageGet+0x48>
 800215c:	2000      	movs	r0, #0
 800215e:	2c00      	cmp	r4, #0
 8002160:	4602      	mov	r2, r0
 8002162:	4603      	mov	r3, r0
 8002164:	bf18      	it	ne
 8002166:	2040      	movne	r0, #64	; 0x40
 8002168:	9902      	ldr	r1, [sp, #8]
 800216a:	4604      	mov	r4, r0
 800216c:	460d      	mov	r5, r1
 800216e:	4616      	mov	r6, r2
 8002170:	461f      	mov	r7, r3
 8002172:	4620      	mov	r0, r4
 8002174:	4629      	mov	r1, r5
 8002176:	4632      	mov	r2, r6
 8002178:	463b      	mov	r3, r7
 800217a:	b004      	add	sp, #16
 800217c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002180:	2000      	movs	r0, #0
 8002182:	4602      	mov	r2, r0
 8002184:	4603      	mov	r3, r0
 8002186:	2010      	movs	r0, #16
 8002188:	e7ee      	b.n	8002168 <svcMessageGet+0x30>
 800218a:	2480      	movs	r4, #128	; 0x80
 800218c:	4605      	mov	r5, r0
 800218e:	4606      	mov	r6, r0
 8002190:	4607      	mov	r7, r0
 8002192:	e7ee      	b.n	8002172 <svcMessageGet+0x3a>
 8002194:	2500      	movs	r5, #0
 8002196:	2480      	movs	r4, #128	; 0x80
 8002198:	462e      	mov	r6, r5
 800219a:	462f      	mov	r7, r5
 800219c:	e7e9      	b.n	8002172 <svcMessageGet+0x3a>

0800219e <isrMessagePut>:
 800219e:	b570      	push	{r4, r5, r6, lr}
 80021a0:	460e      	mov	r6, r1
 80021a2:	4614      	mov	r4, r2
 80021a4:	4605      	mov	r5, r0
 80021a6:	b160      	cbz	r0, 80021c2 <isrMessagePut+0x24>
 80021a8:	b95a      	cbnz	r2, 80021c2 <isrMessagePut+0x24>
 80021aa:	7803      	ldrb	r3, [r0, #0]
 80021ac:	2b01      	cmp	r3, #1
 80021ae:	d108      	bne.n	80021c2 <isrMessagePut+0x24>
 80021b0:	f7ff fc44 	bl	8001a3c <rt_mbx_check>
 80021b4:	b138      	cbz	r0, 80021c6 <isrMessagePut+0x28>
 80021b6:	4628      	mov	r0, r5
 80021b8:	4631      	mov	r1, r6
 80021ba:	f7ff fc43 	bl	8001a44 <isr_mbx_send>
 80021be:	4620      	mov	r0, r4
 80021c0:	bd70      	pop	{r4, r5, r6, pc}
 80021c2:	2080      	movs	r0, #128	; 0x80
 80021c4:	bd70      	pop	{r4, r5, r6, pc}
 80021c6:	2081      	movs	r0, #129	; 0x81
 80021c8:	bd70      	pop	{r4, r5, r6, pc}
	...

080021cc <sysTimerTick>:
 80021cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80021ce:	4e11      	ldr	r6, [pc, #68]	; (8002214 <sysTimerTick+0x48>)
 80021d0:	6834      	ldr	r4, [r6, #0]
 80021d2:	b12c      	cbz	r4, 80021e0 <sysTimerTick+0x14>
 80021d4:	68a3      	ldr	r3, [r4, #8]
 80021d6:	4f10      	ldr	r7, [pc, #64]	; (8002218 <sysTimerTick+0x4c>)
 80021d8:	3b01      	subs	r3, #1
 80021da:	60a3      	str	r3, [r4, #8]
 80021dc:	68a2      	ldr	r2, [r4, #8]
 80021de:	b102      	cbz	r2, 80021e2 <sysTimerTick+0x16>
 80021e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80021e2:	6825      	ldr	r5, [r4, #0]
 80021e4:	6838      	ldr	r0, [r7, #0]
 80021e6:	6035      	str	r5, [r6, #0]
 80021e8:	4621      	mov	r1, r4
 80021ea:	f7ff ffd8 	bl	800219e <isrMessagePut>
 80021ee:	b110      	cbz	r0, 80021f6 <sysTimerTick+0x2a>
 80021f0:	2004      	movs	r0, #4
 80021f2:	f7ff fa33 	bl	800165c <os_error>
 80021f6:	7963      	ldrb	r3, [r4, #5]
 80021f8:	2b01      	cmp	r3, #1
 80021fa:	d107      	bne.n	800220c <sysTimerTick+0x40>
 80021fc:	68e1      	ldr	r1, [r4, #12]
 80021fe:	4620      	mov	r0, r4
 8002200:	f7ff fd1c 	bl	8001c3c <rt_timer_insert>
 8002204:	2d00      	cmp	r5, #0
 8002206:	d0eb      	beq.n	80021e0 <sysTimerTick+0x14>
 8002208:	462c      	mov	r4, r5
 800220a:	e7e7      	b.n	80021dc <sysTimerTick+0x10>
 800220c:	2301      	movs	r3, #1
 800220e:	7123      	strb	r3, [r4, #4]
 8002210:	e7f8      	b.n	8002204 <sysTimerTick+0x38>
 8002212:	bf00      	nop
 8002214:	20002768 	.word	0x20002768
 8002218:	20001e14 	.word	0x20001e14

0800221c <isrMessageGet>:
 800221c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800221e:	4604      	mov	r4, r0
 8002220:	4616      	mov	r6, r2
 8002222:	4608      	mov	r0, r1
 8002224:	b101      	cbz	r1, 8002228 <isrMessageGet+0xc>
 8002226:	b122      	cbz	r2, 8002232 <isrMessageGet+0x16>
 8002228:	2380      	movs	r3, #128	; 0x80
 800222a:	6023      	str	r3, [r4, #0]
 800222c:	4620      	mov	r0, r4
 800222e:	b004      	add	sp, #16
 8002230:	bd70      	pop	{r4, r5, r6, pc}
 8002232:	780b      	ldrb	r3, [r1, #0]
 8002234:	2b01      	cmp	r3, #1
 8002236:	d1f7      	bne.n	8002228 <isrMessageGet+0xc>
 8002238:	a902      	add	r1, sp, #8
 800223a:	f7ff fc0a 	bl	8001a52 <isr_mbx_receive>
 800223e:	2804      	cmp	r0, #4
 8002240:	bf08      	it	eq
 8002242:	2310      	moveq	r3, #16
 8002244:	ad01      	add	r5, sp, #4
 8002246:	bf14      	ite	ne
 8002248:	9601      	strne	r6, [sp, #4]
 800224a:	9301      	streq	r3, [sp, #4]
 800224c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002250:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002254:	e7ea      	b.n	800222c <isrMessageGet+0x10>
	...

08002258 <osMessageGet>:
 8002258:	b538      	push	{r3, r4, r5, lr}
 800225a:	4604      	mov	r4, r0
 800225c:	4615      	mov	r5, r2
 800225e:	f3ef 8010 	mrs	r0, PRIMASK
 8002262:	b910      	cbnz	r0, 800226a <osMessageGet+0x12>
 8002264:	f3ef 8005 	mrs	r0, IPSR
 8002268:	b128      	cbz	r0, 8002276 <osMessageGet+0x1e>
 800226a:	462a      	mov	r2, r5
 800226c:	4620      	mov	r0, r4
 800226e:	f7ff ffd5 	bl	800221c <isrMessageGet>
 8002272:	4620      	mov	r0, r4
 8002274:	bd38      	pop	{r3, r4, r5, pc}
 8002276:	4608      	mov	r0, r1
 8002278:	4611      	mov	r1, r2
 800227a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002288 <osMessageGet+0x30>
 800227e:	df00      	svc	0
 8002280:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002284:	e7f5      	b.n	8002272 <osMessageGet+0x1a>
 8002286:	0000      	.short	0x0000
 8002288:	08002139 	.word	0x08002139

0800228c <osTimerThread>:
 800228c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800228e:	4c0a      	ldr	r4, [pc, #40]	; (80022b8 <osTimerThread+0x2c>)
 8002290:	6821      	ldr	r1, [r4, #0]
 8002292:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002296:	a803      	add	r0, sp, #12
 8002298:	f7ff ffde 	bl	8002258 <osMessageGet>
 800229c:	9b03      	ldr	r3, [sp, #12]
 800229e:	2b10      	cmp	r3, #16
 80022a0:	d1f6      	bne.n	8002290 <osTimerThread+0x4>
 80022a2:	9904      	ldr	r1, [sp, #16]
 80022a4:	a801      	add	r0, sp, #4
 80022a6:	f7ff fe15 	bl	8001ed4 <osTimerCall>
 80022aa:	9b01      	ldr	r3, [sp, #4]
 80022ac:	2b00      	cmp	r3, #0
 80022ae:	d0ef      	beq.n	8002290 <osTimerThread+0x4>
 80022b0:	9802      	ldr	r0, [sp, #8]
 80022b2:	4798      	blx	r3
 80022b4:	e7ec      	b.n	8002290 <osTimerThread+0x4>
 80022b6:	bf00      	nop
 80022b8:	20001e14 	.word	0x20001e14

080022bc <rt_switch_req>:
 80022bc:	4b05      	ldr	r3, [pc, #20]	; (80022d4 <rt_switch_req+0x18>)
 80022be:	6058      	str	r0, [r3, #4]
 80022c0:	2302      	movs	r3, #2
 80022c2:	7043      	strb	r3, [r0, #1]
 80022c4:	4b04      	ldr	r3, [pc, #16]	; (80022d8 <rt_switch_req+0x1c>)
 80022c6:	681b      	ldr	r3, [r3, #0]
 80022c8:	b11b      	cbz	r3, 80022d2 <rt_switch_req+0x16>
 80022ca:	691b      	ldr	r3, [r3, #16]
 80022cc:	b10b      	cbz	r3, 80022d2 <rt_switch_req+0x16>
 80022ce:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80022d0:	4718      	bx	r3
 80022d2:	4770      	bx	lr
 80022d4:	2000276c 	.word	0x2000276c
 80022d8:	20002754 	.word	0x20002754

080022dc <rt_dispatch.part.0>:
 80022dc:	b508      	push	{r3, lr}
 80022de:	4803      	ldr	r0, [pc, #12]	; (80022ec <rt_dispatch.part.0+0x10>)
 80022e0:	f7ff f8b6 	bl	8001450 <rt_get_first>
 80022e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80022e8:	f7ff bfe8 	b.w	80022bc <rt_switch_req>
 80022ec:	20001d54 	.word	0x20001d54

080022f0 <rt_dispatch>:
 80022f0:	b570      	push	{r4, r5, r6, lr}
 80022f2:	4604      	mov	r4, r0
 80022f4:	b918      	cbnz	r0, 80022fe <rt_dispatch+0xe>
 80022f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80022fa:	f7ff bfef 	b.w	80022dc <rt_dispatch.part.0>
 80022fe:	4e0c      	ldr	r6, [pc, #48]	; (8002330 <rt_dispatch+0x40>)
 8002300:	78a2      	ldrb	r2, [r4, #2]
 8002302:	6830      	ldr	r0, [r6, #0]
 8002304:	7883      	ldrb	r3, [r0, #2]
 8002306:	429a      	cmp	r2, r3
 8002308:	f04f 0501 	mov.w	r5, #1
 800230c:	d908      	bls.n	8002320 <rt_dispatch+0x30>
 800230e:	f7ff f8b1 	bl	8001474 <rt_put_rdy_first>
 8002312:	6833      	ldr	r3, [r6, #0]
 8002314:	705d      	strb	r5, [r3, #1]
 8002316:	4620      	mov	r0, r4
 8002318:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800231c:	f7ff bfce 	b.w	80022bc <rt_switch_req>
 8002320:	7065      	strb	r5, [r4, #1]
 8002322:	4621      	mov	r1, r4
 8002324:	4803      	ldr	r0, [pc, #12]	; (8002334 <rt_dispatch+0x44>)
 8002326:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800232a:	f7ff b879 	b.w	8001420 <rt_put_prio>
 800232e:	bf00      	nop
 8002330:	2000276c 	.word	0x2000276c
 8002334:	20001d54 	.word	0x20001d54

08002338 <rt_block>:
 8002338:	b538      	push	{r3, r4, r5, lr}
 800233a:	460d      	mov	r5, r1
 800233c:	4601      	mov	r1, r0
 800233e:	b180      	cbz	r0, 8002362 <rt_block+0x2a>
 8002340:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002344:	4298      	cmp	r0, r3
 8002346:	4c07      	ldr	r4, [pc, #28]	; (8002364 <rt_block+0x2c>)
 8002348:	d002      	beq.n	8002350 <rt_block+0x18>
 800234a:	6820      	ldr	r0, [r4, #0]
 800234c:	f7ff f89c 	bl	8001488 <rt_put_dly>
 8002350:	6823      	ldr	r3, [r4, #0]
 8002352:	4805      	ldr	r0, [pc, #20]	; (8002368 <rt_block+0x30>)
 8002354:	705d      	strb	r5, [r3, #1]
 8002356:	f7ff f87b 	bl	8001450 <rt_get_first>
 800235a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800235e:	f7ff bfad 	b.w	80022bc <rt_switch_req>
 8002362:	bd38      	pop	{r3, r4, r5, pc}
 8002364:	2000276c 	.word	0x2000276c
 8002368:	20001d54 	.word	0x20001d54

0800236c <rt_tsk_self>:
 800236c:	4b02      	ldr	r3, [pc, #8]	; (8002378 <rt_tsk_self+0xc>)
 800236e:	6818      	ldr	r0, [r3, #0]
 8002370:	b100      	cbz	r0, 8002374 <rt_tsk_self+0x8>
 8002372:	78c0      	ldrb	r0, [r0, #3]
 8002374:	4770      	bx	lr
 8002376:	bf00      	nop
 8002378:	2000276c 	.word	0x2000276c

0800237c <rt_tsk_prio>:
 800237c:	b510      	push	{r4, lr}
 800237e:	b9a8      	cbnz	r0, 80023ac <rt_tsk_prio+0x30>
 8002380:	4b19      	ldr	r3, [pc, #100]	; (80023e8 <rt_tsk_prio+0x6c>)
 8002382:	681b      	ldr	r3, [r3, #0]
 8002384:	7099      	strb	r1, [r3, #2]
 8002386:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 800238a:	4818      	ldr	r0, [pc, #96]	; (80023ec <rt_tsk_prio+0x70>)
 800238c:	6843      	ldr	r3, [r0, #4]
 800238e:	789b      	ldrb	r3, [r3, #2]
 8002390:	428b      	cmp	r3, r1
 8002392:	d801      	bhi.n	8002398 <rt_tsk_prio+0x1c>
 8002394:	2000      	movs	r0, #0
 8002396:	bd10      	pop	{r4, pc}
 8002398:	4c13      	ldr	r4, [pc, #76]	; (80023e8 <rt_tsk_prio+0x6c>)
 800239a:	6821      	ldr	r1, [r4, #0]
 800239c:	f7ff f840 	bl	8001420 <rt_put_prio>
 80023a0:	6823      	ldr	r3, [r4, #0]
 80023a2:	2201      	movs	r2, #1
 80023a4:	705a      	strb	r2, [r3, #1]
 80023a6:	f7ff ff99 	bl	80022dc <rt_dispatch.part.0>
 80023aa:	e7f3      	b.n	8002394 <rt_tsk_prio+0x18>
 80023ac:	4b10      	ldr	r3, [pc, #64]	; (80023f0 <rt_tsk_prio+0x74>)
 80023ae:	881b      	ldrh	r3, [r3, #0]
 80023b0:	4298      	cmp	r0, r3
 80023b2:	d817      	bhi.n	80023e4 <rt_tsk_prio+0x68>
 80023b4:	3801      	subs	r0, #1
 80023b6:	4b0f      	ldr	r3, [pc, #60]	; (80023f4 <rt_tsk_prio+0x78>)
 80023b8:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 80023bc:	b194      	cbz	r4, 80023e4 <rt_tsk_prio+0x68>
 80023be:	4b0a      	ldr	r3, [pc, #40]	; (80023e8 <rt_tsk_prio+0x6c>)
 80023c0:	70a1      	strb	r1, [r4, #2]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 80023c8:	429c      	cmp	r4, r3
 80023ca:	d0de      	beq.n	800238a <rt_tsk_prio+0xe>
 80023cc:	4620      	mov	r0, r4
 80023ce:	f7ff f8cd 	bl	800156c <rt_resort_prio>
 80023d2:	7863      	ldrb	r3, [r4, #1]
 80023d4:	2b01      	cmp	r3, #1
 80023d6:	d1dd      	bne.n	8002394 <rt_tsk_prio+0x18>
 80023d8:	4804      	ldr	r0, [pc, #16]	; (80023ec <rt_tsk_prio+0x70>)
 80023da:	f7ff f839 	bl	8001450 <rt_get_first>
 80023de:	f7ff ff87 	bl	80022f0 <rt_dispatch>
 80023e2:	e7d7      	b.n	8002394 <rt_tsk_prio+0x18>
 80023e4:	20ff      	movs	r0, #255	; 0xff
 80023e6:	bd10      	pop	{r4, pc}
 80023e8:	2000276c 	.word	0x2000276c
 80023ec:	20001d54 	.word	0x20001d54
 80023f0:	08006268 	.word	0x08006268
 80023f4:	20002138 	.word	0x20002138

080023f8 <rt_tsk_create>:
 80023f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80023fc:	f011 0fff 	tst.w	r1, #255	; 0xff
 8002400:	460d      	mov	r5, r1
 8002402:	4680      	mov	r8, r0
 8002404:	4823      	ldr	r0, [pc, #140]	; (8002494 <rt_tsk_create+0x9c>)
 8002406:	4616      	mov	r6, r2
 8002408:	469a      	mov	r10, r3
 800240a:	bf08      	it	eq
 800240c:	3501      	addeq	r5, #1
 800240e:	f7ff fa90 	bl	8001932 <rt_alloc_box>
 8002412:	4604      	mov	r4, r0
 8002414:	b920      	cbnz	r0, 8002420 <rt_tsk_create+0x28>
 8002416:	f04f 0900 	mov.w	r9, #0
 800241a:	4648      	mov	r0, r9
 800241c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8002420:	4b1d      	ldr	r3, [pc, #116]	; (8002498 <rt_tsk_create+0xa0>)
 8002422:	6306      	str	r6, [r0, #48]	; 0x30
 8002424:	881b      	ldrh	r3, [r3, #0]
 8002426:	4e1d      	ldr	r6, [pc, #116]	; (800249c <rt_tsk_create+0xa4>)
 8002428:	0a28      	lsrs	r0, r5, #8
 800242a:	62a0      	str	r0, [r4, #40]	; 0x28
 800242c:	2100      	movs	r1, #0
 800242e:	428b      	cmp	r3, r1
 8002430:	f101 0901 	add.w	r9, r1, #1
 8002434:	d0ef      	beq.n	8002416 <rt_tsk_create+0x1e>
 8002436:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 800243a:	460f      	mov	r7, r1
 800243c:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8002440:	4649      	mov	r1, r9
 8002442:	2a00      	cmp	r2, #0
 8002444:	d1f3      	bne.n	800242e <rt_tsk_create+0x36>
 8002446:	b2ed      	uxtb	r5, r5
 8002448:	2301      	movs	r3, #1
 800244a:	f884 9003 	strb.w	r9, [r4, #3]
 800244e:	f8c4 a01c 	str.w	r10, [r4, #28]
 8002452:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 8002456:	7022      	strb	r2, [r4, #0]
 8002458:	7063      	strb	r3, [r4, #1]
 800245a:	70a5      	strb	r5, [r4, #2]
 800245c:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002460:	6062      	str	r2, [r4, #4]
 8002462:	60a2      	str	r2, [r4, #8]
 8002464:	60e2      	str	r2, [r4, #12]
 8002466:	6122      	str	r2, [r4, #16]
 8002468:	6222      	str	r2, [r4, #32]
 800246a:	82a2      	strh	r2, [r4, #20]
 800246c:	82e2      	strh	r2, [r4, #22]
 800246e:	8322      	strh	r2, [r4, #24]
 8002470:	8362      	strh	r2, [r4, #26]
 8002472:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8002476:	b918      	cbnz	r0, 8002480 <rt_tsk_create+0x88>
 8002478:	4809      	ldr	r0, [pc, #36]	; (80024a0 <rt_tsk_create+0xa8>)
 800247a:	f7ff fa5a 	bl	8001932 <rt_alloc_box>
 800247e:	6320      	str	r0, [r4, #48]	; 0x30
 8002480:	4620      	mov	r0, r4
 8002482:	4641      	mov	r1, r8
 8002484:	f7ff f938 	bl	80016f8 <rt_init_stack>
 8002488:	4620      	mov	r0, r4
 800248a:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 800248e:	f7ff ff2f 	bl	80022f0 <rt_dispatch>
 8002492:	e7c2      	b.n	800241a <rt_tsk_create+0x22>
 8002494:	20002174 	.word	0x20002174
 8002498:	08006268 	.word	0x08006268
 800249c:	20002138 	.word	0x20002138
 80024a0:	20002540 	.word	0x20002540

080024a4 <rt_tsk_delete>:
 80024a4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80024a8:	4d4d      	ldr	r5, [pc, #308]	; (80025e0 <rt_tsk_delete+0x13c>)
 80024aa:	b118      	cbz	r0, 80024b4 <rt_tsk_delete+0x10>
 80024ac:	682b      	ldr	r3, [r5, #0]
 80024ae:	78db      	ldrb	r3, [r3, #3]
 80024b0:	4298      	cmp	r0, r3
 80024b2:	d141      	bne.n	8002538 <rt_tsk_delete+0x94>
 80024b4:	682c      	ldr	r4, [r5, #0]
 80024b6:	f8df 813c 	ldr.w	r8, [pc, #316]	; 80025f4 <rt_tsk_delete+0x150>
 80024ba:	2300      	movs	r3, #0
 80024bc:	7063      	strb	r3, [r4, #1]
 80024be:	f002 fd48 	bl	8004f52 <rt_get_PSP>
 80024c2:	62e0      	str	r0, [r4, #44]	; 0x2c
 80024c4:	f7ff f9fe 	bl	80018c4 <rt_stk_check>
 80024c8:	682b      	ldr	r3, [r5, #0]
 80024ca:	6a1c      	ldr	r4, [r3, #32]
 80024cc:	2701      	movs	r7, #1
 80024ce:	b9a4      	cbnz	r4, 80024fa <rt_tsk_delete+0x56>
 80024d0:	682a      	ldr	r2, [r5, #0]
 80024d2:	4944      	ldr	r1, [pc, #272]	; (80025e4 <rt_tsk_delete+0x140>)
 80024d4:	78d3      	ldrb	r3, [r2, #3]
 80024d6:	4844      	ldr	r0, [pc, #272]	; (80025e8 <rt_tsk_delete+0x144>)
 80024d8:	3b01      	subs	r3, #1
 80024da:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 80024de:	6b11      	ldr	r1, [r2, #48]	; 0x30
 80024e0:	f7ff fa34 	bl	800194c <rt_free_box>
 80024e4:	6829      	ldr	r1, [r5, #0]
 80024e6:	4841      	ldr	r0, [pc, #260]	; (80025ec <rt_tsk_delete+0x148>)
 80024e8:	630c      	str	r4, [r1, #48]	; 0x30
 80024ea:	f7ff fa2f 	bl	800194c <rt_free_box>
 80024ee:	602c      	str	r4, [r5, #0]
 80024f0:	f7ff fef4 	bl	80022dc <rt_dispatch.part.0>
 80024f4:	4620      	mov	r0, r4
 80024f6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80024fa:	6863      	ldr	r3, [r4, #4]
 80024fc:	b1b3      	cbz	r3, 800252c <rt_tsk_delete+0x88>
 80024fe:	4620      	mov	r0, r4
 8002500:	f7fe ffa6 	bl	8001450 <rt_get_first>
 8002504:	2100      	movs	r1, #0
 8002506:	4606      	mov	r6, r0
 8002508:	f7ff f942 	bl	8001790 <rt_ret_val>
 800250c:	4630      	mov	r0, r6
 800250e:	f7ff f845 	bl	800159c <rt_rmv_dly>
 8002512:	7077      	strb	r7, [r6, #1]
 8002514:	4631      	mov	r1, r6
 8002516:	4640      	mov	r0, r8
 8002518:	f7fe ff82 	bl	8001420 <rt_put_prio>
 800251c:	68e3      	ldr	r3, [r4, #12]
 800251e:	6a32      	ldr	r2, [r6, #32]
 8002520:	8067      	strh	r7, [r4, #2]
 8002522:	60a6      	str	r6, [r4, #8]
 8002524:	60e2      	str	r2, [r4, #12]
 8002526:	6234      	str	r4, [r6, #32]
 8002528:	461c      	mov	r4, r3
 800252a:	e7d0      	b.n	80024ce <rt_tsk_delete+0x2a>
 800252c:	68e2      	ldr	r2, [r4, #12]
 800252e:	8063      	strh	r3, [r4, #2]
 8002530:	60a3      	str	r3, [r4, #8]
 8002532:	60e3      	str	r3, [r4, #12]
 8002534:	4614      	mov	r4, r2
 8002536:	e7ca      	b.n	80024ce <rt_tsk_delete+0x2a>
 8002538:	4b2d      	ldr	r3, [pc, #180]	; (80025f0 <rt_tsk_delete+0x14c>)
 800253a:	881b      	ldrh	r3, [r3, #0]
 800253c:	4298      	cmp	r0, r3
 800253e:	d84d      	bhi.n	80025dc <rt_tsk_delete+0x138>
 8002540:	4b28      	ldr	r3, [pc, #160]	; (80025e4 <rt_tsk_delete+0x140>)
 8002542:	1e47      	subs	r7, r0, #1
 8002544:	4699      	mov	r9, r3
 8002546:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 800254a:	2e00      	cmp	r6, #0
 800254c:	d046      	beq.n	80025dc <rt_tsk_delete+0x138>
 800254e:	4630      	mov	r0, r6
 8002550:	f7fe fff6 	bl	8001540 <rt_rmv_list>
 8002554:	4630      	mov	r0, r6
 8002556:	f7ff f821 	bl	800159c <rt_rmv_dly>
 800255a:	f8df b098 	ldr.w	r11, [pc, #152]	; 80025f4 <rt_tsk_delete+0x150>
 800255e:	6a34      	ldr	r4, [r6, #32]
 8002560:	f04f 0a01 	mov.w	r10, #1
 8002564:	b9b4      	cbnz	r4, 8002594 <rt_tsk_delete+0xf0>
 8002566:	6b31      	ldr	r1, [r6, #48]	; 0x30
 8002568:	481f      	ldr	r0, [pc, #124]	; (80025e8 <rt_tsk_delete+0x144>)
 800256a:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 800256e:	f7ff f9ed 	bl	800194c <rt_free_box>
 8002572:	4631      	mov	r1, r6
 8002574:	6334      	str	r4, [r6, #48]	; 0x30
 8002576:	481d      	ldr	r0, [pc, #116]	; (80025ec <rt_tsk_delete+0x148>)
 8002578:	f7ff f9e8 	bl	800194c <rt_free_box>
 800257c:	481d      	ldr	r0, [pc, #116]	; (80025f4 <rt_tsk_delete+0x150>)
 800257e:	6829      	ldr	r1, [r5, #0]
 8002580:	6843      	ldr	r3, [r0, #4]
 8002582:	789a      	ldrb	r2, [r3, #2]
 8002584:	788b      	ldrb	r3, [r1, #2]
 8002586:	429a      	cmp	r2, r3
 8002588:	d9b4      	bls.n	80024f4 <rt_tsk_delete+0x50>
 800258a:	2301      	movs	r3, #1
 800258c:	704b      	strb	r3, [r1, #1]
 800258e:	f7fe ff47 	bl	8001420 <rt_put_prio>
 8002592:	e7ad      	b.n	80024f0 <rt_tsk_delete+0x4c>
 8002594:	6863      	ldr	r3, [r4, #4]
 8002596:	b1db      	cbz	r3, 80025d0 <rt_tsk_delete+0x12c>
 8002598:	4620      	mov	r0, r4
 800259a:	f7fe ff59 	bl	8001450 <rt_get_first>
 800259e:	2100      	movs	r1, #0
 80025a0:	4680      	mov	r8, r0
 80025a2:	f7ff f8f5 	bl	8001790 <rt_ret_val>
 80025a6:	4640      	mov	r0, r8
 80025a8:	f7fe fff8 	bl	800159c <rt_rmv_dly>
 80025ac:	f888 a001 	strb.w	r10, [r8, #1]
 80025b0:	4641      	mov	r1, r8
 80025b2:	4658      	mov	r0, r11
 80025b4:	f7fe ff34 	bl	8001420 <rt_put_prio>
 80025b8:	68e3      	ldr	r3, [r4, #12]
 80025ba:	f8d8 2020 	ldr.w	r2, [r8, #32]
 80025be:	f8a4 a002 	strh.w	r10, [r4, #2]
 80025c2:	f8c4 8008 	str.w	r8, [r4, #8]
 80025c6:	60e2      	str	r2, [r4, #12]
 80025c8:	f8c8 4020 	str.w	r4, [r8, #32]
 80025cc:	461c      	mov	r4, r3
 80025ce:	e7c9      	b.n	8002564 <rt_tsk_delete+0xc0>
 80025d0:	68e2      	ldr	r2, [r4, #12]
 80025d2:	8063      	strh	r3, [r4, #2]
 80025d4:	60a3      	str	r3, [r4, #8]
 80025d6:	60e3      	str	r3, [r4, #12]
 80025d8:	4614      	mov	r4, r2
 80025da:	e7c3      	b.n	8002564 <rt_tsk_delete+0xc0>
 80025dc:	24ff      	movs	r4, #255	; 0xff
 80025de:	e789      	b.n	80024f4 <rt_tsk_delete+0x50>
 80025e0:	2000276c 	.word	0x2000276c
 80025e4:	20002138 	.word	0x20002138
 80025e8:	20002540 	.word	0x20002540
 80025ec:	20002174 	.word	0x20002174
 80025f0:	08006268 	.word	0x08006268
 80025f4:	20001d54 	.word	0x20001d54

080025f8 <rt_sys_init>:
 80025f8:	b538      	push	{r3, r4, r5, lr}
 80025fa:	4b2c      	ldr	r3, [pc, #176]	; (80026ac <rt_sys_init+0xb4>)
 80025fc:	492c      	ldr	r1, [pc, #176]	; (80026b0 <rt_sys_init+0xb8>)
 80025fe:	881a      	ldrh	r2, [r3, #0]
 8002600:	2300      	movs	r3, #0
 8002602:	4618      	mov	r0, r3
 8002604:	4293      	cmp	r3, r2
 8002606:	d34d      	bcc.n	80026a4 <rt_sys_init+0xac>
 8002608:	4b2a      	ldr	r3, [pc, #168]	; (80026b4 <rt_sys_init+0xbc>)
 800260a:	482b      	ldr	r0, [pc, #172]	; (80026b8 <rt_sys_init+0xc0>)
 800260c:	8819      	ldrh	r1, [r3, #0]
 800260e:	4c2b      	ldr	r4, [pc, #172]	; (80026bc <rt_sys_init+0xc4>)
 8002610:	2240      	movs	r2, #64	; 0x40
 8002612:	f7ff f969 	bl	80018e8 <_init_box>
 8002616:	4b2a      	ldr	r3, [pc, #168]	; (80026c0 <rt_sys_init+0xc8>)
 8002618:	482a      	ldr	r0, [pc, #168]	; (80026c4 <rt_sys_init+0xcc>)
 800261a:	881a      	ldrh	r2, [r3, #0]
 800261c:	4b2a      	ldr	r3, [pc, #168]	; (80026c8 <rt_sys_init+0xd0>)
 800261e:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8002622:	6819      	ldr	r1, [r3, #0]
 8002624:	f7ff f960 	bl	80018e8 <_init_box>
 8002628:	4b28      	ldr	r3, [pc, #160]	; (80026cc <rt_sys_init+0xd4>)
 800262a:	8819      	ldrh	r1, [r3, #0]
 800262c:	4b28      	ldr	r3, [pc, #160]	; (80026d0 <rt_sys_init+0xd8>)
 800262e:	2208      	movs	r2, #8
 8002630:	6818      	ldr	r0, [r3, #0]
 8002632:	f7ff f959 	bl	80018e8 <_init_box>
 8002636:	23ff      	movs	r3, #255	; 0xff
 8002638:	2500      	movs	r5, #0
 800263a:	70e3      	strb	r3, [r4, #3]
 800263c:	4821      	ldr	r0, [pc, #132]	; (80026c4 <rt_sys_init+0xcc>)
 800263e:	62a5      	str	r5, [r4, #40]	; 0x28
 8002640:	2301      	movs	r3, #1
 8002642:	7063      	strb	r3, [r4, #1]
 8002644:	7025      	strb	r5, [r4, #0]
 8002646:	70a5      	strb	r5, [r4, #2]
 8002648:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 800264c:	6065      	str	r5, [r4, #4]
 800264e:	60a5      	str	r5, [r4, #8]
 8002650:	60e5      	str	r5, [r4, #12]
 8002652:	6125      	str	r5, [r4, #16]
 8002654:	6225      	str	r5, [r4, #32]
 8002656:	82a5      	strh	r5, [r4, #20]
 8002658:	82e5      	strh	r5, [r4, #22]
 800265a:	8325      	strh	r5, [r4, #24]
 800265c:	8365      	strh	r5, [r4, #26]
 800265e:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8002662:	f7ff f966 	bl	8001932 <rt_alloc_box>
 8002666:	491b      	ldr	r1, [pc, #108]	; (80026d4 <rt_sys_init+0xdc>)
 8002668:	6320      	str	r0, [r4, #48]	; 0x30
 800266a:	4620      	mov	r0, r4
 800266c:	f7ff f844 	bl	80016f8 <rt_init_stack>
 8002670:	4b19      	ldr	r3, [pc, #100]	; (80026d8 <rt_sys_init+0xe0>)
 8002672:	2204      	movs	r2, #4
 8002674:	701a      	strb	r2, [r3, #0]
 8002676:	605d      	str	r5, [r3, #4]
 8002678:	4b18      	ldr	r3, [pc, #96]	; (80026dc <rt_sys_init+0xe4>)
 800267a:	701a      	strb	r2, [r3, #0]
 800267c:	60dd      	str	r5, [r3, #12]
 800267e:	611d      	str	r5, [r3, #16]
 8002680:	829d      	strh	r5, [r3, #20]
 8002682:	4b17      	ldr	r3, [pc, #92]	; (80026e0 <rt_sys_init+0xe8>)
 8002684:	4620      	mov	r0, r4
 8002686:	601c      	str	r4, [r3, #0]
 8002688:	2302      	movs	r3, #2
 800268a:	7063      	strb	r3, [r4, #1]
 800268c:	f7ff fe16 	bl	80022bc <rt_switch_req>
 8002690:	4a14      	ldr	r2, [pc, #80]	; (80026e4 <rt_sys_init+0xec>)
 8002692:	4b15      	ldr	r3, [pc, #84]	; (80026e8 <rt_sys_init+0xf0>)
 8002694:	7812      	ldrb	r2, [r2, #0]
 8002696:	701d      	strb	r5, [r3, #0]
 8002698:	705d      	strb	r5, [r3, #1]
 800269a:	70da      	strb	r2, [r3, #3]
 800269c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80026a0:	f7ff ba9c 	b.w	8001bdc <rt_init_robin>
 80026a4:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 80026a8:	3301      	adds	r3, #1
 80026aa:	e7ab      	b.n	8002604 <rt_sys_init+0xc>
 80026ac:	08006268 	.word	0x08006268
 80026b0:	20002138 	.word	0x20002138
 80026b4:	08006234 	.word	0x08006234
 80026b8:	20002174 	.word	0x20002174
 80026bc:	20002774 	.word	0x20002774
 80026c0:	08006284 	.word	0x08006284
 80026c4:	20002540 	.word	0x20002540
 80026c8:	08006230 	.word	0x08006230
 80026cc:	08006236 	.word	0x08006236
 80026d0:	200008ec 	.word	0x200008ec
 80026d4:	08001659 	.word	0x08001659
 80026d8:	20001d54 	.word	0x20001d54
 80026dc:	20001d6c 	.word	0x20001d6c
 80026e0:	2000276c 	.word	0x2000276c
 80026e4:	08006265 	.word	0x08006265
 80026e8:	20001d88 	.word	0x20001d88

080026ec <rt_sys_start>:
 80026ec:	b508      	push	{r3, lr}
 80026ee:	4b1e      	ldr	r3, [pc, #120]	; (8002768 <rt_sys_start+0x7c>)
 80026f0:	681a      	ldr	r2, [r3, #0]
 80026f2:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 80026f6:	601a      	str	r2, [r3, #0]
 80026f8:	681b      	ldr	r3, [r3, #0]
 80026fa:	021b      	lsls	r3, r3, #8
 80026fc:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002700:	43db      	mvns	r3, r3
 8002702:	fab3 f383 	clz	r3, r3
 8002706:	4a19      	ldr	r2, [pc, #100]	; (800276c <rt_sys_start+0x80>)
 8002708:	4819      	ldr	r0, [pc, #100]	; (8002770 <rt_sys_start+0x84>)
 800270a:	6812      	ldr	r2, [r2, #0]
 800270c:	6801      	ldr	r1, [r0, #0]
 800270e:	b2db      	uxtb	r3, r3
 8002710:	f1c3 0308 	rsb	r3, r3, #8
 8002714:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8002718:	4293      	cmp	r3, r2
 800271a:	bf98      	it	ls
 800271c:	1c53      	addls	r3, r2, #1
 800271e:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 8002722:	fa02 f303 	lsl.w	r3, r2, r3
 8002726:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 800272a:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 800272e:	4313      	orrs	r3, r2
 8002730:	6003      	str	r3, [r0, #0]
 8002732:	f7ff f88f 	bl	8001854 <os_tick_init>
 8002736:	4b0f      	ldr	r3, [pc, #60]	; (8002774 <rt_sys_start+0x88>)
 8002738:	2800      	cmp	r0, #0
 800273a:	6018      	str	r0, [r3, #0]
 800273c:	db12      	blt.n	8002764 <rt_sys_start+0x78>
 800273e:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8002742:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 8002746:	22ff      	movs	r2, #255	; 0xff
 8002748:	7002      	strb	r2, [r0, #0]
 800274a:	681a      	ldr	r2, [r3, #0]
 800274c:	0953      	lsrs	r3, r2, #5
 800274e:	009b      	lsls	r3, r3, #2
 8002750:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8002754:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8002758:	f002 021f 	and.w	r2, r2, #31
 800275c:	2101      	movs	r1, #1
 800275e:	fa01 f202 	lsl.w	r2, r1, r2
 8002762:	601a      	str	r2, [r3, #0]
 8002764:	bd08      	pop	{r3, pc}
 8002766:	bf00      	nop
 8002768:	e000ed20 	.word	0xe000ed20
 800276c:	e000ed0c 	.word	0xe000ed0c
 8002770:	e000ed1c 	.word	0xe000ed1c
 8002774:	20002750 	.word	0x20002750

08002778 <rt_mut_init>:
 8002778:	2303      	movs	r3, #3
 800277a:	7003      	strb	r3, [r0, #0]
 800277c:	2300      	movs	r3, #0
 800277e:	8043      	strh	r3, [r0, #2]
 8002780:	6043      	str	r3, [r0, #4]
 8002782:	6083      	str	r3, [r0, #8]
 8002784:	60c3      	str	r3, [r0, #12]
 8002786:	4770      	bx	lr

08002788 <rt_mut_release>:
 8002788:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800278c:	8843      	ldrh	r3, [r0, #2]
 800278e:	4605      	mov	r5, r0
 8002790:	2b00      	cmp	r3, #0
 8002792:	d063      	beq.n	800285c <rt_mut_release+0xd4>
 8002794:	4f32      	ldr	r7, [pc, #200]	; (8002860 <rt_mut_release+0xd8>)
 8002796:	6881      	ldr	r1, [r0, #8]
 8002798:	683a      	ldr	r2, [r7, #0]
 800279a:	4291      	cmp	r1, r2
 800279c:	d15e      	bne.n	800285c <rt_mut_release+0xd4>
 800279e:	3b01      	subs	r3, #1
 80027a0:	b29b      	uxth	r3, r3
 80027a2:	8043      	strh	r3, [r0, #2]
 80027a4:	b11b      	cbz	r3, 80027ae <rt_mut_release+0x26>
 80027a6:	2400      	movs	r4, #0
 80027a8:	4620      	mov	r0, r4
 80027aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80027ae:	6a0b      	ldr	r3, [r1, #32]
 80027b0:	4298      	cmp	r0, r3
 80027b2:	d129      	bne.n	8002808 <rt_mut_release+0x80>
 80027b4:	68c3      	ldr	r3, [r0, #12]
 80027b6:	620b      	str	r3, [r1, #32]
 80027b8:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 80027bc:	6a0c      	ldr	r4, [r1, #32]
 80027be:	bb5c      	cbnz	r4, 8002818 <rt_mut_release+0x90>
 80027c0:	708b      	strb	r3, [r1, #2]
 80027c2:	686a      	ldr	r2, [r5, #4]
 80027c4:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8002864 <rt_mut_release+0xdc>
 80027c8:	2a00      	cmp	r2, #0
 80027ca:	d03b      	beq.n	8002844 <rt_mut_release+0xbc>
 80027cc:	4628      	mov	r0, r5
 80027ce:	f7fe fe3f 	bl	8001450 <rt_get_first>
 80027d2:	4621      	mov	r1, r4
 80027d4:	4606      	mov	r6, r0
 80027d6:	f7fe ffdb 	bl	8001790 <rt_ret_val>
 80027da:	4630      	mov	r0, r6
 80027dc:	f7fe fede 	bl	800159c <rt_rmv_dly>
 80027e0:	6a33      	ldr	r3, [r6, #32]
 80027e2:	60eb      	str	r3, [r5, #12]
 80027e4:	f04f 0901 	mov.w	r9, #1
 80027e8:	6839      	ldr	r1, [r7, #0]
 80027ea:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80027ee:	f8a5 9002 	strh.w	r9, [r5, #2]
 80027f2:	60ae      	str	r6, [r5, #8]
 80027f4:	6235      	str	r5, [r6, #32]
 80027f6:	788a      	ldrb	r2, [r1, #2]
 80027f8:	789b      	ldrb	r3, [r3, #2]
 80027fa:	429a      	cmp	r2, r3
 80027fc:	d314      	bcc.n	8002828 <rt_mut_release+0xa0>
 80027fe:	4630      	mov	r0, r6
 8002800:	f7ff fd76 	bl	80022f0 <rt_dispatch>
 8002804:	e7d0      	b.n	80027a8 <rt_mut_release+0x20>
 8002806:	4613      	mov	r3, r2
 8002808:	2b00      	cmp	r3, #0
 800280a:	d0d5      	beq.n	80027b8 <rt_mut_release+0x30>
 800280c:	68da      	ldr	r2, [r3, #12]
 800280e:	4295      	cmp	r5, r2
 8002810:	d1f9      	bne.n	8002806 <rt_mut_release+0x7e>
 8002812:	68ea      	ldr	r2, [r5, #12]
 8002814:	60da      	str	r2, [r3, #12]
 8002816:	e7cf      	b.n	80027b8 <rt_mut_release+0x30>
 8002818:	6862      	ldr	r2, [r4, #4]
 800281a:	b11a      	cbz	r2, 8002824 <rt_mut_release+0x9c>
 800281c:	7892      	ldrb	r2, [r2, #2]
 800281e:	4293      	cmp	r3, r2
 8002820:	bf38      	it	cc
 8002822:	4613      	movcc	r3, r2
 8002824:	68e4      	ldr	r4, [r4, #12]
 8002826:	e7ca      	b.n	80027be <rt_mut_release+0x36>
 8002828:	4640      	mov	r0, r8
 800282a:	f7fe fdf9 	bl	8001420 <rt_put_prio>
 800282e:	4631      	mov	r1, r6
 8002830:	4640      	mov	r0, r8
 8002832:	f7fe fdf5 	bl	8001420 <rt_put_prio>
 8002836:	683b      	ldr	r3, [r7, #0]
 8002838:	f883 9001 	strb.w	r9, [r3, #1]
 800283c:	f886 9001 	strb.w	r9, [r6, #1]
 8002840:	4620      	mov	r0, r4
 8002842:	e7dd      	b.n	8002800 <rt_mut_release+0x78>
 8002844:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8002848:	7892      	ldrb	r2, [r2, #2]
 800284a:	429a      	cmp	r2, r3
 800284c:	d9ab      	bls.n	80027a6 <rt_mut_release+0x1e>
 800284e:	4640      	mov	r0, r8
 8002850:	f7fe fde6 	bl	8001420 <rt_put_prio>
 8002854:	683b      	ldr	r3, [r7, #0]
 8002856:	2201      	movs	r2, #1
 8002858:	705a      	strb	r2, [r3, #1]
 800285a:	e7f1      	b.n	8002840 <rt_mut_release+0xb8>
 800285c:	24ff      	movs	r4, #255	; 0xff
 800285e:	e7a3      	b.n	80027a8 <rt_mut_release+0x20>
 8002860:	2000276c 	.word	0x2000276c
 8002864:	20001d54 	.word	0x20001d54

08002868 <rt_mut_wait>:
 8002868:	8843      	ldrh	r3, [r0, #2]
 800286a:	b570      	push	{r4, r5, r6, lr}
 800286c:	4604      	mov	r4, r0
 800286e:	460e      	mov	r6, r1
 8002870:	4d13      	ldr	r5, [pc, #76]	; (80028c0 <rt_mut_wait+0x58>)
 8002872:	b943      	cbnz	r3, 8002886 <rt_mut_wait+0x1e>
 8002874:	682a      	ldr	r2, [r5, #0]
 8002876:	6082      	str	r2, [r0, #8]
 8002878:	6a11      	ldr	r1, [r2, #32]
 800287a:	60c1      	str	r1, [r0, #12]
 800287c:	6210      	str	r0, [r2, #32]
 800287e:	3301      	adds	r3, #1
 8002880:	8063      	strh	r3, [r4, #2]
 8002882:	2000      	movs	r0, #0
 8002884:	bd70      	pop	{r4, r5, r6, pc}
 8002886:	6880      	ldr	r0, [r0, #8]
 8002888:	682a      	ldr	r2, [r5, #0]
 800288a:	4290      	cmp	r0, r2
 800288c:	d0f7      	beq.n	800287e <rt_mut_wait+0x16>
 800288e:	b181      	cbz	r1, 80028b2 <rt_mut_wait+0x4a>
 8002890:	7893      	ldrb	r3, [r2, #2]
 8002892:	7882      	ldrb	r2, [r0, #2]
 8002894:	429a      	cmp	r2, r3
 8002896:	d202      	bcs.n	800289e <rt_mut_wait+0x36>
 8002898:	7083      	strb	r3, [r0, #2]
 800289a:	f7fe fe67 	bl	800156c <rt_resort_prio>
 800289e:	6862      	ldr	r2, [r4, #4]
 80028a0:	b14a      	cbz	r2, 80028b6 <rt_mut_wait+0x4e>
 80028a2:	6829      	ldr	r1, [r5, #0]
 80028a4:	4620      	mov	r0, r4
 80028a6:	f7fe fdbb 	bl	8001420 <rt_put_prio>
 80028aa:	2109      	movs	r1, #9
 80028ac:	4630      	mov	r0, r6
 80028ae:	f7ff fd43 	bl	8002338 <rt_block>
 80028b2:	2001      	movs	r0, #1
 80028b4:	bd70      	pop	{r4, r5, r6, pc}
 80028b6:	682b      	ldr	r3, [r5, #0]
 80028b8:	6063      	str	r3, [r4, #4]
 80028ba:	605a      	str	r2, [r3, #4]
 80028bc:	609c      	str	r4, [r3, #8]
 80028be:	e7f4      	b.n	80028aa <rt_mut_wait+0x42>
 80028c0:	2000276c 	.word	0x2000276c

080028c4 <rt_dly_wait>:
 80028c4:	2103      	movs	r1, #3
 80028c6:	f7ff bd37 	b.w	8002338 <rt_block>
	...

080028cc <rt_sem_psh>:
 80028cc:	6842      	ldr	r2, [r0, #4]
 80028ce:	b510      	push	{r4, lr}
 80028d0:	b17a      	cbz	r2, 80028f2 <rt_sem_psh+0x26>
 80028d2:	f7fe fdbd 	bl	8001450 <rt_get_first>
 80028d6:	4604      	mov	r4, r0
 80028d8:	f7fe fe60 	bl	800159c <rt_rmv_dly>
 80028dc:	2101      	movs	r1, #1
 80028de:	7061      	strb	r1, [r4, #1]
 80028e0:	4620      	mov	r0, r4
 80028e2:	f7fe ff55 	bl	8001790 <rt_ret_val>
 80028e6:	4621      	mov	r1, r4
 80028e8:	4804      	ldr	r0, [pc, #16]	; (80028fc <rt_sem_psh+0x30>)
 80028ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80028ee:	f7fe bd97 	b.w	8001420 <rt_put_prio>
 80028f2:	8842      	ldrh	r2, [r0, #2]
 80028f4:	3201      	adds	r2, #1
 80028f6:	8042      	strh	r2, [r0, #2]
 80028f8:	bd10      	pop	{r4, pc}
 80028fa:	bf00      	nop
 80028fc:	20001d54 	.word	0x20001d54

08002900 <timer_irq_handler>:
 8002900:	b570      	push	{r4, r5, r6, lr}
 8002902:	4c13      	ldr	r4, [pc, #76]	; (8002950 <timer_irq_handler+0x50>)
 8002904:	6823      	ldr	r3, [r4, #0]
 8002906:	691a      	ldr	r2, [r3, #16]
 8002908:	0795      	lsls	r5, r2, #30
 800290a:	d507      	bpl.n	800291c <timer_irq_handler+0x1c>
 800290c:	68da      	ldr	r2, [r3, #12]
 800290e:	0790      	lsls	r0, r2, #30
 8002910:	d504      	bpl.n	800291c <timer_irq_handler+0x1c>
 8002912:	f06f 0202 	mvn.w	r2, #2
 8002916:	611a      	str	r2, [r3, #16]
 8002918:	f7fe fcb4 	bl	8001284 <us_ticker_irq_handler>
 800291c:	6823      	ldr	r3, [r4, #0]
 800291e:	691a      	ldr	r2, [r3, #16]
 8002920:	0751      	lsls	r1, r2, #29
 8002922:	d513      	bpl.n	800294c <timer_irq_handler+0x4c>
 8002924:	68da      	ldr	r2, [r3, #12]
 8002926:	0752      	lsls	r2, r2, #29
 8002928:	d510      	bpl.n	800294c <timer_irq_handler+0x4c>
 800292a:	f06f 0204 	mvn.w	r2, #4
 800292e:	4e09      	ldr	r6, [pc, #36]	; (8002954 <timer_irq_handler+0x54>)
 8002930:	611a      	str	r2, [r3, #16]
 8002932:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8002934:	6833      	ldr	r3, [r6, #0]
 8002936:	1aeb      	subs	r3, r5, r3
 8002938:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800293c:	d306      	bcc.n	800294c <timer_irq_handler+0x4c>
 800293e:	f002 f81f 	bl	8004980 <HAL_IncTick>
 8002942:	6823      	ldr	r3, [r4, #0]
 8002944:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 8002948:	639a      	str	r2, [r3, #56]	; 0x38
 800294a:	6035      	str	r5, [r6, #0]
 800294c:	bd70      	pop	{r4, r5, r6, pc}
 800294e:	bf00      	nop
 8002950:	200027b8 	.word	0x200027b8
 8002954:	20001960 	.word	0x20001960

08002958 <HAL_InitTick>:
 8002958:	b530      	push	{r4, r5, lr}
 800295a:	b089      	sub	sp, #36	; 0x24
 800295c:	a901      	add	r1, sp, #4
 800295e:	a803      	add	r0, sp, #12
 8002960:	f001 ff8a 	bl	8004878 <HAL_RCC_GetClockConfig>
 8002964:	f001 ff58 	bl	8004818 <HAL_RCC_GetPCLK1Freq>
 8002968:	2300      	movs	r3, #0
 800296a:	9302      	str	r3, [sp, #8]
 800296c:	4b24      	ldr	r3, [pc, #144]	; (8002a00 <HAL_InitTick+0xa8>)
 800296e:	9001      	str	r0, [sp, #4]
 8002970:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002972:	4c24      	ldr	r4, [pc, #144]	; (8002a04 <HAL_InitTick+0xac>)
 8002974:	f042 0208 	orr.w	r2, r2, #8
 8002978:	641a      	str	r2, [r3, #64]	; 0x40
 800297a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800297c:	f002 0208 	and.w	r2, r2, #8
 8002980:	9202      	str	r2, [sp, #8]
 8002982:	9a02      	ldr	r2, [sp, #8]
 8002984:	6a1a      	ldr	r2, [r3, #32]
 8002986:	f042 0208 	orr.w	r2, r2, #8
 800298a:	621a      	str	r2, [r3, #32]
 800298c:	6a1a      	ldr	r2, [r3, #32]
 800298e:	f022 0208 	bic.w	r2, r2, #8
 8002992:	621a      	str	r2, [r3, #32]
 8002994:	9a06      	ldr	r2, [sp, #24]
 8002996:	f5a3 330b 	sub.w	r3, r3, #142336	; 0x22c00
 800299a:	6023      	str	r3, [r4, #0]
 800299c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80029a0:	60e3      	str	r3, [r4, #12]
 80029a2:	4b19      	ldr	r3, [pc, #100]	; (8002a08 <HAL_InitTick+0xb0>)
 80029a4:	bb4a      	cbnz	r2, 80029fa <HAL_InitTick+0xa2>
 80029a6:	fbb0 f0f3 	udiv	r0, r0, r3
 80029aa:	3801      	subs	r0, #1
 80029ac:	2500      	movs	r5, #0
 80029ae:	6060      	str	r0, [r4, #4]
 80029b0:	4814      	ldr	r0, [pc, #80]	; (8002a04 <HAL_InitTick+0xac>)
 80029b2:	6125      	str	r5, [r4, #16]
 80029b4:	60a5      	str	r5, [r4, #8]
 80029b6:	6165      	str	r5, [r4, #20]
 80029b8:	f001 fdda 	bl	8004570 <HAL_TIM_OC_Init>
 80029bc:	4913      	ldr	r1, [pc, #76]	; (8002a0c <HAL_InitTick+0xb4>)
 80029be:	2032      	movs	r0, #50	; 0x32
 80029c0:	f000 fe54 	bl	800366c <__NVIC_SetVector>
 80029c4:	4b12      	ldr	r3, [pc, #72]	; (8002a10 <HAL_InitTick+0xb8>)
 80029c6:	480f      	ldr	r0, [pc, #60]	; (8002a04 <HAL_InitTick+0xac>)
 80029c8:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 80029cc:	605a      	str	r2, [r3, #4]
 80029ce:	4629      	mov	r1, r5
 80029d0:	f001 fe0e 	bl	80045f0 <HAL_TIM_OC_Start>
 80029d4:	2104      	movs	r1, #4
 80029d6:	480b      	ldr	r0, [pc, #44]	; (8002a04 <HAL_InitTick+0xac>)
 80029d8:	f001 fe0a 	bl	80045f0 <HAL_TIM_OC_Start>
 80029dc:	6823      	ldr	r3, [r4, #0]
 80029de:	4a0d      	ldr	r2, [pc, #52]	; (8002a14 <HAL_InitTick+0xbc>)
 80029e0:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80029e2:	6011      	str	r1, [r2, #0]
 80029e4:	6812      	ldr	r2, [r2, #0]
 80029e6:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 80029ea:	639a      	str	r2, [r3, #56]	; 0x38
 80029ec:	68da      	ldr	r2, [r3, #12]
 80029ee:	4628      	mov	r0, r5
 80029f0:	f042 0204 	orr.w	r2, r2, #4
 80029f4:	60da      	str	r2, [r3, #12]
 80029f6:	b009      	add	sp, #36	; 0x24
 80029f8:	bd30      	pop	{r4, r5, pc}
 80029fa:	0040      	lsls	r0, r0, #1
 80029fc:	e7d3      	b.n	80029a6 <HAL_InitTick+0x4e>
 80029fe:	bf00      	nop
 8002a00:	40023800 	.word	0x40023800
 8002a04:	200027b8 	.word	0x200027b8
 8002a08:	000f4240 	.word	0x000f4240
 8002a0c:	08002901 	.word	0x08002901
 8002a10:	e000e100 	.word	0xe000e100
 8002a14:	20001960 	.word	0x20001960

08002a18 <HAL_SuspendTick>:
 8002a18:	4b03      	ldr	r3, [pc, #12]	; (8002a28 <HAL_SuspendTick+0x10>)
 8002a1a:	4a04      	ldr	r2, [pc, #16]	; (8002a2c <HAL_SuspendTick+0x14>)
 8002a1c:	6013      	str	r3, [r2, #0]
 8002a1e:	68da      	ldr	r2, [r3, #12]
 8002a20:	f022 0204 	bic.w	r2, r2, #4
 8002a24:	60da      	str	r2, [r3, #12]
 8002a26:	4770      	bx	lr
 8002a28:	40000c00 	.word	0x40000c00
 8002a2c:	200027b8 	.word	0x200027b8

08002a30 <HAL_ResumeTick>:
 8002a30:	4b03      	ldr	r3, [pc, #12]	; (8002a40 <HAL_ResumeTick+0x10>)
 8002a32:	4a04      	ldr	r2, [pc, #16]	; (8002a44 <HAL_ResumeTick+0x14>)
 8002a34:	6013      	str	r3, [r2, #0]
 8002a36:	68da      	ldr	r2, [r3, #12]
 8002a38:	f042 0204 	orr.w	r2, r2, #4
 8002a3c:	60da      	str	r2, [r3, #12]
 8002a3e:	4770      	bx	lr
 8002a40:	40000c00 	.word	0x40000c00
 8002a44:	200027b8 	.word	0x200027b8

08002a48 <Set_GPIO_Clock>:
 8002a48:	b500      	push	{lr}
 8002a4a:	2300      	movs	r3, #0
 8002a4c:	b089      	sub	sp, #36	; 0x24
 8002a4e:	2807      	cmp	r0, #7
 8002a50:	d86f      	bhi.n	8002b32 <Set_GPIO_Clock+0xea>
 8002a52:	e8df f000 	tbb	[pc, r0]
 8002a56:	1304      	.short	0x1304
 8002a58:	473a2d20 	.word	0x473a2d20
 8002a5c:	6154      	.short	0x6154
 8002a5e:	9300      	str	r3, [sp, #0]
 8002a60:	4b36      	ldr	r3, [pc, #216]	; (8002b3c <Set_GPIO_Clock+0xf4>)
 8002a62:	4837      	ldr	r0, [pc, #220]	; (8002b40 <Set_GPIO_Clock+0xf8>)
 8002a64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002a66:	f042 0201 	orr.w	r2, r2, #1
 8002a6a:	631a      	str	r2, [r3, #48]	; 0x30
 8002a6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a6e:	f003 0301 	and.w	r3, r3, #1
 8002a72:	9300      	str	r3, [sp, #0]
 8002a74:	9b00      	ldr	r3, [sp, #0]
 8002a76:	b009      	add	sp, #36	; 0x24
 8002a78:	f85d fb04 	ldr.w	pc, [sp], #4
 8002a7c:	9301      	str	r3, [sp, #4]
 8002a7e:	4b2f      	ldr	r3, [pc, #188]	; (8002b3c <Set_GPIO_Clock+0xf4>)
 8002a80:	4830      	ldr	r0, [pc, #192]	; (8002b44 <Set_GPIO_Clock+0xfc>)
 8002a82:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002a84:	f042 0202 	orr.w	r2, r2, #2
 8002a88:	631a      	str	r2, [r3, #48]	; 0x30
 8002a8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a8c:	f003 0302 	and.w	r3, r3, #2
 8002a90:	9301      	str	r3, [sp, #4]
 8002a92:	9b01      	ldr	r3, [sp, #4]
 8002a94:	e7ef      	b.n	8002a76 <Set_GPIO_Clock+0x2e>
 8002a96:	9302      	str	r3, [sp, #8]
 8002a98:	4b28      	ldr	r3, [pc, #160]	; (8002b3c <Set_GPIO_Clock+0xf4>)
 8002a9a:	482b      	ldr	r0, [pc, #172]	; (8002b48 <Set_GPIO_Clock+0x100>)
 8002a9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002a9e:	f042 0204 	orr.w	r2, r2, #4
 8002aa2:	631a      	str	r2, [r3, #48]	; 0x30
 8002aa4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002aa6:	f003 0304 	and.w	r3, r3, #4
 8002aaa:	9302      	str	r3, [sp, #8]
 8002aac:	9b02      	ldr	r3, [sp, #8]
 8002aae:	e7e2      	b.n	8002a76 <Set_GPIO_Clock+0x2e>
 8002ab0:	9303      	str	r3, [sp, #12]
 8002ab2:	4b22      	ldr	r3, [pc, #136]	; (8002b3c <Set_GPIO_Clock+0xf4>)
 8002ab4:	4825      	ldr	r0, [pc, #148]	; (8002b4c <Set_GPIO_Clock+0x104>)
 8002ab6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002ab8:	f042 0208 	orr.w	r2, r2, #8
 8002abc:	631a      	str	r2, [r3, #48]	; 0x30
 8002abe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ac0:	f003 0308 	and.w	r3, r3, #8
 8002ac4:	9303      	str	r3, [sp, #12]
 8002ac6:	9b03      	ldr	r3, [sp, #12]
 8002ac8:	e7d5      	b.n	8002a76 <Set_GPIO_Clock+0x2e>
 8002aca:	9304      	str	r3, [sp, #16]
 8002acc:	4b1b      	ldr	r3, [pc, #108]	; (8002b3c <Set_GPIO_Clock+0xf4>)
 8002ace:	4820      	ldr	r0, [pc, #128]	; (8002b50 <Set_GPIO_Clock+0x108>)
 8002ad0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002ad2:	f042 0210 	orr.w	r2, r2, #16
 8002ad6:	631a      	str	r2, [r3, #48]	; 0x30
 8002ad8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ada:	f003 0310 	and.w	r3, r3, #16
 8002ade:	9304      	str	r3, [sp, #16]
 8002ae0:	9b04      	ldr	r3, [sp, #16]
 8002ae2:	e7c8      	b.n	8002a76 <Set_GPIO_Clock+0x2e>
 8002ae4:	9305      	str	r3, [sp, #20]
 8002ae6:	4b15      	ldr	r3, [pc, #84]	; (8002b3c <Set_GPIO_Clock+0xf4>)
 8002ae8:	481a      	ldr	r0, [pc, #104]	; (8002b54 <Set_GPIO_Clock+0x10c>)
 8002aea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002aec:	f042 0220 	orr.w	r2, r2, #32
 8002af0:	631a      	str	r2, [r3, #48]	; 0x30
 8002af2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002af4:	f003 0320 	and.w	r3, r3, #32
 8002af8:	9305      	str	r3, [sp, #20]
 8002afa:	9b05      	ldr	r3, [sp, #20]
 8002afc:	e7bb      	b.n	8002a76 <Set_GPIO_Clock+0x2e>
 8002afe:	9306      	str	r3, [sp, #24]
 8002b00:	4b0e      	ldr	r3, [pc, #56]	; (8002b3c <Set_GPIO_Clock+0xf4>)
 8002b02:	4815      	ldr	r0, [pc, #84]	; (8002b58 <Set_GPIO_Clock+0x110>)
 8002b04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b06:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002b0a:	631a      	str	r2, [r3, #48]	; 0x30
 8002b0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b0e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002b12:	9306      	str	r3, [sp, #24]
 8002b14:	9b06      	ldr	r3, [sp, #24]
 8002b16:	e7ae      	b.n	8002a76 <Set_GPIO_Clock+0x2e>
 8002b18:	9307      	str	r3, [sp, #28]
 8002b1a:	4b08      	ldr	r3, [pc, #32]	; (8002b3c <Set_GPIO_Clock+0xf4>)
 8002b1c:	480f      	ldr	r0, [pc, #60]	; (8002b5c <Set_GPIO_Clock+0x114>)
 8002b1e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b20:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002b24:	631a      	str	r2, [r3, #48]	; 0x30
 8002b26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b28:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002b2c:	9307      	str	r3, [sp, #28]
 8002b2e:	9b07      	ldr	r3, [sp, #28]
 8002b30:	e7a1      	b.n	8002a76 <Set_GPIO_Clock+0x2e>
 8002b32:	480b      	ldr	r0, [pc, #44]	; (8002b60 <Set_GPIO_Clock+0x118>)
 8002b34:	f7fe fc64 	bl	8001400 <error>
 8002b38:	2000      	movs	r0, #0
 8002b3a:	e79c      	b.n	8002a76 <Set_GPIO_Clock+0x2e>
 8002b3c:	40023800 	.word	0x40023800
 8002b40:	40020000 	.word	0x40020000
 8002b44:	40020400 	.word	0x40020400
 8002b48:	40020800 	.word	0x40020800
 8002b4c:	40020c00 	.word	0x40020c00
 8002b50:	40021000 	.word	0x40021000
 8002b54:	40021400 	.word	0x40021400
 8002b58:	40021800 	.word	0x40021800
 8002b5c:	40021c00 	.word	0x40021c00
 8002b60:	080062a4 	.word	0x080062a4

08002b64 <gpio_set>:
 8002b64:	b510      	push	{r4, lr}
 8002b66:	2100      	movs	r1, #0
 8002b68:	4604      	mov	r4, r0
 8002b6a:	f004 040f 	and.w	r4, r4, #15
 8002b6e:	f000 f957 	bl	8002e20 <pin_function>
 8002b72:	2001      	movs	r0, #1
 8002b74:	40a0      	lsls	r0, r4
 8002b76:	bd10      	pop	{r4, pc}

08002b78 <gpio_init>:
 8002b78:	b570      	push	{r4, r5, r6, lr}
 8002b7a:	4604      	mov	r4, r0
 8002b7c:	1c4b      	adds	r3, r1, #1
 8002b7e:	460e      	mov	r6, r1
 8002b80:	8221      	strh	r1, [r4, #16]
 8002b82:	d016      	beq.n	8002bb2 <gpio_init+0x3a>
 8002b84:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8002b88:	f7ff ff5e 	bl	8002a48 <Set_GPIO_Clock>
 8002b8c:	4605      	mov	r5, r0
 8002b8e:	4630      	mov	r0, r6
 8002b90:	f7ff ffe8 	bl	8002b64 <gpio_set>
 8002b94:	8a23      	ldrh	r3, [r4, #16]
 8002b96:	4a07      	ldr	r2, [pc, #28]	; (8002bb4 <gpio_init+0x3c>)
 8002b98:	6165      	str	r5, [r4, #20]
 8002b9a:	f003 030f 	and.w	r3, r3, #15
 8002b9e:	6020      	str	r0, [r4, #0]
 8002ba0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002ba4:	61a3      	str	r3, [r4, #24]
 8002ba6:	f105 0310 	add.w	r3, r5, #16
 8002baa:	3518      	adds	r5, #24
 8002bac:	6063      	str	r3, [r4, #4]
 8002bae:	60a5      	str	r5, [r4, #8]
 8002bb0:	60e5      	str	r5, [r4, #12]
 8002bb2:	bd70      	pop	{r4, r5, r6, pc}
 8002bb4:	080062c8 	.word	0x080062c8

08002bb8 <gpio_mode>:
 8002bb8:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8002bbc:	f000 b9b4 	b.w	8002f28 <pin_mode>

08002bc0 <gpio_dir>:
 8002bc0:	b510      	push	{r4, lr}
 8002bc2:	6983      	ldr	r3, [r0, #24]
 8002bc4:	6944      	ldr	r4, [r0, #20]
 8002bc6:	b971      	cbnz	r1, 8002be6 <gpio_dir+0x26>
 8002bc8:	6821      	ldr	r1, [r4, #0]
 8002bca:	fa93 f2a3 	rbit	r2, r3
 8002bce:	fab2 f282 	clz	r2, r2
 8002bd2:	2003      	movs	r0, #3
 8002bd4:	0052      	lsls	r2, r2, #1
 8002bd6:	fa00 f202 	lsl.w	r2, r0, r2
 8002bda:	ea21 0202 	bic.w	r2, r1, r2
 8002bde:	fa93 f3a3 	rbit	r3, r3
 8002be2:	6022      	str	r2, [r4, #0]
 8002be4:	bd10      	pop	{r4, pc}
 8002be6:	6822      	ldr	r2, [r4, #0]
 8002be8:	fa93 f1a3 	rbit	r1, r3
 8002bec:	fab1 f181 	clz	r1, r1
 8002bf0:	fa93 f3a3 	rbit	r3, r3
 8002bf4:	2003      	movs	r0, #3
 8002bf6:	0049      	lsls	r1, r1, #1
 8002bf8:	fa00 f101 	lsl.w	r1, r0, r1
 8002bfc:	fab3 f383 	clz	r3, r3
 8002c00:	ea22 0201 	bic.w	r2, r2, r1
 8002c04:	005b      	lsls	r3, r3, #1
 8002c06:	2101      	movs	r1, #1
 8002c08:	fa01 f303 	lsl.w	r3, r1, r3
 8002c0c:	4313      	orrs	r3, r2
 8002c0e:	6023      	str	r3, [r4, #0]
 8002c10:	bd10      	pop	{r4, pc}

08002c12 <hal_sleep>:
 8002c12:	b508      	push	{r3, lr}
 8002c14:	f7ff ff00 	bl	8002a18 <HAL_SuspendTick>
 8002c18:	2101      	movs	r1, #1
 8002c1a:	2000      	movs	r0, #0
 8002c1c:	f001 fcea 	bl	80045f4 <HAL_PWR_EnterSLEEPMode>
 8002c20:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002c24:	f7ff bf04 	b.w	8002a30 <HAL_ResumeTick>

08002c28 <can_irq>:
 8002c28:	6943      	ldr	r3, [r0, #20]
 8002c2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c2e:	4c3a      	ldr	r4, [pc, #232]	; (8002d18 <can_irq+0xf0>)
 8002c30:	460d      	mov	r5, r1
 8002c32:	07d9      	lsls	r1, r3, #31
 8002c34:	6020      	str	r0, [r4, #0]
 8002c36:	d52c      	bpl.n	8002c92 <can_irq+0x6a>
 8002c38:	6881      	ldr	r1, [r0, #8]
 8002c3a:	f8df e0e8 	ldr.w	lr, [pc, #232]	; 8002d24 <can_irq+0xfc>
 8002c3e:	6882      	ldr	r2, [r0, #8]
 8002c40:	4f36      	ldr	r7, [pc, #216]	; (8002d1c <can_irq+0xf4>)
 8002c42:	6883      	ldr	r3, [r0, #8]
 8002c44:	4e36      	ldr	r6, [pc, #216]	; (8002d20 <can_irq+0xf8>)
 8002c46:	ea01 010e 	and.w	r1, r1, lr
 8002c4a:	4571      	cmp	r1, lr
 8002c4c:	ea02 0207 	and.w	r2, r2, r7
 8002c50:	bf04      	itt	eq
 8002c52:	f04f 0e01 	moveq.w	lr, #1
 8002c56:	f8c0 e008 	streq.w	lr, [r0, #8]
 8002c5a:	42ba      	cmp	r2, r7
 8002c5c:	ea03 0306 	and.w	r3, r3, r6
 8002c60:	bf04      	itt	eq
 8002c62:	f44f 7780 	moveq.w	r7, #256	; 0x100
 8002c66:	6087      	streq	r7, [r0, #8]
 8002c68:	42b3      	cmp	r3, r6
 8002c6a:	bf04      	itt	eq
 8002c6c:	f44f 3680 	moveq.w	r6, #65536	; 0x10000
 8002c70:	6086      	streq	r6, [r0, #8]
 8002c72:	482c      	ldr	r0, [pc, #176]	; (8002d24 <can_irq+0xfc>)
 8002c74:	4281      	cmp	r1, r0
 8002c76:	d005      	beq.n	8002c84 <can_irq+0x5c>
 8002c78:	4928      	ldr	r1, [pc, #160]	; (8002d1c <can_irq+0xf4>)
 8002c7a:	428a      	cmp	r2, r1
 8002c7c:	d002      	beq.n	8002c84 <can_irq+0x5c>
 8002c7e:	4a28      	ldr	r2, [pc, #160]	; (8002d20 <can_irq+0xf8>)
 8002c80:	4293      	cmp	r3, r2
 8002c82:	d106      	bne.n	8002c92 <can_irq+0x6a>
 8002c84:	4b28      	ldr	r3, [pc, #160]	; (8002d28 <can_irq+0x100>)
 8002c86:	4a29      	ldr	r2, [pc, #164]	; (8002d2c <can_irq+0x104>)
 8002c88:	681b      	ldr	r3, [r3, #0]
 8002c8a:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8002c8e:	2101      	movs	r1, #1
 8002c90:	4798      	blx	r3
 8002c92:	6823      	ldr	r3, [r4, #0]
 8002c94:	68da      	ldr	r2, [r3, #12]
 8002c96:	695b      	ldr	r3, [r3, #20]
 8002c98:	0792      	lsls	r2, r2, #30
 8002c9a:	d008      	beq.n	8002cae <can_irq+0x86>
 8002c9c:	079f      	lsls	r7, r3, #30
 8002c9e:	d506      	bpl.n	8002cae <can_irq+0x86>
 8002ca0:	4b21      	ldr	r3, [pc, #132]	; (8002d28 <can_irq+0x100>)
 8002ca2:	4a22      	ldr	r2, [pc, #136]	; (8002d2c <can_irq+0x104>)
 8002ca4:	681b      	ldr	r3, [r3, #0]
 8002ca6:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8002caa:	2100      	movs	r1, #0
 8002cac:	4798      	blx	r3
 8002cae:	6823      	ldr	r3, [r4, #0]
 8002cb0:	6999      	ldr	r1, [r3, #24]
 8002cb2:	695a      	ldr	r2, [r3, #20]
 8002cb4:	695b      	ldr	r3, [r3, #20]
 8002cb6:	078e      	lsls	r6, r1, #30
 8002cb8:	d50a      	bpl.n	8002cd0 <can_irq+0xa8>
 8002cba:	0590      	lsls	r0, r2, #22
 8002cbc:	d508      	bpl.n	8002cd0 <can_irq+0xa8>
 8002cbe:	0419      	lsls	r1, r3, #16
 8002cc0:	d506      	bpl.n	8002cd0 <can_irq+0xa8>
 8002cc2:	4b19      	ldr	r3, [pc, #100]	; (8002d28 <can_irq+0x100>)
 8002cc4:	4a19      	ldr	r2, [pc, #100]	; (8002d2c <can_irq+0x104>)
 8002cc6:	681b      	ldr	r3, [r3, #0]
 8002cc8:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8002ccc:	2105      	movs	r1, #5
 8002cce:	4798      	blx	r3
 8002cd0:	6822      	ldr	r2, [r4, #0]
 8002cd2:	6997      	ldr	r7, [r2, #24]
 8002cd4:	6956      	ldr	r6, [r2, #20]
 8002cd6:	6952      	ldr	r2, [r2, #20]
 8002cd8:	f017 0704 	ands.w	r7, r7, #4
 8002cdc:	f406 6680 	and.w	r6, r6, #1024	; 0x400
 8002ce0:	d009      	beq.n	8002cf6 <can_irq+0xce>
 8002ce2:	b146      	cbz	r6, 8002cf6 <can_irq+0xce>
 8002ce4:	0412      	lsls	r2, r2, #16
 8002ce6:	d506      	bpl.n	8002cf6 <can_irq+0xce>
 8002ce8:	4b0f      	ldr	r3, [pc, #60]	; (8002d28 <can_irq+0x100>)
 8002cea:	4a10      	ldr	r2, [pc, #64]	; (8002d2c <can_irq+0x104>)
 8002cec:	681b      	ldr	r3, [r3, #0]
 8002cee:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8002cf2:	2107      	movs	r1, #7
 8002cf4:	4798      	blx	r3
 8002cf6:	6823      	ldr	r3, [r4, #0]
 8002cf8:	695b      	ldr	r3, [r3, #20]
 8002cfa:	b15f      	cbz	r7, 8002d14 <can_irq+0xec>
 8002cfc:	b156      	cbz	r6, 8002d14 <can_irq+0xec>
 8002cfe:	041b      	lsls	r3, r3, #16
 8002d00:	d508      	bpl.n	8002d14 <can_irq+0xec>
 8002d02:	4b09      	ldr	r3, [pc, #36]	; (8002d28 <can_irq+0x100>)
 8002d04:	4a09      	ldr	r2, [pc, #36]	; (8002d2c <can_irq+0x104>)
 8002d06:	681b      	ldr	r3, [r3, #0]
 8002d08:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8002d0c:	2102      	movs	r1, #2
 8002d0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002d12:	4718      	bx	r3
 8002d14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002d18:	20001964 	.word	0x20001964
 8002d1c:	08000300 	.word	0x08000300
 8002d20:	10030000 	.word	0x10030000
 8002d24:	04000003 	.word	0x04000003
 8002d28:	200019ac 	.word	0x200019ac
 8002d2c:	200019a4 	.word	0x200019a4

08002d30 <CAN1_SCE_IRQHandler>:
 8002d30:	2100      	movs	r1, #0
 8002d32:	4801      	ldr	r0, [pc, #4]	; (8002d38 <CAN1_SCE_IRQHandler+0x8>)
 8002d34:	f7ff bf78 	b.w	8002c28 <can_irq>
 8002d38:	40006400 	.word	0x40006400

08002d3c <CAN1_TX_IRQHandler>:
 8002d3c:	f7ff bff8 	b.w	8002d30 <CAN1_SCE_IRQHandler>

08002d40 <CAN1_RX0_IRQHandler>:
 8002d40:	f7ff bff6 	b.w	8002d30 <CAN1_SCE_IRQHandler>

08002d44 <CAN2_SCE_IRQHandler>:
 8002d44:	2101      	movs	r1, #1
 8002d46:	4801      	ldr	r0, [pc, #4]	; (8002d4c <CAN2_SCE_IRQHandler+0x8>)
 8002d48:	f7ff bf6e 	b.w	8002c28 <can_irq>
 8002d4c:	40006800 	.word	0x40006800

08002d50 <CAN2_TX_IRQHandler>:
 8002d50:	f7ff bff8 	b.w	8002d44 <CAN2_SCE_IRQHandler>

08002d54 <CAN2_RX0_IRQHandler>:
 8002d54:	f7ff bff6 	b.w	8002d44 <CAN2_SCE_IRQHandler>

08002d58 <us_ticker_init>:
 8002d58:	4b05      	ldr	r3, [pc, #20]	; (8002d70 <us_ticker_init+0x18>)
 8002d5a:	6818      	ldr	r0, [r3, #0]
 8002d5c:	b930      	cbnz	r0, 8002d6c <us_ticker_init+0x14>
 8002d5e:	2201      	movs	r2, #1
 8002d60:	601a      	str	r2, [r3, #0]
 8002d62:	4b04      	ldr	r3, [pc, #16]	; (8002d74 <us_ticker_init+0x1c>)
 8002d64:	4a04      	ldr	r2, [pc, #16]	; (8002d78 <us_ticker_init+0x20>)
 8002d66:	601a      	str	r2, [r3, #0]
 8002d68:	f7ff bdf6 	b.w	8002958 <HAL_InitTick>
 8002d6c:	4770      	bx	lr
 8002d6e:	bf00      	nop
 8002d70:	200019b0 	.word	0x200019b0
 8002d74:	200027b8 	.word	0x200027b8
 8002d78:	40000c00 	.word	0x40000c00

08002d7c <us_ticker_read>:
 8002d7c:	b508      	push	{r3, lr}
 8002d7e:	4b04      	ldr	r3, [pc, #16]	; (8002d90 <us_ticker_read+0x14>)
 8002d80:	681b      	ldr	r3, [r3, #0]
 8002d82:	b90b      	cbnz	r3, 8002d88 <us_ticker_read+0xc>
 8002d84:	f7ff ffe8 	bl	8002d58 <us_ticker_init>
 8002d88:	4b02      	ldr	r3, [pc, #8]	; (8002d94 <us_ticker_read+0x18>)
 8002d8a:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8002d8c:	bd08      	pop	{r3, pc}
 8002d8e:	bf00      	nop
 8002d90:	200019b0 	.word	0x200019b0
 8002d94:	40000c00 	.word	0x40000c00

08002d98 <us_ticker_set_interrupt>:
 8002d98:	4b04      	ldr	r3, [pc, #16]	; (8002dac <us_ticker_set_interrupt+0x14>)
 8002d9a:	4a05      	ldr	r2, [pc, #20]	; (8002db0 <us_ticker_set_interrupt+0x18>)
 8002d9c:	6013      	str	r3, [r2, #0]
 8002d9e:	6358      	str	r0, [r3, #52]	; 0x34
 8002da0:	68da      	ldr	r2, [r3, #12]
 8002da2:	f042 0202 	orr.w	r2, r2, #2
 8002da6:	60da      	str	r2, [r3, #12]
 8002da8:	4770      	bx	lr
 8002daa:	bf00      	nop
 8002dac:	40000c00 	.word	0x40000c00
 8002db0:	200027b8 	.word	0x200027b8

08002db4 <us_ticker_disable_interrupt>:
 8002db4:	4b03      	ldr	r3, [pc, #12]	; (8002dc4 <us_ticker_disable_interrupt+0x10>)
 8002db6:	4a04      	ldr	r2, [pc, #16]	; (8002dc8 <us_ticker_disable_interrupt+0x14>)
 8002db8:	6013      	str	r3, [r2, #0]
 8002dba:	68da      	ldr	r2, [r3, #12]
 8002dbc:	f022 0202 	bic.w	r2, r2, #2
 8002dc0:	60da      	str	r2, [r3, #12]
 8002dc2:	4770      	bx	lr
 8002dc4:	40000c00 	.word	0x40000c00
 8002dc8:	200027b8 	.word	0x200027b8

08002dcc <us_ticker_clear_interrupt>:
 8002dcc:	4a03      	ldr	r2, [pc, #12]	; (8002ddc <us_ticker_clear_interrupt+0x10>)
 8002dce:	4b04      	ldr	r3, [pc, #16]	; (8002de0 <us_ticker_clear_interrupt+0x14>)
 8002dd0:	6013      	str	r3, [r2, #0]
 8002dd2:	f06f 0202 	mvn.w	r2, #2
 8002dd6:	611a      	str	r2, [r3, #16]
 8002dd8:	4770      	bx	lr
 8002dda:	bf00      	nop
 8002ddc:	200027b8 	.word	0x200027b8
 8002de0:	40000c00 	.word	0x40000c00

08002de4 <LL_GPIO_SetPinPull>:
 8002de4:	b530      	push	{r4, r5, lr}
 8002de6:	68c3      	ldr	r3, [r0, #12]
 8002de8:	fa91 f4a1 	rbit	r4, r1
 8002dec:	fab4 f484 	clz	r4, r4
 8002df0:	fa91 f1a1 	rbit	r1, r1
 8002df4:	2503      	movs	r5, #3
 8002df6:	fab1 f181 	clz	r1, r1
 8002dfa:	0064      	lsls	r4, r4, #1
 8002dfc:	fa05 f404 	lsl.w	r4, r5, r4
 8002e00:	0049      	lsls	r1, r1, #1
 8002e02:	ea23 0304 	bic.w	r3, r3, r4
 8002e06:	fa02 f101 	lsl.w	r1, r2, r1
 8002e0a:	4319      	orrs	r1, r3
 8002e0c:	60c1      	str	r1, [r0, #12]
 8002e0e:	bd30      	pop	{r4, r5, pc}

08002e10 <stm_pin_PullConfig>:
 8002e10:	2a01      	cmp	r2, #1
 8002e12:	d002      	beq.n	8002e1a <stm_pin_PullConfig+0xa>
 8002e14:	2a02      	cmp	r2, #2
 8002e16:	bf18      	it	ne
 8002e18:	2200      	movne	r2, #0
 8002e1a:	f7ff bfe3 	b.w	8002de4 <LL_GPIO_SetPinPull>
	...

08002e20 <pin_function>:
 8002e20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002e24:	4b3f      	ldr	r3, [pc, #252]	; (8002f24 <pin_function+0x104>)
 8002e26:	f000 080f 	and.w	r8, r0, #15
 8002e2a:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8002e2e:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 8002e32:	460e      	mov	r6, r1
 8002e34:	f001 0507 	and.w	r5, r1, #7
 8002e38:	f7ff fe06 	bl	8002a48 <Set_GPIO_Clock>
 8002e3c:	6883      	ldr	r3, [r0, #8]
 8002e3e:	fa94 f1a4 	rbit	r1, r4
 8002e42:	fab1 f181 	clz	r1, r1
 8002e46:	fa94 f2a4 	rbit	r2, r4
 8002e4a:	2703      	movs	r7, #3
 8002e4c:	0049      	lsls	r1, r1, #1
 8002e4e:	fa07 f101 	lsl.w	r1, r7, r1
 8002e52:	fab2 f282 	clz	r2, r2
 8002e56:	ea23 0301 	bic.w	r3, r3, r1
 8002e5a:	0052      	lsls	r2, r2, #1
 8002e5c:	2102      	movs	r1, #2
 8002e5e:	fa01 f202 	lsl.w	r2, r1, r2
 8002e62:	4313      	orrs	r3, r2
 8002e64:	428d      	cmp	r5, r1
 8002e66:	6083      	str	r3, [r0, #8]
 8002e68:	d028      	beq.n	8002ebc <pin_function+0x9c>
 8002e6a:	42bd      	cmp	r5, r7
 8002e6c:	d041      	beq.n	8002ef2 <pin_function+0xd2>
 8002e6e:	2d01      	cmp	r5, #1
 8002e70:	d03f      	beq.n	8002ef2 <pin_function+0xd2>
 8002e72:	2300      	movs	r3, #0
 8002e74:	6802      	ldr	r2, [r0, #0]
 8002e76:	fa94 f7a4 	rbit	r7, r4
 8002e7a:	fab7 f787 	clz	r7, r7
 8002e7e:	fa94 f1a4 	rbit	r1, r4
 8002e82:	f04f 0e03 	mov.w	lr, #3
 8002e86:	fab1 f181 	clz	r1, r1
 8002e8a:	007f      	lsls	r7, r7, #1
 8002e8c:	fa0e f707 	lsl.w	r7, lr, r7
 8002e90:	0049      	lsls	r1, r1, #1
 8002e92:	ea22 0207 	bic.w	r2, r2, r7
 8002e96:	408b      	lsls	r3, r1
 8002e98:	3d01      	subs	r5, #1
 8002e9a:	4313      	orrs	r3, r2
 8002e9c:	2d01      	cmp	r5, #1
 8002e9e:	6003      	str	r3, [r0, #0]
 8002ea0:	d805      	bhi.n	8002eae <pin_function+0x8e>
 8002ea2:	6843      	ldr	r3, [r0, #4]
 8002ea4:	0732      	lsls	r2, r6, #28
 8002ea6:	bf4c      	ite	mi
 8002ea8:	4323      	orrmi	r3, r4
 8002eaa:	43a3      	bicpl	r3, r4
 8002eac:	6043      	str	r3, [r0, #4]
 8002eae:	f3c6 1201 	ubfx	r2, r6, #4, #2
 8002eb2:	4621      	mov	r1, r4
 8002eb4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002eb8:	f7ff bfaa 	b.w	8002e10 <stm_pin_PullConfig>
 8002ebc:	f1b8 0f07 	cmp.w	r8, #7
 8002ec0:	f3c6 2703 	ubfx	r7, r6, #8, #4
 8002ec4:	d917      	bls.n	8002ef6 <pin_function+0xd6>
 8002ec6:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8002ec8:	0a23      	lsrs	r3, r4, #8
 8002eca:	fa93 f1a3 	rbit	r1, r3
 8002ece:	fab1 f181 	clz	r1, r1
 8002ed2:	fa93 f3a3 	rbit	r3, r3
 8002ed6:	f04f 0e0f 	mov.w	lr, #15
 8002eda:	fab3 f383 	clz	r3, r3
 8002ede:	0089      	lsls	r1, r1, #2
 8002ee0:	fa0e f101 	lsl.w	r1, lr, r1
 8002ee4:	009b      	lsls	r3, r3, #2
 8002ee6:	ea22 0201 	bic.w	r2, r2, r1
 8002eea:	fa07 f303 	lsl.w	r3, r7, r3
 8002eee:	4313      	orrs	r3, r2
 8002ef0:	6243      	str	r3, [r0, #36]	; 0x24
 8002ef2:	462b      	mov	r3, r5
 8002ef4:	e7be      	b.n	8002e74 <pin_function+0x54>
 8002ef6:	6a02      	ldr	r2, [r0, #32]
 8002ef8:	fa94 f3a4 	rbit	r3, r4
 8002efc:	fab3 f383 	clz	r3, r3
 8002f00:	fa94 f1a4 	rbit	r1, r4
 8002f04:	f04f 0e0f 	mov.w	lr, #15
 8002f08:	fab1 f181 	clz	r1, r1
 8002f0c:	009b      	lsls	r3, r3, #2
 8002f0e:	fa0e f303 	lsl.w	r3, lr, r3
 8002f12:	0089      	lsls	r1, r1, #2
 8002f14:	ea22 0203 	bic.w	r2, r2, r3
 8002f18:	fa07 f301 	lsl.w	r3, r7, r1
 8002f1c:	4313      	orrs	r3, r2
 8002f1e:	6203      	str	r3, [r0, #32]
 8002f20:	e7e7      	b.n	8002ef2 <pin_function+0xd2>
 8002f22:	bf00      	nop
 8002f24:	080062c8 	.word	0x080062c8

08002f28 <pin_mode>:
 8002f28:	b538      	push	{r3, r4, r5, lr}
 8002f2a:	f000 020f 	and.w	r2, r0, #15
 8002f2e:	4b19      	ldr	r3, [pc, #100]	; (8002f94 <pin_mode+0x6c>)
 8002f30:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8002f34:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8002f38:	460d      	mov	r5, r1
 8002f3a:	f7ff fd85 	bl	8002a48 <Set_GPIO_Clock>
 8002f3e:	fb04 f204 	mul.w	r2, r4, r4
 8002f42:	6801      	ldr	r1, [r0, #0]
 8002f44:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8002f48:	400b      	ands	r3, r1
 8002f4a:	fbb3 f3f2 	udiv	r3, r3, r2
 8002f4e:	3b01      	subs	r3, #1
 8002f50:	2b01      	cmp	r3, #1
 8002f52:	d805      	bhi.n	8002f60 <pin_mode+0x38>
 8002f54:	1eeb      	subs	r3, r5, #3
 8002f56:	2b02      	cmp	r3, #2
 8002f58:	6843      	ldr	r3, [r0, #4]
 8002f5a:	d809      	bhi.n	8002f70 <pin_mode+0x48>
 8002f5c:	4323      	orrs	r3, r4
 8002f5e:	6043      	str	r3, [r0, #4]
 8002f60:	2d03      	cmp	r5, #3
 8002f62:	d108      	bne.n	8002f76 <pin_mode+0x4e>
 8002f64:	2201      	movs	r2, #1
 8002f66:	4621      	mov	r1, r4
 8002f68:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002f6c:	f7ff bf50 	b.w	8002e10 <stm_pin_PullConfig>
 8002f70:	ea23 0304 	bic.w	r3, r3, r4
 8002f74:	6043      	str	r3, [r0, #4]
 8002f76:	2d01      	cmp	r5, #1
 8002f78:	d0f4      	beq.n	8002f64 <pin_mode+0x3c>
 8002f7a:	2d05      	cmp	r5, #5
 8002f7c:	d001      	beq.n	8002f82 <pin_mode+0x5a>
 8002f7e:	2d02      	cmp	r5, #2
 8002f80:	d101      	bne.n	8002f86 <pin_mode+0x5e>
 8002f82:	2202      	movs	r2, #2
 8002f84:	e7ef      	b.n	8002f66 <pin_mode+0x3e>
 8002f86:	4621      	mov	r1, r4
 8002f88:	2200      	movs	r2, #0
 8002f8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002f8e:	f7ff bf29 	b.w	8002de4 <LL_GPIO_SetPinPull>
 8002f92:	bf00      	nop
 8002f94:	080062c8 	.word	0x080062c8

08002f98 <__NVIC_DisableIRQ>:
 8002f98:	0943      	lsrs	r3, r0, #5
 8002f9a:	2201      	movs	r2, #1
 8002f9c:	f000 001f 	and.w	r0, r0, #31
 8002fa0:	fa02 f000 	lsl.w	r0, r2, r0
 8002fa4:	3320      	adds	r3, #32
 8002fa6:	4a04      	ldr	r2, [pc, #16]	; (8002fb8 <__NVIC_DisableIRQ+0x20>)
 8002fa8:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8002fac:	f3bf 8f4f 	dsb	sy
 8002fb0:	f3bf 8f6f 	isb	sy
 8002fb4:	4770      	bx	lr
 8002fb6:	bf00      	nop
 8002fb8:	e000e100 	.word	0xe000e100

08002fbc <init_uart>:
 8002fbc:	6842      	ldr	r2, [r0, #4]
 8002fbe:	4916      	ldr	r1, [pc, #88]	; (8003018 <init_uart+0x5c>)
 8002fc0:	0192      	lsls	r2, r2, #6
 8002fc2:	b510      	push	{r4, lr}
 8002fc4:	188b      	adds	r3, r1, r2
 8002fc6:	6804      	ldr	r4, [r0, #0]
 8002fc8:	508c      	str	r4, [r1, r2]
 8002fca:	6882      	ldr	r2, [r0, #8]
 8002fcc:	605a      	str	r2, [r3, #4]
 8002fce:	68c2      	ldr	r2, [r0, #12]
 8002fd0:	609a      	str	r2, [r3, #8]
 8002fd2:	6902      	ldr	r2, [r0, #16]
 8002fd4:	60da      	str	r2, [r3, #12]
 8002fd6:	6942      	ldr	r2, [r0, #20]
 8002fd8:	611a      	str	r2, [r3, #16]
 8002fda:	6a02      	ldr	r2, [r0, #32]
 8002fdc:	619a      	str	r2, [r3, #24]
 8002fde:	2200      	movs	r2, #0
 8002fe0:	61da      	str	r2, [r3, #28]
 8002fe2:	84da      	strh	r2, [r3, #38]	; 0x26
 8002fe4:	849a      	strh	r2, [r3, #36]	; 0x24
 8002fe6:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002fe8:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002fea:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 8002fee:	3201      	adds	r2, #1
 8002ff0:	d10a      	bne.n	8003008 <init_uart+0x4c>
 8002ff2:	2208      	movs	r2, #8
 8002ff4:	615a      	str	r2, [r3, #20]
 8002ff6:	4618      	mov	r0, r3
 8002ff8:	f001 fa27 	bl	800444a <HAL_UART_Init>
 8002ffc:	b158      	cbz	r0, 8003016 <init_uart+0x5a>
 8002ffe:	4807      	ldr	r0, [pc, #28]	; (800301c <init_uart+0x60>)
 8003000:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003004:	f7fe b9fc 	b.w	8001400 <error>
 8003008:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 800300c:	3201      	adds	r2, #1
 800300e:	bf0c      	ite	eq
 8003010:	2204      	moveq	r2, #4
 8003012:	220c      	movne	r2, #12
 8003014:	e7ee      	b.n	8002ff4 <init_uart+0x38>
 8003016:	bd10      	pop	{r4, pc}
 8003018:	200019dc 	.word	0x200019dc
 800301c:	08006308 	.word	0x08006308

08003020 <uart_irq>:
 8003020:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003022:	4e19      	ldr	r6, [pc, #100]	; (8003088 <uart_irq+0x68>)
 8003024:	4607      	mov	r7, r0
 8003026:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 800302a:	2800      	cmp	r0, #0
 800302c:	d02a      	beq.n	8003084 <uart_irq+0x64>
 800302e:	4c17      	ldr	r4, [pc, #92]	; (800308c <uart_irq+0x6c>)
 8003030:	01bd      	lsls	r5, r7, #6
 8003032:	5963      	ldr	r3, [r4, r5]
 8003034:	681a      	ldr	r2, [r3, #0]
 8003036:	0652      	lsls	r2, r2, #25
 8003038:	d50a      	bpl.n	8003050 <uart_irq+0x30>
 800303a:	68db      	ldr	r3, [r3, #12]
 800303c:	0659      	lsls	r1, r3, #25
 800303e:	d507      	bpl.n	8003050 <uart_irq+0x30>
 8003040:	4b13      	ldr	r3, [pc, #76]	; (8003090 <uart_irq+0x70>)
 8003042:	2101      	movs	r1, #1
 8003044:	681b      	ldr	r3, [r3, #0]
 8003046:	4798      	blx	r3
 8003048:	5963      	ldr	r3, [r4, r5]
 800304a:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800304e:	601a      	str	r2, [r3, #0]
 8003050:	5963      	ldr	r3, [r4, r5]
 8003052:	681a      	ldr	r2, [r3, #0]
 8003054:	0692      	lsls	r2, r2, #26
 8003056:	d50c      	bpl.n	8003072 <uart_irq+0x52>
 8003058:	68db      	ldr	r3, [r3, #12]
 800305a:	0698      	lsls	r0, r3, #26
 800305c:	d509      	bpl.n	8003072 <uart_irq+0x52>
 800305e:	4b0c      	ldr	r3, [pc, #48]	; (8003090 <uart_irq+0x70>)
 8003060:	f856 0027 	ldr.w	r0, [r6, r7, lsl #2]
 8003064:	681b      	ldr	r3, [r3, #0]
 8003066:	2100      	movs	r1, #0
 8003068:	4798      	blx	r3
 800306a:	5963      	ldr	r3, [r4, r5]
 800306c:	f06f 0220 	mvn.w	r2, #32
 8003070:	601a      	str	r2, [r3, #0]
 8003072:	5963      	ldr	r3, [r4, r5]
 8003074:	681a      	ldr	r2, [r3, #0]
 8003076:	0711      	lsls	r1, r2, #28
 8003078:	d504      	bpl.n	8003084 <uart_irq+0x64>
 800307a:	695a      	ldr	r2, [r3, #20]
 800307c:	07d2      	lsls	r2, r2, #31
 800307e:	bf44      	itt	mi
 8003080:	685b      	ldrmi	r3, [r3, #4]
 8003082:	9301      	strmi	r3, [sp, #4]
 8003084:	b003      	add	sp, #12
 8003086:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003088:	200019b8 	.word	0x200019b8
 800308c:	200019dc 	.word	0x200019dc
 8003090:	200019b4 	.word	0x200019b4

08003094 <uart1_irq>:
 8003094:	2000      	movs	r0, #0
 8003096:	f7ff bfc3 	b.w	8003020 <uart_irq>

0800309a <uart2_irq>:
 800309a:	2001      	movs	r0, #1
 800309c:	f7ff bfc0 	b.w	8003020 <uart_irq>

080030a0 <uart3_irq>:
 80030a0:	2002      	movs	r0, #2
 80030a2:	f7ff bfbd 	b.w	8003020 <uart_irq>

080030a6 <uart4_irq>:
 80030a6:	2003      	movs	r0, #3
 80030a8:	f7ff bfba 	b.w	8003020 <uart_irq>

080030ac <uart5_irq>:
 80030ac:	2004      	movs	r0, #4
 80030ae:	f7ff bfb7 	b.w	8003020 <uart_irq>

080030b2 <uart6_irq>:
 80030b2:	2005      	movs	r0, #5
 80030b4:	f7ff bfb4 	b.w	8003020 <uart_irq>

080030b8 <serial_init>:
 80030b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80030ba:	460e      	mov	r6, r1
 80030bc:	b087      	sub	sp, #28
 80030be:	4604      	mov	r4, r0
 80030c0:	496d      	ldr	r1, [pc, #436]	; (8003278 <serial_init+0x1c0>)
 80030c2:	4630      	mov	r0, r6
 80030c4:	4615      	mov	r5, r2
 80030c6:	f7fe f945 	bl	8001354 <pinmap_peripheral>
 80030ca:	496c      	ldr	r1, [pc, #432]	; (800327c <serial_init+0x1c4>)
 80030cc:	4607      	mov	r7, r0
 80030ce:	4628      	mov	r0, r5
 80030d0:	f7fe f940 	bl	8001354 <pinmap_peripheral>
 80030d4:	4601      	mov	r1, r0
 80030d6:	4638      	mov	r0, r7
 80030d8:	f7fe f91e 	bl	8001318 <pinmap_merge>
 80030dc:	4b68      	ldr	r3, [pc, #416]	; (8003280 <serial_init+0x1c8>)
 80030de:	6020      	str	r0, [r4, #0]
 80030e0:	4298      	cmp	r0, r3
 80030e2:	f000 809c 	beq.w	800321e <serial_init+0x166>
 80030e6:	d836      	bhi.n	8003156 <serial_init+0x9e>
 80030e8:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80030ec:	4298      	cmp	r0, r3
 80030ee:	d069      	beq.n	80031c4 <serial_init+0x10c>
 80030f0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80030f4:	4298      	cmp	r0, r3
 80030f6:	d07c      	beq.n	80031f2 <serial_init+0x13a>
 80030f8:	495f      	ldr	r1, [pc, #380]	; (8003278 <serial_init+0x1c0>)
 80030fa:	4630      	mov	r0, r6
 80030fc:	f7fe f8ee 	bl	80012dc <pinmap_pinout>
 8003100:	495e      	ldr	r1, [pc, #376]	; (800327c <serial_init+0x1c4>)
 8003102:	4628      	mov	r0, r5
 8003104:	f7fe f8ea 	bl	80012dc <pinmap_pinout>
 8003108:	1c72      	adds	r2, r6, #1
 800310a:	d003      	beq.n	8003114 <serial_init+0x5c>
 800310c:	2101      	movs	r1, #1
 800310e:	4630      	mov	r0, r6
 8003110:	f7ff ff0a 	bl	8002f28 <pin_mode>
 8003114:	1c6b      	adds	r3, r5, #1
 8003116:	d003      	beq.n	8003120 <serial_init+0x68>
 8003118:	2101      	movs	r1, #1
 800311a:	4628      	mov	r0, r5
 800311c:	f7ff ff04 	bl	8002f28 <pin_mode>
 8003120:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8003124:	60a3      	str	r3, [r4, #8]
 8003126:	2300      	movs	r3, #0
 8003128:	60e3      	str	r3, [r4, #12]
 800312a:	6123      	str	r3, [r4, #16]
 800312c:	6163      	str	r3, [r4, #20]
 800312e:	6223      	str	r3, [r4, #32]
 8003130:	8326      	strh	r6, [r4, #24]
 8003132:	8365      	strh	r5, [r4, #26]
 8003134:	4620      	mov	r0, r4
 8003136:	f7ff ff41 	bl	8002fbc <init_uart>
 800313a:	6822      	ldr	r2, [r4, #0]
 800313c:	4b51      	ldr	r3, [pc, #324]	; (8003284 <serial_init+0x1cc>)
 800313e:	429a      	cmp	r2, r3
 8003140:	d107      	bne.n	8003152 <serial_init+0x9a>
 8003142:	4b51      	ldr	r3, [pc, #324]	; (8003288 <serial_init+0x1d0>)
 8003144:	4851      	ldr	r0, [pc, #324]	; (800328c <serial_init+0x1d4>)
 8003146:	2201      	movs	r2, #1
 8003148:	601a      	str	r2, [r3, #0]
 800314a:	4621      	mov	r1, r4
 800314c:	224c      	movs	r2, #76	; 0x4c
 800314e:	f002 f9ff 	bl	8005550 <memcpy>
 8003152:	b007      	add	sp, #28
 8003154:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003156:	4b4e      	ldr	r3, [pc, #312]	; (8003290 <serial_init+0x1d8>)
 8003158:	4298      	cmp	r0, r3
 800315a:	d01d      	beq.n	8003198 <serial_init+0xe0>
 800315c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003160:	4298      	cmp	r0, r3
 8003162:	d072      	beq.n	800324a <serial_init+0x192>
 8003164:	f5a3 4344 	sub.w	r3, r3, #50176	; 0xc400
 8003168:	4298      	cmp	r0, r3
 800316a:	d1c5      	bne.n	80030f8 <serial_init+0x40>
 800316c:	4b49      	ldr	r3, [pc, #292]	; (8003294 <serial_init+0x1dc>)
 800316e:	6a1a      	ldr	r2, [r3, #32]
 8003170:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8003174:	621a      	str	r2, [r3, #32]
 8003176:	6a1a      	ldr	r2, [r3, #32]
 8003178:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 800317c:	621a      	str	r2, [r3, #32]
 800317e:	2200      	movs	r2, #0
 8003180:	9204      	str	r2, [sp, #16]
 8003182:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003184:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8003188:	641a      	str	r2, [r3, #64]	; 0x40
 800318a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800318c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003190:	9304      	str	r3, [sp, #16]
 8003192:	9b04      	ldr	r3, [sp, #16]
 8003194:	2304      	movs	r3, #4
 8003196:	e02a      	b.n	80031ee <serial_init+0x136>
 8003198:	4b3e      	ldr	r3, [pc, #248]	; (8003294 <serial_init+0x1dc>)
 800319a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800319c:	f042 0210 	orr.w	r2, r2, #16
 80031a0:	625a      	str	r2, [r3, #36]	; 0x24
 80031a2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80031a4:	2100      	movs	r1, #0
 80031a6:	f022 0210 	bic.w	r2, r2, #16
 80031aa:	625a      	str	r2, [r3, #36]	; 0x24
 80031ac:	9100      	str	r1, [sp, #0]
 80031ae:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80031b0:	f042 0210 	orr.w	r2, r2, #16
 80031b4:	645a      	str	r2, [r3, #68]	; 0x44
 80031b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80031b8:	6061      	str	r1, [r4, #4]
 80031ba:	f003 0310 	and.w	r3, r3, #16
 80031be:	9300      	str	r3, [sp, #0]
 80031c0:	9b00      	ldr	r3, [sp, #0]
 80031c2:	e799      	b.n	80030f8 <serial_init+0x40>
 80031c4:	4b33      	ldr	r3, [pc, #204]	; (8003294 <serial_init+0x1dc>)
 80031c6:	6a1a      	ldr	r2, [r3, #32]
 80031c8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80031cc:	621a      	str	r2, [r3, #32]
 80031ce:	6a1a      	ldr	r2, [r3, #32]
 80031d0:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 80031d4:	621a      	str	r2, [r3, #32]
 80031d6:	2200      	movs	r2, #0
 80031d8:	9201      	str	r2, [sp, #4]
 80031da:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80031dc:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80031e0:	641a      	str	r2, [r3, #64]	; 0x40
 80031e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80031e4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80031e8:	9301      	str	r3, [sp, #4]
 80031ea:	9b01      	ldr	r3, [sp, #4]
 80031ec:	2301      	movs	r3, #1
 80031ee:	6063      	str	r3, [r4, #4]
 80031f0:	e782      	b.n	80030f8 <serial_init+0x40>
 80031f2:	4b28      	ldr	r3, [pc, #160]	; (8003294 <serial_init+0x1dc>)
 80031f4:	6a1a      	ldr	r2, [r3, #32]
 80031f6:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80031fa:	621a      	str	r2, [r3, #32]
 80031fc:	6a1a      	ldr	r2, [r3, #32]
 80031fe:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003202:	621a      	str	r2, [r3, #32]
 8003204:	2200      	movs	r2, #0
 8003206:	9202      	str	r2, [sp, #8]
 8003208:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800320a:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800320e:	641a      	str	r2, [r3, #64]	; 0x40
 8003210:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003212:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003216:	9302      	str	r3, [sp, #8]
 8003218:	9b02      	ldr	r3, [sp, #8]
 800321a:	2302      	movs	r3, #2
 800321c:	e7e7      	b.n	80031ee <serial_init+0x136>
 800321e:	4b1d      	ldr	r3, [pc, #116]	; (8003294 <serial_init+0x1dc>)
 8003220:	6a1a      	ldr	r2, [r3, #32]
 8003222:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8003226:	621a      	str	r2, [r3, #32]
 8003228:	6a1a      	ldr	r2, [r3, #32]
 800322a:	f422 2200 	bic.w	r2, r2, #524288	; 0x80000
 800322e:	621a      	str	r2, [r3, #32]
 8003230:	2200      	movs	r2, #0
 8003232:	9203      	str	r2, [sp, #12]
 8003234:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003236:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 800323a:	641a      	str	r2, [r3, #64]	; 0x40
 800323c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800323e:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8003242:	9303      	str	r3, [sp, #12]
 8003244:	9b03      	ldr	r3, [sp, #12]
 8003246:	2303      	movs	r3, #3
 8003248:	e7d1      	b.n	80031ee <serial_init+0x136>
 800324a:	4b12      	ldr	r3, [pc, #72]	; (8003294 <serial_init+0x1dc>)
 800324c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800324e:	f042 0220 	orr.w	r2, r2, #32
 8003252:	625a      	str	r2, [r3, #36]	; 0x24
 8003254:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003256:	f022 0220 	bic.w	r2, r2, #32
 800325a:	625a      	str	r2, [r3, #36]	; 0x24
 800325c:	2200      	movs	r2, #0
 800325e:	9205      	str	r2, [sp, #20]
 8003260:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003262:	f042 0220 	orr.w	r2, r2, #32
 8003266:	645a      	str	r2, [r3, #68]	; 0x44
 8003268:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800326a:	f003 0320 	and.w	r3, r3, #32
 800326e:	9305      	str	r3, [sp, #20]
 8003270:	9b05      	ldr	r3, [sp, #20]
 8003272:	2305      	movs	r3, #5
 8003274:	e7bb      	b.n	80031ee <serial_init+0x136>
 8003276:	bf00      	nop
 8003278:	0800638c 	.word	0x0800638c
 800327c:	08006320 	.word	0x08006320
 8003280:	40004c00 	.word	0x40004c00
 8003284:	40004400 	.word	0x40004400
 8003288:	200019d8 	.word	0x200019d8
 800328c:	200027f4 	.word	0x200027f4
 8003290:	40011000 	.word	0x40011000
 8003294:	40023800 	.word	0x40023800

08003298 <serial_baud>:
 8003298:	6081      	str	r1, [r0, #8]
 800329a:	f7ff be8f 	b.w	8002fbc <init_uart>
	...

080032a0 <serial_irq_handler>:
 80032a0:	4b03      	ldr	r3, [pc, #12]	; (80032b0 <serial_irq_handler+0x10>)
 80032a2:	6019      	str	r1, [r3, #0]
 80032a4:	6841      	ldr	r1, [r0, #4]
 80032a6:	4b03      	ldr	r3, [pc, #12]	; (80032b4 <serial_irq_handler+0x14>)
 80032a8:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 80032ac:	4770      	bx	lr
 80032ae:	bf00      	nop
 80032b0:	200019b4 	.word	0x200019b4
 80032b4:	200019b8 	.word	0x200019b8

080032b8 <serial_irq_set>:
 80032b8:	b538      	push	{r3, r4, r5, lr}
 80032ba:	6843      	ldr	r3, [r0, #4]
 80032bc:	460d      	mov	r5, r1
 80032be:	2b05      	cmp	r3, #5
 80032c0:	d82b      	bhi.n	800331a <serial_irq_set+0x62>
 80032c2:	e8df f003 	tbb	[pc, r3]
 80032c6:	1b03      	.short	0x1b03
 80032c8:	2724211e 	.word	0x2724211e
 80032cc:	4921      	ldr	r1, [pc, #132]	; (8003354 <serial_irq_set+0x9c>)
 80032ce:	2425      	movs	r4, #37	; 0x25
 80032d0:	4821      	ldr	r0, [pc, #132]	; (8003358 <serial_irq_set+0xa0>)
 80032d2:	019b      	lsls	r3, r3, #6
 80032d4:	b33a      	cbz	r2, 8003326 <serial_irq_set+0x6e>
 80032d6:	58c2      	ldr	r2, [r0, r3]
 80032d8:	68d3      	ldr	r3, [r2, #12]
 80032da:	bb0d      	cbnz	r5, 8003320 <serial_irq_set+0x68>
 80032dc:	f043 0320 	orr.w	r3, r3, #32
 80032e0:	60d3      	str	r3, [r2, #12]
 80032e2:	4620      	mov	r0, r4
 80032e4:	f000 f9c2 	bl	800366c <__NVIC_SetVector>
 80032e8:	0962      	lsrs	r2, r4, #5
 80032ea:	2301      	movs	r3, #1
 80032ec:	f004 0417 	and.w	r4, r4, #23
 80032f0:	fa03 f404 	lsl.w	r4, r3, r4
 80032f4:	4b19      	ldr	r3, [pc, #100]	; (800335c <serial_irq_set+0xa4>)
 80032f6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80032fa:	bd38      	pop	{r3, r4, r5, pc}
 80032fc:	4918      	ldr	r1, [pc, #96]	; (8003360 <serial_irq_set+0xa8>)
 80032fe:	2426      	movs	r4, #38	; 0x26
 8003300:	e7e6      	b.n	80032d0 <serial_irq_set+0x18>
 8003302:	4918      	ldr	r1, [pc, #96]	; (8003364 <serial_irq_set+0xac>)
 8003304:	2427      	movs	r4, #39	; 0x27
 8003306:	e7e3      	b.n	80032d0 <serial_irq_set+0x18>
 8003308:	4917      	ldr	r1, [pc, #92]	; (8003368 <serial_irq_set+0xb0>)
 800330a:	2434      	movs	r4, #52	; 0x34
 800330c:	e7e0      	b.n	80032d0 <serial_irq_set+0x18>
 800330e:	4917      	ldr	r1, [pc, #92]	; (800336c <serial_irq_set+0xb4>)
 8003310:	2435      	movs	r4, #53	; 0x35
 8003312:	e7dd      	b.n	80032d0 <serial_irq_set+0x18>
 8003314:	4916      	ldr	r1, [pc, #88]	; (8003370 <serial_irq_set+0xb8>)
 8003316:	2447      	movs	r4, #71	; 0x47
 8003318:	e7da      	b.n	80032d0 <serial_irq_set+0x18>
 800331a:	2100      	movs	r1, #0
 800331c:	460c      	mov	r4, r1
 800331e:	e7d7      	b.n	80032d0 <serial_irq_set+0x18>
 8003320:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003324:	e7dc      	b.n	80032e0 <serial_irq_set+0x28>
 8003326:	58c3      	ldr	r3, [r0, r3]
 8003328:	68da      	ldr	r2, [r3, #12]
 800332a:	b935      	cbnz	r5, 800333a <serial_irq_set+0x82>
 800332c:	f022 0220 	bic.w	r2, r2, #32
 8003330:	60da      	str	r2, [r3, #12]
 8003332:	68db      	ldr	r3, [r3, #12]
 8003334:	061a      	lsls	r2, r3, #24
 8003336:	d506      	bpl.n	8003346 <serial_irq_set+0x8e>
 8003338:	bd38      	pop	{r3, r4, r5, pc}
 800333a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800333e:	60da      	str	r2, [r3, #12]
 8003340:	68db      	ldr	r3, [r3, #12]
 8003342:	069b      	lsls	r3, r3, #26
 8003344:	d404      	bmi.n	8003350 <serial_irq_set+0x98>
 8003346:	4620      	mov	r0, r4
 8003348:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800334c:	f7ff be24 	b.w	8002f98 <__NVIC_DisableIRQ>
 8003350:	bd38      	pop	{r3, r4, r5, pc}
 8003352:	bf00      	nop
 8003354:	08003095 	.word	0x08003095
 8003358:	200019dc 	.word	0x200019dc
 800335c:	e000e100 	.word	0xe000e100
 8003360:	0800309b 	.word	0x0800309b
 8003364:	080030a1 	.word	0x080030a1
 8003368:	080030a7 	.word	0x080030a7
 800336c:	080030ad 	.word	0x080030ad
 8003370:	080030b3 	.word	0x080030b3

08003374 <serial_readable>:
 8003374:	6843      	ldr	r3, [r0, #4]
 8003376:	4a03      	ldr	r2, [pc, #12]	; (8003384 <serial_readable+0x10>)
 8003378:	019b      	lsls	r3, r3, #6
 800337a:	58d3      	ldr	r3, [r2, r3]
 800337c:	6818      	ldr	r0, [r3, #0]
 800337e:	f3c0 1040 	ubfx	r0, r0, #5, #1
 8003382:	4770      	bx	lr
 8003384:	200019dc 	.word	0x200019dc

08003388 <serial_getc>:
 8003388:	6841      	ldr	r1, [r0, #4]
 800338a:	b510      	push	{r4, lr}
 800338c:	4604      	mov	r4, r0
 800338e:	4620      	mov	r0, r4
 8003390:	f7ff fff0 	bl	8003374 <serial_readable>
 8003394:	2800      	cmp	r0, #0
 8003396:	d0fa      	beq.n	800338e <serial_getc+0x6>
 8003398:	0189      	lsls	r1, r1, #6
 800339a:	4b03      	ldr	r3, [pc, #12]	; (80033a8 <serial_getc+0x20>)
 800339c:	585b      	ldr	r3, [r3, r1]
 800339e:	6858      	ldr	r0, [r3, #4]
 80033a0:	f3c0 0008 	ubfx	r0, r0, #0, #9
 80033a4:	bd10      	pop	{r4, pc}
 80033a6:	bf00      	nop
 80033a8:	200019dc 	.word	0x200019dc

080033ac <serial_writable>:
 80033ac:	6843      	ldr	r3, [r0, #4]
 80033ae:	4a03      	ldr	r2, [pc, #12]	; (80033bc <serial_writable+0x10>)
 80033b0:	019b      	lsls	r3, r3, #6
 80033b2:	58d3      	ldr	r3, [r2, r3]
 80033b4:	6818      	ldr	r0, [r3, #0]
 80033b6:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 80033ba:	4770      	bx	lr
 80033bc:	200019dc 	.word	0x200019dc

080033c0 <serial_putc>:
 80033c0:	b538      	push	{r3, r4, r5, lr}
 80033c2:	6844      	ldr	r4, [r0, #4]
 80033c4:	4605      	mov	r5, r0
 80033c6:	4628      	mov	r0, r5
 80033c8:	f7ff fff0 	bl	80033ac <serial_writable>
 80033cc:	2800      	cmp	r0, #0
 80033ce:	d0fa      	beq.n	80033c6 <serial_putc+0x6>
 80033d0:	01a4      	lsls	r4, r4, #6
 80033d2:	4b03      	ldr	r3, [pc, #12]	; (80033e0 <serial_putc+0x20>)
 80033d4:	591b      	ldr	r3, [r3, r4]
 80033d6:	f3c1 0108 	ubfx	r1, r1, #0, #9
 80033da:	6059      	str	r1, [r3, #4]
 80033dc:	bd38      	pop	{r3, r4, r5, pc}
 80033de:	bf00      	nop
 80033e0:	200019dc 	.word	0x200019dc

080033e4 <mbed_sdk_init>:
 80033e4:	b508      	push	{r3, lr}
 80033e6:	f000 f805 	bl	80033f4 <SystemCoreClockUpdate>
 80033ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80033ee:	f001 baaf 	b.w	8004950 <HAL_Init>
	...

080033f4 <SystemCoreClockUpdate>:
 80033f4:	4a17      	ldr	r2, [pc, #92]	; (8003454 <SystemCoreClockUpdate+0x60>)
 80033f6:	4918      	ldr	r1, [pc, #96]	; (8003458 <SystemCoreClockUpdate+0x64>)
 80033f8:	6893      	ldr	r3, [r2, #8]
 80033fa:	f003 030c 	and.w	r3, r3, #12
 80033fe:	2b04      	cmp	r3, #4
 8003400:	b510      	push	{r4, lr}
 8003402:	d00d      	beq.n	8003420 <SystemCoreClockUpdate+0x2c>
 8003404:	2b08      	cmp	r3, #8
 8003406:	d00d      	beq.n	8003424 <SystemCoreClockUpdate+0x30>
 8003408:	4b14      	ldr	r3, [pc, #80]	; (800345c <SystemCoreClockUpdate+0x68>)
 800340a:	600b      	str	r3, [r1, #0]
 800340c:	4b11      	ldr	r3, [pc, #68]	; (8003454 <SystemCoreClockUpdate+0x60>)
 800340e:	4a14      	ldr	r2, [pc, #80]	; (8003460 <SystemCoreClockUpdate+0x6c>)
 8003410:	689b      	ldr	r3, [r3, #8]
 8003412:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8003416:	5cd2      	ldrb	r2, [r2, r3]
 8003418:	680b      	ldr	r3, [r1, #0]
 800341a:	40d3      	lsrs	r3, r2
 800341c:	600b      	str	r3, [r1, #0]
 800341e:	bd10      	pop	{r4, pc}
 8003420:	4b10      	ldr	r3, [pc, #64]	; (8003464 <SystemCoreClockUpdate+0x70>)
 8003422:	e7f2      	b.n	800340a <SystemCoreClockUpdate+0x16>
 8003424:	6854      	ldr	r4, [r2, #4]
 8003426:	6850      	ldr	r0, [r2, #4]
 8003428:	6852      	ldr	r2, [r2, #4]
 800342a:	0263      	lsls	r3, r4, #9
 800342c:	f3c2 1288 	ubfx	r2, r2, #6, #9
 8003430:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8003434:	bf4c      	ite	mi
 8003436:	4b0b      	ldrmi	r3, [pc, #44]	; (8003464 <SystemCoreClockUpdate+0x70>)
 8003438:	4b08      	ldrpl	r3, [pc, #32]	; (800345c <SystemCoreClockUpdate+0x68>)
 800343a:	fbb3 f3f0 	udiv	r3, r3, r0
 800343e:	4353      	muls	r3, r2
 8003440:	4a04      	ldr	r2, [pc, #16]	; (8003454 <SystemCoreClockUpdate+0x60>)
 8003442:	6852      	ldr	r2, [r2, #4]
 8003444:	f3c2 4201 	ubfx	r2, r2, #16, #2
 8003448:	3201      	adds	r2, #1
 800344a:	0052      	lsls	r2, r2, #1
 800344c:	fbb3 f3f2 	udiv	r3, r3, r2
 8003450:	e7db      	b.n	800340a <SystemCoreClockUpdate+0x16>
 8003452:	bf00      	nop
 8003454:	40023800 	.word	0x40023800
 8003458:	200001e0 	.word	0x200001e0
 800345c:	00f42400 	.word	0x00f42400
 8003460:	080063f8 	.word	0x080063f8
 8003464:	007a1200 	.word	0x007a1200

08003468 <SetSysClock_PLL_HSE>:
 8003468:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800346c:	b0ac      	sub	sp, #176	; 0xb0
 800346e:	4b30      	ldr	r3, [pc, #192]	; (8003530 <SetSysClock_PLL_HSE+0xc8>)
 8003470:	2100      	movs	r1, #0
 8003472:	9101      	str	r1, [sp, #4]
 8003474:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003476:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800347a:	641a      	str	r2, [r3, #64]	; 0x40
 800347c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800347e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003482:	9301      	str	r3, [sp, #4]
 8003484:	9b01      	ldr	r3, [sp, #4]
 8003486:	4b2b      	ldr	r3, [pc, #172]	; (8003534 <SetSysClock_PLL_HSE+0xcc>)
 8003488:	9102      	str	r1, [sp, #8]
 800348a:	681a      	ldr	r2, [r3, #0]
 800348c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8003490:	601a      	str	r2, [r3, #0]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8003498:	9302      	str	r3, [sp, #8]
 800349a:	9b02      	ldr	r3, [sp, #8]
 800349c:	2301      	movs	r3, #1
 800349e:	9308      	str	r3, [sp, #32]
 80034a0:	4607      	mov	r7, r0
 80034a2:	b9c0      	cbnz	r0, 80034d6 <SetSysClock_PLL_HSE+0x6e>
 80034a4:	9309      	str	r3, [sp, #36]	; 0x24
 80034a6:	f44f 73b4 	mov.w	r3, #360	; 0x168
 80034aa:	2402      	movs	r4, #2
 80034ac:	f44f 0580 	mov.w	r5, #4194304	; 0x400000
 80034b0:	2608      	movs	r6, #8
 80034b2:	9311      	str	r3, [sp, #68]	; 0x44
 80034b4:	a808      	add	r0, sp, #32
 80034b6:	2307      	movs	r3, #7
 80034b8:	940e      	str	r4, [sp, #56]	; 0x38
 80034ba:	950f      	str	r5, [sp, #60]	; 0x3c
 80034bc:	9610      	str	r6, [sp, #64]	; 0x40
 80034be:	9412      	str	r4, [sp, #72]	; 0x48
 80034c0:	9313      	str	r3, [sp, #76]	; 0x4c
 80034c2:	9414      	str	r4, [sp, #80]	; 0x50
 80034c4:	f000 fbe2 	bl	8003c8c <HAL_RCC_OscConfig>
 80034c8:	b918      	cbnz	r0, 80034d2 <SetSysClock_PLL_HSE+0x6a>
 80034ca:	f001 f9f5 	bl	80048b8 <HAL_PWREx_EnableOverDrive>
 80034ce:	4680      	mov	r8, r0
 80034d0:	b118      	cbz	r0, 80034da <SetSysClock_PLL_HSE+0x72>
 80034d2:	2000      	movs	r0, #0
 80034d4:	e028      	b.n	8003528 <SetSysClock_PLL_HSE+0xc0>
 80034d6:	2305      	movs	r3, #5
 80034d8:	e7e4      	b.n	80034a4 <SetSysClock_PLL_HSE+0x3c>
 80034da:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80034de:	931c      	str	r3, [sp, #112]	; 0x70
 80034e0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80034e4:	9315      	str	r3, [sp, #84]	; 0x54
 80034e6:	a815      	add	r0, sp, #84	; 0x54
 80034e8:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80034ec:	932a      	str	r3, [sp, #168]	; 0xa8
 80034ee:	961b      	str	r6, [sp, #108]	; 0x6c
 80034f0:	961d      	str	r6, [sp, #116]	; 0x74
 80034f2:	f000 f8db 	bl	80036ac <HAL_RCCEx_PeriphCLKConfig>
 80034f6:	230f      	movs	r3, #15
 80034f8:	9303      	str	r3, [sp, #12]
 80034fa:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80034fe:	9306      	str	r3, [sp, #24]
 8003500:	2105      	movs	r1, #5
 8003502:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003506:	a803      	add	r0, sp, #12
 8003508:	9404      	str	r4, [sp, #16]
 800350a:	f8cd 8014 	str.w	r8, [sp, #20]
 800350e:	9307      	str	r3, [sp, #28]
 8003510:	f001 f8cc 	bl	80046ac <HAL_RCC_ClockConfig>
 8003514:	4602      	mov	r2, r0
 8003516:	2800      	cmp	r0, #0
 8003518:	d1db      	bne.n	80034d2 <SetSysClock_PLL_HSE+0x6a>
 800351a:	b90f      	cbnz	r7, 8003520 <SetSysClock_PLL_HSE+0xb8>
 800351c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8003520:	4629      	mov	r1, r5
 8003522:	f001 f877 	bl	8004614 <HAL_RCC_MCOConfig>
 8003526:	2001      	movs	r0, #1
 8003528:	b02c      	add	sp, #176	; 0xb0
 800352a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800352e:	bf00      	nop
 8003530:	40023800 	.word	0x40023800
 8003534:	40007000 	.word	0x40007000

08003538 <SetSysClock_PLL_HSI>:
 8003538:	b5f0      	push	{r4, r5, r6, r7, lr}
 800353a:	b095      	sub	sp, #84	; 0x54
 800353c:	2400      	movs	r4, #0
 800353e:	4b23      	ldr	r3, [pc, #140]	; (80035cc <SetSysClock_PLL_HSI+0x94>)
 8003540:	9400      	str	r4, [sp, #0]
 8003542:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003544:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003548:	641a      	str	r2, [r3, #64]	; 0x40
 800354a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800354c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003550:	9300      	str	r3, [sp, #0]
 8003552:	9b00      	ldr	r3, [sp, #0]
 8003554:	4b1e      	ldr	r3, [pc, #120]	; (80035d0 <SetSysClock_PLL_HSI+0x98>)
 8003556:	9401      	str	r4, [sp, #4]
 8003558:	681a      	ldr	r2, [r3, #0]
 800355a:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800355e:	601a      	str	r2, [r3, #0]
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	9408      	str	r4, [sp, #32]
 8003564:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8003568:	9301      	str	r3, [sp, #4]
 800356a:	9b01      	ldr	r3, [sp, #4]
 800356c:	940e      	str	r4, [sp, #56]	; 0x38
 800356e:	2303      	movs	r3, #3
 8003570:	9307      	str	r3, [sp, #28]
 8003572:	2310      	movs	r3, #16
 8003574:	930b      	str	r3, [sp, #44]	; 0x2c
 8003576:	930f      	str	r3, [sp, #60]	; 0x3c
 8003578:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800357c:	2602      	movs	r6, #2
 800357e:	9310      	str	r3, [sp, #64]	; 0x40
 8003580:	2701      	movs	r7, #1
 8003582:	2306      	movs	r3, #6
 8003584:	a807      	add	r0, sp, #28
 8003586:	970a      	str	r7, [sp, #40]	; 0x28
 8003588:	960d      	str	r6, [sp, #52]	; 0x34
 800358a:	9611      	str	r6, [sp, #68]	; 0x44
 800358c:	9312      	str	r3, [sp, #72]	; 0x48
 800358e:	f000 fb7d 	bl	8003c8c <HAL_RCC_OscConfig>
 8003592:	4605      	mov	r5, r0
 8003594:	b9b8      	cbnz	r0, 80035c6 <SetSysClock_PLL_HSI+0x8e>
 8003596:	230f      	movs	r3, #15
 8003598:	9302      	str	r3, [sp, #8]
 800359a:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800359e:	9004      	str	r0, [sp, #16]
 80035a0:	9305      	str	r3, [sp, #20]
 80035a2:	2105      	movs	r1, #5
 80035a4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80035a8:	a802      	add	r0, sp, #8
 80035aa:	9603      	str	r6, [sp, #12]
 80035ac:	9306      	str	r3, [sp, #24]
 80035ae:	f001 f87d 	bl	80046ac <HAL_RCC_ClockConfig>
 80035b2:	4602      	mov	r2, r0
 80035b4:	b928      	cbnz	r0, 80035c2 <SetSysClock_PLL_HSI+0x8a>
 80035b6:	4601      	mov	r1, r0
 80035b8:	f001 f82c 	bl	8004614 <HAL_RCC_MCOConfig>
 80035bc:	4638      	mov	r0, r7
 80035be:	b015      	add	sp, #84	; 0x54
 80035c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80035c2:	4628      	mov	r0, r5
 80035c4:	e7fb      	b.n	80035be <SetSysClock_PLL_HSI+0x86>
 80035c6:	4620      	mov	r0, r4
 80035c8:	e7f9      	b.n	80035be <SetSysClock_PLL_HSI+0x86>
 80035ca:	bf00      	nop
 80035cc:	40023800 	.word	0x40023800
 80035d0:	40007000 	.word	0x40007000

080035d4 <SetSysClock>:
 80035d4:	b508      	push	{r3, lr}
 80035d6:	2001      	movs	r0, #1
 80035d8:	f7ff ff46 	bl	8003468 <SetSysClock_PLL_HSE>
 80035dc:	b918      	cbnz	r0, 80035e6 <SetSysClock+0x12>
 80035de:	f7ff ffab 	bl	8003538 <SetSysClock_PLL_HSI>
 80035e2:	b900      	cbnz	r0, 80035e6 <SetSysClock+0x12>
 80035e4:	e7fe      	b.n	80035e4 <SetSysClock+0x10>
 80035e6:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 80035ea:	2100      	movs	r1, #0
 80035ec:	2001      	movs	r0, #1
 80035ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80035f2:	f001 b80f 	b.w	8004614 <HAL_RCC_MCOConfig>
	...

080035f8 <SystemInit>:
 80035f8:	4a17      	ldr	r2, [pc, #92]	; (8003658 <SystemInit+0x60>)
 80035fa:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80035fe:	b510      	push	{r4, lr}
 8003600:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003604:	4c15      	ldr	r4, [pc, #84]	; (800365c <SystemInit+0x64>)
 8003606:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800360a:	6823      	ldr	r3, [r4, #0]
 800360c:	2100      	movs	r1, #0
 800360e:	f043 0301 	orr.w	r3, r3, #1
 8003612:	6023      	str	r3, [r4, #0]
 8003614:	60a1      	str	r1, [r4, #8]
 8003616:	6823      	ldr	r3, [r4, #0]
 8003618:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 800361c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003620:	6023      	str	r3, [r4, #0]
 8003622:	4b0f      	ldr	r3, [pc, #60]	; (8003660 <SystemInit+0x68>)
 8003624:	6063      	str	r3, [r4, #4]
 8003626:	6823      	ldr	r3, [r4, #0]
 8003628:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800362c:	6023      	str	r3, [r4, #0]
 800362e:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8003632:	60e1      	str	r1, [r4, #12]
 8003634:	6093      	str	r3, [r2, #8]
 8003636:	4b0b      	ldr	r3, [pc, #44]	; (8003664 <SystemInit+0x6c>)
 8003638:	4a0b      	ldr	r2, [pc, #44]	; (8003668 <SystemInit+0x70>)
 800363a:	601a      	str	r2, [r3, #0]
 800363c:	f001 f988 	bl	8004950 <HAL_Init>
 8003640:	f7ff ffc8 	bl	80035d4 <SetSysClock>
 8003644:	6a23      	ldr	r3, [r4, #32]
 8003646:	f043 0308 	orr.w	r3, r3, #8
 800364a:	6223      	str	r3, [r4, #32]
 800364c:	6a23      	ldr	r3, [r4, #32]
 800364e:	f023 0308 	bic.w	r3, r3, #8
 8003652:	6223      	str	r3, [r4, #32]
 8003654:	bd10      	pop	{r4, pc}
 8003656:	bf00      	nop
 8003658:	e000ed00 	.word	0xe000ed00
 800365c:	40023800 	.word	0x40023800
 8003660:	24003010 	.word	0x24003010
 8003664:	200001e0 	.word	0x200001e0
 8003668:	0112a880 	.word	0x0112a880

0800366c <__NVIC_SetVector>:
 800366c:	b530      	push	{r4, r5, lr}
 800366e:	4c0c      	ldr	r4, [pc, #48]	; (80036a0 <__NVIC_SetVector+0x34>)
 8003670:	68a2      	ldr	r2, [r4, #8]
 8003672:	68a4      	ldr	r4, [r4, #8]
 8003674:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 8003678:	4613      	mov	r3, r2
 800367a:	d10c      	bne.n	8003696 <__NVIC_SetVector+0x2a>
 800367c:	1f13      	subs	r3, r2, #4
 800367e:	4c09      	ldr	r4, [pc, #36]	; (80036a4 <__NVIC_SetVector+0x38>)
 8003680:	4a09      	ldr	r2, [pc, #36]	; (80036a8 <__NVIC_SetVector+0x3c>)
 8003682:	f853 5f04 	ldr.w	r5, [r3, #4]!
 8003686:	f842 5f04 	str.w	r5, [r2, #4]!
 800368a:	42a2      	cmp	r2, r4
 800368c:	d1f9      	bne.n	8003682 <__NVIC_SetVector+0x16>
 800368e:	4a04      	ldr	r2, [pc, #16]	; (80036a0 <__NVIC_SetVector+0x34>)
 8003690:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8003694:	6093      	str	r3, [r2, #8]
 8003696:	3010      	adds	r0, #16
 8003698:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 800369c:	bd30      	pop	{r4, r5, pc}
 800369e:	bf00      	nop
 80036a0:	e000ed00 	.word	0xe000ed00
 80036a4:	200001c0 	.word	0x200001c0
 80036a8:	1ffffffc 	.word	0x1ffffffc

080036ac <HAL_RCCEx_PeriphCLKConfig>:
 80036ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80036b0:	6803      	ldr	r3, [r0, #0]
 80036b2:	f013 0601 	ands.w	r6, r3, #1
 80036b6:	b085      	sub	sp, #20
 80036b8:	4604      	mov	r4, r0
 80036ba:	d00b      	beq.n	80036d4 <HAL_RCCEx_PeriphCLKConfig+0x28>
 80036bc:	49c8      	ldr	r1, [pc, #800]	; (80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80036be:	6b86      	ldr	r6, [r0, #56]	; 0x38
 80036c0:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 80036c4:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 80036c8:	4332      	orrs	r2, r6
 80036ca:	fab6 f686 	clz	r6, r6
 80036ce:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
 80036d2:	0976      	lsrs	r6, r6, #5
 80036d4:	0799      	lsls	r1, r3, #30
 80036d6:	d50b      	bpl.n	80036f0 <HAL_RCCEx_PeriphCLKConfig+0x44>
 80036d8:	48c1      	ldr	r0, [pc, #772]	; (80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80036da:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80036dc:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
 80036e0:	f022 52c0 	bic.w	r2, r2, #402653184	; 0x18000000
 80036e4:	430a      	orrs	r2, r1
 80036e6:	2900      	cmp	r1, #0
 80036e8:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
 80036ec:	bf08      	it	eq
 80036ee:	2601      	moveq	r6, #1
 80036f0:	f013 0504 	ands.w	r5, r3, #4
 80036f4:	d012      	beq.n	800371c <HAL_RCCEx_PeriphCLKConfig+0x70>
 80036f6:	49ba      	ldr	r1, [pc, #744]	; (80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80036f8:	6b25      	ldr	r5, [r4, #48]	; 0x30
 80036fa:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 80036fe:	f5b5 1f80 	cmp.w	r5, #1048576	; 0x100000
 8003702:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8003706:	ea42 0205 	orr.w	r2, r2, r5
 800370a:	bf18      	it	ne
 800370c:	fab5 f585 	clzne	r5, r5
 8003710:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
 8003714:	bf12      	itee	ne
 8003716:	096d      	lsrne	r5, r5, #5
 8003718:	2500      	moveq	r5, #0
 800371a:	2601      	moveq	r6, #1
 800371c:	071a      	lsls	r2, r3, #28
 800371e:	d50f      	bpl.n	8003740 <HAL_RCCEx_PeriphCLKConfig+0x94>
 8003720:	48af      	ldr	r0, [pc, #700]	; (80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8003722:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003724:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
 8003728:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800372c:	430a      	orrs	r2, r1
 800372e:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
 8003732:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
 8003736:	f000 81bf 	beq.w	8003ab8 <HAL_RCCEx_PeriphCLKConfig+0x40c>
 800373a:	2900      	cmp	r1, #0
 800373c:	bf08      	it	eq
 800373e:	2501      	moveq	r5, #1
 8003740:	069f      	lsls	r7, r3, #26
 8003742:	d533      	bpl.n	80037ac <HAL_RCCEx_PeriphCLKConfig+0x100>
 8003744:	2300      	movs	r3, #0
 8003746:	9303      	str	r3, [sp, #12]
 8003748:	4ba5      	ldr	r3, [pc, #660]	; (80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 800374a:	4fa6      	ldr	r7, [pc, #664]	; (80039e4 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 800374c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800374e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003752:	641a      	str	r2, [r3, #64]	; 0x40
 8003754:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003756:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800375a:	9303      	str	r3, [sp, #12]
 800375c:	9b03      	ldr	r3, [sp, #12]
 800375e:	683b      	ldr	r3, [r7, #0]
 8003760:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003764:	603b      	str	r3, [r7, #0]
 8003766:	f001 f913 	bl	8004990 <HAL_GetTick>
 800376a:	4680      	mov	r8, r0
 800376c:	683b      	ldr	r3, [r7, #0]
 800376e:	05d8      	lsls	r0, r3, #23
 8003770:	f140 81a4 	bpl.w	8003abc <HAL_RCCEx_PeriphCLKConfig+0x410>
 8003774:	4f9a      	ldr	r7, [pc, #616]	; (80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8003776:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003778:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800377c:	f040 81a9 	bne.w	8003ad2 <HAL_RCCEx_PeriphCLKConfig+0x426>
 8003780:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003782:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8003786:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800378a:	4a95      	ldr	r2, [pc, #596]	; (80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 800378c:	f040 81c4 	bne.w	8003b18 <HAL_RCCEx_PeriphCLKConfig+0x46c>
 8003790:	6891      	ldr	r1, [r2, #8]
 8003792:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8003796:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800379a:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800379e:	4301      	orrs	r1, r0
 80037a0:	6091      	str	r1, [r2, #8]
 80037a2:	6f11      	ldr	r1, [r2, #112]	; 0x70
 80037a4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80037a8:	430b      	orrs	r3, r1
 80037aa:	6713      	str	r3, [r2, #112]	; 0x70
 80037ac:	6823      	ldr	r3, [r4, #0]
 80037ae:	06db      	lsls	r3, r3, #27
 80037b0:	bf42      	ittt	mi
 80037b2:	4b8d      	ldrmi	r3, [pc, #564]	; (80039e8 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 80037b4:	f894 2058 	ldrbmi.w	r2, [r4, #88]	; 0x58
 80037b8:	601a      	strmi	r2, [r3, #0]
 80037ba:	6823      	ldr	r3, [r4, #0]
 80037bc:	061f      	lsls	r7, r3, #24
 80037be:	d508      	bpl.n	80037d2 <HAL_RCCEx_PeriphCLKConfig+0x126>
 80037c0:	4987      	ldr	r1, [pc, #540]	; (80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80037c2:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80037c4:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 80037c8:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80037cc:	4302      	orrs	r2, r0
 80037ce:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 80037d2:	0658      	lsls	r0, r3, #25
 80037d4:	d508      	bpl.n	80037e8 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 80037d6:	4982      	ldr	r1, [pc, #520]	; (80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80037d8:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80037da:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 80037de:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 80037e2:	4302      	orrs	r2, r0
 80037e4:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 80037e8:	05d9      	lsls	r1, r3, #23
 80037ea:	d50c      	bpl.n	8003806 <HAL_RCCEx_PeriphCLKConfig+0x15a>
 80037ec:	487c      	ldr	r0, [pc, #496]	; (80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80037ee:	6d61      	ldr	r1, [r4, #84]	; 0x54
 80037f0:	f8d0 2094 	ldr.w	r2, [r0, #148]	; 0x94
 80037f4:	f022 6200 	bic.w	r2, r2, #134217728	; 0x8000000
 80037f8:	430a      	orrs	r2, r1
 80037fa:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
 80037fe:	f8c0 2094 	str.w	r2, [r0, #148]	; 0x94
 8003802:	bf08      	it	eq
 8003804:	2501      	moveq	r5, #1
 8003806:	059a      	lsls	r2, r3, #22
 8003808:	d508      	bpl.n	800381c <HAL_RCCEx_PeriphCLKConfig+0x170>
 800380a:	4975      	ldr	r1, [pc, #468]	; (80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 800380c:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800380e:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 8003812:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8003816:	4302      	orrs	r2, r0
 8003818:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 800381c:	055f      	lsls	r7, r3, #21
 800381e:	f100 817f 	bmi.w	8003b20 <HAL_RCCEx_PeriphCLKConfig+0x474>
 8003822:	2e01      	cmp	r6, #1
 8003824:	f040 818a 	bne.w	8003b3c <HAL_RCCEx_PeriphCLKConfig+0x490>
 8003828:	4e70      	ldr	r6, [pc, #448]	; (80039ec <HAL_RCCEx_PeriphCLKConfig+0x340>)
 800382a:	4f6d      	ldr	r7, [pc, #436]	; (80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 800382c:	2300      	movs	r3, #0
 800382e:	6033      	str	r3, [r6, #0]
 8003830:	f001 f8ae 	bl	8004990 <HAL_GetTick>
 8003834:	9601      	str	r6, [sp, #4]
 8003836:	4680      	mov	r8, r0
 8003838:	683b      	ldr	r3, [r7, #0]
 800383a:	0118      	lsls	r0, r3, #4
 800383c:	f100 820b 	bmi.w	8003c56 <HAL_RCCEx_PeriphCLKConfig+0x5aa>
 8003840:	6820      	ldr	r0, [r4, #0]
 8003842:	07c1      	lsls	r1, r0, #31
 8003844:	d501      	bpl.n	800384a <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8003846:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003848:	b123      	cbz	r3, 8003854 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 800384a:	0782      	lsls	r2, r0, #30
 800384c:	d546      	bpl.n	80038dc <HAL_RCCEx_PeriphCLKConfig+0x230>
 800384e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003850:	2b00      	cmp	r3, #0
 8003852:	d143      	bne.n	80038dc <HAL_RCCEx_PeriphCLKConfig+0x230>
 8003854:	4f62      	ldr	r7, [pc, #392]	; (80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8003856:	f44f 3140 	mov.w	r1, #196608	; 0x30000
 800385a:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 800385e:	fa91 fea1 	rbit	lr, r1
 8003862:	f04f 6c70 	mov.w	r12, #251658240	; 0xf000000
 8003866:	fabe fe8e 	clz	lr, lr
 800386a:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800386e:	fa9c f8ac 	rbit	r8, r12
 8003872:	f647 7bc0 	movw	r11, #32704	; 0x7fc0
 8003876:	fab8 f888 	clz	r8, r8
 800387a:	fa9b fbab 	rbit	r11, r11
 800387e:	fabb fb8b 	clz	r11, r11
 8003882:	fa91 f1a1 	rbit	r1, r1
 8003886:	fab1 f181 	clz	r1, r1
 800388a:	fa9c fcac 	rbit	r12, r12
 800388e:	f04f 4ae0 	mov.w	r10, #1879048192	; 0x70000000
 8003892:	fabc fc8c 	clz	r12, r12
 8003896:	fa9a faaa 	rbit	r10, r10
 800389a:	68a6      	ldr	r6, [r4, #8]
 800389c:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 80038a0:	fa06 f90b 	lsl.w	r9, r6, r11
 80038a4:	6966      	ldr	r6, [r4, #20]
 80038a6:	faba fa8a 	clz	r10, r10
 80038aa:	fa22 f20e 	lsr.w	r2, r2, lr
 80038ae:	fa06 fa0a 	lsl.w	r10, r6, r10
 80038b2:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 80038b6:	6866      	ldr	r6, [r4, #4]
 80038b8:	3201      	adds	r2, #1
 80038ba:	ea49 090a 	orr.w	r9, r9, r10
 80038be:	fa23 f308 	lsr.w	r3, r3, r8
 80038c2:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 80038c6:	ea49 0906 	orr.w	r9, r9, r6
 80038ca:	fa03 f30c 	lsl.w	r3, r3, r12
 80038ce:	3a01      	subs	r2, #1
 80038d0:	ea49 0303 	orr.w	r3, r9, r3
 80038d4:	408a      	lsls	r2, r1
 80038d6:	4313      	orrs	r3, r2
 80038d8:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80038dc:	0743      	lsls	r3, r0, #29
 80038de:	d503      	bpl.n	80038e8 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 80038e0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80038e2:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80038e6:	d005      	beq.n	80038f4 <HAL_RCCEx_PeriphCLKConfig+0x248>
 80038e8:	0707      	lsls	r7, r0, #28
 80038ea:	d550      	bpl.n	800398e <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 80038ec:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80038ee:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80038f2:	d14c      	bne.n	800398e <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 80038f4:	4f3a      	ldr	r7, [pc, #232]	; (80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80038f6:	f44f 3140 	mov.w	r1, #196608	; 0x30000
 80038fa:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 80038fe:	fa91 fea1 	rbit	lr, r1
 8003902:	f04f 4ce0 	mov.w	r12, #1879048192	; 0x70000000
 8003906:	fabe fe8e 	clz	lr, lr
 800390a:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800390e:	fa9c f8ac 	rbit	r8, r12
 8003912:	f647 7bc0 	movw	r11, #32704	; 0x7fc0
 8003916:	fab8 f888 	clz	r8, r8
 800391a:	fa9b fbab 	rbit	r11, r11
 800391e:	fabb fb8b 	clz	r11, r11
 8003922:	fa91 f1a1 	rbit	r1, r1
 8003926:	f04f 6a70 	mov.w	r10, #251658240	; 0xf000000
 800392a:	fab1 f181 	clz	r1, r1
 800392e:	fa9a faaa 	rbit	r10, r10
 8003932:	faba fa8a 	clz	r10, r10
 8003936:	fa9c fcac 	rbit	r12, r12
 800393a:	68a6      	ldr	r6, [r4, #8]
 800393c:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8003940:	fa06 f90b 	lsl.w	r9, r6, r11
 8003944:	6926      	ldr	r6, [r4, #16]
 8003946:	fa22 f20e 	lsr.w	r2, r2, lr
 800394a:	fa06 fa0a 	lsl.w	r10, r6, r10
 800394e:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8003952:	6866      	ldr	r6, [r4, #4]
 8003954:	3201      	adds	r2, #1
 8003956:	fabc fc8c 	clz	r12, r12
 800395a:	ea49 090a 	orr.w	r9, r9, r10
 800395e:	fa23 f308 	lsr.w	r3, r3, r8
 8003962:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8003966:	ea49 0906 	orr.w	r9, r9, r6
 800396a:	fa03 f30c 	lsl.w	r3, r3, r12
 800396e:	3a01      	subs	r2, #1
 8003970:	408a      	lsls	r2, r1
 8003972:	ea49 0303 	orr.w	r3, r9, r3
 8003976:	4313      	orrs	r3, r2
 8003978:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800397c:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 8003980:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8003982:	f022 021f 	bic.w	r2, r2, #31
 8003986:	3b01      	subs	r3, #1
 8003988:	4313      	orrs	r3, r2
 800398a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800398e:	0546      	lsls	r6, r0, #21
 8003990:	d553      	bpl.n	8003a3a <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8003992:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003994:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8003998:	d14f      	bne.n	8003a3a <HAL_RCCEx_PeriphCLKConfig+0x38e>
 800399a:	f8df c044 	ldr.w	r12, [pc, #68]	; 80039e0 <HAL_RCCEx_PeriphCLKConfig+0x334>
 800399e:	f44f 3b40 	mov.w	r11, #196608	; 0x30000
 80039a2:	f8dc 2084 	ldr.w	r2, [r12, #132]	; 0x84
 80039a6:	fa9b f8ab 	rbit	r8, r11
 80039aa:	f04f 47e0 	mov.w	r7, #1879048192	; 0x70000000
 80039ae:	fab8 f888 	clz	r8, r8
 80039b2:	f8dc 1084 	ldr.w	r1, [r12, #132]	; 0x84
 80039b6:	fa97 f9a7 	rbit	r9, r7
 80039ba:	f647 7ac0 	movw	r10, #32704	; 0x7fc0
 80039be:	fab9 f989 	clz	r9, r9
 80039c2:	fa9a faaa 	rbit	r10, r10
 80039c6:	faba fa8a 	clz	r10, r10
 80039ca:	fa9b fbab 	rbit	r11, r11
 80039ce:	f04f 6e70 	mov.w	lr, #251658240	; 0xf000000
 80039d2:	fabb fb8b 	clz	r11, r11
 80039d6:	fa9e feae 	rbit	lr, lr
 80039da:	fabe fe8e 	clz	lr, lr
 80039de:	e007      	b.n	80039f0 <HAL_RCCEx_PeriphCLKConfig+0x344>
 80039e0:	40023800 	.word	0x40023800
 80039e4:	40007000 	.word	0x40007000
 80039e8:	424711e0 	.word	0x424711e0
 80039ec:	42470068 	.word	0x42470068
 80039f0:	fa97 f7a7 	rbit	r7, r7
 80039f4:	68e3      	ldr	r3, [r4, #12]
 80039f6:	68a6      	ldr	r6, [r4, #8]
 80039f8:	085b      	lsrs	r3, r3, #1
 80039fa:	3b01      	subs	r3, #1
 80039fc:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8003a00:	fa06 fa0a 	lsl.w	r10, r6, r10
 8003a04:	fa03 f30b 	lsl.w	r3, r3, r11
 8003a08:	6866      	ldr	r6, [r4, #4]
 8003a0a:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 8003a0e:	fa22 f808 	lsr.w	r8, r2, r8
 8003a12:	fab7 f787 	clz	r7, r7
 8003a16:	ea43 030a 	orr.w	r3, r3, r10
 8003a1a:	fa21 f909 	lsr.w	r9, r1, r9
 8003a1e:	f108 0801 	add.w	r8, r8, #1
 8003a22:	4333      	orrs	r3, r6
 8003a24:	fa09 f707 	lsl.w	r7, r9, r7
 8003a28:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8003a2c:	431f      	orrs	r7, r3
 8003a2e:	fa08 fe0e 	lsl.w	lr, r8, lr
 8003a32:	ea47 070e 	orr.w	r7, r7, lr
 8003a36:	f8cc 7084 	str.w	r7, [r12, #132]	; 0x84
 8003a3a:	0501      	lsls	r1, r0, #20
 8003a3c:	d52c      	bpl.n	8003a98 <HAL_RCCEx_PeriphCLKConfig+0x3ec>
 8003a3e:	f647 77c0 	movw	r7, #32704	; 0x7fc0
 8003a42:	fa97 f7a7 	rbit	r7, r7
 8003a46:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8003a4a:	fab7 f787 	clz	r7, r7
 8003a4e:	fa93 f3a3 	rbit	r3, r3
 8003a52:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 8003a56:	fab3 f283 	clz	r2, r3
 8003a5a:	fa90 f0a0 	rbit	r0, r0
 8003a5e:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
 8003a62:	fab0 f080 	clz	r0, r0
 8003a66:	fa91 f1a1 	rbit	r1, r1
 8003a6a:	68e3      	ldr	r3, [r4, #12]
 8003a6c:	085b      	lsrs	r3, r3, #1
 8003a6e:	3b01      	subs	r3, #1
 8003a70:	4093      	lsls	r3, r2
 8003a72:	68a2      	ldr	r2, [r4, #8]
 8003a74:	fa02 f707 	lsl.w	r7, r2, r7
 8003a78:	6862      	ldr	r2, [r4, #4]
 8003a7a:	433b      	orrs	r3, r7
 8003a7c:	4313      	orrs	r3, r2
 8003a7e:	6922      	ldr	r2, [r4, #16]
 8003a80:	fa02 f000 	lsl.w	r0, r2, r0
 8003a84:	6962      	ldr	r2, [r4, #20]
 8003a86:	fab1 f181 	clz	r1, r1
 8003a8a:	fa02 f101 	lsl.w	r1, r2, r1
 8003a8e:	4303      	orrs	r3, r0
 8003a90:	4a7b      	ldr	r2, [pc, #492]	; (8003c80 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8003a92:	430b      	orrs	r3, r1
 8003a94:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8003a98:	9a01      	ldr	r2, [sp, #4]
 8003a9a:	4e79      	ldr	r6, [pc, #484]	; (8003c80 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8003a9c:	2301      	movs	r3, #1
 8003a9e:	6013      	str	r3, [r2, #0]
 8003aa0:	f000 ff76 	bl	8004990 <HAL_GetTick>
 8003aa4:	4607      	mov	r7, r0
 8003aa6:	6833      	ldr	r3, [r6, #0]
 8003aa8:	011a      	lsls	r2, r3, #4
 8003aaa:	d44b      	bmi.n	8003b44 <HAL_RCCEx_PeriphCLKConfig+0x498>
 8003aac:	f000 ff70 	bl	8004990 <HAL_GetTick>
 8003ab0:	1bc0      	subs	r0, r0, r7
 8003ab2:	2802      	cmp	r0, #2
 8003ab4:	d9f7      	bls.n	8003aa6 <HAL_RCCEx_PeriphCLKConfig+0x3fa>
 8003ab6:	e008      	b.n	8003aca <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8003ab8:	2601      	movs	r6, #1
 8003aba:	e641      	b.n	8003740 <HAL_RCCEx_PeriphCLKConfig+0x94>
 8003abc:	f000 ff68 	bl	8004990 <HAL_GetTick>
 8003ac0:	eba0 0008 	sub.w	r0, r0, r8
 8003ac4:	2802      	cmp	r0, #2
 8003ac6:	f67f ae51 	bls.w	800376c <HAL_RCCEx_PeriphCLKConfig+0xc0>
 8003aca:	2003      	movs	r0, #3
 8003acc:	b005      	add	sp, #20
 8003ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8003ad2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003ad4:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8003ad8:	4293      	cmp	r3, r2
 8003ada:	f43f ae51 	beq.w	8003780 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8003ade:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003ae0:	4a68      	ldr	r2, [pc, #416]	; (8003c84 <HAL_RCCEx_PeriphCLKConfig+0x5d8>)
 8003ae2:	2101      	movs	r1, #1
 8003ae4:	6011      	str	r1, [r2, #0]
 8003ae6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003aea:	2100      	movs	r1, #0
 8003aec:	6011      	str	r1, [r2, #0]
 8003aee:	673b      	str	r3, [r7, #112]	; 0x70
 8003af0:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003af2:	07d9      	lsls	r1, r3, #31
 8003af4:	f57f ae44 	bpl.w	8003780 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8003af8:	f000 ff4a 	bl	8004990 <HAL_GetTick>
 8003afc:	f241 3988 	movw	r9, #5000	; 0x1388
 8003b00:	4680      	mov	r8, r0
 8003b02:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003b04:	079a      	lsls	r2, r3, #30
 8003b06:	f53f ae3b 	bmi.w	8003780 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8003b0a:	f000 ff41 	bl	8004990 <HAL_GetTick>
 8003b0e:	eba0 0008 	sub.w	r0, r0, r8
 8003b12:	4548      	cmp	r0, r9
 8003b14:	d9f5      	bls.n	8003b02 <HAL_RCCEx_PeriphCLKConfig+0x456>
 8003b16:	e7d8      	b.n	8003aca <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8003b18:	6891      	ldr	r1, [r2, #8]
 8003b1a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8003b1e:	e63f      	b.n	80037a0 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003b20:	4857      	ldr	r0, [pc, #348]	; (8003c80 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8003b22:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8003b24:	f8d0 2094 	ldr.w	r2, [r0, #148]	; 0x94
 8003b28:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8003b2c:	430a      	orrs	r2, r1
 8003b2e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
 8003b32:	f8c0 2094 	str.w	r2, [r0, #148]	; 0x94
 8003b36:	f47f ae74 	bne.w	8003822 <HAL_RCCEx_PeriphCLKConfig+0x176>
 8003b3a:	e675      	b.n	8003828 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8003b3c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003b40:	f43f ae72 	beq.w	8003828 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8003b44:	2d01      	cmp	r5, #1
 8003b46:	f040 8084 	bne.w	8003c52 <HAL_RCCEx_PeriphCLKConfig+0x5a6>
 8003b4a:	4d4f      	ldr	r5, [pc, #316]	; (8003c88 <HAL_RCCEx_PeriphCLKConfig+0x5dc>)
 8003b4c:	4e4c      	ldr	r6, [pc, #304]	; (8003c80 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8003b4e:	2300      	movs	r3, #0
 8003b50:	602b      	str	r3, [r5, #0]
 8003b52:	f000 ff1d 	bl	8004990 <HAL_GetTick>
 8003b56:	4607      	mov	r7, r0
 8003b58:	6833      	ldr	r3, [r6, #0]
 8003b5a:	009b      	lsls	r3, r3, #2
 8003b5c:	f100 8083 	bmi.w	8003c66 <HAL_RCCEx_PeriphCLKConfig+0x5ba>
 8003b60:	6820      	ldr	r0, [r4, #0]
 8003b62:	0746      	lsls	r6, r0, #29
 8003b64:	d501      	bpl.n	8003b6a <HAL_RCCEx_PeriphCLKConfig+0x4be>
 8003b66:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003b68:	b11b      	cbz	r3, 8003b72 <HAL_RCCEx_PeriphCLKConfig+0x4c6>
 8003b6a:	0701      	lsls	r1, r0, #28
 8003b6c:	d538      	bpl.n	8003be0 <HAL_RCCEx_PeriphCLKConfig+0x534>
 8003b6e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003b70:	bbb3      	cbnz	r3, 8003be0 <HAL_RCCEx_PeriphCLKConfig+0x534>
 8003b72:	4943      	ldr	r1, [pc, #268]	; (8003c80 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8003b74:	f44f 3640 	mov.w	r6, #196608	; 0x30000
 8003b78:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8003b7c:	fa96 fea6 	rbit	lr, r6
 8003b80:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8003b84:	fabe fe8e 	clz	lr, lr
 8003b88:	fa92 f2a2 	rbit	r2, r2
 8003b8c:	fab2 f782 	clz	r7, r2
 8003b90:	fa96 f6a6 	rbit	r6, r6
 8003b94:	f04f 6c70 	mov.w	r12, #251658240	; 0xf000000
 8003b98:	fab6 f686 	clz	r6, r6
 8003b9c:	fa9c fcac 	rbit	r12, r12
 8003ba0:	69e2      	ldr	r2, [r4, #28]
 8003ba2:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003ba6:	40ba      	lsls	r2, r7
 8003ba8:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8003baa:	fabc fc8c 	clz	r12, r12
 8003bae:	fa23 f30e 	lsr.w	r3, r3, lr
 8003bb2:	fa07 f70c 	lsl.w	r7, r7, r12
 8003bb6:	3301      	adds	r3, #1
 8003bb8:	433a      	orrs	r2, r7
 8003bba:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003bbe:	69a7      	ldr	r7, [r4, #24]
 8003bc0:	3b01      	subs	r3, #1
 8003bc2:	433a      	orrs	r2, r7
 8003bc4:	40b3      	lsls	r3, r6
 8003bc6:	4313      	orrs	r3, r2
 8003bc8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003bcc:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8003bd0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8003bd2:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8003bd6:	3a01      	subs	r2, #1
 8003bd8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8003bdc:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8003be0:	05c2      	lsls	r2, r0, #23
 8003be2:	d52d      	bpl.n	8003c40 <HAL_RCCEx_PeriphCLKConfig+0x594>
 8003be4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8003be6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8003bea:	d129      	bne.n	8003c40 <HAL_RCCEx_PeriphCLKConfig+0x594>
 8003bec:	4924      	ldr	r1, [pc, #144]	; (8003c80 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8003bee:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 8003bf2:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8003bf6:	fa90 f6a0 	rbit	r6, r0
 8003bfa:	f647 7ec0 	movw	lr, #32704	; 0x7fc0
 8003bfe:	fab6 f686 	clz	r6, r6
 8003c02:	fa9e feae 	rbit	lr, lr
 8003c06:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8003c0a:	fabe fe8e 	clz	lr, lr
 8003c0e:	fa93 f3a3 	rbit	r3, r3
 8003c12:	fab3 f783 	clz	r7, r3
 8003c16:	fa90 f0a0 	rbit	r0, r0
 8003c1a:	6a23      	ldr	r3, [r4, #32]
 8003c1c:	085b      	lsrs	r3, r3, #1
 8003c1e:	3b01      	subs	r3, #1
 8003c20:	40bb      	lsls	r3, r7
 8003c22:	69e7      	ldr	r7, [r4, #28]
 8003c24:	69a4      	ldr	r4, [r4, #24]
 8003c26:	fa07 f70e 	lsl.w	r7, r7, lr
 8003c2a:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 8003c2e:	fab0 f080 	clz	r0, r0
 8003c32:	433b      	orrs	r3, r7
 8003c34:	40f2      	lsrs	r2, r6
 8003c36:	4323      	orrs	r3, r4
 8003c38:	4082      	lsls	r2, r0
 8003c3a:	4313      	orrs	r3, r2
 8003c3c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003c40:	2301      	movs	r3, #1
 8003c42:	602b      	str	r3, [r5, #0]
 8003c44:	f000 fea4 	bl	8004990 <HAL_GetTick>
 8003c48:	4c0d      	ldr	r4, [pc, #52]	; (8003c80 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8003c4a:	4605      	mov	r5, r0
 8003c4c:	6823      	ldr	r3, [r4, #0]
 8003c4e:	009b      	lsls	r3, r3, #2
 8003c50:	d510      	bpl.n	8003c74 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 8003c52:	2000      	movs	r0, #0
 8003c54:	e73a      	b.n	8003acc <HAL_RCCEx_PeriphCLKConfig+0x420>
 8003c56:	f000 fe9b 	bl	8004990 <HAL_GetTick>
 8003c5a:	eba0 0008 	sub.w	r0, r0, r8
 8003c5e:	2802      	cmp	r0, #2
 8003c60:	f67f adea 	bls.w	8003838 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 8003c64:	e731      	b.n	8003aca <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8003c66:	f000 fe93 	bl	8004990 <HAL_GetTick>
 8003c6a:	1bc0      	subs	r0, r0, r7
 8003c6c:	2802      	cmp	r0, #2
 8003c6e:	f67f af73 	bls.w	8003b58 <HAL_RCCEx_PeriphCLKConfig+0x4ac>
 8003c72:	e72a      	b.n	8003aca <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8003c74:	f000 fe8c 	bl	8004990 <HAL_GetTick>
 8003c78:	1b40      	subs	r0, r0, r5
 8003c7a:	2802      	cmp	r0, #2
 8003c7c:	d9e6      	bls.n	8003c4c <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003c7e:	e724      	b.n	8003aca <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8003c80:	40023800 	.word	0x40023800
 8003c84:	42470e40 	.word	0x42470e40
 8003c88:	42470070 	.word	0x42470070

08003c8c <HAL_RCC_OscConfig>:
 8003c8c:	6803      	ldr	r3, [r0, #0]
 8003c8e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003c90:	07df      	lsls	r7, r3, #31
 8003c92:	4604      	mov	r4, r0
 8003c94:	d438      	bmi.n	8003d08 <HAL_RCC_OscConfig+0x7c>
 8003c96:	6823      	ldr	r3, [r4, #0]
 8003c98:	079e      	lsls	r6, r3, #30
 8003c9a:	d47a      	bmi.n	8003d92 <HAL_RCC_OscConfig+0x106>
 8003c9c:	6823      	ldr	r3, [r4, #0]
 8003c9e:	071e      	lsls	r6, r3, #28
 8003ca0:	f100 80cf 	bmi.w	8003e42 <HAL_RCC_OscConfig+0x1b6>
 8003ca4:	6823      	ldr	r3, [r4, #0]
 8003ca6:	075d      	lsls	r5, r3, #29
 8003ca8:	d528      	bpl.n	8003cfc <HAL_RCC_OscConfig+0x70>
 8003caa:	2300      	movs	r3, #0
 8003cac:	9301      	str	r3, [sp, #4]
 8003cae:	4baf      	ldr	r3, [pc, #700]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003cb0:	4daf      	ldr	r5, [pc, #700]	; (8003f70 <HAL_RCC_OscConfig+0x2e4>)
 8003cb2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003cb4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003cb8:	641a      	str	r2, [r3, #64]	; 0x40
 8003cba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cbc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003cc0:	9301      	str	r3, [sp, #4]
 8003cc2:	9b01      	ldr	r3, [sp, #4]
 8003cc4:	682b      	ldr	r3, [r5, #0]
 8003cc6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003cca:	602b      	str	r3, [r5, #0]
 8003ccc:	f000 fe60 	bl	8004990 <HAL_GetTick>
 8003cd0:	4606      	mov	r6, r0
 8003cd2:	682b      	ldr	r3, [r5, #0]
 8003cd4:	05da      	lsls	r2, r3, #23
 8003cd6:	f140 80d6 	bpl.w	8003e86 <HAL_RCC_OscConfig+0x1fa>
 8003cda:	4ba6      	ldr	r3, [pc, #664]	; (8003f74 <HAL_RCC_OscConfig+0x2e8>)
 8003cdc:	7a22      	ldrb	r2, [r4, #8]
 8003cde:	701a      	strb	r2, [r3, #0]
 8003ce0:	68a3      	ldr	r3, [r4, #8]
 8003ce2:	2b00      	cmp	r3, #0
 8003ce4:	f000 80dd 	beq.w	8003ea2 <HAL_RCC_OscConfig+0x216>
 8003ce8:	f000 fe52 	bl	8004990 <HAL_GetTick>
 8003cec:	4d9f      	ldr	r5, [pc, #636]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003cee:	4606      	mov	r6, r0
 8003cf0:	f241 3788 	movw	r7, #5000	; 0x1388
 8003cf4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8003cf6:	079b      	lsls	r3, r3, #30
 8003cf8:	f140 80cc 	bpl.w	8003e94 <HAL_RCC_OscConfig+0x208>
 8003cfc:	69a2      	ldr	r2, [r4, #24]
 8003cfe:	2a00      	cmp	r2, #0
 8003d00:	f040 80df 	bne.w	8003ec2 <HAL_RCC_OscConfig+0x236>
 8003d04:	2000      	movs	r0, #0
 8003d06:	e01e      	b.n	8003d46 <HAL_RCC_OscConfig+0xba>
 8003d08:	4b98      	ldr	r3, [pc, #608]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003d0a:	689a      	ldr	r2, [r3, #8]
 8003d0c:	f002 020c 	and.w	r2, r2, #12
 8003d10:	2a04      	cmp	r2, #4
 8003d12:	d010      	beq.n	8003d36 <HAL_RCC_OscConfig+0xaa>
 8003d14:	689a      	ldr	r2, [r3, #8]
 8003d16:	f002 020c 	and.w	r2, r2, #12
 8003d1a:	2a08      	cmp	r2, #8
 8003d1c:	d102      	bne.n	8003d24 <HAL_RCC_OscConfig+0x98>
 8003d1e:	685b      	ldr	r3, [r3, #4]
 8003d20:	025d      	lsls	r5, r3, #9
 8003d22:	d408      	bmi.n	8003d36 <HAL_RCC_OscConfig+0xaa>
 8003d24:	4a91      	ldr	r2, [pc, #580]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003d26:	6893      	ldr	r3, [r2, #8]
 8003d28:	f003 030c 	and.w	r3, r3, #12
 8003d2c:	2b0c      	cmp	r3, #12
 8003d2e:	d10c      	bne.n	8003d4a <HAL_RCC_OscConfig+0xbe>
 8003d30:	6853      	ldr	r3, [r2, #4]
 8003d32:	0258      	lsls	r0, r3, #9
 8003d34:	d509      	bpl.n	8003d4a <HAL_RCC_OscConfig+0xbe>
 8003d36:	4b8d      	ldr	r3, [pc, #564]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003d38:	681b      	ldr	r3, [r3, #0]
 8003d3a:	0399      	lsls	r1, r3, #14
 8003d3c:	d5ab      	bpl.n	8003c96 <HAL_RCC_OscConfig+0xa>
 8003d3e:	6863      	ldr	r3, [r4, #4]
 8003d40:	2b00      	cmp	r3, #0
 8003d42:	d1a8      	bne.n	8003c96 <HAL_RCC_OscConfig+0xa>
 8003d44:	2001      	movs	r0, #1
 8003d46:	b003      	add	sp, #12
 8003d48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003d4a:	4b8b      	ldr	r3, [pc, #556]	; (8003f78 <HAL_RCC_OscConfig+0x2ec>)
 8003d4c:	7922      	ldrb	r2, [r4, #4]
 8003d4e:	701a      	strb	r2, [r3, #0]
 8003d50:	6863      	ldr	r3, [r4, #4]
 8003d52:	b17b      	cbz	r3, 8003d74 <HAL_RCC_OscConfig+0xe8>
 8003d54:	f000 fe1c 	bl	8004990 <HAL_GetTick>
 8003d58:	4d84      	ldr	r5, [pc, #528]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003d5a:	4606      	mov	r6, r0
 8003d5c:	f241 3788 	movw	r7, #5000	; 0x1388
 8003d60:	682b      	ldr	r3, [r5, #0]
 8003d62:	039a      	lsls	r2, r3, #14
 8003d64:	d497      	bmi.n	8003c96 <HAL_RCC_OscConfig+0xa>
 8003d66:	f000 fe13 	bl	8004990 <HAL_GetTick>
 8003d6a:	1b80      	subs	r0, r0, r6
 8003d6c:	42b8      	cmp	r0, r7
 8003d6e:	d9f7      	bls.n	8003d60 <HAL_RCC_OscConfig+0xd4>
 8003d70:	2003      	movs	r0, #3
 8003d72:	e7e8      	b.n	8003d46 <HAL_RCC_OscConfig+0xba>
 8003d74:	f000 fe0c 	bl	8004990 <HAL_GetTick>
 8003d78:	4d7c      	ldr	r5, [pc, #496]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003d7a:	4606      	mov	r6, r0
 8003d7c:	f241 3788 	movw	r7, #5000	; 0x1388
 8003d80:	682b      	ldr	r3, [r5, #0]
 8003d82:	039b      	lsls	r3, r3, #14
 8003d84:	d587      	bpl.n	8003c96 <HAL_RCC_OscConfig+0xa>
 8003d86:	f000 fe03 	bl	8004990 <HAL_GetTick>
 8003d8a:	1b80      	subs	r0, r0, r6
 8003d8c:	42b8      	cmp	r0, r7
 8003d8e:	d9f7      	bls.n	8003d80 <HAL_RCC_OscConfig+0xf4>
 8003d90:	e7ee      	b.n	8003d70 <HAL_RCC_OscConfig+0xe4>
 8003d92:	4b76      	ldr	r3, [pc, #472]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003d94:	689a      	ldr	r2, [r3, #8]
 8003d96:	f012 0f0c 	tst.w	r2, #12
 8003d9a:	d010      	beq.n	8003dbe <HAL_RCC_OscConfig+0x132>
 8003d9c:	689a      	ldr	r2, [r3, #8]
 8003d9e:	f002 020c 	and.w	r2, r2, #12
 8003da2:	2a08      	cmp	r2, #8
 8003da4:	d102      	bne.n	8003dac <HAL_RCC_OscConfig+0x120>
 8003da6:	685b      	ldr	r3, [r3, #4]
 8003da8:	0258      	lsls	r0, r3, #9
 8003daa:	d508      	bpl.n	8003dbe <HAL_RCC_OscConfig+0x132>
 8003dac:	4a6f      	ldr	r2, [pc, #444]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003dae:	6893      	ldr	r3, [r2, #8]
 8003db0:	f003 030c 	and.w	r3, r3, #12
 8003db4:	2b0c      	cmp	r3, #12
 8003db6:	d116      	bne.n	8003de6 <HAL_RCC_OscConfig+0x15a>
 8003db8:	6853      	ldr	r3, [r2, #4]
 8003dba:	0259      	lsls	r1, r3, #9
 8003dbc:	d413      	bmi.n	8003de6 <HAL_RCC_OscConfig+0x15a>
 8003dbe:	4b6b      	ldr	r3, [pc, #428]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003dc0:	681a      	ldr	r2, [r3, #0]
 8003dc2:	0792      	lsls	r2, r2, #30
 8003dc4:	d502      	bpl.n	8003dcc <HAL_RCC_OscConfig+0x140>
 8003dc6:	68e2      	ldr	r2, [r4, #12]
 8003dc8:	2a01      	cmp	r2, #1
 8003dca:	d1bb      	bne.n	8003d44 <HAL_RCC_OscConfig+0xb8>
 8003dcc:	6818      	ldr	r0, [r3, #0]
 8003dce:	22f8      	movs	r2, #248	; 0xf8
 8003dd0:	fa92 f2a2 	rbit	r2, r2
 8003dd4:	fab2 f182 	clz	r1, r2
 8003dd8:	6922      	ldr	r2, [r4, #16]
 8003dda:	408a      	lsls	r2, r1
 8003ddc:	f020 01f8 	bic.w	r1, r0, #248	; 0xf8
 8003de0:	430a      	orrs	r2, r1
 8003de2:	601a      	str	r2, [r3, #0]
 8003de4:	e75a      	b.n	8003c9c <HAL_RCC_OscConfig+0x10>
 8003de6:	68e2      	ldr	r2, [r4, #12]
 8003de8:	4b64      	ldr	r3, [pc, #400]	; (8003f7c <HAL_RCC_OscConfig+0x2f0>)
 8003dea:	b1da      	cbz	r2, 8003e24 <HAL_RCC_OscConfig+0x198>
 8003dec:	2201      	movs	r2, #1
 8003dee:	601a      	str	r2, [r3, #0]
 8003df0:	f000 fdce 	bl	8004990 <HAL_GetTick>
 8003df4:	4d5d      	ldr	r5, [pc, #372]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003df6:	4606      	mov	r6, r0
 8003df8:	682b      	ldr	r3, [r5, #0]
 8003dfa:	079b      	lsls	r3, r3, #30
 8003dfc:	d50c      	bpl.n	8003e18 <HAL_RCC_OscConfig+0x18c>
 8003dfe:	6829      	ldr	r1, [r5, #0]
 8003e00:	23f8      	movs	r3, #248	; 0xf8
 8003e02:	fa93 f3a3 	rbit	r3, r3
 8003e06:	fab3 f283 	clz	r2, r3
 8003e0a:	6923      	ldr	r3, [r4, #16]
 8003e0c:	4093      	lsls	r3, r2
 8003e0e:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 8003e12:	4313      	orrs	r3, r2
 8003e14:	602b      	str	r3, [r5, #0]
 8003e16:	e741      	b.n	8003c9c <HAL_RCC_OscConfig+0x10>
 8003e18:	f000 fdba 	bl	8004990 <HAL_GetTick>
 8003e1c:	1b80      	subs	r0, r0, r6
 8003e1e:	2802      	cmp	r0, #2
 8003e20:	d9ea      	bls.n	8003df8 <HAL_RCC_OscConfig+0x16c>
 8003e22:	e7a5      	b.n	8003d70 <HAL_RCC_OscConfig+0xe4>
 8003e24:	601a      	str	r2, [r3, #0]
 8003e26:	f000 fdb3 	bl	8004990 <HAL_GetTick>
 8003e2a:	4d50      	ldr	r5, [pc, #320]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003e2c:	4606      	mov	r6, r0
 8003e2e:	682b      	ldr	r3, [r5, #0]
 8003e30:	079f      	lsls	r7, r3, #30
 8003e32:	f57f af33 	bpl.w	8003c9c <HAL_RCC_OscConfig+0x10>
 8003e36:	f000 fdab 	bl	8004990 <HAL_GetTick>
 8003e3a:	1b80      	subs	r0, r0, r6
 8003e3c:	2802      	cmp	r0, #2
 8003e3e:	d9f6      	bls.n	8003e2e <HAL_RCC_OscConfig+0x1a2>
 8003e40:	e796      	b.n	8003d70 <HAL_RCC_OscConfig+0xe4>
 8003e42:	6962      	ldr	r2, [r4, #20]
 8003e44:	4b4e      	ldr	r3, [pc, #312]	; (8003f80 <HAL_RCC_OscConfig+0x2f4>)
 8003e46:	b17a      	cbz	r2, 8003e68 <HAL_RCC_OscConfig+0x1dc>
 8003e48:	2201      	movs	r2, #1
 8003e4a:	601a      	str	r2, [r3, #0]
 8003e4c:	f000 fda0 	bl	8004990 <HAL_GetTick>
 8003e50:	4d46      	ldr	r5, [pc, #280]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003e52:	4606      	mov	r6, r0
 8003e54:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8003e56:	0798      	lsls	r0, r3, #30
 8003e58:	f53f af24 	bmi.w	8003ca4 <HAL_RCC_OscConfig+0x18>
 8003e5c:	f000 fd98 	bl	8004990 <HAL_GetTick>
 8003e60:	1b80      	subs	r0, r0, r6
 8003e62:	2802      	cmp	r0, #2
 8003e64:	d9f6      	bls.n	8003e54 <HAL_RCC_OscConfig+0x1c8>
 8003e66:	e783      	b.n	8003d70 <HAL_RCC_OscConfig+0xe4>
 8003e68:	601a      	str	r2, [r3, #0]
 8003e6a:	f000 fd91 	bl	8004990 <HAL_GetTick>
 8003e6e:	4d3f      	ldr	r5, [pc, #252]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003e70:	4606      	mov	r6, r0
 8003e72:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8003e74:	0799      	lsls	r1, r3, #30
 8003e76:	f57f af15 	bpl.w	8003ca4 <HAL_RCC_OscConfig+0x18>
 8003e7a:	f000 fd89 	bl	8004990 <HAL_GetTick>
 8003e7e:	1b80      	subs	r0, r0, r6
 8003e80:	2802      	cmp	r0, #2
 8003e82:	d9f6      	bls.n	8003e72 <HAL_RCC_OscConfig+0x1e6>
 8003e84:	e774      	b.n	8003d70 <HAL_RCC_OscConfig+0xe4>
 8003e86:	f000 fd83 	bl	8004990 <HAL_GetTick>
 8003e8a:	1b80      	subs	r0, r0, r6
 8003e8c:	2802      	cmp	r0, #2
 8003e8e:	f67f af20 	bls.w	8003cd2 <HAL_RCC_OscConfig+0x46>
 8003e92:	e76d      	b.n	8003d70 <HAL_RCC_OscConfig+0xe4>
 8003e94:	f000 fd7c 	bl	8004990 <HAL_GetTick>
 8003e98:	1b80      	subs	r0, r0, r6
 8003e9a:	42b8      	cmp	r0, r7
 8003e9c:	f67f af2a 	bls.w	8003cf4 <HAL_RCC_OscConfig+0x68>
 8003ea0:	e766      	b.n	8003d70 <HAL_RCC_OscConfig+0xe4>
 8003ea2:	f000 fd75 	bl	8004990 <HAL_GetTick>
 8003ea6:	4d31      	ldr	r5, [pc, #196]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003ea8:	4606      	mov	r6, r0
 8003eaa:	f241 3788 	movw	r7, #5000	; 0x1388
 8003eae:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8003eb0:	0798      	lsls	r0, r3, #30
 8003eb2:	f57f af23 	bpl.w	8003cfc <HAL_RCC_OscConfig+0x70>
 8003eb6:	f000 fd6b 	bl	8004990 <HAL_GetTick>
 8003eba:	1b80      	subs	r0, r0, r6
 8003ebc:	42b8      	cmp	r0, r7
 8003ebe:	d9f6      	bls.n	8003eae <HAL_RCC_OscConfig+0x222>
 8003ec0:	e756      	b.n	8003d70 <HAL_RCC_OscConfig+0xe4>
 8003ec2:	4d2a      	ldr	r5, [pc, #168]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003ec4:	68ab      	ldr	r3, [r5, #8]
 8003ec6:	f003 030c 	and.w	r3, r3, #12
 8003eca:	2b08      	cmp	r3, #8
 8003ecc:	f43f af3a 	beq.w	8003d44 <HAL_RCC_OscConfig+0xb8>
 8003ed0:	4e2c      	ldr	r6, [pc, #176]	; (8003f84 <HAL_RCC_OscConfig+0x2f8>)
 8003ed2:	2300      	movs	r3, #0
 8003ed4:	2a02      	cmp	r2, #2
 8003ed6:	6033      	str	r3, [r6, #0]
 8003ed8:	d156      	bne.n	8003f88 <HAL_RCC_OscConfig+0x2fc>
 8003eda:	f000 fd59 	bl	8004990 <HAL_GetTick>
 8003ede:	4607      	mov	r7, r0
 8003ee0:	682b      	ldr	r3, [r5, #0]
 8003ee2:	0199      	lsls	r1, r3, #6
 8003ee4:	d43c      	bmi.n	8003f60 <HAL_RCC_OscConfig+0x2d4>
 8003ee6:	f647 7ec0 	movw	lr, #32704	; 0x7fc0
 8003eea:	fa9e feae 	rbit	lr, lr
 8003eee:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8003ef2:	fabe fe8e 	clz	lr, lr
 8003ef6:	fa92 f2a2 	rbit	r2, r2
 8003efa:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 8003efe:	fab2 f782 	clz	r7, r2
 8003f02:	fa90 f0a0 	rbit	r0, r0
 8003f06:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
 8003f0a:	fab0 f080 	clz	r0, r0
 8003f0e:	fa91 f1a1 	rbit	r1, r1
 8003f12:	6a22      	ldr	r2, [r4, #32]
 8003f14:	69e3      	ldr	r3, [r4, #28]
 8003f16:	4313      	orrs	r3, r2
 8003f18:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003f1a:	fa02 f20e 	lsl.w	r2, r2, lr
 8003f1e:	4313      	orrs	r3, r2
 8003f20:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8003f22:	0852      	lsrs	r2, r2, #1
 8003f24:	3a01      	subs	r2, #1
 8003f26:	40ba      	lsls	r2, r7
 8003f28:	4313      	orrs	r3, r2
 8003f2a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8003f2c:	fa02 f000 	lsl.w	r0, r2, r0
 8003f30:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8003f32:	4c0e      	ldr	r4, [pc, #56]	; (8003f6c <HAL_RCC_OscConfig+0x2e0>)
 8003f34:	fab1 f181 	clz	r1, r1
 8003f38:	4303      	orrs	r3, r0
 8003f3a:	fa02 f101 	lsl.w	r1, r2, r1
 8003f3e:	430b      	orrs	r3, r1
 8003f40:	606b      	str	r3, [r5, #4]
 8003f42:	2301      	movs	r3, #1
 8003f44:	6033      	str	r3, [r6, #0]
 8003f46:	f000 fd23 	bl	8004990 <HAL_GetTick>
 8003f4a:	4605      	mov	r5, r0
 8003f4c:	6823      	ldr	r3, [r4, #0]
 8003f4e:	019a      	lsls	r2, r3, #6
 8003f50:	f53f aed8 	bmi.w	8003d04 <HAL_RCC_OscConfig+0x78>
 8003f54:	f000 fd1c 	bl	8004990 <HAL_GetTick>
 8003f58:	1b40      	subs	r0, r0, r5
 8003f5a:	2802      	cmp	r0, #2
 8003f5c:	d9f6      	bls.n	8003f4c <HAL_RCC_OscConfig+0x2c0>
 8003f5e:	e707      	b.n	8003d70 <HAL_RCC_OscConfig+0xe4>
 8003f60:	f000 fd16 	bl	8004990 <HAL_GetTick>
 8003f64:	1bc0      	subs	r0, r0, r7
 8003f66:	2802      	cmp	r0, #2
 8003f68:	d9ba      	bls.n	8003ee0 <HAL_RCC_OscConfig+0x254>
 8003f6a:	e701      	b.n	8003d70 <HAL_RCC_OscConfig+0xe4>
 8003f6c:	40023800 	.word	0x40023800
 8003f70:	40007000 	.word	0x40007000
 8003f74:	40023870 	.word	0x40023870
 8003f78:	40023802 	.word	0x40023802
 8003f7c:	42470000 	.word	0x42470000
 8003f80:	42470e80 	.word	0x42470e80
 8003f84:	42470060 	.word	0x42470060
 8003f88:	f000 fd02 	bl	8004990 <HAL_GetTick>
 8003f8c:	4604      	mov	r4, r0
 8003f8e:	682b      	ldr	r3, [r5, #0]
 8003f90:	019b      	lsls	r3, r3, #6
 8003f92:	f57f aeb7 	bpl.w	8003d04 <HAL_RCC_OscConfig+0x78>
 8003f96:	f000 fcfb 	bl	8004990 <HAL_GetTick>
 8003f9a:	1b00      	subs	r0, r0, r4
 8003f9c:	2802      	cmp	r0, #2
 8003f9e:	d9f6      	bls.n	8003f8e <HAL_RCC_OscConfig+0x302>
 8003fa0:	e6e6      	b.n	8003d70 <HAL_RCC_OscConfig+0xe4>
 8003fa2:	bf00      	nop

08003fa4 <HAL_RCC_GetSysClockFreq>:
 8003fa4:	4b2b      	ldr	r3, [pc, #172]	; (8004054 <HAL_RCC_GetSysClockFreq+0xb0>)
 8003fa6:	689a      	ldr	r2, [r3, #8]
 8003fa8:	f002 020c 	and.w	r2, r2, #12
 8003fac:	2a08      	cmp	r2, #8
 8003fae:	d007      	beq.n	8003fc0 <HAL_RCC_GetSysClockFreq+0x1c>
 8003fb0:	2a0c      	cmp	r2, #12
 8003fb2:	d02c      	beq.n	800400e <HAL_RCC_GetSysClockFreq+0x6a>
 8003fb4:	4b28      	ldr	r3, [pc, #160]	; (8004058 <HAL_RCC_GetSysClockFreq+0xb4>)
 8003fb6:	4829      	ldr	r0, [pc, #164]	; (800405c <HAL_RCC_GetSysClockFreq+0xb8>)
 8003fb8:	2a04      	cmp	r2, #4
 8003fba:	bf18      	it	ne
 8003fbc:	4618      	movne	r0, r3
 8003fbe:	4770      	bx	lr
 8003fc0:	685a      	ldr	r2, [r3, #4]
 8003fc2:	6859      	ldr	r1, [r3, #4]
 8003fc4:	685b      	ldr	r3, [r3, #4]
 8003fc6:	f411 0f80 	tst.w	r1, #4194304	; 0x400000
 8003fca:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8003fce:	f647 71c0 	movw	r1, #32704	; 0x7fc0
 8003fd2:	fa91 f0a1 	rbit	r0, r1
 8003fd6:	fab0 f080 	clz	r0, r0
 8003fda:	ea03 0301 	and.w	r3, r3, r1
 8003fde:	fa23 f300 	lsr.w	r3, r3, r0
 8003fe2:	bf14      	ite	ne
 8003fe4:	481d      	ldrne	r0, [pc, #116]	; (800405c <HAL_RCC_GetSysClockFreq+0xb8>)
 8003fe6:	481c      	ldreq	r0, [pc, #112]	; (8004058 <HAL_RCC_GetSysClockFreq+0xb4>)
 8003fe8:	fbb0 f0f2 	udiv	r0, r0, r2
 8003fec:	4358      	muls	r0, r3
 8003fee:	4b19      	ldr	r3, [pc, #100]	; (8004054 <HAL_RCC_GetSysClockFreq+0xb0>)
 8003ff0:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8003ff4:	685b      	ldr	r3, [r3, #4]
 8003ff6:	fa92 f2a2 	rbit	r2, r2
 8003ffa:	fab2 f282 	clz	r2, r2
 8003ffe:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004002:	40d3      	lsrs	r3, r2
 8004004:	3301      	adds	r3, #1
 8004006:	005b      	lsls	r3, r3, #1
 8004008:	fbb0 f0f3 	udiv	r0, r0, r3
 800400c:	4770      	bx	lr
 800400e:	685a      	ldr	r2, [r3, #4]
 8004010:	6859      	ldr	r1, [r3, #4]
 8004012:	685b      	ldr	r3, [r3, #4]
 8004014:	f411 0f80 	tst.w	r1, #4194304	; 0x400000
 8004018:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800401c:	f647 71c0 	movw	r1, #32704	; 0x7fc0
 8004020:	fa91 f0a1 	rbit	r0, r1
 8004024:	fab0 f080 	clz	r0, r0
 8004028:	ea03 0301 	and.w	r3, r3, r1
 800402c:	fa23 f300 	lsr.w	r3, r3, r0
 8004030:	bf14      	ite	ne
 8004032:	480a      	ldrne	r0, [pc, #40]	; (800405c <HAL_RCC_GetSysClockFreq+0xb8>)
 8004034:	4808      	ldreq	r0, [pc, #32]	; (8004058 <HAL_RCC_GetSysClockFreq+0xb4>)
 8004036:	fbb0 f0f2 	udiv	r0, r0, r2
 800403a:	4358      	muls	r0, r3
 800403c:	4b05      	ldr	r3, [pc, #20]	; (8004054 <HAL_RCC_GetSysClockFreq+0xb0>)
 800403e:	f04f 42e0 	mov.w	r2, #1879048192	; 0x70000000
 8004042:	685b      	ldr	r3, [r3, #4]
 8004044:	fa92 f2a2 	rbit	r2, r2
 8004048:	fab2 f282 	clz	r2, r2
 800404c:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8004050:	40d3      	lsrs	r3, r2
 8004052:	e7d9      	b.n	8004008 <HAL_RCC_GetSysClockFreq+0x64>
 8004054:	40023800 	.word	0x40023800
 8004058:	00f42400 	.word	0x00f42400
 800405c:	007a1200 	.word	0x007a1200

08004060 <HAL_GPIO_Init>:
 8004060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8004064:	b085      	sub	sp, #20
 8004066:	680b      	ldr	r3, [r1, #0]
 8004068:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 800420c <HAL_GPIO_Init+0x1ac>
 800406c:	4a65      	ldr	r2, [pc, #404]	; (8004204 <HAL_GPIO_Init+0x1a4>)
 800406e:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 8004210 <HAL_GPIO_Init+0x1b0>
 8004072:	9301      	str	r3, [sp, #4]
 8004074:	2300      	movs	r3, #0
 8004076:	f04f 0e01 	mov.w	lr, #1
 800407a:	9c01      	ldr	r4, [sp, #4]
 800407c:	fa0e fe03 	lsl.w	lr, lr, r3
 8004080:	ea0e 0604 	and.w	r6, lr, r4
 8004084:	45b6      	cmp	lr, r6
 8004086:	f040 80aa 	bne.w	80041de <HAL_GPIO_Init+0x17e>
 800408a:	684c      	ldr	r4, [r1, #4]
 800408c:	f024 0710 	bic.w	r7, r4, #16
 8004090:	2f02      	cmp	r7, #2
 8004092:	d116      	bne.n	80040c2 <HAL_GPIO_Init+0x62>
 8004094:	ea4f 0ad3 	mov.w	r10, r3, lsr #3
 8004098:	eb00 0a8a 	add.w	r10, r0, r10, lsl #2
 800409c:	f003 0b07 	and.w	r11, r3, #7
 80040a0:	f8da 5020 	ldr.w	r5, [r10, #32]
 80040a4:	ea4f 0b8b 	mov.w	r11, r11, lsl #2
 80040a8:	f04f 0c0f 	mov.w	r12, #15
 80040ac:	fa0c fc0b 	lsl.w	r12, r12, r11
 80040b0:	ea25 0c0c 	bic.w	r12, r5, r12
 80040b4:	690d      	ldr	r5, [r1, #16]
 80040b6:	fa05 f50b 	lsl.w	r5, r5, r11
 80040ba:	ea45 050c 	orr.w	r5, r5, r12
 80040be:	f8ca 5020 	str.w	r5, [r10, #32]
 80040c2:	ea4f 0a43 	mov.w	r10, r3, lsl #1
 80040c6:	2503      	movs	r5, #3
 80040c8:	f8d0 b000 	ldr.w	r11, [r0]
 80040cc:	fa05 f50a 	lsl.w	r5, r5, r10
 80040d0:	43ed      	mvns	r5, r5
 80040d2:	f004 0c03 	and.w	r12, r4, #3
 80040d6:	ea0b 0b05 	and.w	r11, r11, r5
 80040da:	fa0c fc0a 	lsl.w	r12, r12, r10
 80040de:	3f01      	subs	r7, #1
 80040e0:	ea4c 0c0b 	orr.w	r12, r12, r11
 80040e4:	2f01      	cmp	r7, #1
 80040e6:	f8c0 c000 	str.w	r12, [r0]
 80040ea:	d811      	bhi.n	8004110 <HAL_GPIO_Init+0xb0>
 80040ec:	6887      	ldr	r7, [r0, #8]
 80040ee:	ea07 0b05 	and.w	r11, r7, r5
 80040f2:	68cf      	ldr	r7, [r1, #12]
 80040f4:	fa07 fc0a 	lsl.w	r12, r7, r10
 80040f8:	ea4c 070b 	orr.w	r7, r12, r11
 80040fc:	6087      	str	r7, [r0, #8]
 80040fe:	6847      	ldr	r7, [r0, #4]
 8004100:	ea27 0e0e 	bic.w	lr, r7, lr
 8004104:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8004108:	409f      	lsls	r7, r3
 800410a:	ea47 070e 	orr.w	r7, r7, lr
 800410e:	6047      	str	r7, [r0, #4]
 8004110:	68c7      	ldr	r7, [r0, #12]
 8004112:	403d      	ands	r5, r7
 8004114:	688f      	ldr	r7, [r1, #8]
 8004116:	fa07 f70a 	lsl.w	r7, r7, r10
 800411a:	433d      	orrs	r5, r7
 800411c:	60c5      	str	r5, [r0, #12]
 800411e:	00e5      	lsls	r5, r4, #3
 8004120:	d55d      	bpl.n	80041de <HAL_GPIO_Init+0x17e>
 8004122:	f04f 0b00 	mov.w	r11, #0
 8004126:	f8cd b00c 	str.w	r11, [sp, #12]
 800412a:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 800412e:	4d36      	ldr	r5, [pc, #216]	; (8004208 <HAL_GPIO_Init+0x1a8>)
 8004130:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8004134:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8004138:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 800413c:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8004140:	9703      	str	r7, [sp, #12]
 8004142:	9f03      	ldr	r7, [sp, #12]
 8004144:	f023 0703 	bic.w	r7, r3, #3
 8004148:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 800414c:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
 8004150:	f003 0c03 	and.w	r12, r3, #3
 8004154:	f8d7 a008 	ldr.w	r10, [r7, #8]
 8004158:	ea4f 0c8c 	mov.w	r12, r12, lsl #2
 800415c:	f04f 0e0f 	mov.w	lr, #15
 8004160:	fa0e fe0c 	lsl.w	lr, lr, r12
 8004164:	42a8      	cmp	r0, r5
 8004166:	ea2a 0e0e 	bic.w	lr, r10, lr
 800416a:	d03f      	beq.n	80041ec <HAL_GPIO_Init+0x18c>
 800416c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004170:	42a8      	cmp	r0, r5
 8004172:	d03d      	beq.n	80041f0 <HAL_GPIO_Init+0x190>
 8004174:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004178:	42a8      	cmp	r0, r5
 800417a:	d03b      	beq.n	80041f4 <HAL_GPIO_Init+0x194>
 800417c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004180:	42a8      	cmp	r0, r5
 8004182:	d039      	beq.n	80041f8 <HAL_GPIO_Init+0x198>
 8004184:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004188:	42a8      	cmp	r0, r5
 800418a:	d037      	beq.n	80041fc <HAL_GPIO_Init+0x19c>
 800418c:	4548      	cmp	r0, r9
 800418e:	d037      	beq.n	8004200 <HAL_GPIO_Init+0x1a0>
 8004190:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8004194:	42a8      	cmp	r0, r5
 8004196:	bf14      	ite	ne
 8004198:	2508      	movne	r5, #8
 800419a:	2506      	moveq	r5, #6
 800419c:	fa05 f50c 	lsl.w	r5, r5, r12
 80041a0:	ea45 050e 	orr.w	r5, r5, lr
 80041a4:	60bd      	str	r5, [r7, #8]
 80041a6:	6815      	ldr	r5, [r2, #0]
 80041a8:	43f7      	mvns	r7, r6
 80041aa:	f414 3f80 	tst.w	r4, #65536	; 0x10000
 80041ae:	bf0c      	ite	eq
 80041b0:	403d      	andeq	r5, r7
 80041b2:	4335      	orrne	r5, r6
 80041b4:	6015      	str	r5, [r2, #0]
 80041b6:	6855      	ldr	r5, [r2, #4]
 80041b8:	f414 3f00 	tst.w	r4, #131072	; 0x20000
 80041bc:	bf0c      	ite	eq
 80041be:	403d      	andeq	r5, r7
 80041c0:	4335      	orrne	r5, r6
 80041c2:	6055      	str	r5, [r2, #4]
 80041c4:	6895      	ldr	r5, [r2, #8]
 80041c6:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
 80041ca:	bf0c      	ite	eq
 80041cc:	403d      	andeq	r5, r7
 80041ce:	4335      	orrne	r5, r6
 80041d0:	6095      	str	r5, [r2, #8]
 80041d2:	68d5      	ldr	r5, [r2, #12]
 80041d4:	02a4      	lsls	r4, r4, #10
 80041d6:	bf54      	ite	pl
 80041d8:	403d      	andpl	r5, r7
 80041da:	4335      	orrmi	r5, r6
 80041dc:	60d5      	str	r5, [r2, #12]
 80041de:	3301      	adds	r3, #1
 80041e0:	2b10      	cmp	r3, #16
 80041e2:	f47f af48 	bne.w	8004076 <HAL_GPIO_Init+0x16>
 80041e6:	b005      	add	sp, #20
 80041e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80041ec:	465d      	mov	r5, r11
 80041ee:	e7d5      	b.n	800419c <HAL_GPIO_Init+0x13c>
 80041f0:	2501      	movs	r5, #1
 80041f2:	e7d3      	b.n	800419c <HAL_GPIO_Init+0x13c>
 80041f4:	2502      	movs	r5, #2
 80041f6:	e7d1      	b.n	800419c <HAL_GPIO_Init+0x13c>
 80041f8:	2503      	movs	r5, #3
 80041fa:	e7cf      	b.n	800419c <HAL_GPIO_Init+0x13c>
 80041fc:	2504      	movs	r5, #4
 80041fe:	e7cd      	b.n	800419c <HAL_GPIO_Init+0x13c>
 8004200:	2505      	movs	r5, #5
 8004202:	e7cb      	b.n	800419c <HAL_GPIO_Init+0x13c>
 8004204:	40013c00 	.word	0x40013c00
 8004208:	40020000 	.word	0x40020000
 800420c:	40023800 	.word	0x40023800
 8004210:	40021400 	.word	0x40021400

08004214 <UART_SetConfig>:
 8004214:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8004218:	6806      	ldr	r6, [r0, #0]
 800421a:	68c2      	ldr	r2, [r0, #12]
 800421c:	6933      	ldr	r3, [r6, #16]
 800421e:	69c1      	ldr	r1, [r0, #28]
 8004220:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8004224:	4313      	orrs	r3, r2
 8004226:	6133      	str	r3, [r6, #16]
 8004228:	4604      	mov	r4, r0
 800422a:	6883      	ldr	r3, [r0, #8]
 800422c:	6900      	ldr	r0, [r0, #16]
 800422e:	68f2      	ldr	r2, [r6, #12]
 8004230:	4303      	orrs	r3, r0
 8004232:	6960      	ldr	r0, [r4, #20]
 8004234:	f422 4216 	bic.w	r2, r2, #38400	; 0x9600
 8004238:	4303      	orrs	r3, r0
 800423a:	f022 020c 	bic.w	r2, r2, #12
 800423e:	430b      	orrs	r3, r1
 8004240:	4313      	orrs	r3, r2
 8004242:	60f3      	str	r3, [r6, #12]
 8004244:	6973      	ldr	r3, [r6, #20]
 8004246:	69a2      	ldr	r2, [r4, #24]
 8004248:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800424c:	4313      	orrs	r3, r2
 800424e:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 8004252:	6173      	str	r3, [r6, #20]
 8004254:	4b7a      	ldr	r3, [pc, #488]	; (8004440 <UART_SetConfig+0x22c>)
 8004256:	d17c      	bne.n	8004352 <UART_SetConfig+0x13e>
 8004258:	429e      	cmp	r6, r3
 800425a:	d003      	beq.n	8004264 <UART_SetConfig+0x50>
 800425c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004260:	429e      	cmp	r6, r3
 8004262:	d144      	bne.n	80042ee <UART_SetConfig+0xda>
 8004264:	f000 faf0 	bl	8004848 <HAL_RCC_GetPCLK2Freq>
 8004268:	2519      	movs	r5, #25
 800426a:	fb05 f300 	mul.w	r3, r5, r0
 800426e:	6860      	ldr	r0, [r4, #4]
 8004270:	f04f 0964 	mov.w	r9, #100	; 0x64
 8004274:	0040      	lsls	r0, r0, #1
 8004276:	fbb3 f3f0 	udiv	r3, r3, r0
 800427a:	fbb3 f3f9 	udiv	r3, r3, r9
 800427e:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8004282:	f000 fae1 	bl	8004848 <HAL_RCC_GetPCLK2Freq>
 8004286:	6863      	ldr	r3, [r4, #4]
 8004288:	4368      	muls	r0, r5
 800428a:	005b      	lsls	r3, r3, #1
 800428c:	fbb0 f7f3 	udiv	r7, r0, r3
 8004290:	f000 fada 	bl	8004848 <HAL_RCC_GetPCLK2Freq>
 8004294:	6863      	ldr	r3, [r4, #4]
 8004296:	4368      	muls	r0, r5
 8004298:	005b      	lsls	r3, r3, #1
 800429a:	fbb0 f3f3 	udiv	r3, r0, r3
 800429e:	fbb3 f3f9 	udiv	r3, r3, r9
 80042a2:	fb09 7313 	mls	r3, r9, r3, r7
 80042a6:	00db      	lsls	r3, r3, #3
 80042a8:	3332      	adds	r3, #50	; 0x32
 80042aa:	fbb3 f3f9 	udiv	r3, r3, r9
 80042ae:	005b      	lsls	r3, r3, #1
 80042b0:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 80042b4:	f000 fac8 	bl	8004848 <HAL_RCC_GetPCLK2Freq>
 80042b8:	6862      	ldr	r2, [r4, #4]
 80042ba:	4368      	muls	r0, r5
 80042bc:	0052      	lsls	r2, r2, #1
 80042be:	fbb0 faf2 	udiv	r10, r0, r2
 80042c2:	f000 fac1 	bl	8004848 <HAL_RCC_GetPCLK2Freq>
 80042c6:	6863      	ldr	r3, [r4, #4]
 80042c8:	4368      	muls	r0, r5
 80042ca:	005b      	lsls	r3, r3, #1
 80042cc:	fbb0 f3f3 	udiv	r3, r0, r3
 80042d0:	fbb3 f3f9 	udiv	r3, r3, r9
 80042d4:	fb09 a313 	mls	r3, r9, r3, r10
 80042d8:	00db      	lsls	r3, r3, #3
 80042da:	3332      	adds	r3, #50	; 0x32
 80042dc:	fbb3 f3f9 	udiv	r3, r3, r9
 80042e0:	f003 0307 	and.w	r3, r3, #7
 80042e4:	4443      	add	r3, r8
 80042e6:	443b      	add	r3, r7
 80042e8:	60b3      	str	r3, [r6, #8]
 80042ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80042ee:	f000 fa93 	bl	8004818 <HAL_RCC_GetPCLK1Freq>
 80042f2:	2519      	movs	r5, #25
 80042f4:	fb05 f300 	mul.w	r3, r5, r0
 80042f8:	6860      	ldr	r0, [r4, #4]
 80042fa:	f04f 0964 	mov.w	r9, #100	; 0x64
 80042fe:	0040      	lsls	r0, r0, #1
 8004300:	fbb3 f3f0 	udiv	r3, r3, r0
 8004304:	fbb3 f3f9 	udiv	r3, r3, r9
 8004308:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800430c:	f000 fa84 	bl	8004818 <HAL_RCC_GetPCLK1Freq>
 8004310:	6863      	ldr	r3, [r4, #4]
 8004312:	4368      	muls	r0, r5
 8004314:	005b      	lsls	r3, r3, #1
 8004316:	fbb0 f7f3 	udiv	r7, r0, r3
 800431a:	f000 fa7d 	bl	8004818 <HAL_RCC_GetPCLK1Freq>
 800431e:	6863      	ldr	r3, [r4, #4]
 8004320:	4368      	muls	r0, r5
 8004322:	005b      	lsls	r3, r3, #1
 8004324:	fbb0 f3f3 	udiv	r3, r0, r3
 8004328:	fbb3 f3f9 	udiv	r3, r3, r9
 800432c:	fb09 7313 	mls	r3, r9, r3, r7
 8004330:	00db      	lsls	r3, r3, #3
 8004332:	3332      	adds	r3, #50	; 0x32
 8004334:	fbb3 f3f9 	udiv	r3, r3, r9
 8004338:	005b      	lsls	r3, r3, #1
 800433a:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 800433e:	f000 fa6b 	bl	8004818 <HAL_RCC_GetPCLK1Freq>
 8004342:	6862      	ldr	r2, [r4, #4]
 8004344:	4368      	muls	r0, r5
 8004346:	0052      	lsls	r2, r2, #1
 8004348:	fbb0 faf2 	udiv	r10, r0, r2
 800434c:	f000 fa64 	bl	8004818 <HAL_RCC_GetPCLK1Freq>
 8004350:	e7b9      	b.n	80042c6 <UART_SetConfig+0xb2>
 8004352:	429e      	cmp	r6, r3
 8004354:	d002      	beq.n	800435c <UART_SetConfig+0x148>
 8004356:	4b3b      	ldr	r3, [pc, #236]	; (8004444 <UART_SetConfig+0x230>)
 8004358:	429e      	cmp	r6, r3
 800435a:	d140      	bne.n	80043de <UART_SetConfig+0x1ca>
 800435c:	f000 fa74 	bl	8004848 <HAL_RCC_GetPCLK2Freq>
 8004360:	6867      	ldr	r7, [r4, #4]
 8004362:	2519      	movs	r5, #25
 8004364:	f04f 0964 	mov.w	r9, #100	; 0x64
 8004368:	fb05 f300 	mul.w	r3, r5, r0
 800436c:	00bf      	lsls	r7, r7, #2
 800436e:	fbb3 f3f7 	udiv	r3, r3, r7
 8004372:	fbb3 f3f9 	udiv	r3, r3, r9
 8004376:	011f      	lsls	r7, r3, #4
 8004378:	f000 fa66 	bl	8004848 <HAL_RCC_GetPCLK2Freq>
 800437c:	6863      	ldr	r3, [r4, #4]
 800437e:	4368      	muls	r0, r5
 8004380:	009b      	lsls	r3, r3, #2
 8004382:	fbb0 f8f3 	udiv	r8, r0, r3
 8004386:	f000 fa5f 	bl	8004848 <HAL_RCC_GetPCLK2Freq>
 800438a:	6863      	ldr	r3, [r4, #4]
 800438c:	4368      	muls	r0, r5
 800438e:	009b      	lsls	r3, r3, #2
 8004390:	fbb0 f3f3 	udiv	r3, r0, r3
 8004394:	fbb3 f3f9 	udiv	r3, r3, r9
 8004398:	fb09 8313 	mls	r3, r9, r3, r8
 800439c:	011b      	lsls	r3, r3, #4
 800439e:	3332      	adds	r3, #50	; 0x32
 80043a0:	fbb3 f3f9 	udiv	r3, r3, r9
 80043a4:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 80043a8:	f000 fa4e 	bl	8004848 <HAL_RCC_GetPCLK2Freq>
 80043ac:	6862      	ldr	r2, [r4, #4]
 80043ae:	4368      	muls	r0, r5
 80043b0:	0092      	lsls	r2, r2, #2
 80043b2:	fbb0 faf2 	udiv	r10, r0, r2
 80043b6:	f000 fa47 	bl	8004848 <HAL_RCC_GetPCLK2Freq>
 80043ba:	6863      	ldr	r3, [r4, #4]
 80043bc:	4368      	muls	r0, r5
 80043be:	009b      	lsls	r3, r3, #2
 80043c0:	fbb0 f3f3 	udiv	r3, r0, r3
 80043c4:	fbb3 f3f9 	udiv	r3, r3, r9
 80043c8:	fb09 a313 	mls	r3, r9, r3, r10
 80043cc:	011b      	lsls	r3, r3, #4
 80043ce:	3332      	adds	r3, #50	; 0x32
 80043d0:	fbb3 f3f9 	udiv	r3, r3, r9
 80043d4:	f003 030f 	and.w	r3, r3, #15
 80043d8:	ea43 0308 	orr.w	r3, r3, r8
 80043dc:	e783      	b.n	80042e6 <UART_SetConfig+0xd2>
 80043de:	f000 fa1b 	bl	8004818 <HAL_RCC_GetPCLK1Freq>
 80043e2:	6867      	ldr	r7, [r4, #4]
 80043e4:	2519      	movs	r5, #25
 80043e6:	f04f 0964 	mov.w	r9, #100	; 0x64
 80043ea:	fb05 f300 	mul.w	r3, r5, r0
 80043ee:	00bf      	lsls	r7, r7, #2
 80043f0:	fbb3 f3f7 	udiv	r3, r3, r7
 80043f4:	fbb3 f3f9 	udiv	r3, r3, r9
 80043f8:	011f      	lsls	r7, r3, #4
 80043fa:	f000 fa0d 	bl	8004818 <HAL_RCC_GetPCLK1Freq>
 80043fe:	6863      	ldr	r3, [r4, #4]
 8004400:	4368      	muls	r0, r5
 8004402:	009b      	lsls	r3, r3, #2
 8004404:	fbb0 f8f3 	udiv	r8, r0, r3
 8004408:	f000 fa06 	bl	8004818 <HAL_RCC_GetPCLK1Freq>
 800440c:	6863      	ldr	r3, [r4, #4]
 800440e:	4368      	muls	r0, r5
 8004410:	009b      	lsls	r3, r3, #2
 8004412:	fbb0 f3f3 	udiv	r3, r0, r3
 8004416:	fbb3 f3f9 	udiv	r3, r3, r9
 800441a:	fb09 8313 	mls	r3, r9, r3, r8
 800441e:	011b      	lsls	r3, r3, #4
 8004420:	3332      	adds	r3, #50	; 0x32
 8004422:	fbb3 f3f9 	udiv	r3, r3, r9
 8004426:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 800442a:	f000 f9f5 	bl	8004818 <HAL_RCC_GetPCLK1Freq>
 800442e:	6862      	ldr	r2, [r4, #4]
 8004430:	4368      	muls	r0, r5
 8004432:	0092      	lsls	r2, r2, #2
 8004434:	fbb0 faf2 	udiv	r10, r0, r2
 8004438:	f000 f9ee 	bl	8004818 <HAL_RCC_GetPCLK1Freq>
 800443c:	e7bd      	b.n	80043ba <UART_SetConfig+0x1a6>
 800443e:	bf00      	nop
 8004440:	40011000 	.word	0x40011000
 8004444:	40011400 	.word	0x40011400

08004448 <HAL_UART_MspInit>:
 8004448:	4770      	bx	lr

0800444a <HAL_UART_Init>:
 800444a:	b510      	push	{r4, lr}
 800444c:	4604      	mov	r4, r0
 800444e:	b340      	cbz	r0, 80044a2 <HAL_UART_Init+0x58>
 8004450:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8004454:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004458:	b91b      	cbnz	r3, 8004462 <HAL_UART_Init+0x18>
 800445a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 800445e:	f7ff fff3 	bl	8004448 <HAL_UART_MspInit>
 8004462:	6822      	ldr	r2, [r4, #0]
 8004464:	2324      	movs	r3, #36	; 0x24
 8004466:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800446a:	68d3      	ldr	r3, [r2, #12]
 800446c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004470:	60d3      	str	r3, [r2, #12]
 8004472:	4620      	mov	r0, r4
 8004474:	f7ff fece 	bl	8004214 <UART_SetConfig>
 8004478:	6823      	ldr	r3, [r4, #0]
 800447a:	691a      	ldr	r2, [r3, #16]
 800447c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004480:	611a      	str	r2, [r3, #16]
 8004482:	695a      	ldr	r2, [r3, #20]
 8004484:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8004488:	615a      	str	r2, [r3, #20]
 800448a:	68da      	ldr	r2, [r3, #12]
 800448c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004490:	60da      	str	r2, [r3, #12]
 8004492:	2000      	movs	r0, #0
 8004494:	2320      	movs	r3, #32
 8004496:	63e0      	str	r0, [r4, #60]	; 0x3c
 8004498:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800449c:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 80044a0:	bd10      	pop	{r4, pc}
 80044a2:	2001      	movs	r0, #1
 80044a4:	bd10      	pop	{r4, pc}

080044a6 <HAL_TIM_OC_MspInit>:
 80044a6:	4770      	bx	lr

080044a8 <TIM_Base_SetConfig>:
 80044a8:	4a2e      	ldr	r2, [pc, #184]	; (8004564 <TIM_Base_SetConfig+0xbc>)
 80044aa:	6803      	ldr	r3, [r0, #0]
 80044ac:	4290      	cmp	r0, r2
 80044ae:	d012      	beq.n	80044d6 <TIM_Base_SetConfig+0x2e>
 80044b0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80044b4:	d00f      	beq.n	80044d6 <TIM_Base_SetConfig+0x2e>
 80044b6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80044ba:	4290      	cmp	r0, r2
 80044bc:	d00b      	beq.n	80044d6 <TIM_Base_SetConfig+0x2e>
 80044be:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80044c2:	4290      	cmp	r0, r2
 80044c4:	d007      	beq.n	80044d6 <TIM_Base_SetConfig+0x2e>
 80044c6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80044ca:	4290      	cmp	r0, r2
 80044cc:	d003      	beq.n	80044d6 <TIM_Base_SetConfig+0x2e>
 80044ce:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80044d2:	4290      	cmp	r0, r2
 80044d4:	d11d      	bne.n	8004512 <TIM_Base_SetConfig+0x6a>
 80044d6:	684a      	ldr	r2, [r1, #4]
 80044d8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80044dc:	4313      	orrs	r3, r2
 80044de:	4a21      	ldr	r2, [pc, #132]	; (8004564 <TIM_Base_SetConfig+0xbc>)
 80044e0:	4290      	cmp	r0, r2
 80044e2:	d104      	bne.n	80044ee <TIM_Base_SetConfig+0x46>
 80044e4:	68ca      	ldr	r2, [r1, #12]
 80044e6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80044ea:	4313      	orrs	r3, r2
 80044ec:	e028      	b.n	8004540 <TIM_Base_SetConfig+0x98>
 80044ee:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80044f2:	d0f7      	beq.n	80044e4 <TIM_Base_SetConfig+0x3c>
 80044f4:	4a1c      	ldr	r2, [pc, #112]	; (8004568 <TIM_Base_SetConfig+0xc0>)
 80044f6:	4290      	cmp	r0, r2
 80044f8:	d0f4      	beq.n	80044e4 <TIM_Base_SetConfig+0x3c>
 80044fa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80044fe:	4290      	cmp	r0, r2
 8004500:	d0f0      	beq.n	80044e4 <TIM_Base_SetConfig+0x3c>
 8004502:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004506:	4290      	cmp	r0, r2
 8004508:	d0ec      	beq.n	80044e4 <TIM_Base_SetConfig+0x3c>
 800450a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800450e:	4290      	cmp	r0, r2
 8004510:	d0e8      	beq.n	80044e4 <TIM_Base_SetConfig+0x3c>
 8004512:	4a16      	ldr	r2, [pc, #88]	; (800456c <TIM_Base_SetConfig+0xc4>)
 8004514:	4290      	cmp	r0, r2
 8004516:	d0e5      	beq.n	80044e4 <TIM_Base_SetConfig+0x3c>
 8004518:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800451c:	4290      	cmp	r0, r2
 800451e:	d0e1      	beq.n	80044e4 <TIM_Base_SetConfig+0x3c>
 8004520:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004524:	4290      	cmp	r0, r2
 8004526:	d0dd      	beq.n	80044e4 <TIM_Base_SetConfig+0x3c>
 8004528:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800452c:	4290      	cmp	r0, r2
 800452e:	d0d9      	beq.n	80044e4 <TIM_Base_SetConfig+0x3c>
 8004530:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004534:	4290      	cmp	r0, r2
 8004536:	d0d5      	beq.n	80044e4 <TIM_Base_SetConfig+0x3c>
 8004538:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800453c:	4290      	cmp	r0, r2
 800453e:	d0d1      	beq.n	80044e4 <TIM_Base_SetConfig+0x3c>
 8004540:	6003      	str	r3, [r0, #0]
 8004542:	688b      	ldr	r3, [r1, #8]
 8004544:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004546:	680b      	ldr	r3, [r1, #0]
 8004548:	6283      	str	r3, [r0, #40]	; 0x28
 800454a:	4b06      	ldr	r3, [pc, #24]	; (8004564 <TIM_Base_SetConfig+0xbc>)
 800454c:	4298      	cmp	r0, r3
 800454e:	d006      	beq.n	800455e <TIM_Base_SetConfig+0xb6>
 8004550:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004554:	4298      	cmp	r0, r3
 8004556:	d002      	beq.n	800455e <TIM_Base_SetConfig+0xb6>
 8004558:	2301      	movs	r3, #1
 800455a:	6143      	str	r3, [r0, #20]
 800455c:	4770      	bx	lr
 800455e:	690b      	ldr	r3, [r1, #16]
 8004560:	6303      	str	r3, [r0, #48]	; 0x30
 8004562:	e7f9      	b.n	8004558 <TIM_Base_SetConfig+0xb0>
 8004564:	40010000 	.word	0x40010000
 8004568:	40000400 	.word	0x40000400
 800456c:	40014000 	.word	0x40014000

08004570 <HAL_TIM_OC_Init>:
 8004570:	b510      	push	{r4, lr}
 8004572:	4604      	mov	r4, r0
 8004574:	b1a0      	cbz	r0, 80045a0 <HAL_TIM_OC_Init+0x30>
 8004576:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800457a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800457e:	b91b      	cbnz	r3, 8004588 <HAL_TIM_OC_Init+0x18>
 8004580:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8004584:	f7ff ff8f 	bl	80044a6 <HAL_TIM_OC_MspInit>
 8004588:	2302      	movs	r3, #2
 800458a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800458e:	6820      	ldr	r0, [r4, #0]
 8004590:	1d21      	adds	r1, r4, #4
 8004592:	f7ff ff89 	bl	80044a8 <TIM_Base_SetConfig>
 8004596:	2301      	movs	r3, #1
 8004598:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800459c:	2000      	movs	r0, #0
 800459e:	bd10      	pop	{r4, pc}
 80045a0:	2001      	movs	r0, #1
 80045a2:	bd10      	pop	{r4, pc}

080045a4 <TIM_CCxChannelCmd>:
 80045a4:	6a03      	ldr	r3, [r0, #32]
 80045a6:	b510      	push	{r4, lr}
 80045a8:	2401      	movs	r4, #1
 80045aa:	408c      	lsls	r4, r1
 80045ac:	ea23 0304 	bic.w	r3, r3, r4
 80045b0:	6203      	str	r3, [r0, #32]
 80045b2:	6a03      	ldr	r3, [r0, #32]
 80045b4:	408a      	lsls	r2, r1
 80045b6:	431a      	orrs	r2, r3
 80045b8:	6202      	str	r2, [r0, #32]
 80045ba:	bd10      	pop	{r4, pc}

080045bc <HAL_TIM_PWM_Start>:
 80045bc:	b510      	push	{r4, lr}
 80045be:	4604      	mov	r4, r0
 80045c0:	2201      	movs	r2, #1
 80045c2:	6800      	ldr	r0, [r0, #0]
 80045c4:	f7ff ffee 	bl	80045a4 <TIM_CCxChannelCmd>
 80045c8:	6823      	ldr	r3, [r4, #0]
 80045ca:	4a08      	ldr	r2, [pc, #32]	; (80045ec <HAL_TIM_PWM_Start+0x30>)
 80045cc:	4293      	cmp	r3, r2
 80045ce:	d003      	beq.n	80045d8 <HAL_TIM_PWM_Start+0x1c>
 80045d0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80045d4:	4293      	cmp	r3, r2
 80045d6:	d103      	bne.n	80045e0 <HAL_TIM_PWM_Start+0x24>
 80045d8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80045da:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80045de:	645a      	str	r2, [r3, #68]	; 0x44
 80045e0:	681a      	ldr	r2, [r3, #0]
 80045e2:	f042 0201 	orr.w	r2, r2, #1
 80045e6:	601a      	str	r2, [r3, #0]
 80045e8:	2000      	movs	r0, #0
 80045ea:	bd10      	pop	{r4, pc}
 80045ec:	40010000 	.word	0x40010000

080045f0 <HAL_TIM_OC_Start>:
 80045f0:	f7ff bfe4 	b.w	80045bc <HAL_TIM_PWM_Start>

080045f4 <HAL_PWR_EnterSLEEPMode>:
 80045f4:	4a06      	ldr	r2, [pc, #24]	; (8004610 <HAL_PWR_EnterSLEEPMode+0x1c>)
 80045f6:	6913      	ldr	r3, [r2, #16]
 80045f8:	2901      	cmp	r1, #1
 80045fa:	f023 0304 	bic.w	r3, r3, #4
 80045fe:	6113      	str	r3, [r2, #16]
 8004600:	d101      	bne.n	8004606 <HAL_PWR_EnterSLEEPMode+0x12>
 8004602:	bf30      	wfi
 8004604:	4770      	bx	lr
 8004606:	bf40      	sev
 8004608:	bf20      	wfe
 800460a:	bf20      	wfe
 800460c:	4770      	bx	lr
 800460e:	bf00      	nop
 8004610:	e000ed00 	.word	0xe000ed00

08004614 <HAL_RCC_MCOConfig>:
 8004614:	b570      	push	{r4, r5, r6, lr}
 8004616:	460d      	mov	r5, r1
 8004618:	b088      	sub	sp, #32
 800461a:	4616      	mov	r6, r2
 800461c:	4c20      	ldr	r4, [pc, #128]	; (80046a0 <HAL_RCC_MCOConfig+0x8c>)
 800461e:	b9f0      	cbnz	r0, 800465e <HAL_RCC_MCOConfig+0x4a>
 8004620:	9001      	str	r0, [sp, #4]
 8004622:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004624:	f043 0301 	orr.w	r3, r3, #1
 8004628:	6323      	str	r3, [r4, #48]	; 0x30
 800462a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800462c:	9005      	str	r0, [sp, #20]
 800462e:	f003 0301 	and.w	r3, r3, #1
 8004632:	9301      	str	r3, [sp, #4]
 8004634:	9b01      	ldr	r3, [sp, #4]
 8004636:	9007      	str	r0, [sp, #28]
 8004638:	f44f 7380 	mov.w	r3, #256	; 0x100
 800463c:	9303      	str	r3, [sp, #12]
 800463e:	2302      	movs	r3, #2
 8004640:	9304      	str	r3, [sp, #16]
 8004642:	a903      	add	r1, sp, #12
 8004644:	2303      	movs	r3, #3
 8004646:	4817      	ldr	r0, [pc, #92]	; (80046a4 <HAL_RCC_MCOConfig+0x90>)
 8004648:	9306      	str	r3, [sp, #24]
 800464a:	f7ff fd09 	bl	8004060 <HAL_GPIO_Init>
 800464e:	68a1      	ldr	r1, [r4, #8]
 8004650:	f021 61ec 	bic.w	r1, r1, #123731968	; 0x7600000
 8004654:	4331      	orrs	r1, r6
 8004656:	4329      	orrs	r1, r5
 8004658:	60a1      	str	r1, [r4, #8]
 800465a:	b008      	add	sp, #32
 800465c:	bd70      	pop	{r4, r5, r6, pc}
 800465e:	2300      	movs	r3, #0
 8004660:	9302      	str	r3, [sp, #8]
 8004662:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8004664:	4810      	ldr	r0, [pc, #64]	; (80046a8 <HAL_RCC_MCOConfig+0x94>)
 8004666:	f042 0204 	orr.w	r2, r2, #4
 800466a:	6322      	str	r2, [r4, #48]	; 0x30
 800466c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800466e:	9305      	str	r3, [sp, #20]
 8004670:	f002 0204 	and.w	r2, r2, #4
 8004674:	9202      	str	r2, [sp, #8]
 8004676:	9a02      	ldr	r2, [sp, #8]
 8004678:	9307      	str	r3, [sp, #28]
 800467a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800467e:	9203      	str	r2, [sp, #12]
 8004680:	2202      	movs	r2, #2
 8004682:	9204      	str	r2, [sp, #16]
 8004684:	a903      	add	r1, sp, #12
 8004686:	2203      	movs	r2, #3
 8004688:	9206      	str	r2, [sp, #24]
 800468a:	f7ff fce9 	bl	8004060 <HAL_GPIO_Init>
 800468e:	68a3      	ldr	r3, [r4, #8]
 8004690:	ea45 01c6 	orr.w	r1, r5, r6, lsl #3
 8004694:	f023 4578 	bic.w	r5, r3, #4160749568	; 0xf8000000
 8004698:	430d      	orrs	r5, r1
 800469a:	60a5      	str	r5, [r4, #8]
 800469c:	e7dd      	b.n	800465a <HAL_RCC_MCOConfig+0x46>
 800469e:	bf00      	nop
 80046a0:	40023800 	.word	0x40023800
 80046a4:	40020000 	.word	0x40020000
 80046a8:	40020800 	.word	0x40020800

080046ac <HAL_RCC_ClockConfig>:
 80046ac:	4b56      	ldr	r3, [pc, #344]	; (8004808 <HAL_RCC_ClockConfig+0x15c>)
 80046ae:	681a      	ldr	r2, [r3, #0]
 80046b0:	f002 020f 	and.w	r2, r2, #15
 80046b4:	428a      	cmp	r2, r1
 80046b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80046ba:	4605      	mov	r5, r0
 80046bc:	460e      	mov	r6, r1
 80046be:	d330      	bcc.n	8004722 <HAL_RCC_ClockConfig+0x76>
 80046c0:	682a      	ldr	r2, [r5, #0]
 80046c2:	0794      	lsls	r4, r2, #30
 80046c4:	d437      	bmi.n	8004736 <HAL_RCC_ClockConfig+0x8a>
 80046c6:	07d0      	lsls	r0, r2, #31
 80046c8:	d43d      	bmi.n	8004746 <HAL_RCC_ClockConfig+0x9a>
 80046ca:	4b4f      	ldr	r3, [pc, #316]	; (8004808 <HAL_RCC_ClockConfig+0x15c>)
 80046cc:	681a      	ldr	r2, [r3, #0]
 80046ce:	f002 020f 	and.w	r2, r2, #15
 80046d2:	4296      	cmp	r6, r2
 80046d4:	f0c0 8088 	bcc.w	80047e8 <HAL_RCC_ClockConfig+0x13c>
 80046d8:	682a      	ldr	r2, [r5, #0]
 80046da:	0751      	lsls	r1, r2, #29
 80046dc:	f100 808c 	bmi.w	80047f8 <HAL_RCC_ClockConfig+0x14c>
 80046e0:	0713      	lsls	r3, r2, #28
 80046e2:	d507      	bpl.n	80046f4 <HAL_RCC_ClockConfig+0x48>
 80046e4:	4a49      	ldr	r2, [pc, #292]	; (800480c <HAL_RCC_ClockConfig+0x160>)
 80046e6:	6929      	ldr	r1, [r5, #16]
 80046e8:	6893      	ldr	r3, [r2, #8]
 80046ea:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80046ee:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80046f2:	6093      	str	r3, [r2, #8]
 80046f4:	f7ff fc56 	bl	8003fa4 <HAL_RCC_GetSysClockFreq>
 80046f8:	4b44      	ldr	r3, [pc, #272]	; (800480c <HAL_RCC_ClockConfig+0x160>)
 80046fa:	22f0      	movs	r2, #240	; 0xf0
 80046fc:	689b      	ldr	r3, [r3, #8]
 80046fe:	fa92 f2a2 	rbit	r2, r2
 8004702:	fab2 f282 	clz	r2, r2
 8004706:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800470a:	40d3      	lsrs	r3, r2
 800470c:	4a40      	ldr	r2, [pc, #256]	; (8004810 <HAL_RCC_ClockConfig+0x164>)
 800470e:	5cd3      	ldrb	r3, [r2, r3]
 8004710:	40d8      	lsrs	r0, r3
 8004712:	4b40      	ldr	r3, [pc, #256]	; (8004814 <HAL_RCC_ClockConfig+0x168>)
 8004714:	6018      	str	r0, [r3, #0]
 8004716:	200f      	movs	r0, #15
 8004718:	f7fe f91e 	bl	8002958 <HAL_InitTick>
 800471c:	2000      	movs	r0, #0
 800471e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004722:	b2ca      	uxtb	r2, r1
 8004724:	701a      	strb	r2, [r3, #0]
 8004726:	681b      	ldr	r3, [r3, #0]
 8004728:	f003 030f 	and.w	r3, r3, #15
 800472c:	4299      	cmp	r1, r3
 800472e:	d0c7      	beq.n	80046c0 <HAL_RCC_ClockConfig+0x14>
 8004730:	2001      	movs	r0, #1
 8004732:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004736:	4935      	ldr	r1, [pc, #212]	; (800480c <HAL_RCC_ClockConfig+0x160>)
 8004738:	68a8      	ldr	r0, [r5, #8]
 800473a:	688b      	ldr	r3, [r1, #8]
 800473c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004740:	4303      	orrs	r3, r0
 8004742:	608b      	str	r3, [r1, #8]
 8004744:	e7bf      	b.n	80046c6 <HAL_RCC_ClockConfig+0x1a>
 8004746:	686a      	ldr	r2, [r5, #4]
 8004748:	4b30      	ldr	r3, [pc, #192]	; (800480c <HAL_RCC_ClockConfig+0x160>)
 800474a:	2a01      	cmp	r2, #1
 800474c:	d11e      	bne.n	800478c <HAL_RCC_ClockConfig+0xe0>
 800474e:	681b      	ldr	r3, [r3, #0]
 8004750:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8004754:	d0ec      	beq.n	8004730 <HAL_RCC_ClockConfig+0x84>
 8004756:	4c2d      	ldr	r4, [pc, #180]	; (800480c <HAL_RCC_ClockConfig+0x160>)
 8004758:	68a3      	ldr	r3, [r4, #8]
 800475a:	f023 0303 	bic.w	r3, r3, #3
 800475e:	4313      	orrs	r3, r2
 8004760:	60a3      	str	r3, [r4, #8]
 8004762:	f000 f915 	bl	8004990 <HAL_GetTick>
 8004766:	686b      	ldr	r3, [r5, #4]
 8004768:	2b01      	cmp	r3, #1
 800476a:	4607      	mov	r7, r0
 800476c:	f241 3888 	movw	r8, #5000	; 0x1388
 8004770:	d116      	bne.n	80047a0 <HAL_RCC_ClockConfig+0xf4>
 8004772:	68a3      	ldr	r3, [r4, #8]
 8004774:	f003 030c 	and.w	r3, r3, #12
 8004778:	2b04      	cmp	r3, #4
 800477a:	d0a6      	beq.n	80046ca <HAL_RCC_ClockConfig+0x1e>
 800477c:	f000 f908 	bl	8004990 <HAL_GetTick>
 8004780:	1bc0      	subs	r0, r0, r7
 8004782:	4540      	cmp	r0, r8
 8004784:	d9f5      	bls.n	8004772 <HAL_RCC_ClockConfig+0xc6>
 8004786:	2003      	movs	r0, #3
 8004788:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800478c:	1e91      	subs	r1, r2, #2
 800478e:	2901      	cmp	r1, #1
 8004790:	681b      	ldr	r3, [r3, #0]
 8004792:	d802      	bhi.n	800479a <HAL_RCC_ClockConfig+0xee>
 8004794:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8004798:	e7dc      	b.n	8004754 <HAL_RCC_ClockConfig+0xa8>
 800479a:	f013 0f02 	tst.w	r3, #2
 800479e:	e7d9      	b.n	8004754 <HAL_RCC_ClockConfig+0xa8>
 80047a0:	2b02      	cmp	r3, #2
 80047a2:	d10a      	bne.n	80047ba <HAL_RCC_ClockConfig+0x10e>
 80047a4:	68a3      	ldr	r3, [r4, #8]
 80047a6:	f003 030c 	and.w	r3, r3, #12
 80047aa:	2b08      	cmp	r3, #8
 80047ac:	d08d      	beq.n	80046ca <HAL_RCC_ClockConfig+0x1e>
 80047ae:	f000 f8ef 	bl	8004990 <HAL_GetTick>
 80047b2:	1bc0      	subs	r0, r0, r7
 80047b4:	4540      	cmp	r0, r8
 80047b6:	d9f5      	bls.n	80047a4 <HAL_RCC_ClockConfig+0xf8>
 80047b8:	e7e5      	b.n	8004786 <HAL_RCC_ClockConfig+0xda>
 80047ba:	2b03      	cmp	r3, #3
 80047bc:	d10f      	bne.n	80047de <HAL_RCC_ClockConfig+0x132>
 80047be:	68a3      	ldr	r3, [r4, #8]
 80047c0:	f003 030c 	and.w	r3, r3, #12
 80047c4:	2b0c      	cmp	r3, #12
 80047c6:	d080      	beq.n	80046ca <HAL_RCC_ClockConfig+0x1e>
 80047c8:	f000 f8e2 	bl	8004990 <HAL_GetTick>
 80047cc:	1bc0      	subs	r0, r0, r7
 80047ce:	4540      	cmp	r0, r8
 80047d0:	d9f5      	bls.n	80047be <HAL_RCC_ClockConfig+0x112>
 80047d2:	e7d8      	b.n	8004786 <HAL_RCC_ClockConfig+0xda>
 80047d4:	f000 f8dc 	bl	8004990 <HAL_GetTick>
 80047d8:	1bc0      	subs	r0, r0, r7
 80047da:	4540      	cmp	r0, r8
 80047dc:	d8d3      	bhi.n	8004786 <HAL_RCC_ClockConfig+0xda>
 80047de:	68a3      	ldr	r3, [r4, #8]
 80047e0:	f013 0f0c 	tst.w	r3, #12
 80047e4:	d1f6      	bne.n	80047d4 <HAL_RCC_ClockConfig+0x128>
 80047e6:	e770      	b.n	80046ca <HAL_RCC_ClockConfig+0x1e>
 80047e8:	b2f2      	uxtb	r2, r6
 80047ea:	701a      	strb	r2, [r3, #0]
 80047ec:	681b      	ldr	r3, [r3, #0]
 80047ee:	f003 030f 	and.w	r3, r3, #15
 80047f2:	429e      	cmp	r6, r3
 80047f4:	d19c      	bne.n	8004730 <HAL_RCC_ClockConfig+0x84>
 80047f6:	e76f      	b.n	80046d8 <HAL_RCC_ClockConfig+0x2c>
 80047f8:	4904      	ldr	r1, [pc, #16]	; (800480c <HAL_RCC_ClockConfig+0x160>)
 80047fa:	68e8      	ldr	r0, [r5, #12]
 80047fc:	688b      	ldr	r3, [r1, #8]
 80047fe:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8004802:	4303      	orrs	r3, r0
 8004804:	608b      	str	r3, [r1, #8]
 8004806:	e76b      	b.n	80046e0 <HAL_RCC_ClockConfig+0x34>
 8004808:	40023c00 	.word	0x40023c00
 800480c:	40023800 	.word	0x40023800
 8004810:	08006408 	.word	0x08006408
 8004814:	200001e0 	.word	0x200001e0

08004818 <HAL_RCC_GetPCLK1Freq>:
 8004818:	4b08      	ldr	r3, [pc, #32]	; (800483c <HAL_RCC_GetPCLK1Freq+0x24>)
 800481a:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
 800481e:	689b      	ldr	r3, [r3, #8]
 8004820:	fa92 f2a2 	rbit	r2, r2
 8004824:	fab2 f282 	clz	r2, r2
 8004828:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800482c:	40d3      	lsrs	r3, r2
 800482e:	4a04      	ldr	r2, [pc, #16]	; (8004840 <HAL_RCC_GetPCLK1Freq+0x28>)
 8004830:	5cd3      	ldrb	r3, [r2, r3]
 8004832:	4a04      	ldr	r2, [pc, #16]	; (8004844 <HAL_RCC_GetPCLK1Freq+0x2c>)
 8004834:	6810      	ldr	r0, [r2, #0]
 8004836:	40d8      	lsrs	r0, r3
 8004838:	4770      	bx	lr
 800483a:	bf00      	nop
 800483c:	40023800 	.word	0x40023800
 8004840:	08006408 	.word	0x08006408
 8004844:	200001e0 	.word	0x200001e0

08004848 <HAL_RCC_GetPCLK2Freq>:
 8004848:	4b08      	ldr	r3, [pc, #32]	; (800486c <HAL_RCC_GetPCLK2Freq+0x24>)
 800484a:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 800484e:	689b      	ldr	r3, [r3, #8]
 8004850:	fa92 f2a2 	rbit	r2, r2
 8004854:	fab2 f282 	clz	r2, r2
 8004858:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 800485c:	40d3      	lsrs	r3, r2
 800485e:	4a04      	ldr	r2, [pc, #16]	; (8004870 <HAL_RCC_GetPCLK2Freq+0x28>)
 8004860:	5cd3      	ldrb	r3, [r2, r3]
 8004862:	4a04      	ldr	r2, [pc, #16]	; (8004874 <HAL_RCC_GetPCLK2Freq+0x2c>)
 8004864:	6810      	ldr	r0, [r2, #0]
 8004866:	40d8      	lsrs	r0, r3
 8004868:	4770      	bx	lr
 800486a:	bf00      	nop
 800486c:	40023800 	.word	0x40023800
 8004870:	08006408 	.word	0x08006408
 8004874:	200001e0 	.word	0x200001e0

08004878 <HAL_RCC_GetClockConfig>:
 8004878:	230f      	movs	r3, #15
 800487a:	6003      	str	r3, [r0, #0]
 800487c:	4b0b      	ldr	r3, [pc, #44]	; (80048ac <HAL_RCC_GetClockConfig+0x34>)
 800487e:	689a      	ldr	r2, [r3, #8]
 8004880:	f002 0203 	and.w	r2, r2, #3
 8004884:	6042      	str	r2, [r0, #4]
 8004886:	689a      	ldr	r2, [r3, #8]
 8004888:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800488c:	6082      	str	r2, [r0, #8]
 800488e:	689a      	ldr	r2, [r3, #8]
 8004890:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8004894:	60c2      	str	r2, [r0, #12]
 8004896:	689b      	ldr	r3, [r3, #8]
 8004898:	08db      	lsrs	r3, r3, #3
 800489a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800489e:	6103      	str	r3, [r0, #16]
 80048a0:	4b03      	ldr	r3, [pc, #12]	; (80048b0 <HAL_RCC_GetClockConfig+0x38>)
 80048a2:	681b      	ldr	r3, [r3, #0]
 80048a4:	f003 030f 	and.w	r3, r3, #15
 80048a8:	600b      	str	r3, [r1, #0]
 80048aa:	4770      	bx	lr
 80048ac:	40023800 	.word	0x40023800
 80048b0:	40023c00 	.word	0x40023c00

080048b4 <HAL_MspInit>:
 80048b4:	4770      	bx	lr
	...

080048b8 <HAL_PWREx_EnableOverDrive>:
 80048b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80048ba:	2300      	movs	r3, #0
 80048bc:	9301      	str	r3, [sp, #4]
 80048be:	4b22      	ldr	r3, [pc, #136]	; (8004948 <HAL_PWREx_EnableOverDrive+0x90>)
 80048c0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80048c2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80048c6:	641a      	str	r2, [r3, #64]	; 0x40
 80048c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80048ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80048ce:	9301      	str	r3, [sp, #4]
 80048d0:	9b01      	ldr	r3, [sp, #4]
 80048d2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80048d6:	fa93 f3a3 	rbit	r3, r3
 80048da:	fab3 f383 	clz	r3, r3
 80048de:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80048e2:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 80048e6:	009b      	lsls	r3, r3, #2
 80048e8:	2201      	movs	r2, #1
 80048ea:	601a      	str	r2, [r3, #0]
 80048ec:	f000 f850 	bl	8004990 <HAL_GetTick>
 80048f0:	4c16      	ldr	r4, [pc, #88]	; (800494c <HAL_PWREx_EnableOverDrive+0x94>)
 80048f2:	4605      	mov	r5, r0
 80048f4:	6863      	ldr	r3, [r4, #4]
 80048f6:	03da      	lsls	r2, r3, #15
 80048f8:	d515      	bpl.n	8004926 <HAL_PWREx_EnableOverDrive+0x6e>
 80048fa:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80048fe:	fa93 f3a3 	rbit	r3, r3
 8004902:	fab3 f383 	clz	r3, r3
 8004906:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 800490a:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 800490e:	009b      	lsls	r3, r3, #2
 8004910:	2201      	movs	r2, #1
 8004912:	601a      	str	r2, [r3, #0]
 8004914:	f000 f83c 	bl	8004990 <HAL_GetTick>
 8004918:	4c0c      	ldr	r4, [pc, #48]	; (800494c <HAL_PWREx_EnableOverDrive+0x94>)
 800491a:	4605      	mov	r5, r0
 800491c:	6863      	ldr	r3, [r4, #4]
 800491e:	039b      	lsls	r3, r3, #14
 8004920:	d50a      	bpl.n	8004938 <HAL_PWREx_EnableOverDrive+0x80>
 8004922:	2000      	movs	r0, #0
 8004924:	e006      	b.n	8004934 <HAL_PWREx_EnableOverDrive+0x7c>
 8004926:	f000 f833 	bl	8004990 <HAL_GetTick>
 800492a:	1b40      	subs	r0, r0, r5
 800492c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004930:	d9e0      	bls.n	80048f4 <HAL_PWREx_EnableOverDrive+0x3c>
 8004932:	2003      	movs	r0, #3
 8004934:	b003      	add	sp, #12
 8004936:	bd30      	pop	{r4, r5, pc}
 8004938:	f000 f82a 	bl	8004990 <HAL_GetTick>
 800493c:	1b40      	subs	r0, r0, r5
 800493e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004942:	d9eb      	bls.n	800491c <HAL_PWREx_EnableOverDrive+0x64>
 8004944:	e7f5      	b.n	8004932 <HAL_PWREx_EnableOverDrive+0x7a>
 8004946:	bf00      	nop
 8004948:	40023800 	.word	0x40023800
 800494c:	40007000 	.word	0x40007000

08004950 <HAL_Init>:
 8004950:	b508      	push	{r3, lr}
 8004952:	4b0a      	ldr	r3, [pc, #40]	; (800497c <HAL_Init+0x2c>)
 8004954:	681a      	ldr	r2, [r3, #0]
 8004956:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800495a:	601a      	str	r2, [r3, #0]
 800495c:	681a      	ldr	r2, [r3, #0]
 800495e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004962:	601a      	str	r2, [r3, #0]
 8004964:	681a      	ldr	r2, [r3, #0]
 8004966:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800496a:	601a      	str	r2, [r3, #0]
 800496c:	200f      	movs	r0, #15
 800496e:	f7fd fff3 	bl	8002958 <HAL_InitTick>
 8004972:	f7ff ff9f 	bl	80048b4 <HAL_MspInit>
 8004976:	2000      	movs	r0, #0
 8004978:	bd08      	pop	{r3, pc}
 800497a:	bf00      	nop
 800497c:	40023c00 	.word	0x40023c00

08004980 <HAL_IncTick>:
 8004980:	4a02      	ldr	r2, [pc, #8]	; (800498c <HAL_IncTick+0xc>)
 8004982:	6813      	ldr	r3, [r2, #0]
 8004984:	3301      	adds	r3, #1
 8004986:	6013      	str	r3, [r2, #0]
 8004988:	4770      	bx	lr
 800498a:	bf00      	nop
 800498c:	20002840 	.word	0x20002840

08004990 <HAL_GetTick>:
 8004990:	4b01      	ldr	r3, [pc, #4]	; (8004998 <HAL_GetTick+0x8>)
 8004992:	6818      	ldr	r0, [r3, #0]
 8004994:	4770      	bx	lr
 8004996:	bf00      	nop
 8004998:	20002840 	.word	0x20002840

0800499c <mbed::donothing()>:
 800499c:	4770      	bx	lr

0800499e <mbed::SerialBase::lock()>:
 800499e:	4770      	bx	lr

080049a0 <mbed::SerialBase::unlock()>:
 80049a0:	4770      	bx	lr

080049a2 <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 80049a2:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 80049a6:	f102 0098 	add.w	r0, r2, #152	; 0x98
 80049aa:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 80049ae:	681b      	ldr	r3, [r3, #0]
 80049b0:	4718      	bx	r3

080049b2 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))>:
 80049b2:	b410      	push	{r4}
 80049b4:	b180      	cbz	r0, 80049d8 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 80049b6:	6814      	ldr	r4, [r2, #0]
 80049b8:	6853      	ldr	r3, [r2, #4]
 80049ba:	b90c      	cbnz	r4, 80049c0 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0xe>
 80049bc:	07da      	lsls	r2, r3, #31
 80049be:	d50b      	bpl.n	80049d8 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 80049c0:	f013 0f01 	tst.w	r3, #1
 80049c4:	ea4f 0363 	mov.w	r3, r3, asr #1
 80049c8:	bf1c      	itt	ne
 80049ca:	58c2      	ldrne	r2, [r0, r3]
 80049cc:	5914      	ldrne	r4, [r2, r4]
 80049ce:	4418      	add	r0, r3
 80049d0:	4623      	mov	r3, r4
 80049d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80049d6:	4718      	bx	r3
 80049d8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80049dc:	4770      	bx	lr

080049de <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 80049de:	6803      	ldr	r3, [r0, #0]
 80049e0:	4718      	bx	r3

080049e2 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 80049e2:	b108      	cbz	r0, 80049e8 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 80049e4:	680b      	ldr	r3, [r1, #0]
 80049e6:	6003      	str	r3, [r0, #0]
 80049e8:	4770      	bx	lr

080049ea <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 80049ea:	4770      	bx	lr

080049ec <mbed::SerialBase::baud(int)>:
 80049ec:	b570      	push	{r4, r5, r6, lr}
 80049ee:	4605      	mov	r5, r0
 80049f0:	4604      	mov	r4, r0
 80049f2:	f855 3b4c 	ldr.w	r3, [r5], #76
 80049f6:	460e      	mov	r6, r1
 80049f8:	681b      	ldr	r3, [r3, #0]
 80049fa:	4798      	blx	r3
 80049fc:	4628      	mov	r0, r5
 80049fe:	4631      	mov	r1, r6
 8004a00:	f7fe fc4a 	bl	8003298 <serial_baud>
 8004a04:	6823      	ldr	r3, [r4, #0]
 8004a06:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 8004a0a:	4620      	mov	r0, r4
 8004a0c:	685b      	ldr	r3, [r3, #4]
 8004a0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004a12:	4718      	bx	r3

08004a14 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 8004a14:	4288      	cmp	r0, r1
 8004a16:	b538      	push	{r3, r4, r5, lr}
 8004a18:	4604      	mov	r4, r0
 8004a1a:	460d      	mov	r5, r1
 8004a1c:	d00a      	beq.n	8004a34 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004a1e:	f7fc fa42 	bl	8000ea6 <mbed::Callback<void ()>::~Callback()>
 8004a22:	b13c      	cbz	r4, 8004a34 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004a24:	68eb      	ldr	r3, [r5, #12]
 8004a26:	b11b      	cbz	r3, 8004a30 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8004a28:	685b      	ldr	r3, [r3, #4]
 8004a2a:	4629      	mov	r1, r5
 8004a2c:	4620      	mov	r0, r4
 8004a2e:	4798      	blx	r3
 8004a30:	68eb      	ldr	r3, [r5, #12]
 8004a32:	60e3      	str	r3, [r4, #12]
 8004a34:	4620      	mov	r0, r4
 8004a36:	bd38      	pop	{r3, r4, r5, pc}

08004a38 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 8004a38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004a3c:	b087      	sub	sp, #28
 8004a3e:	2500      	movs	r5, #0
 8004a40:	4691      	mov	r9, r2
 8004a42:	9500      	str	r5, [sp, #0]
 8004a44:	4602      	mov	r2, r0
 8004a46:	9501      	str	r5, [sp, #4]
 8004a48:	4604      	mov	r4, r0
 8004a4a:	4688      	mov	r8, r1
 8004a4c:	461f      	mov	r7, r3
 8004a4e:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8004a52:	4b27      	ldr	r3, [pc, #156]	; (8004af0 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xb8>)
 8004a54:	f842 3b08 	str.w	r3, [r2], #8
 8004a58:	4b26      	ldr	r3, [pc, #152]	; (8004af4 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xbc>)
 8004a5a:	e882 0003 	stmia.w	r2, {r0, r1}
 8004a5e:	6123      	str	r3, [r4, #16]
 8004a60:	f248 0307 	movw	r3, #32775	; 0x8007
 8004a64:	6163      	str	r3, [r4, #20]
 8004a66:	4b24      	ldr	r3, [pc, #144]	; (8004af8 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc0>)
 8004a68:	61e5      	str	r5, [r4, #28]
 8004a6a:	61a4      	str	r4, [r4, #24]
 8004a6c:	6222      	str	r2, [r4, #32]
 8004a6e:	6263      	str	r3, [r4, #36]	; 0x24
 8004a70:	f3bf 8f6f 	isb	sy
 8004a74:	f3bf 8f4f 	dsb	sy
 8004a78:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8004a7c:	224c      	movs	r2, #76	; 0x4c
 8004a7e:	6365      	str	r5, [r4, #52]	; 0x34
 8004a80:	6465      	str	r5, [r4, #68]	; 0x44
 8004a82:	f884 5048 	strb.w	r5, [r4, #72]	; 0x48
 8004a86:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 8004a8a:	4630      	mov	r0, r6
 8004a8c:	f000 fd85 	bl	800559a <memset>
 8004a90:	a902      	add	r1, sp, #8
 8004a92:	f8c4 50a4 	str.w	r5, [r4, #164]	; 0xa4
 8004a96:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 8004a9a:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 8004a9e:	4d17      	ldr	r5, [pc, #92]	; (8004afc <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc4>)
 8004aa0:	4f17      	ldr	r7, [pc, #92]	; (8004b00 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc8>)
 8004aa2:	9702      	str	r7, [sp, #8]
 8004aa4:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8004aa8:	9505      	str	r5, [sp, #20]
 8004aaa:	f7ff ffb3 	bl	8004a14 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004aae:	a802      	add	r0, sp, #8
 8004ab0:	f7fc f9f9 	bl	8000ea6 <mbed::Callback<void ()>::~Callback()>
 8004ab4:	a902      	add	r1, sp, #8
 8004ab6:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8004aba:	9702      	str	r7, [sp, #8]
 8004abc:	9505      	str	r5, [sp, #20]
 8004abe:	f7ff ffa9 	bl	8004a14 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004ac2:	a802      	add	r0, sp, #8
 8004ac4:	f7fc f9ef 	bl	8000ea6 <mbed::Callback<void ()>::~Callback()>
 8004ac8:	464a      	mov	r2, r9
 8004aca:	4641      	mov	r1, r8
 8004acc:	4630      	mov	r0, r6
 8004ace:	f7fe faf3 	bl	80030b8 <serial_init>
 8004ad2:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 8004ad6:	4630      	mov	r0, r6
 8004ad8:	f7fe fbde 	bl	8003298 <serial_baud>
 8004adc:	4630      	mov	r0, r6
 8004ade:	4622      	mov	r2, r4
 8004ae0:	4908      	ldr	r1, [pc, #32]	; (8004b04 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xcc>)
 8004ae2:	f7fe fbdd 	bl	80032a0 <serial_irq_handler>
 8004ae6:	4620      	mov	r0, r4
 8004ae8:	b007      	add	sp, #28
 8004aea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004aee:	bf00      	nop
 8004af0:	0800642c 	.word	0x0800642c
 8004af4:	e890a001 	.word	0xe890a001
 8004af8:	080049b3 	.word	0x080049b3
 8004afc:	08006418 	.word	0x08006418
 8004b00:	0800499d 	.word	0x0800499d
 8004b04:	080049a3 	.word	0x080049a3

08004b08 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 8004b08:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004b0c:	4605      	mov	r5, r0
 8004b0e:	4688      	mov	r8, r1
 8004b10:	f855 3b4c 	ldr.w	r3, [r5], #76
 8004b14:	681b      	ldr	r3, [r3, #0]
 8004b16:	4604      	mov	r4, r0
 8004b18:	4616      	mov	r6, r2
 8004b1a:	4798      	blx	r3
 8004b1c:	f7fc fc46 	bl	80013ac <core_util_critical_section_enter>
 8004b20:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8004b24:	0130      	lsls	r0, r6, #4
 8004b26:	b197      	cbz	r7, 8004b4e <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8004b28:	3098      	adds	r0, #152	; 0x98
 8004b2a:	4641      	mov	r1, r8
 8004b2c:	4420      	add	r0, r4
 8004b2e:	f7ff ff71 	bl	8004a14 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004b32:	2201      	movs	r2, #1
 8004b34:	4631      	mov	r1, r6
 8004b36:	4628      	mov	r0, r5
 8004b38:	f7fe fbbe 	bl	80032b8 <serial_irq_set>
 8004b3c:	f7fc fc4c 	bl	80013d8 <core_util_critical_section_exit>
 8004b40:	6823      	ldr	r3, [r4, #0]
 8004b42:	4620      	mov	r0, r4
 8004b44:	685b      	ldr	r3, [r3, #4]
 8004b46:	4798      	blx	r3
 8004b48:	b004      	add	sp, #16
 8004b4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b4e:	4b07      	ldr	r3, [pc, #28]	; (8004b6c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 8004b50:	9300      	str	r3, [sp, #0]
 8004b52:	3098      	adds	r0, #152	; 0x98
 8004b54:	4b06      	ldr	r3, [pc, #24]	; (8004b70 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 8004b56:	9303      	str	r3, [sp, #12]
 8004b58:	4669      	mov	r1, sp
 8004b5a:	4420      	add	r0, r4
 8004b5c:	f7ff ff5a 	bl	8004a14 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004b60:	4668      	mov	r0, sp
 8004b62:	f7fc f9a0 	bl	8000ea6 <mbed::Callback<void ()>::~Callback()>
 8004b66:	463a      	mov	r2, r7
 8004b68:	e7e4      	b.n	8004b34 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 8004b6a:	bf00      	nop
 8004b6c:	0800499d 	.word	0x0800499d
 8004b70:	08006418 	.word	0x08006418

08004b74 <mbed::RawSerial::lock()>:
 8004b74:	4770      	bx	lr
	...

08004b78 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8004b78:	b510      	push	{r4, lr}
 8004b7a:	4604      	mov	r4, r0
 8004b7c:	f7ff ff5c 	bl	8004a38 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8004b80:	4b01      	ldr	r3, [pc, #4]	; (8004b88 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8004b82:	6023      	str	r3, [r4, #0]
 8004b84:	4620      	mov	r0, r4
 8004b86:	bd10      	pop	{r4, pc}
 8004b88:	08006444 	.word	0x08006444

08004b8c <mbed::RawSerial::~RawSerial()>:
 8004b8c:	b510      	push	{r4, lr}
 8004b8e:	4b03      	ldr	r3, [pc, #12]	; (8004b9c <mbed::RawSerial::~RawSerial()+0x10>)
 8004b90:	6003      	str	r3, [r0, #0]
 8004b92:	4604      	mov	r4, r0
 8004b94:	f7fc f9ca 	bl	8000f2c <mbed::SerialBase::~SerialBase()>
 8004b98:	4620      	mov	r0, r4
 8004b9a:	bd10      	pop	{r4, pc}
 8004b9c:	08006444 	.word	0x08006444

08004ba0 <mbed::RawSerial::~RawSerial()>:
 8004ba0:	b510      	push	{r4, lr}
 8004ba2:	4604      	mov	r4, r0
 8004ba4:	f7ff fff2 	bl	8004b8c <mbed::RawSerial::~RawSerial()>
 8004ba8:	4620      	mov	r0, r4
 8004baa:	f000 f9c3 	bl	8004f34 <operator delete(void*)>
 8004bae:	4620      	mov	r0, r4
 8004bb0:	bd10      	pop	{r4, pc}

08004bb2 <mbed::Timer::start()>:
 8004bb2:	b510      	push	{r4, lr}
 8004bb4:	4604      	mov	r4, r0
 8004bb6:	f7fc fbf9 	bl	80013ac <core_util_critical_section_enter>
 8004bba:	6823      	ldr	r3, [r4, #0]
 8004bbc:	b92b      	cbnz	r3, 8004bca <mbed::Timer::start()+0x18>
 8004bbe:	68e0      	ldr	r0, [r4, #12]
 8004bc0:	f7fc fb89 	bl	80012d6 <ticker_read>
 8004bc4:	2301      	movs	r3, #1
 8004bc6:	6060      	str	r0, [r4, #4]
 8004bc8:	6023      	str	r3, [r4, #0]
 8004bca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004bce:	f7fc bc03 	b.w	80013d8 <core_util_critical_section_exit>

08004bd2 <mbed::Timer::slicetime()>:
 8004bd2:	b538      	push	{r3, r4, r5, lr}
 8004bd4:	4605      	mov	r5, r0
 8004bd6:	f7fc fbe9 	bl	80013ac <core_util_critical_section_enter>
 8004bda:	682c      	ldr	r4, [r5, #0]
 8004bdc:	b124      	cbz	r4, 8004be8 <mbed::Timer::slicetime()+0x16>
 8004bde:	68e8      	ldr	r0, [r5, #12]
 8004be0:	f7fc fb79 	bl	80012d6 <ticker_read>
 8004be4:	686c      	ldr	r4, [r5, #4]
 8004be6:	1b04      	subs	r4, r0, r4
 8004be8:	f7fc fbf6 	bl	80013d8 <core_util_critical_section_exit>
 8004bec:	4620      	mov	r0, r4
 8004bee:	bd38      	pop	{r3, r4, r5, pc}

08004bf0 <mbed::Timer::read_us()>:
 8004bf0:	b538      	push	{r3, r4, r5, lr}
 8004bf2:	4605      	mov	r5, r0
 8004bf4:	f7fc fbda 	bl	80013ac <core_util_critical_section_enter>
 8004bf8:	4628      	mov	r0, r5
 8004bfa:	68ac      	ldr	r4, [r5, #8]
 8004bfc:	f7ff ffe9 	bl	8004bd2 <mbed::Timer::slicetime()>
 8004c00:	4404      	add	r4, r0
 8004c02:	f7fc fbe9 	bl	80013d8 <core_util_critical_section_exit>
 8004c06:	4620      	mov	r0, r4
 8004c08:	bd38      	pop	{r3, r4, r5, pc}

08004c0a <mbed::Timer::read_ms()>:
 8004c0a:	b508      	push	{r3, lr}
 8004c0c:	f7ff fff0 	bl	8004bf0 <mbed::Timer::read_us()>
 8004c10:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004c14:	fb90 f0f3 	sdiv	r0, r0, r3
 8004c18:	bd08      	pop	{r3, pc}

08004c1a <mbed::Timer::reset()>:
 8004c1a:	b510      	push	{r4, lr}
 8004c1c:	4604      	mov	r4, r0
 8004c1e:	f7fc fbc5 	bl	80013ac <core_util_critical_section_enter>
 8004c22:	68e0      	ldr	r0, [r4, #12]
 8004c24:	f7fc fb57 	bl	80012d6 <ticker_read>
 8004c28:	2300      	movs	r3, #0
 8004c2a:	6060      	str	r0, [r4, #4]
 8004c2c:	60a3      	str	r3, [r4, #8]
 8004c2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004c32:	f7fc bbd1 	b.w	80013d8 <core_util_critical_section_exit>

08004c36 <mbed::Timer::Timer()>:
 8004c36:	2300      	movs	r3, #0
 8004c38:	b510      	push	{r4, lr}
 8004c3a:	6003      	str	r3, [r0, #0]
 8004c3c:	6043      	str	r3, [r0, #4]
 8004c3e:	6083      	str	r3, [r0, #8]
 8004c40:	4604      	mov	r4, r0
 8004c42:	f7fc fb1b 	bl	800127c <get_us_ticker_data>
 8004c46:	60e0      	str	r0, [r4, #12]
 8004c48:	4620      	mov	r0, r4
 8004c4a:	f7ff ffe6 	bl	8004c1a <mbed::Timer::reset()>
 8004c4e:	4620      	mov	r0, r4
 8004c50:	bd10      	pop	{r4, pc}

08004c52 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 8004c52:	b538      	push	{r3, r4, r5, lr}
 8004c54:	4604      	mov	r4, r0
 8004c56:	b148      	cbz	r0, 8004c6c <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8004c58:	3058      	adds	r0, #88	; 0x58
 8004c5a:	42a0      	cmp	r0, r4
 8004c5c:	d006      	beq.n	8004c6c <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8004c5e:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 8004c62:	3814      	subs	r0, #20
 8004c64:	f7fc f959 	bl	8000f1a <mbed::Callback<void (int)>::~Callback()>
 8004c68:	4628      	mov	r0, r5
 8004c6a:	e7f6      	b.n	8004c5a <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 8004c6c:	4620      	mov	r0, r4
 8004c6e:	bd38      	pop	{r3, r4, r5, pc}

08004c70 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 8004c70:	b570      	push	{r4, r5, r6, lr}
 8004c72:	4c0e      	ldr	r4, [pc, #56]	; (8004cac <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 8004c74:	4620      	mov	r0, r4
 8004c76:	2500      	movs	r5, #0
 8004c78:	2628      	movs	r6, #40	; 0x28
 8004c7a:	4632      	mov	r2, r6
 8004c7c:	4629      	mov	r1, r5
 8004c7e:	f840 5b04 	str.w	r5, [r0], #4
 8004c82:	f000 fc8a 	bl	800559a <memset>
 8004c86:	4632      	mov	r2, r6
 8004c88:	4629      	mov	r1, r5
 8004c8a:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8004c8e:	62e5      	str	r5, [r4, #44]	; 0x2c
 8004c90:	f000 fc83 	bl	800559a <memset>
 8004c94:	65a5      	str	r5, [r4, #88]	; 0x58
 8004c96:	4620      	mov	r0, r4
 8004c98:	65e5      	str	r5, [r4, #92]	; 0x5c
 8004c9a:	4a05      	ldr	r2, [pc, #20]	; (8004cb0 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 8004c9c:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 8004ca0:	4904      	ldr	r1, [pc, #16]	; (8004cb4 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 8004ca2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004ca6:	f000 b927 	b.w	8004ef8 <__aeabi_atexit>
 8004caa:	bf00      	nop
 8004cac:	20001bdc 	.word	0x20001bdc
 8004cb0:	200001c4 	.word	0x200001c4
 8004cb4:	08004c53 	.word	0x08004c53

08004cb8 <__wrap__malloc_r>:
 8004cb8:	f000 bcc6 	b.w	8005648 <_malloc_r>

08004cbc <__wrap__realloc_r>:
 8004cbc:	f000 bd22 	b.w	8005704 <_realloc_r>

08004cc0 <__wrap__free_r>:
 8004cc0:	f000 bc74 	b.w	80055ac <_free_r>

08004cc4 <wait_us>:
 8004cc4:	b570      	push	{r4, r5, r6, lr}
 8004cc6:	4605      	mov	r5, r0
 8004cc8:	f7fe f858 	bl	8002d7c <us_ticker_read>
 8004ccc:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8004cd0:	fb95 f4f4 	sdiv	r4, r5, r4
 8004cd4:	2c00      	cmp	r4, #0
 8004cd6:	4606      	mov	r6, r0
 8004cd8:	dd02      	ble.n	8004ce0 <wait_us+0x1c>
 8004cda:	f7fc fb61 	bl	80013a0 <core_util_are_interrupts_enabled>
 8004cde:	b928      	cbnz	r0, 8004cec <wait_us+0x28>
 8004ce0:	f7fe f84c 	bl	8002d7c <us_ticker_read>
 8004ce4:	1b80      	subs	r0, r0, r6
 8004ce6:	42a8      	cmp	r0, r5
 8004ce8:	d3fa      	bcc.n	8004ce0 <wait_us+0x1c>
 8004cea:	bd70      	pop	{r4, r5, r6, pc}
 8004cec:	4620      	mov	r0, r4
 8004cee:	f000 f92b 	bl	8004f48 <rtos::Thread::wait(unsigned long)>
 8004cf2:	e7f5      	b.n	8004ce0 <wait_us+0x1c>

08004cf4 <wait_ms>:
 8004cf4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004cf8:	4358      	muls	r0, r3
 8004cfa:	f7ff bfe3 	b.w	8004cc4 <wait_us>
	...

08004d00 <init_serial()>:
 8004d00:	b508      	push	{r3, lr}
 8004d02:	4b08      	ldr	r3, [pc, #32]	; (8004d24 <init_serial()+0x24>)
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	b95b      	cbnz	r3, 8004d20 <init_serial()+0x20>
 8004d08:	2102      	movs	r1, #2
 8004d0a:	4807      	ldr	r0, [pc, #28]	; (8004d28 <init_serial()+0x28>)
 8004d0c:	2203      	movs	r2, #3
 8004d0e:	f7fe f9d3 	bl	80030b8 <serial_init>
 8004d12:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 8004d16:	4804      	ldr	r0, [pc, #16]	; (8004d28 <init_serial()+0x28>)
 8004d18:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004d1c:	f7fe babc 	b.w	8003298 <serial_baud>
 8004d20:	bd08      	pop	{r3, pc}
 8004d22:	bf00      	nop
 8004d24:	200019d8 	.word	0x200019d8
 8004d28:	200027f4 	.word	0x200027f4

08004d2c <_close>:
 8004d2c:	2802      	cmp	r0, #2
 8004d2e:	b510      	push	{r4, lr}
 8004d30:	4604      	mov	r4, r0
 8004d32:	dc01      	bgt.n	8004d38 <_close+0xc>
 8004d34:	2000      	movs	r0, #0
 8004d36:	bd10      	pop	{r4, pc}
 8004d38:	f000 f9f0 	bl	800511c <__errno>
 8004d3c:	2309      	movs	r3, #9
 8004d3e:	6003      	str	r3, [r0, #0]
 8004d40:	3c03      	subs	r4, #3
 8004d42:	4b09      	ldr	r3, [pc, #36]	; (8004d68 <_close+0x3c>)
 8004d44:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004d48:	2200      	movs	r2, #0
 8004d4a:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8004d4e:	b140      	cbz	r0, 8004d62 <_close+0x36>
 8004d50:	6803      	ldr	r3, [r0, #0]
 8004d52:	691b      	ldr	r3, [r3, #16]
 8004d54:	4798      	blx	r3
 8004d56:	1e04      	subs	r4, r0, #0
 8004d58:	daec      	bge.n	8004d34 <_close+0x8>
 8004d5a:	f000 f9df 	bl	800511c <__errno>
 8004d5e:	4264      	negs	r4, r4
 8004d60:	6004      	str	r4, [r0, #0]
 8004d62:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004d66:	bd10      	pop	{r4, pc}
 8004d68:	20001c40 	.word	0x20001c40

08004d6c <_write>:
 8004d6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004d6e:	4605      	mov	r5, r0
 8004d70:	460e      	mov	r6, r1
 8004d72:	4614      	mov	r4, r2
 8004d74:	f000 f9d2 	bl	800511c <__errno>
 8004d78:	2309      	movs	r3, #9
 8004d7a:	2d02      	cmp	r5, #2
 8004d7c:	6003      	str	r3, [r0, #0]
 8004d7e:	dc0f      	bgt.n	8004da0 <_write+0x34>
 8004d80:	4b12      	ldr	r3, [pc, #72]	; (8004dcc <_write+0x60>)
 8004d82:	681b      	ldr	r3, [r3, #0]
 8004d84:	b90b      	cbnz	r3, 8004d8a <_write+0x1e>
 8004d86:	f7ff ffbb 	bl	8004d00 <init_serial()>
 8004d8a:	4635      	mov	r5, r6
 8004d8c:	1937      	adds	r7, r6, r4
 8004d8e:	4e10      	ldr	r6, [pc, #64]	; (8004dd0 <_write+0x64>)
 8004d90:	42bd      	cmp	r5, r7
 8004d92:	d015      	beq.n	8004dc0 <_write+0x54>
 8004d94:	f815 1b01 	ldrb.w	r1, [r5], #1
 8004d98:	4630      	mov	r0, r6
 8004d9a:	f7fe fb11 	bl	80033c0 <serial_putc>
 8004d9e:	e7f7      	b.n	8004d90 <_write+0x24>
 8004da0:	3d03      	subs	r5, #3
 8004da2:	4b0c      	ldr	r3, [pc, #48]	; (8004dd4 <_write+0x68>)
 8004da4:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004da8:	b160      	cbz	r0, 8004dc4 <_write+0x58>
 8004daa:	6803      	ldr	r3, [r0, #0]
 8004dac:	4622      	mov	r2, r4
 8004dae:	68db      	ldr	r3, [r3, #12]
 8004db0:	4631      	mov	r1, r6
 8004db2:	4798      	blx	r3
 8004db4:	1e04      	subs	r4, r0, #0
 8004db6:	da03      	bge.n	8004dc0 <_write+0x54>
 8004db8:	f000 f9b0 	bl	800511c <__errno>
 8004dbc:	4263      	negs	r3, r4
 8004dbe:	6003      	str	r3, [r0, #0]
 8004dc0:	4620      	mov	r0, r4
 8004dc2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004dc4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8004dc8:	e7fa      	b.n	8004dc0 <_write+0x54>
 8004dca:	bf00      	nop
 8004dcc:	200019d8 	.word	0x200019d8
 8004dd0:	200027f4 	.word	0x200027f4
 8004dd4:	20001c40 	.word	0x20001c40

08004dd8 <_read>:
 8004dd8:	b570      	push	{r4, r5, r6, lr}
 8004dda:	4604      	mov	r4, r0
 8004ddc:	460d      	mov	r5, r1
 8004dde:	4616      	mov	r6, r2
 8004de0:	f000 f99c 	bl	800511c <__errno>
 8004de4:	2309      	movs	r3, #9
 8004de6:	2c02      	cmp	r4, #2
 8004de8:	6003      	str	r3, [r0, #0]
 8004dea:	dc0b      	bgt.n	8004e04 <_read+0x2c>
 8004dec:	4b0f      	ldr	r3, [pc, #60]	; (8004e2c <_read+0x54>)
 8004dee:	681b      	ldr	r3, [r3, #0]
 8004df0:	b90b      	cbnz	r3, 8004df6 <_read+0x1e>
 8004df2:	f7ff ff85 	bl	8004d00 <init_serial()>
 8004df6:	480e      	ldr	r0, [pc, #56]	; (8004e30 <_read+0x58>)
 8004df8:	f7fe fac6 	bl	8003388 <serial_getc>
 8004dfc:	2401      	movs	r4, #1
 8004dfe:	7028      	strb	r0, [r5, #0]
 8004e00:	4620      	mov	r0, r4
 8004e02:	bd70      	pop	{r4, r5, r6, pc}
 8004e04:	3c03      	subs	r4, #3
 8004e06:	4b0b      	ldr	r3, [pc, #44]	; (8004e34 <_read+0x5c>)
 8004e08:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004e0c:	b158      	cbz	r0, 8004e26 <_read+0x4e>
 8004e0e:	6803      	ldr	r3, [r0, #0]
 8004e10:	4632      	mov	r2, r6
 8004e12:	689b      	ldr	r3, [r3, #8]
 8004e14:	4629      	mov	r1, r5
 8004e16:	4798      	blx	r3
 8004e18:	1e04      	subs	r4, r0, #0
 8004e1a:	daf1      	bge.n	8004e00 <_read+0x28>
 8004e1c:	f000 f97e 	bl	800511c <__errno>
 8004e20:	4263      	negs	r3, r4
 8004e22:	6003      	str	r3, [r0, #0]
 8004e24:	e7ec      	b.n	8004e00 <_read+0x28>
 8004e26:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8004e2a:	e7e9      	b.n	8004e00 <_read+0x28>
 8004e2c:	200019d8 	.word	0x200019d8
 8004e30:	200027f4 	.word	0x200027f4
 8004e34:	20001c40 	.word	0x20001c40

08004e38 <_lseek>:
 8004e38:	b570      	push	{r4, r5, r6, lr}
 8004e3a:	4604      	mov	r4, r0
 8004e3c:	460d      	mov	r5, r1
 8004e3e:	4616      	mov	r6, r2
 8004e40:	f000 f96c 	bl	800511c <__errno>
 8004e44:	2309      	movs	r3, #9
 8004e46:	2c02      	cmp	r4, #2
 8004e48:	6003      	str	r3, [r0, #0]
 8004e4a:	dd0b      	ble.n	8004e64 <_lseek+0x2c>
 8004e4c:	3c03      	subs	r4, #3
 8004e4e:	4b08      	ldr	r3, [pc, #32]	; (8004e70 <_lseek+0x38>)
 8004e50:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004e54:	b140      	cbz	r0, 8004e68 <_lseek+0x30>
 8004e56:	6803      	ldr	r3, [r0, #0]
 8004e58:	4632      	mov	r2, r6
 8004e5a:	4629      	mov	r1, r5
 8004e5c:	69db      	ldr	r3, [r3, #28]
 8004e5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004e62:	4718      	bx	r3
 8004e64:	2000      	movs	r0, #0
 8004e66:	bd70      	pop	{r4, r5, r6, pc}
 8004e68:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004e6c:	bd70      	pop	{r4, r5, r6, pc}
 8004e6e:	bf00      	nop
 8004e70:	20001c40 	.word	0x20001c40

08004e74 <software_init_hook>:
 8004e74:	b508      	push	{r3, lr}
 8004e76:	f7fe fab5 	bl	80033e4 <mbed_sdk_init>
 8004e7a:	f7fc fc21 	bl	80016c0 <software_init_hook_rtos>
 8004e7e:	bd08      	pop	{r3, pc}

08004e80 <mbed_main>:
 8004e80:	4770      	bx	lr

08004e82 <__wrap_main>:
 8004e82:	b508      	push	{r3, lr}
 8004e84:	f7ff fffc 	bl	8004e80 <mbed_main>
 8004e88:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004e8c:	f7fb bf52 	b.w	8000d34 <main>

08004e90 <_sbrk>:
 8004e90:	4a0c      	ldr	r2, [pc, #48]	; (8004ec4 <_sbrk+0x34>)
 8004e92:	6813      	ldr	r3, [r2, #0]
 8004e94:	b510      	push	{r4, lr}
 8004e96:	4418      	add	r0, r3
 8004e98:	f3ef 8108 	mrs	r1, MSP
 8004e9c:	4288      	cmp	r0, r1
 8004e9e:	d305      	bcc.n	8004eac <_sbrk+0x1c>
 8004ea0:	4b09      	ldr	r3, [pc, #36]	; (8004ec8 <_sbrk+0x38>)
 8004ea2:	220c      	movs	r2, #12
 8004ea4:	601a      	str	r2, [r3, #0]
 8004ea6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004eaa:	bd10      	pop	{r4, pc}
 8004eac:	4907      	ldr	r1, [pc, #28]	; (8004ecc <_sbrk+0x3c>)
 8004eae:	680c      	ldr	r4, [r1, #0]
 8004eb0:	b124      	cbz	r4, 8004ebc <_sbrk+0x2c>
 8004eb2:	4907      	ldr	r1, [pc, #28]	; (8004ed0 <_sbrk+0x40>)
 8004eb4:	6809      	ldr	r1, [r1, #0]
 8004eb6:	4421      	add	r1, r4
 8004eb8:	4288      	cmp	r0, r1
 8004eba:	d2f1      	bcs.n	8004ea0 <_sbrk+0x10>
 8004ebc:	6010      	str	r0, [r2, #0]
 8004ebe:	4618      	mov	r0, r3
 8004ec0:	bd10      	pop	{r4, pc}
 8004ec2:	bf00      	nop
 8004ec4:	200001e4 	.word	0x200001e4
 8004ec8:	20002844 	.word	0x20002844
 8004ecc:	20001d40 	.word	0x20001d40
 8004ed0:	20001d44 	.word	0x20001d44

08004ed4 <_exit>:
 8004ed4:	4c07      	ldr	r4, [pc, #28]	; (8004ef4 <_exit+0x20>)
 8004ed6:	b508      	push	{r3, lr}
 8004ed8:	6823      	ldr	r3, [r4, #0]
 8004eda:	4605      	mov	r5, r0
 8004edc:	6898      	ldr	r0, [r3, #8]
 8004ede:	f000 f9d5 	bl	800528c <fflush>
 8004ee2:	6823      	ldr	r3, [r4, #0]
 8004ee4:	68d8      	ldr	r0, [r3, #12]
 8004ee6:	f000 f9d1 	bl	800528c <fflush>
 8004eea:	b10d      	cbz	r5, 8004ef0 <_exit+0x1c>
 8004eec:	f7fc fa42 	bl	8001374 <mbed_die>
 8004ef0:	e7fe      	b.n	8004ef0 <_exit+0x1c>
 8004ef2:	bf00      	nop
 8004ef4:	200001e8 	.word	0x200001e8

08004ef8 <__aeabi_atexit>:
 8004ef8:	2001      	movs	r0, #1
 8004efa:	4770      	bx	lr

08004efc <__wrap_exit>:
 8004efc:	b508      	push	{r3, lr}
 8004efe:	f7ff ffe9 	bl	8004ed4 <_exit>

08004f02 <__malloc_lock>:
 8004f02:	b508      	push	{r3, lr}
 8004f04:	f7fc fbea 	bl	80016dc <__rtos_malloc_lock>
 8004f08:	bd08      	pop	{r3, pc}

08004f0a <__malloc_unlock>:
 8004f0a:	b508      	push	{r3, lr}
 8004f0c:	f7fc fbee 	bl	80016ec <__rtos_malloc_unlock>
 8004f10:	bd08      	pop	{r3, pc}
	...

08004f14 <operator new[](unsigned int)>:
 8004f14:	b510      	push	{r4, lr}
 8004f16:	f000 fab9 	bl	800548c <malloc>
 8004f1a:	4604      	mov	r4, r0
 8004f1c:	b910      	cbnz	r0, 8004f24 <operator new[](unsigned int)+0x10>
 8004f1e:	4802      	ldr	r0, [pc, #8]	; (8004f28 <operator new[](unsigned int)+0x14>)
 8004f20:	f7fc fa6e 	bl	8001400 <error>
 8004f24:	4620      	mov	r0, r4
 8004f26:	bd10      	pop	{r4, pc}
 8004f28:	08006454 	.word	0x08006454

08004f2c <operator delete[](void*)>:
 8004f2c:	b108      	cbz	r0, 8004f32 <operator delete[](void*)+0x6>
 8004f2e:	f000 bab5 	b.w	800549c <free>
 8004f32:	4770      	bx	lr

08004f34 <operator delete(void*)>:
 8004f34:	f7ff bffa 	b.w	8004f2c <operator delete[](void*)>

08004f38 <thread_terminate_hook>:
 8004f38:	4b02      	ldr	r3, [pc, #8]	; (8004f44 <thread_terminate_hook+0xc>)
 8004f3a:	681b      	ldr	r3, [r3, #0]
 8004f3c:	b103      	cbz	r3, 8004f40 <thread_terminate_hook+0x8>
 8004f3e:	4718      	bx	r3
 8004f40:	4770      	bx	lr
 8004f42:	bf00      	nop
 8004f44:	20001d48 	.word	0x20001d48

08004f48 <rtos::Thread::wait(unsigned long)>:
 8004f48:	f7fc bfa6 	b.w	8001e98 <osDelay>

08004f4c <rt_set_PSP>:
 8004f4c:	f380 8809 	msr	PSP, r0
 8004f50:	4770      	bx	lr

08004f52 <rt_get_PSP>:
 8004f52:	f3ef 8009 	mrs	r0, PSP
 8004f56:	4770      	bx	lr

08004f58 <os_set_env>:
 8004f58:	4668      	mov	r0, sp
 8004f5a:	f380 8809 	msr	PSP, r0
 8004f5e:	485a      	ldr	r0, [pc, #360]	; (80050c8 <OS_Tick_Handler+0x10>)
 8004f60:	7800      	ldrb	r0, [r0, #0]
 8004f62:	07c0      	lsls	r0, r0, #31
 8004f64:	bf14      	ite	ne
 8004f66:	2002      	movne	r0, #2
 8004f68:	2003      	moveq	r0, #3
 8004f6a:	f380 8814 	msr	CONTROL, r0
 8004f6e:	4770      	bx	lr

08004f70 <_alloc_box>:
 8004f70:	f8df c158 	ldr.w	r12, [pc, #344]	; 80050cc <OS_Tick_Handler+0x14>
 8004f74:	f3ef 8305 	mrs	r3, IPSR
 8004f78:	061b      	lsls	r3, r3, #24
 8004f7a:	bf18      	it	ne
 8004f7c:	4760      	bxne	r12
 8004f7e:	f3ef 8314 	mrs	r3, CONTROL
 8004f82:	07db      	lsls	r3, r3, #31
 8004f84:	bf08      	it	eq
 8004f86:	4760      	bxeq	r12
 8004f88:	df00      	svc	0
 8004f8a:	4770      	bx	lr

08004f8c <_free_box>:
 8004f8c:	f8df c140 	ldr.w	r12, [pc, #320]	; 80050d0 <OS_Tick_Handler+0x18>
 8004f90:	f3ef 8305 	mrs	r3, IPSR
 8004f94:	061b      	lsls	r3, r3, #24
 8004f96:	bf18      	it	ne
 8004f98:	4760      	bxne	r12
 8004f9a:	f3ef 8314 	mrs	r3, CONTROL
 8004f9e:	07db      	lsls	r3, r3, #31
 8004fa0:	bf08      	it	eq
 8004fa2:	4760      	bxeq	r12
 8004fa4:	df00      	svc	0
 8004fa6:	4770      	bx	lr

08004fa8 <SVC_Handler>:
 8004fa8:	f3ef 8009 	mrs	r0, PSP
 8004fac:	6981      	ldr	r1, [r0, #24]
 8004fae:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 8004fb2:	bbe1      	cbnz	r1, 800502e <SVC_User>
 8004fb4:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8004fb8:	b510      	push	{r4, lr}
 8004fba:	47e0      	blx	r12
 8004fbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004fc0:	f3ef 8c09 	mrs	r12, PSP
 8004fc4:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 8004fc8:	4b42      	ldr	r3, [pc, #264]	; (80050d4 <OS_Tick_Handler+0x1c>)
 8004fca:	e893 0006 	ldmia.w	r3, {r1, r2}
 8004fce:	4291      	cmp	r1, r2
 8004fd0:	bf08      	it	eq
 8004fd2:	4770      	bxeq	lr
 8004fd4:	b941      	cbnz	r1, 8004fe8 <SVC_ContextSave>
 8004fd6:	f01e 0f10 	tst.w	lr, #16
 8004fda:	d116      	bne.n	800500a <SVC_ContextRestore>
 8004fdc:	493e      	ldr	r1, [pc, #248]	; (80050d8 <OS_Tick_Handler+0x20>)
 8004fde:	6808      	ldr	r0, [r1, #0]
 8004fe0:	f020 0001 	bic.w	r0, r0, #1
 8004fe4:	6008      	str	r0, [r1, #0]
 8004fe6:	e010      	b.n	800500a <SVC_ContextRestore>

08004fe8 <SVC_ContextSave>:
 8004fe8:	f01e 0f10 	tst.w	lr, #16
 8004fec:	bf06      	itte	eq
 8004fee:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8004ff2:	2001      	moveq	r0, #1
 8004ff4:	2000      	movne	r0, #0
 8004ff6:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8004ffa:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8004ffe:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8005002:	b40c      	push	{r2, r3}
 8005004:	f7fc fc5e 	bl	80018c4 <rt_stk_check>
 8005008:	bc0c      	pop	{r2, r3}

0800500a <SVC_ContextRestore>:
 800500a:	601a      	str	r2, [r3, #0]
 800500c:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8005010:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005014:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005018:	2800      	cmp	r0, #0
 800501a:	bf0e      	itee	eq
 800501c:	f06f 0e02 	mvneq.w	lr, #2
 8005020:	f06f 0e12 	mvnne.w	lr, #18
 8005024:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005028:	f38c 8809 	msr	PSP, r12

0800502c <SVC_Exit>:
 800502c:	4770      	bx	lr

0800502e <SVC_User>:
 800502e:	b510      	push	{r4, lr}
 8005030:	4a2a      	ldr	r2, [pc, #168]	; (80050dc <OS_Tick_Handler+0x24>)
 8005032:	6812      	ldr	r2, [r2, #0]
 8005034:	4291      	cmp	r1, r2
 8005036:	d809      	bhi.n	800504c <SVC_Done>
 8005038:	4c29      	ldr	r4, [pc, #164]	; (80050e0 <OS_Tick_Handler+0x28>)
 800503a:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 800503e:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8005042:	47a0      	blx	r4
 8005044:	f3ef 8c09 	mrs	r12, PSP
 8005048:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

0800504c <SVC_Done>:
 800504c:	bd10      	pop	{r4, pc}

0800504e <PendSV_Handler>:
 800504e:	b510      	push	{r4, lr}
 8005050:	f7fc fbc4 	bl	80017dc <rt_pop_req>

08005054 <Sys_Switch>:
 8005054:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005058:	4b1e      	ldr	r3, [pc, #120]	; (80050d4 <OS_Tick_Handler+0x1c>)
 800505a:	e893 0006 	ldmia.w	r3, {r1, r2}
 800505e:	4291      	cmp	r1, r2
 8005060:	bf08      	it	eq
 8005062:	4770      	bxeq	lr
 8005064:	f3ef 8c09 	mrs	r12, PSP
 8005068:	f01e 0f10 	tst.w	lr, #16
 800506c:	bf06      	itte	eq
 800506e:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8005072:	2001      	moveq	r0, #1
 8005074:	2000      	movne	r0, #0
 8005076:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 800507a:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 800507e:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8005082:	b40c      	push	{r2, r3}
 8005084:	f7fc fc1e 	bl	80018c4 <rt_stk_check>
 8005088:	bc0c      	pop	{r2, r3}
 800508a:	601a      	str	r2, [r3, #0]
 800508c:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8005090:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005094:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005098:	2800      	cmp	r0, #0
 800509a:	bf0e      	itee	eq
 800509c:	f06f 0e02 	mvneq.w	lr, #2
 80050a0:	f06f 0e12 	mvnne.w	lr, #18
 80050a4:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 80050a8:	f38c 8809 	msr	PSP, r12

080050ac <Sys_Exit>:
 80050ac:	4770      	bx	lr

080050ae <SysTick_Handler>:
 80050ae:	b510      	push	{r4, lr}
 80050b0:	f7fc fbea 	bl	8001888 <rt_systick>
 80050b4:	f7ff bfce 	b.w	8005054 <Sys_Switch>

080050b8 <OS_Tick_Handler>:
 80050b8:	b510      	push	{r4, lr}
 80050ba:	f7fc fbe3 	bl	8001884 <os_tick_irqack>
 80050be:	f7fc fbe3 	bl	8001888 <rt_systick>
 80050c2:	f7ff bfc7 	b.w	8005054 <Sys_Switch>
 80050c6:	0000      	.short	0x0000
 80050c8:	08006266 	.word	0x08006266
 80050cc:	08001933 	.word	0x08001933
 80050d0:	0800194d 	.word	0x0800194d
 80050d4:	2000276c 	.word	0x2000276c
 80050d8:	e000ef34 	.word	0xe000ef34
 80050dc:	00000000 	.word	0x00000000
 80050e0:	fffffffc 	.word	0xfffffffc

080050e4 <Reset_Handler>:
 80050e4:	f8df d020 	ldr.w	sp, [pc, #32]	; 8005108 <LoopCopyDataInit+0x14>
 80050e8:	2100      	movs	r1, #0
 80050ea:	e003      	b.n	80050f4 <LoopCopyDataInit>

080050ec <CopyDataInit>:
 80050ec:	4b07      	ldr	r3, [pc, #28]	; (800510c <LoopCopyDataInit+0x18>)
 80050ee:	585b      	ldr	r3, [r3, r1]
 80050f0:	5043      	str	r3, [r0, r1]
 80050f2:	3104      	adds	r1, #4

080050f4 <LoopCopyDataInit>:
 80050f4:	4806      	ldr	r0, [pc, #24]	; (8005110 <LoopCopyDataInit+0x1c>)
 80050f6:	4b07      	ldr	r3, [pc, #28]	; (8005114 <LoopCopyDataInit+0x20>)
 80050f8:	1842      	adds	r2, r0, r1
 80050fa:	429a      	cmp	r2, r3
 80050fc:	d3f6      	bcc.n	80050ec <CopyDataInit>
 80050fe:	f7fe fa7b 	bl	80035f8 <SystemInit>
 8005102:	f7fb fe7b 	bl	8000dfc <_start>
 8005106:	4770      	bx	lr
 8005108:	20020000 	.word	0x20020000
 800510c:	08006518 	.word	0x08006518
 8005110:	200001c4 	.word	0x200001c4
 8005114:	20000260 	.word	0x20000260

08005118 <ADC_IRQHandler>:
 8005118:	e7fe      	b.n	8005118 <ADC_IRQHandler>
	...

0800511c <__errno>:
 800511c:	4b01      	ldr	r3, [pc, #4]	; (8005124 <__errno+0x8>)
 800511e:	6818      	ldr	r0, [r3, #0]
 8005120:	4770      	bx	lr
 8005122:	bf00      	nop
 8005124:	200001e8 	.word	0x200001e8

08005128 <__sflush_r>:
 8005128:	898a      	ldrh	r2, [r1, #12]
 800512a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800512e:	4605      	mov	r5, r0
 8005130:	0710      	lsls	r0, r2, #28
 8005132:	460c      	mov	r4, r1
 8005134:	d45a      	bmi.n	80051ec <__sflush_r+0xc4>
 8005136:	684b      	ldr	r3, [r1, #4]
 8005138:	2b00      	cmp	r3, #0
 800513a:	dc05      	bgt.n	8005148 <__sflush_r+0x20>
 800513c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800513e:	2b00      	cmp	r3, #0
 8005140:	dc02      	bgt.n	8005148 <__sflush_r+0x20>
 8005142:	2000      	movs	r0, #0
 8005144:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005148:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800514a:	2e00      	cmp	r6, #0
 800514c:	d0f9      	beq.n	8005142 <__sflush_r+0x1a>
 800514e:	2300      	movs	r3, #0
 8005150:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005154:	682f      	ldr	r7, [r5, #0]
 8005156:	602b      	str	r3, [r5, #0]
 8005158:	d033      	beq.n	80051c2 <__sflush_r+0x9a>
 800515a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800515c:	89a3      	ldrh	r3, [r4, #12]
 800515e:	075a      	lsls	r2, r3, #29
 8005160:	d505      	bpl.n	800516e <__sflush_r+0x46>
 8005162:	6863      	ldr	r3, [r4, #4]
 8005164:	1ac0      	subs	r0, r0, r3
 8005166:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005168:	b10b      	cbz	r3, 800516e <__sflush_r+0x46>
 800516a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800516c:	1ac0      	subs	r0, r0, r3
 800516e:	2300      	movs	r3, #0
 8005170:	4602      	mov	r2, r0
 8005172:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005174:	6a21      	ldr	r1, [r4, #32]
 8005176:	4628      	mov	r0, r5
 8005178:	47b0      	blx	r6
 800517a:	1c43      	adds	r3, r0, #1
 800517c:	89a3      	ldrh	r3, [r4, #12]
 800517e:	d106      	bne.n	800518e <__sflush_r+0x66>
 8005180:	6829      	ldr	r1, [r5, #0]
 8005182:	291d      	cmp	r1, #29
 8005184:	d84b      	bhi.n	800521e <__sflush_r+0xf6>
 8005186:	4a2b      	ldr	r2, [pc, #172]	; (8005234 <__sflush_r+0x10c>)
 8005188:	40ca      	lsrs	r2, r1
 800518a:	07d6      	lsls	r6, r2, #31
 800518c:	d547      	bpl.n	800521e <__sflush_r+0xf6>
 800518e:	2200      	movs	r2, #0
 8005190:	6062      	str	r2, [r4, #4]
 8005192:	04d9      	lsls	r1, r3, #19
 8005194:	6922      	ldr	r2, [r4, #16]
 8005196:	6022      	str	r2, [r4, #0]
 8005198:	d504      	bpl.n	80051a4 <__sflush_r+0x7c>
 800519a:	1c42      	adds	r2, r0, #1
 800519c:	d101      	bne.n	80051a2 <__sflush_r+0x7a>
 800519e:	682b      	ldr	r3, [r5, #0]
 80051a0:	b903      	cbnz	r3, 80051a4 <__sflush_r+0x7c>
 80051a2:	6560      	str	r0, [r4, #84]	; 0x54
 80051a4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80051a6:	602f      	str	r7, [r5, #0]
 80051a8:	2900      	cmp	r1, #0
 80051aa:	d0ca      	beq.n	8005142 <__sflush_r+0x1a>
 80051ac:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80051b0:	4299      	cmp	r1, r3
 80051b2:	d002      	beq.n	80051ba <__sflush_r+0x92>
 80051b4:	4628      	mov	r0, r5
 80051b6:	f7ff fd83 	bl	8004cc0 <__wrap__free_r>
 80051ba:	2000      	movs	r0, #0
 80051bc:	6360      	str	r0, [r4, #52]	; 0x34
 80051be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80051c2:	6a21      	ldr	r1, [r4, #32]
 80051c4:	2301      	movs	r3, #1
 80051c6:	4628      	mov	r0, r5
 80051c8:	47b0      	blx	r6
 80051ca:	1c41      	adds	r1, r0, #1
 80051cc:	d1c6      	bne.n	800515c <__sflush_r+0x34>
 80051ce:	682b      	ldr	r3, [r5, #0]
 80051d0:	2b00      	cmp	r3, #0
 80051d2:	d0c3      	beq.n	800515c <__sflush_r+0x34>
 80051d4:	2b1d      	cmp	r3, #29
 80051d6:	d001      	beq.n	80051dc <__sflush_r+0xb4>
 80051d8:	2b16      	cmp	r3, #22
 80051da:	d101      	bne.n	80051e0 <__sflush_r+0xb8>
 80051dc:	602f      	str	r7, [r5, #0]
 80051de:	e7b0      	b.n	8005142 <__sflush_r+0x1a>
 80051e0:	89a3      	ldrh	r3, [r4, #12]
 80051e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80051e6:	81a3      	strh	r3, [r4, #12]
 80051e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80051ec:	690f      	ldr	r7, [r1, #16]
 80051ee:	2f00      	cmp	r7, #0
 80051f0:	d0a7      	beq.n	8005142 <__sflush_r+0x1a>
 80051f2:	0793      	lsls	r3, r2, #30
 80051f4:	680e      	ldr	r6, [r1, #0]
 80051f6:	bf08      	it	eq
 80051f8:	694b      	ldreq	r3, [r1, #20]
 80051fa:	600f      	str	r7, [r1, #0]
 80051fc:	bf18      	it	ne
 80051fe:	2300      	movne	r3, #0
 8005200:	eba6 0807 	sub.w	r8, r6, r7
 8005204:	608b      	str	r3, [r1, #8]
 8005206:	f1b8 0f00 	cmp.w	r8, #0
 800520a:	dd9a      	ble.n	8005142 <__sflush_r+0x1a>
 800520c:	4643      	mov	r3, r8
 800520e:	463a      	mov	r2, r7
 8005210:	6a21      	ldr	r1, [r4, #32]
 8005212:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005214:	4628      	mov	r0, r5
 8005216:	47b0      	blx	r6
 8005218:	2800      	cmp	r0, #0
 800521a:	dc07      	bgt.n	800522c <__sflush_r+0x104>
 800521c:	89a3      	ldrh	r3, [r4, #12]
 800521e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005222:	81a3      	strh	r3, [r4, #12]
 8005224:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005228:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800522c:	4407      	add	r7, r0
 800522e:	eba8 0800 	sub.w	r8, r8, r0
 8005232:	e7e8      	b.n	8005206 <__sflush_r+0xde>
 8005234:	20400001 	.word	0x20400001

08005238 <_fflush_r>:
 8005238:	b538      	push	{r3, r4, r5, lr}
 800523a:	690b      	ldr	r3, [r1, #16]
 800523c:	4605      	mov	r5, r0
 800523e:	460c      	mov	r4, r1
 8005240:	b1db      	cbz	r3, 800527a <_fflush_r+0x42>
 8005242:	b118      	cbz	r0, 800524c <_fflush_r+0x14>
 8005244:	6983      	ldr	r3, [r0, #24]
 8005246:	b90b      	cbnz	r3, 800524c <_fflush_r+0x14>
 8005248:	f000 f872 	bl	8005330 <__sinit>
 800524c:	4b0c      	ldr	r3, [pc, #48]	; (8005280 <_fflush_r+0x48>)
 800524e:	429c      	cmp	r4, r3
 8005250:	d109      	bne.n	8005266 <_fflush_r+0x2e>
 8005252:	686c      	ldr	r4, [r5, #4]
 8005254:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005258:	b17b      	cbz	r3, 800527a <_fflush_r+0x42>
 800525a:	4621      	mov	r1, r4
 800525c:	4628      	mov	r0, r5
 800525e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005262:	f7ff bf61 	b.w	8005128 <__sflush_r>
 8005266:	4b07      	ldr	r3, [pc, #28]	; (8005284 <_fflush_r+0x4c>)
 8005268:	429c      	cmp	r4, r3
 800526a:	d101      	bne.n	8005270 <_fflush_r+0x38>
 800526c:	68ac      	ldr	r4, [r5, #8]
 800526e:	e7f1      	b.n	8005254 <_fflush_r+0x1c>
 8005270:	4b05      	ldr	r3, [pc, #20]	; (8005288 <_fflush_r+0x50>)
 8005272:	429c      	cmp	r4, r3
 8005274:	bf08      	it	eq
 8005276:	68ec      	ldreq	r4, [r5, #12]
 8005278:	e7ec      	b.n	8005254 <_fflush_r+0x1c>
 800527a:	2000      	movs	r0, #0
 800527c:	bd38      	pop	{r3, r4, r5, pc}
 800527e:	bf00      	nop
 8005280:	08006494 	.word	0x08006494
 8005284:	080064b4 	.word	0x080064b4
 8005288:	08006474 	.word	0x08006474

0800528c <fflush>:
 800528c:	4601      	mov	r1, r0
 800528e:	b920      	cbnz	r0, 800529a <fflush+0xe>
 8005290:	4b04      	ldr	r3, [pc, #16]	; (80052a4 <fflush+0x18>)
 8005292:	4905      	ldr	r1, [pc, #20]	; (80052a8 <fflush+0x1c>)
 8005294:	6818      	ldr	r0, [r3, #0]
 8005296:	f000 b8b7 	b.w	8005408 <_fwalk_reent>
 800529a:	4b04      	ldr	r3, [pc, #16]	; (80052ac <fflush+0x20>)
 800529c:	6818      	ldr	r0, [r3, #0]
 800529e:	f7ff bfcb 	b.w	8005238 <_fflush_r>
 80052a2:	bf00      	nop
 80052a4:	080064d4 	.word	0x080064d4
 80052a8:	08005239 	.word	0x08005239
 80052ac:	200001e8 	.word	0x200001e8

080052b0 <_cleanup_r>:
 80052b0:	4901      	ldr	r1, [pc, #4]	; (80052b8 <_cleanup_r+0x8>)
 80052b2:	f000 b8a9 	b.w	8005408 <_fwalk_reent>
 80052b6:	bf00      	nop
 80052b8:	08005239 	.word	0x08005239

080052bc <std.isra.0>:
 80052bc:	2300      	movs	r3, #0
 80052be:	b510      	push	{r4, lr}
 80052c0:	4604      	mov	r4, r0
 80052c2:	6003      	str	r3, [r0, #0]
 80052c4:	6043      	str	r3, [r0, #4]
 80052c6:	6083      	str	r3, [r0, #8]
 80052c8:	8181      	strh	r1, [r0, #12]
 80052ca:	6643      	str	r3, [r0, #100]	; 0x64
 80052cc:	81c2      	strh	r2, [r0, #14]
 80052ce:	6103      	str	r3, [r0, #16]
 80052d0:	6143      	str	r3, [r0, #20]
 80052d2:	6183      	str	r3, [r0, #24]
 80052d4:	4619      	mov	r1, r3
 80052d6:	2208      	movs	r2, #8
 80052d8:	305c      	adds	r0, #92	; 0x5c
 80052da:	f000 f95e 	bl	800559a <memset>
 80052de:	4b05      	ldr	r3, [pc, #20]	; (80052f4 <std.isra.0+0x38>)
 80052e0:	6263      	str	r3, [r4, #36]	; 0x24
 80052e2:	4b05      	ldr	r3, [pc, #20]	; (80052f8 <std.isra.0+0x3c>)
 80052e4:	62a3      	str	r3, [r4, #40]	; 0x28
 80052e6:	4b05      	ldr	r3, [pc, #20]	; (80052fc <std.isra.0+0x40>)
 80052e8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80052ea:	4b05      	ldr	r3, [pc, #20]	; (8005300 <std.isra.0+0x44>)
 80052ec:	6224      	str	r4, [r4, #32]
 80052ee:	6323      	str	r3, [r4, #48]	; 0x30
 80052f0:	bd10      	pop	{r4, pc}
 80052f2:	bf00      	nop
 80052f4:	08005aad 	.word	0x08005aad
 80052f8:	08005acf 	.word	0x08005acf
 80052fc:	08005b07 	.word	0x08005b07
 8005300:	08005b2b 	.word	0x08005b2b

08005304 <__sfmoreglue>:
 8005304:	b570      	push	{r4, r5, r6, lr}
 8005306:	1e4a      	subs	r2, r1, #1
 8005308:	2568      	movs	r5, #104	; 0x68
 800530a:	4355      	muls	r5, r2
 800530c:	460e      	mov	r6, r1
 800530e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8005312:	f7ff fcd1 	bl	8004cb8 <__wrap__malloc_r>
 8005316:	4604      	mov	r4, r0
 8005318:	b140      	cbz	r0, 800532c <__sfmoreglue+0x28>
 800531a:	2100      	movs	r1, #0
 800531c:	e880 0042 	stmia.w	r0, {r1, r6}
 8005320:	300c      	adds	r0, #12
 8005322:	60a0      	str	r0, [r4, #8]
 8005324:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8005328:	f000 f937 	bl	800559a <memset>
 800532c:	4620      	mov	r0, r4
 800532e:	bd70      	pop	{r4, r5, r6, pc}

08005330 <__sinit>:
 8005330:	6983      	ldr	r3, [r0, #24]
 8005332:	b510      	push	{r4, lr}
 8005334:	4604      	mov	r4, r0
 8005336:	bb33      	cbnz	r3, 8005386 <__sinit+0x56>
 8005338:	6483      	str	r3, [r0, #72]	; 0x48
 800533a:	64c3      	str	r3, [r0, #76]	; 0x4c
 800533c:	6503      	str	r3, [r0, #80]	; 0x50
 800533e:	4b12      	ldr	r3, [pc, #72]	; (8005388 <__sinit+0x58>)
 8005340:	4a12      	ldr	r2, [pc, #72]	; (800538c <__sinit+0x5c>)
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	6282      	str	r2, [r0, #40]	; 0x28
 8005346:	4298      	cmp	r0, r3
 8005348:	bf04      	itt	eq
 800534a:	2301      	moveq	r3, #1
 800534c:	6183      	streq	r3, [r0, #24]
 800534e:	f000 f81f 	bl	8005390 <__sfp>
 8005352:	6060      	str	r0, [r4, #4]
 8005354:	4620      	mov	r0, r4
 8005356:	f000 f81b 	bl	8005390 <__sfp>
 800535a:	60a0      	str	r0, [r4, #8]
 800535c:	4620      	mov	r0, r4
 800535e:	f000 f817 	bl	8005390 <__sfp>
 8005362:	2200      	movs	r2, #0
 8005364:	60e0      	str	r0, [r4, #12]
 8005366:	2104      	movs	r1, #4
 8005368:	6860      	ldr	r0, [r4, #4]
 800536a:	f7ff ffa7 	bl	80052bc <std.isra.0>
 800536e:	2201      	movs	r2, #1
 8005370:	2109      	movs	r1, #9
 8005372:	68a0      	ldr	r0, [r4, #8]
 8005374:	f7ff ffa2 	bl	80052bc <std.isra.0>
 8005378:	2202      	movs	r2, #2
 800537a:	2112      	movs	r1, #18
 800537c:	68e0      	ldr	r0, [r4, #12]
 800537e:	f7ff ff9d 	bl	80052bc <std.isra.0>
 8005382:	2301      	movs	r3, #1
 8005384:	61a3      	str	r3, [r4, #24]
 8005386:	bd10      	pop	{r4, pc}
 8005388:	080064d4 	.word	0x080064d4
 800538c:	080052b1 	.word	0x080052b1

08005390 <__sfp>:
 8005390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005392:	4b1c      	ldr	r3, [pc, #112]	; (8005404 <__sfp+0x74>)
 8005394:	681e      	ldr	r6, [r3, #0]
 8005396:	69b3      	ldr	r3, [r6, #24]
 8005398:	4607      	mov	r7, r0
 800539a:	b913      	cbnz	r3, 80053a2 <__sfp+0x12>
 800539c:	4630      	mov	r0, r6
 800539e:	f7ff ffc7 	bl	8005330 <__sinit>
 80053a2:	3648      	adds	r6, #72	; 0x48
 80053a4:	68b4      	ldr	r4, [r6, #8]
 80053a6:	6873      	ldr	r3, [r6, #4]
 80053a8:	3b01      	subs	r3, #1
 80053aa:	d503      	bpl.n	80053b4 <__sfp+0x24>
 80053ac:	6833      	ldr	r3, [r6, #0]
 80053ae:	b133      	cbz	r3, 80053be <__sfp+0x2e>
 80053b0:	6836      	ldr	r6, [r6, #0]
 80053b2:	e7f7      	b.n	80053a4 <__sfp+0x14>
 80053b4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80053b8:	b16d      	cbz	r5, 80053d6 <__sfp+0x46>
 80053ba:	3468      	adds	r4, #104	; 0x68
 80053bc:	e7f4      	b.n	80053a8 <__sfp+0x18>
 80053be:	2104      	movs	r1, #4
 80053c0:	4638      	mov	r0, r7
 80053c2:	f7ff ff9f 	bl	8005304 <__sfmoreglue>
 80053c6:	6030      	str	r0, [r6, #0]
 80053c8:	2800      	cmp	r0, #0
 80053ca:	d1f1      	bne.n	80053b0 <__sfp+0x20>
 80053cc:	230c      	movs	r3, #12
 80053ce:	603b      	str	r3, [r7, #0]
 80053d0:	4604      	mov	r4, r0
 80053d2:	4620      	mov	r0, r4
 80053d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80053d6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80053da:	81e3      	strh	r3, [r4, #14]
 80053dc:	2301      	movs	r3, #1
 80053de:	81a3      	strh	r3, [r4, #12]
 80053e0:	6665      	str	r5, [r4, #100]	; 0x64
 80053e2:	6025      	str	r5, [r4, #0]
 80053e4:	60a5      	str	r5, [r4, #8]
 80053e6:	6065      	str	r5, [r4, #4]
 80053e8:	6125      	str	r5, [r4, #16]
 80053ea:	6165      	str	r5, [r4, #20]
 80053ec:	61a5      	str	r5, [r4, #24]
 80053ee:	2208      	movs	r2, #8
 80053f0:	4629      	mov	r1, r5
 80053f2:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80053f6:	f000 f8d0 	bl	800559a <memset>
 80053fa:	6365      	str	r5, [r4, #52]	; 0x34
 80053fc:	63a5      	str	r5, [r4, #56]	; 0x38
 80053fe:	64a5      	str	r5, [r4, #72]	; 0x48
 8005400:	64e5      	str	r5, [r4, #76]	; 0x4c
 8005402:	e7e6      	b.n	80053d2 <__sfp+0x42>
 8005404:	080064d4 	.word	0x080064d4

08005408 <_fwalk_reent>:
 8005408:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800540c:	4680      	mov	r8, r0
 800540e:	4689      	mov	r9, r1
 8005410:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8005414:	2600      	movs	r6, #0
 8005416:	b914      	cbnz	r4, 800541e <_fwalk_reent+0x16>
 8005418:	4630      	mov	r0, r6
 800541a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800541e:	68a5      	ldr	r5, [r4, #8]
 8005420:	6867      	ldr	r7, [r4, #4]
 8005422:	3f01      	subs	r7, #1
 8005424:	d501      	bpl.n	800542a <_fwalk_reent+0x22>
 8005426:	6824      	ldr	r4, [r4, #0]
 8005428:	e7f5      	b.n	8005416 <_fwalk_reent+0xe>
 800542a:	89ab      	ldrh	r3, [r5, #12]
 800542c:	2b01      	cmp	r3, #1
 800542e:	d907      	bls.n	8005440 <_fwalk_reent+0x38>
 8005430:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005434:	3301      	adds	r3, #1
 8005436:	d003      	beq.n	8005440 <_fwalk_reent+0x38>
 8005438:	4629      	mov	r1, r5
 800543a:	4640      	mov	r0, r8
 800543c:	47c8      	blx	r9
 800543e:	4306      	orrs	r6, r0
 8005440:	3568      	adds	r5, #104	; 0x68
 8005442:	e7ee      	b.n	8005422 <_fwalk_reent+0x1a>

08005444 <__libc_init_array>:
 8005444:	b570      	push	{r4, r5, r6, lr}
 8005446:	4e0d      	ldr	r6, [pc, #52]	; (800547c <__libc_init_array+0x38>)
 8005448:	4c0d      	ldr	r4, [pc, #52]	; (8005480 <__libc_init_array+0x3c>)
 800544a:	1ba4      	subs	r4, r4, r6
 800544c:	10a4      	asrs	r4, r4, #2
 800544e:	2500      	movs	r5, #0
 8005450:	42a5      	cmp	r5, r4
 8005452:	d109      	bne.n	8005468 <__libc_init_array+0x24>
 8005454:	4e0b      	ldr	r6, [pc, #44]	; (8005484 <__libc_init_array+0x40>)
 8005456:	4c0c      	ldr	r4, [pc, #48]	; (8005488 <__libc_init_array+0x44>)
 8005458:	f000 fd34 	bl	8005ec4 <_init>
 800545c:	1ba4      	subs	r4, r4, r6
 800545e:	10a4      	asrs	r4, r4, #2
 8005460:	2500      	movs	r5, #0
 8005462:	42a5      	cmp	r5, r4
 8005464:	d105      	bne.n	8005472 <__libc_init_array+0x2e>
 8005466:	bd70      	pop	{r4, r5, r6, pc}
 8005468:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800546c:	4798      	blx	r3
 800546e:	3501      	adds	r5, #1
 8005470:	e7ee      	b.n	8005450 <__libc_init_array+0xc>
 8005472:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005476:	4798      	blx	r3
 8005478:	3501      	adds	r5, #1
 800547a:	e7f2      	b.n	8005462 <__libc_init_array+0x1e>
 800547c:	2000024c 	.word	0x2000024c
 8005480:	2000024c 	.word	0x2000024c
 8005484:	2000024c 	.word	0x2000024c
 8005488:	20000258 	.word	0x20000258

0800548c <malloc>:
 800548c:	4b02      	ldr	r3, [pc, #8]	; (8005498 <malloc+0xc>)
 800548e:	4601      	mov	r1, r0
 8005490:	6818      	ldr	r0, [r3, #0]
 8005492:	f7ff bc11 	b.w	8004cb8 <__wrap__malloc_r>
 8005496:	bf00      	nop
 8005498:	200001e8 	.word	0x200001e8

0800549c <free>:
 800549c:	4b02      	ldr	r3, [pc, #8]	; (80054a8 <free+0xc>)
 800549e:	4601      	mov	r1, r0
 80054a0:	6818      	ldr	r0, [r3, #0]
 80054a2:	f7ff bc0d 	b.w	8004cc0 <__wrap__free_r>
 80054a6:	bf00      	nop
 80054a8:	200001e8 	.word	0x200001e8
 80054ac:	00000000 	.word	0x00000000

080054b0 <memchr>:
 80054b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80054b4:	2a10      	cmp	r2, #16
 80054b6:	db2b      	blt.n	8005510 <memchr+0x60>
 80054b8:	f010 0f07 	tst.w	r0, #7
 80054bc:	d008      	beq.n	80054d0 <memchr+0x20>
 80054be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80054c2:	3a01      	subs	r2, #1
 80054c4:	428b      	cmp	r3, r1
 80054c6:	d02d      	beq.n	8005524 <memchr+0x74>
 80054c8:	f010 0f07 	tst.w	r0, #7
 80054cc:	b342      	cbz	r2, 8005520 <memchr+0x70>
 80054ce:	d1f6      	bne.n	80054be <memchr+0xe>
 80054d0:	b4f0      	push	{r4, r5, r6, r7}
 80054d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80054d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80054da:	f022 0407 	bic.w	r4, r2, #7
 80054de:	f07f 0700 	mvns.w	r7, #0
 80054e2:	2300      	movs	r3, #0
 80054e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80054e8:	3c08      	subs	r4, #8
 80054ea:	ea85 0501 	eor.w	r5, r5, r1
 80054ee:	ea86 0601 	eor.w	r6, r6, r1
 80054f2:	fa85 f547 	uadd8	r5, r5, r7
 80054f6:	faa3 f587 	sel	r5, r3, r7
 80054fa:	fa86 f647 	uadd8	r6, r6, r7
 80054fe:	faa5 f687 	sel	r6, r5, r7
 8005502:	b98e      	cbnz	r6, 8005528 <memchr+0x78>
 8005504:	d1ee      	bne.n	80054e4 <memchr+0x34>
 8005506:	bcf0      	pop	{r4, r5, r6, r7}
 8005508:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800550c:	f002 0207 	and.w	r2, r2, #7
 8005510:	b132      	cbz	r2, 8005520 <memchr+0x70>
 8005512:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005516:	3a01      	subs	r2, #1
 8005518:	ea83 0301 	eor.w	r3, r3, r1
 800551c:	b113      	cbz	r3, 8005524 <memchr+0x74>
 800551e:	d1f8      	bne.n	8005512 <memchr+0x62>
 8005520:	2000      	movs	r0, #0
 8005522:	4770      	bx	lr
 8005524:	3801      	subs	r0, #1
 8005526:	4770      	bx	lr
 8005528:	2d00      	cmp	r5, #0
 800552a:	bf06      	itte	eq
 800552c:	4635      	moveq	r5, r6
 800552e:	3803      	subeq	r0, #3
 8005530:	3807      	subne	r0, #7
 8005532:	f015 0f01 	tst.w	r5, #1
 8005536:	d107      	bne.n	8005548 <memchr+0x98>
 8005538:	3001      	adds	r0, #1
 800553a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800553e:	bf02      	ittt	eq
 8005540:	3001      	addeq	r0, #1
 8005542:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8005546:	3001      	addeq	r0, #1
 8005548:	bcf0      	pop	{r4, r5, r6, r7}
 800554a:	3801      	subs	r0, #1
 800554c:	4770      	bx	lr
 800554e:	bf00      	nop

08005550 <memcpy>:
 8005550:	b510      	push	{r4, lr}
 8005552:	1e43      	subs	r3, r0, #1
 8005554:	440a      	add	r2, r1
 8005556:	4291      	cmp	r1, r2
 8005558:	d100      	bne.n	800555c <memcpy+0xc>
 800555a:	bd10      	pop	{r4, pc}
 800555c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005560:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005564:	e7f7      	b.n	8005556 <memcpy+0x6>

08005566 <memmove>:
 8005566:	4288      	cmp	r0, r1
 8005568:	b510      	push	{r4, lr}
 800556a:	eb01 0302 	add.w	r3, r1, r2
 800556e:	d803      	bhi.n	8005578 <memmove+0x12>
 8005570:	1e42      	subs	r2, r0, #1
 8005572:	4299      	cmp	r1, r3
 8005574:	d10c      	bne.n	8005590 <memmove+0x2a>
 8005576:	bd10      	pop	{r4, pc}
 8005578:	4298      	cmp	r0, r3
 800557a:	d2f9      	bcs.n	8005570 <memmove+0xa>
 800557c:	1881      	adds	r1, r0, r2
 800557e:	1ad2      	subs	r2, r2, r3
 8005580:	42d3      	cmn	r3, r2
 8005582:	d100      	bne.n	8005586 <memmove+0x20>
 8005584:	bd10      	pop	{r4, pc}
 8005586:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800558a:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800558e:	e7f7      	b.n	8005580 <memmove+0x1a>
 8005590:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005594:	f802 4f01 	strb.w	r4, [r2, #1]!
 8005598:	e7eb      	b.n	8005572 <memmove+0xc>

0800559a <memset>:
 800559a:	4402      	add	r2, r0
 800559c:	4603      	mov	r3, r0
 800559e:	4293      	cmp	r3, r2
 80055a0:	d100      	bne.n	80055a4 <memset+0xa>
 80055a2:	4770      	bx	lr
 80055a4:	f803 1b01 	strb.w	r1, [r3], #1
 80055a8:	e7f9      	b.n	800559e <memset+0x4>
	...

080055ac <_free_r>:
 80055ac:	b538      	push	{r3, r4, r5, lr}
 80055ae:	4605      	mov	r5, r0
 80055b0:	2900      	cmp	r1, #0
 80055b2:	d045      	beq.n	8005640 <_free_r+0x94>
 80055b4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80055b8:	1f0c      	subs	r4, r1, #4
 80055ba:	2b00      	cmp	r3, #0
 80055bc:	bfb8      	it	lt
 80055be:	18e4      	addlt	r4, r4, r3
 80055c0:	f7ff fc9f 	bl	8004f02 <__malloc_lock>
 80055c4:	4a1f      	ldr	r2, [pc, #124]	; (8005644 <_free_r+0x98>)
 80055c6:	6813      	ldr	r3, [r2, #0]
 80055c8:	4610      	mov	r0, r2
 80055ca:	b933      	cbnz	r3, 80055da <_free_r+0x2e>
 80055cc:	6063      	str	r3, [r4, #4]
 80055ce:	6014      	str	r4, [r2, #0]
 80055d0:	4628      	mov	r0, r5
 80055d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80055d6:	f7ff bc98 	b.w	8004f0a <__malloc_unlock>
 80055da:	42a3      	cmp	r3, r4
 80055dc:	d90c      	bls.n	80055f8 <_free_r+0x4c>
 80055de:	6821      	ldr	r1, [r4, #0]
 80055e0:	1862      	adds	r2, r4, r1
 80055e2:	4293      	cmp	r3, r2
 80055e4:	bf04      	itt	eq
 80055e6:	681a      	ldreq	r2, [r3, #0]
 80055e8:	685b      	ldreq	r3, [r3, #4]
 80055ea:	6063      	str	r3, [r4, #4]
 80055ec:	bf04      	itt	eq
 80055ee:	1852      	addeq	r2, r2, r1
 80055f0:	6022      	streq	r2, [r4, #0]
 80055f2:	6004      	str	r4, [r0, #0]
 80055f4:	e7ec      	b.n	80055d0 <_free_r+0x24>
 80055f6:	4613      	mov	r3, r2
 80055f8:	685a      	ldr	r2, [r3, #4]
 80055fa:	b10a      	cbz	r2, 8005600 <_free_r+0x54>
 80055fc:	42a2      	cmp	r2, r4
 80055fe:	d9fa      	bls.n	80055f6 <_free_r+0x4a>
 8005600:	6819      	ldr	r1, [r3, #0]
 8005602:	1858      	adds	r0, r3, r1
 8005604:	42a0      	cmp	r0, r4
 8005606:	d10b      	bne.n	8005620 <_free_r+0x74>
 8005608:	6820      	ldr	r0, [r4, #0]
 800560a:	4401      	add	r1, r0
 800560c:	1858      	adds	r0, r3, r1
 800560e:	4282      	cmp	r2, r0
 8005610:	6019      	str	r1, [r3, #0]
 8005612:	d1dd      	bne.n	80055d0 <_free_r+0x24>
 8005614:	6810      	ldr	r0, [r2, #0]
 8005616:	6852      	ldr	r2, [r2, #4]
 8005618:	605a      	str	r2, [r3, #4]
 800561a:	4401      	add	r1, r0
 800561c:	6019      	str	r1, [r3, #0]
 800561e:	e7d7      	b.n	80055d0 <_free_r+0x24>
 8005620:	d902      	bls.n	8005628 <_free_r+0x7c>
 8005622:	230c      	movs	r3, #12
 8005624:	602b      	str	r3, [r5, #0]
 8005626:	e7d3      	b.n	80055d0 <_free_r+0x24>
 8005628:	6820      	ldr	r0, [r4, #0]
 800562a:	1821      	adds	r1, r4, r0
 800562c:	428a      	cmp	r2, r1
 800562e:	bf04      	itt	eq
 8005630:	6811      	ldreq	r1, [r2, #0]
 8005632:	6852      	ldreq	r2, [r2, #4]
 8005634:	6062      	str	r2, [r4, #4]
 8005636:	bf04      	itt	eq
 8005638:	1809      	addeq	r1, r1, r0
 800563a:	6021      	streq	r1, [r4, #0]
 800563c:	605c      	str	r4, [r3, #4]
 800563e:	e7c7      	b.n	80055d0 <_free_r+0x24>
 8005640:	bd38      	pop	{r3, r4, r5, pc}
 8005642:	bf00      	nop
 8005644:	20001d4c 	.word	0x20001d4c

08005648 <_malloc_r>:
 8005648:	b570      	push	{r4, r5, r6, lr}
 800564a:	1ccd      	adds	r5, r1, #3
 800564c:	f025 0503 	bic.w	r5, r5, #3
 8005650:	3508      	adds	r5, #8
 8005652:	2d0c      	cmp	r5, #12
 8005654:	bf38      	it	cc
 8005656:	250c      	movcc	r5, #12
 8005658:	2d00      	cmp	r5, #0
 800565a:	4606      	mov	r6, r0
 800565c:	db01      	blt.n	8005662 <_malloc_r+0x1a>
 800565e:	42a9      	cmp	r1, r5
 8005660:	d903      	bls.n	800566a <_malloc_r+0x22>
 8005662:	230c      	movs	r3, #12
 8005664:	6033      	str	r3, [r6, #0]
 8005666:	2000      	movs	r0, #0
 8005668:	bd70      	pop	{r4, r5, r6, pc}
 800566a:	f7ff fc4a 	bl	8004f02 <__malloc_lock>
 800566e:	4a23      	ldr	r2, [pc, #140]	; (80056fc <_malloc_r+0xb4>)
 8005670:	6814      	ldr	r4, [r2, #0]
 8005672:	4621      	mov	r1, r4
 8005674:	b991      	cbnz	r1, 800569c <_malloc_r+0x54>
 8005676:	4c22      	ldr	r4, [pc, #136]	; (8005700 <_malloc_r+0xb8>)
 8005678:	6823      	ldr	r3, [r4, #0]
 800567a:	b91b      	cbnz	r3, 8005684 <_malloc_r+0x3c>
 800567c:	4630      	mov	r0, r6
 800567e:	f000 fa05 	bl	8005a8c <_sbrk_r>
 8005682:	6020      	str	r0, [r4, #0]
 8005684:	4629      	mov	r1, r5
 8005686:	4630      	mov	r0, r6
 8005688:	f000 fa00 	bl	8005a8c <_sbrk_r>
 800568c:	1c43      	adds	r3, r0, #1
 800568e:	d126      	bne.n	80056de <_malloc_r+0x96>
 8005690:	230c      	movs	r3, #12
 8005692:	6033      	str	r3, [r6, #0]
 8005694:	4630      	mov	r0, r6
 8005696:	f7ff fc38 	bl	8004f0a <__malloc_unlock>
 800569a:	e7e4      	b.n	8005666 <_malloc_r+0x1e>
 800569c:	680b      	ldr	r3, [r1, #0]
 800569e:	1b5b      	subs	r3, r3, r5
 80056a0:	d41a      	bmi.n	80056d8 <_malloc_r+0x90>
 80056a2:	2b0b      	cmp	r3, #11
 80056a4:	d90f      	bls.n	80056c6 <_malloc_r+0x7e>
 80056a6:	600b      	str	r3, [r1, #0]
 80056a8:	50cd      	str	r5, [r1, r3]
 80056aa:	18cc      	adds	r4, r1, r3
 80056ac:	4630      	mov	r0, r6
 80056ae:	f7ff fc2c 	bl	8004f0a <__malloc_unlock>
 80056b2:	f104 000b 	add.w	r0, r4, #11
 80056b6:	1d23      	adds	r3, r4, #4
 80056b8:	f020 0007 	bic.w	r0, r0, #7
 80056bc:	1ac3      	subs	r3, r0, r3
 80056be:	d01b      	beq.n	80056f8 <_malloc_r+0xb0>
 80056c0:	425a      	negs	r2, r3
 80056c2:	50e2      	str	r2, [r4, r3]
 80056c4:	bd70      	pop	{r4, r5, r6, pc}
 80056c6:	428c      	cmp	r4, r1
 80056c8:	bf0d      	iteet	eq
 80056ca:	6863      	ldreq	r3, [r4, #4]
 80056cc:	684b      	ldrne	r3, [r1, #4]
 80056ce:	6063      	strne	r3, [r4, #4]
 80056d0:	6013      	streq	r3, [r2, #0]
 80056d2:	bf18      	it	ne
 80056d4:	460c      	movne	r4, r1
 80056d6:	e7e9      	b.n	80056ac <_malloc_r+0x64>
 80056d8:	460c      	mov	r4, r1
 80056da:	6849      	ldr	r1, [r1, #4]
 80056dc:	e7ca      	b.n	8005674 <_malloc_r+0x2c>
 80056de:	1cc4      	adds	r4, r0, #3
 80056e0:	f024 0403 	bic.w	r4, r4, #3
 80056e4:	42a0      	cmp	r0, r4
 80056e6:	d005      	beq.n	80056f4 <_malloc_r+0xac>
 80056e8:	1a21      	subs	r1, r4, r0
 80056ea:	4630      	mov	r0, r6
 80056ec:	f000 f9ce 	bl	8005a8c <_sbrk_r>
 80056f0:	3001      	adds	r0, #1
 80056f2:	d0cd      	beq.n	8005690 <_malloc_r+0x48>
 80056f4:	6025      	str	r5, [r4, #0]
 80056f6:	e7d9      	b.n	80056ac <_malloc_r+0x64>
 80056f8:	bd70      	pop	{r4, r5, r6, pc}
 80056fa:	bf00      	nop
 80056fc:	20001d4c 	.word	0x20001d4c
 8005700:	20001d50 	.word	0x20001d50

08005704 <_realloc_r>:
 8005704:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005706:	4607      	mov	r7, r0
 8005708:	4614      	mov	r4, r2
 800570a:	460e      	mov	r6, r1
 800570c:	b921      	cbnz	r1, 8005718 <_realloc_r+0x14>
 800570e:	4611      	mov	r1, r2
 8005710:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005714:	f7ff bad0 	b.w	8004cb8 <__wrap__malloc_r>
 8005718:	b922      	cbnz	r2, 8005724 <_realloc_r+0x20>
 800571a:	f7ff fad1 	bl	8004cc0 <__wrap__free_r>
 800571e:	4625      	mov	r5, r4
 8005720:	4628      	mov	r0, r5
 8005722:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005724:	f000 fa64 	bl	8005bf0 <_malloc_usable_size_r>
 8005728:	4284      	cmp	r4, r0
 800572a:	d90f      	bls.n	800574c <_realloc_r+0x48>
 800572c:	4621      	mov	r1, r4
 800572e:	4638      	mov	r0, r7
 8005730:	f7ff fac2 	bl	8004cb8 <__wrap__malloc_r>
 8005734:	4605      	mov	r5, r0
 8005736:	2800      	cmp	r0, #0
 8005738:	d0f2      	beq.n	8005720 <_realloc_r+0x1c>
 800573a:	4631      	mov	r1, r6
 800573c:	4622      	mov	r2, r4
 800573e:	f7ff ff07 	bl	8005550 <memcpy>
 8005742:	4631      	mov	r1, r6
 8005744:	4638      	mov	r0, r7
 8005746:	f7ff fabb 	bl	8004cc0 <__wrap__free_r>
 800574a:	e7e9      	b.n	8005720 <_realloc_r+0x1c>
 800574c:	4635      	mov	r5, r6
 800574e:	e7e7      	b.n	8005720 <_realloc_r+0x1c>

08005750 <_printf_common>:
 8005750:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8005754:	4691      	mov	r9, r2
 8005756:	461f      	mov	r7, r3
 8005758:	688a      	ldr	r2, [r1, #8]
 800575a:	690b      	ldr	r3, [r1, #16]
 800575c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005760:	4293      	cmp	r3, r2
 8005762:	bfb8      	it	lt
 8005764:	4613      	movlt	r3, r2
 8005766:	f8c9 3000 	str.w	r3, [r9]
 800576a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800576e:	4606      	mov	r6, r0
 8005770:	460c      	mov	r4, r1
 8005772:	b112      	cbz	r2, 800577a <_printf_common+0x2a>
 8005774:	3301      	adds	r3, #1
 8005776:	f8c9 3000 	str.w	r3, [r9]
 800577a:	6823      	ldr	r3, [r4, #0]
 800577c:	0699      	lsls	r1, r3, #26
 800577e:	bf42      	ittt	mi
 8005780:	f8d9 3000 	ldrmi.w	r3, [r9]
 8005784:	3302      	addmi	r3, #2
 8005786:	f8c9 3000 	strmi.w	r3, [r9]
 800578a:	6825      	ldr	r5, [r4, #0]
 800578c:	f015 0506 	ands.w	r5, r5, #6
 8005790:	d107      	bne.n	80057a2 <_printf_common+0x52>
 8005792:	f104 0a19 	add.w	r10, r4, #25
 8005796:	68e3      	ldr	r3, [r4, #12]
 8005798:	f8d9 2000 	ldr.w	r2, [r9]
 800579c:	1a9b      	subs	r3, r3, r2
 800579e:	429d      	cmp	r5, r3
 80057a0:	db29      	blt.n	80057f6 <_printf_common+0xa6>
 80057a2:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80057a6:	6822      	ldr	r2, [r4, #0]
 80057a8:	3300      	adds	r3, #0
 80057aa:	bf18      	it	ne
 80057ac:	2301      	movne	r3, #1
 80057ae:	0692      	lsls	r2, r2, #26
 80057b0:	d42e      	bmi.n	8005810 <_printf_common+0xc0>
 80057b2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80057b6:	4639      	mov	r1, r7
 80057b8:	4630      	mov	r0, r6
 80057ba:	47c0      	blx	r8
 80057bc:	3001      	adds	r0, #1
 80057be:	d021      	beq.n	8005804 <_printf_common+0xb4>
 80057c0:	6823      	ldr	r3, [r4, #0]
 80057c2:	68e5      	ldr	r5, [r4, #12]
 80057c4:	f8d9 2000 	ldr.w	r2, [r9]
 80057c8:	f003 0306 	and.w	r3, r3, #6
 80057cc:	2b04      	cmp	r3, #4
 80057ce:	bf08      	it	eq
 80057d0:	1aad      	subeq	r5, r5, r2
 80057d2:	68a3      	ldr	r3, [r4, #8]
 80057d4:	6922      	ldr	r2, [r4, #16]
 80057d6:	bf0c      	ite	eq
 80057d8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80057dc:	2500      	movne	r5, #0
 80057de:	4293      	cmp	r3, r2
 80057e0:	bfc4      	itt	gt
 80057e2:	1a9b      	subgt	r3, r3, r2
 80057e4:	18ed      	addgt	r5, r5, r3
 80057e6:	f04f 0900 	mov.w	r9, #0
 80057ea:	341a      	adds	r4, #26
 80057ec:	454d      	cmp	r5, r9
 80057ee:	d11b      	bne.n	8005828 <_printf_common+0xd8>
 80057f0:	2000      	movs	r0, #0
 80057f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80057f6:	2301      	movs	r3, #1
 80057f8:	4652      	mov	r2, r10
 80057fa:	4639      	mov	r1, r7
 80057fc:	4630      	mov	r0, r6
 80057fe:	47c0      	blx	r8
 8005800:	3001      	adds	r0, #1
 8005802:	d103      	bne.n	800580c <_printf_common+0xbc>
 8005804:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005808:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800580c:	3501      	adds	r5, #1
 800580e:	e7c2      	b.n	8005796 <_printf_common+0x46>
 8005810:	18e1      	adds	r1, r4, r3
 8005812:	1c5a      	adds	r2, r3, #1
 8005814:	2030      	movs	r0, #48	; 0x30
 8005816:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800581a:	4422      	add	r2, r4
 800581c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005820:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005824:	3302      	adds	r3, #2
 8005826:	e7c4      	b.n	80057b2 <_printf_common+0x62>
 8005828:	2301      	movs	r3, #1
 800582a:	4622      	mov	r2, r4
 800582c:	4639      	mov	r1, r7
 800582e:	4630      	mov	r0, r6
 8005830:	47c0      	blx	r8
 8005832:	3001      	adds	r0, #1
 8005834:	d0e6      	beq.n	8005804 <_printf_common+0xb4>
 8005836:	f109 0901 	add.w	r9, r9, #1
 800583a:	e7d7      	b.n	80057ec <_printf_common+0x9c>

0800583c <_printf_i>:
 800583c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005840:	4617      	mov	r7, r2
 8005842:	7e0a      	ldrb	r2, [r1, #24]
 8005844:	b085      	sub	sp, #20
 8005846:	2a6e      	cmp	r2, #110	; 0x6e
 8005848:	4698      	mov	r8, r3
 800584a:	4606      	mov	r6, r0
 800584c:	460c      	mov	r4, r1
 800584e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005850:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8005854:	f000 80bc 	beq.w	80059d0 <_printf_i+0x194>
 8005858:	d81a      	bhi.n	8005890 <_printf_i+0x54>
 800585a:	2a63      	cmp	r2, #99	; 0x63
 800585c:	d02e      	beq.n	80058bc <_printf_i+0x80>
 800585e:	d80a      	bhi.n	8005876 <_printf_i+0x3a>
 8005860:	2a00      	cmp	r2, #0
 8005862:	f000 80c8 	beq.w	80059f6 <_printf_i+0x1ba>
 8005866:	2a58      	cmp	r2, #88	; 0x58
 8005868:	f000 808a 	beq.w	8005980 <_printf_i+0x144>
 800586c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005870:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8005874:	e02a      	b.n	80058cc <_printf_i+0x90>
 8005876:	2a64      	cmp	r2, #100	; 0x64
 8005878:	d001      	beq.n	800587e <_printf_i+0x42>
 800587a:	2a69      	cmp	r2, #105	; 0x69
 800587c:	d1f6      	bne.n	800586c <_printf_i+0x30>
 800587e:	6821      	ldr	r1, [r4, #0]
 8005880:	681a      	ldr	r2, [r3, #0]
 8005882:	f011 0f80 	tst.w	r1, #128	; 0x80
 8005886:	d023      	beq.n	80058d0 <_printf_i+0x94>
 8005888:	1d11      	adds	r1, r2, #4
 800588a:	6019      	str	r1, [r3, #0]
 800588c:	6813      	ldr	r3, [r2, #0]
 800588e:	e027      	b.n	80058e0 <_printf_i+0xa4>
 8005890:	2a73      	cmp	r2, #115	; 0x73
 8005892:	f000 80b4 	beq.w	80059fe <_printf_i+0x1c2>
 8005896:	d808      	bhi.n	80058aa <_printf_i+0x6e>
 8005898:	2a6f      	cmp	r2, #111	; 0x6f
 800589a:	d02a      	beq.n	80058f2 <_printf_i+0xb6>
 800589c:	2a70      	cmp	r2, #112	; 0x70
 800589e:	d1e5      	bne.n	800586c <_printf_i+0x30>
 80058a0:	680a      	ldr	r2, [r1, #0]
 80058a2:	f042 0220 	orr.w	r2, r2, #32
 80058a6:	600a      	str	r2, [r1, #0]
 80058a8:	e003      	b.n	80058b2 <_printf_i+0x76>
 80058aa:	2a75      	cmp	r2, #117	; 0x75
 80058ac:	d021      	beq.n	80058f2 <_printf_i+0xb6>
 80058ae:	2a78      	cmp	r2, #120	; 0x78
 80058b0:	d1dc      	bne.n	800586c <_printf_i+0x30>
 80058b2:	2278      	movs	r2, #120	; 0x78
 80058b4:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 80058b8:	496e      	ldr	r1, [pc, #440]	; (8005a74 <_printf_i+0x238>)
 80058ba:	e064      	b.n	8005986 <_printf_i+0x14a>
 80058bc:	681a      	ldr	r2, [r3, #0]
 80058be:	f101 0542 	add.w	r5, r1, #66	; 0x42
 80058c2:	1d11      	adds	r1, r2, #4
 80058c4:	6019      	str	r1, [r3, #0]
 80058c6:	6813      	ldr	r3, [r2, #0]
 80058c8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80058cc:	2301      	movs	r3, #1
 80058ce:	e0a3      	b.n	8005a18 <_printf_i+0x1dc>
 80058d0:	f011 0f40 	tst.w	r1, #64	; 0x40
 80058d4:	f102 0104 	add.w	r1, r2, #4
 80058d8:	6019      	str	r1, [r3, #0]
 80058da:	d0d7      	beq.n	800588c <_printf_i+0x50>
 80058dc:	f9b2 3000 	ldrsh.w	r3, [r2]
 80058e0:	2b00      	cmp	r3, #0
 80058e2:	da03      	bge.n	80058ec <_printf_i+0xb0>
 80058e4:	222d      	movs	r2, #45	; 0x2d
 80058e6:	425b      	negs	r3, r3
 80058e8:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 80058ec:	4962      	ldr	r1, [pc, #392]	; (8005a78 <_printf_i+0x23c>)
 80058ee:	220a      	movs	r2, #10
 80058f0:	e017      	b.n	8005922 <_printf_i+0xe6>
 80058f2:	6820      	ldr	r0, [r4, #0]
 80058f4:	6819      	ldr	r1, [r3, #0]
 80058f6:	f010 0f80 	tst.w	r0, #128	; 0x80
 80058fa:	d003      	beq.n	8005904 <_printf_i+0xc8>
 80058fc:	1d08      	adds	r0, r1, #4
 80058fe:	6018      	str	r0, [r3, #0]
 8005900:	680b      	ldr	r3, [r1, #0]
 8005902:	e006      	b.n	8005912 <_printf_i+0xd6>
 8005904:	f010 0f40 	tst.w	r0, #64	; 0x40
 8005908:	f101 0004 	add.w	r0, r1, #4
 800590c:	6018      	str	r0, [r3, #0]
 800590e:	d0f7      	beq.n	8005900 <_printf_i+0xc4>
 8005910:	880b      	ldrh	r3, [r1, #0]
 8005912:	4959      	ldr	r1, [pc, #356]	; (8005a78 <_printf_i+0x23c>)
 8005914:	2a6f      	cmp	r2, #111	; 0x6f
 8005916:	bf14      	ite	ne
 8005918:	220a      	movne	r2, #10
 800591a:	2208      	moveq	r2, #8
 800591c:	2000      	movs	r0, #0
 800591e:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8005922:	6865      	ldr	r5, [r4, #4]
 8005924:	60a5      	str	r5, [r4, #8]
 8005926:	2d00      	cmp	r5, #0
 8005928:	f2c0 809c 	blt.w	8005a64 <_printf_i+0x228>
 800592c:	6820      	ldr	r0, [r4, #0]
 800592e:	f020 0004 	bic.w	r0, r0, #4
 8005932:	6020      	str	r0, [r4, #0]
 8005934:	2b00      	cmp	r3, #0
 8005936:	d13f      	bne.n	80059b8 <_printf_i+0x17c>
 8005938:	2d00      	cmp	r5, #0
 800593a:	f040 8095 	bne.w	8005a68 <_printf_i+0x22c>
 800593e:	4675      	mov	r5, lr
 8005940:	2a08      	cmp	r2, #8
 8005942:	d10b      	bne.n	800595c <_printf_i+0x120>
 8005944:	6823      	ldr	r3, [r4, #0]
 8005946:	07da      	lsls	r2, r3, #31
 8005948:	d508      	bpl.n	800595c <_printf_i+0x120>
 800594a:	6923      	ldr	r3, [r4, #16]
 800594c:	6862      	ldr	r2, [r4, #4]
 800594e:	429a      	cmp	r2, r3
 8005950:	bfde      	ittt	le
 8005952:	2330      	movle	r3, #48	; 0x30
 8005954:	f805 3c01 	strble.w	r3, [r5, #-1]
 8005958:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 800595c:	ebae 0305 	sub.w	r3, lr, r5
 8005960:	6123      	str	r3, [r4, #16]
 8005962:	f8cd 8000 	str.w	r8, [sp]
 8005966:	463b      	mov	r3, r7
 8005968:	aa03      	add	r2, sp, #12
 800596a:	4621      	mov	r1, r4
 800596c:	4630      	mov	r0, r6
 800596e:	f7ff feef 	bl	8005750 <_printf_common>
 8005972:	3001      	adds	r0, #1
 8005974:	d155      	bne.n	8005a22 <_printf_i+0x1e6>
 8005976:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800597a:	b005      	add	sp, #20
 800597c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005980:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8005984:	493c      	ldr	r1, [pc, #240]	; (8005a78 <_printf_i+0x23c>)
 8005986:	6822      	ldr	r2, [r4, #0]
 8005988:	6818      	ldr	r0, [r3, #0]
 800598a:	f012 0f80 	tst.w	r2, #128	; 0x80
 800598e:	f100 0504 	add.w	r5, r0, #4
 8005992:	601d      	str	r5, [r3, #0]
 8005994:	d001      	beq.n	800599a <_printf_i+0x15e>
 8005996:	6803      	ldr	r3, [r0, #0]
 8005998:	e002      	b.n	80059a0 <_printf_i+0x164>
 800599a:	0655      	lsls	r5, r2, #25
 800599c:	d5fb      	bpl.n	8005996 <_printf_i+0x15a>
 800599e:	8803      	ldrh	r3, [r0, #0]
 80059a0:	07d0      	lsls	r0, r2, #31
 80059a2:	bf44      	itt	mi
 80059a4:	f042 0220 	orrmi.w	r2, r2, #32
 80059a8:	6022      	strmi	r2, [r4, #0]
 80059aa:	b91b      	cbnz	r3, 80059b4 <_printf_i+0x178>
 80059ac:	6822      	ldr	r2, [r4, #0]
 80059ae:	f022 0220 	bic.w	r2, r2, #32
 80059b2:	6022      	str	r2, [r4, #0]
 80059b4:	2210      	movs	r2, #16
 80059b6:	e7b1      	b.n	800591c <_printf_i+0xe0>
 80059b8:	4675      	mov	r5, lr
 80059ba:	fbb3 f0f2 	udiv	r0, r3, r2
 80059be:	fb02 3310 	mls	r3, r2, r0, r3
 80059c2:	5ccb      	ldrb	r3, [r1, r3]
 80059c4:	f805 3d01 	strb.w	r3, [r5, #-1]!
 80059c8:	4603      	mov	r3, r0
 80059ca:	2800      	cmp	r0, #0
 80059cc:	d1f5      	bne.n	80059ba <_printf_i+0x17e>
 80059ce:	e7b7      	b.n	8005940 <_printf_i+0x104>
 80059d0:	6808      	ldr	r0, [r1, #0]
 80059d2:	681a      	ldr	r2, [r3, #0]
 80059d4:	6949      	ldr	r1, [r1, #20]
 80059d6:	f010 0f80 	tst.w	r0, #128	; 0x80
 80059da:	d004      	beq.n	80059e6 <_printf_i+0x1aa>
 80059dc:	1d10      	adds	r0, r2, #4
 80059de:	6018      	str	r0, [r3, #0]
 80059e0:	6813      	ldr	r3, [r2, #0]
 80059e2:	6019      	str	r1, [r3, #0]
 80059e4:	e007      	b.n	80059f6 <_printf_i+0x1ba>
 80059e6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80059ea:	f102 0004 	add.w	r0, r2, #4
 80059ee:	6018      	str	r0, [r3, #0]
 80059f0:	6813      	ldr	r3, [r2, #0]
 80059f2:	d0f6      	beq.n	80059e2 <_printf_i+0x1a6>
 80059f4:	8019      	strh	r1, [r3, #0]
 80059f6:	2300      	movs	r3, #0
 80059f8:	6123      	str	r3, [r4, #16]
 80059fa:	4675      	mov	r5, lr
 80059fc:	e7b1      	b.n	8005962 <_printf_i+0x126>
 80059fe:	681a      	ldr	r2, [r3, #0]
 8005a00:	1d11      	adds	r1, r2, #4
 8005a02:	6019      	str	r1, [r3, #0]
 8005a04:	6815      	ldr	r5, [r2, #0]
 8005a06:	6862      	ldr	r2, [r4, #4]
 8005a08:	2100      	movs	r1, #0
 8005a0a:	4628      	mov	r0, r5
 8005a0c:	f7ff fd50 	bl	80054b0 <memchr>
 8005a10:	b108      	cbz	r0, 8005a16 <_printf_i+0x1da>
 8005a12:	1b40      	subs	r0, r0, r5
 8005a14:	6060      	str	r0, [r4, #4]
 8005a16:	6863      	ldr	r3, [r4, #4]
 8005a18:	6123      	str	r3, [r4, #16]
 8005a1a:	2300      	movs	r3, #0
 8005a1c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005a20:	e79f      	b.n	8005962 <_printf_i+0x126>
 8005a22:	6923      	ldr	r3, [r4, #16]
 8005a24:	462a      	mov	r2, r5
 8005a26:	4639      	mov	r1, r7
 8005a28:	4630      	mov	r0, r6
 8005a2a:	47c0      	blx	r8
 8005a2c:	3001      	adds	r0, #1
 8005a2e:	d0a2      	beq.n	8005976 <_printf_i+0x13a>
 8005a30:	6823      	ldr	r3, [r4, #0]
 8005a32:	079b      	lsls	r3, r3, #30
 8005a34:	d507      	bpl.n	8005a46 <_printf_i+0x20a>
 8005a36:	2500      	movs	r5, #0
 8005a38:	f104 0919 	add.w	r9, r4, #25
 8005a3c:	68e3      	ldr	r3, [r4, #12]
 8005a3e:	9a03      	ldr	r2, [sp, #12]
 8005a40:	1a9b      	subs	r3, r3, r2
 8005a42:	429d      	cmp	r5, r3
 8005a44:	db05      	blt.n	8005a52 <_printf_i+0x216>
 8005a46:	68e0      	ldr	r0, [r4, #12]
 8005a48:	9b03      	ldr	r3, [sp, #12]
 8005a4a:	4298      	cmp	r0, r3
 8005a4c:	bfb8      	it	lt
 8005a4e:	4618      	movlt	r0, r3
 8005a50:	e793      	b.n	800597a <_printf_i+0x13e>
 8005a52:	2301      	movs	r3, #1
 8005a54:	464a      	mov	r2, r9
 8005a56:	4639      	mov	r1, r7
 8005a58:	4630      	mov	r0, r6
 8005a5a:	47c0      	blx	r8
 8005a5c:	3001      	adds	r0, #1
 8005a5e:	d08a      	beq.n	8005976 <_printf_i+0x13a>
 8005a60:	3501      	adds	r5, #1
 8005a62:	e7eb      	b.n	8005a3c <_printf_i+0x200>
 8005a64:	2b00      	cmp	r3, #0
 8005a66:	d1a7      	bne.n	80059b8 <_printf_i+0x17c>
 8005a68:	780b      	ldrb	r3, [r1, #0]
 8005a6a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005a6e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005a72:	e765      	b.n	8005940 <_printf_i+0x104>
 8005a74:	080064e9 	.word	0x080064e9
 8005a78:	080064d8 	.word	0x080064d8

08005a7c <realloc>:
 8005a7c:	4b02      	ldr	r3, [pc, #8]	; (8005a88 <realloc+0xc>)
 8005a7e:	460a      	mov	r2, r1
 8005a80:	4601      	mov	r1, r0
 8005a82:	6818      	ldr	r0, [r3, #0]
 8005a84:	f7ff b91a 	b.w	8004cbc <__wrap__realloc_r>
 8005a88:	200001e8 	.word	0x200001e8

08005a8c <_sbrk_r>:
 8005a8c:	b538      	push	{r3, r4, r5, lr}
 8005a8e:	4c06      	ldr	r4, [pc, #24]	; (8005aa8 <_sbrk_r+0x1c>)
 8005a90:	2300      	movs	r3, #0
 8005a92:	4605      	mov	r5, r0
 8005a94:	4608      	mov	r0, r1
 8005a96:	6023      	str	r3, [r4, #0]
 8005a98:	f7ff f9fa 	bl	8004e90 <_sbrk>
 8005a9c:	1c43      	adds	r3, r0, #1
 8005a9e:	d102      	bne.n	8005aa6 <_sbrk_r+0x1a>
 8005aa0:	6823      	ldr	r3, [r4, #0]
 8005aa2:	b103      	cbz	r3, 8005aa6 <_sbrk_r+0x1a>
 8005aa4:	602b      	str	r3, [r5, #0]
 8005aa6:	bd38      	pop	{r3, r4, r5, pc}
 8005aa8:	20002844 	.word	0x20002844

08005aac <__sread>:
 8005aac:	b510      	push	{r4, lr}
 8005aae:	460c      	mov	r4, r1
 8005ab0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005ab4:	f000 f9f4 	bl	8005ea0 <_read_r>
 8005ab8:	2800      	cmp	r0, #0
 8005aba:	bfab      	itete	ge
 8005abc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8005abe:	89a3      	ldrhlt	r3, [r4, #12]
 8005ac0:	181b      	addge	r3, r3, r0
 8005ac2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005ac6:	bfac      	ite	ge
 8005ac8:	6563      	strge	r3, [r4, #84]	; 0x54
 8005aca:	81a3      	strhlt	r3, [r4, #12]
 8005acc:	bd10      	pop	{r4, pc}

08005ace <__swrite>:
 8005ace:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005ad2:	461f      	mov	r7, r3
 8005ad4:	898b      	ldrh	r3, [r1, #12]
 8005ad6:	05db      	lsls	r3, r3, #23
 8005ad8:	4605      	mov	r5, r0
 8005ada:	460c      	mov	r4, r1
 8005adc:	4616      	mov	r6, r2
 8005ade:	d505      	bpl.n	8005aec <__swrite+0x1e>
 8005ae0:	2302      	movs	r3, #2
 8005ae2:	2200      	movs	r2, #0
 8005ae4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005ae8:	f000 f870 	bl	8005bcc <_lseek_r>
 8005aec:	89a3      	ldrh	r3, [r4, #12]
 8005aee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005af2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005af6:	81a3      	strh	r3, [r4, #12]
 8005af8:	4632      	mov	r2, r6
 8005afa:	463b      	mov	r3, r7
 8005afc:	4628      	mov	r0, r5
 8005afe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005b02:	f000 b841 	b.w	8005b88 <_write_r>

08005b06 <__sseek>:
 8005b06:	b510      	push	{r4, lr}
 8005b08:	460c      	mov	r4, r1
 8005b0a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005b0e:	f000 f85d 	bl	8005bcc <_lseek_r>
 8005b12:	1c43      	adds	r3, r0, #1
 8005b14:	89a3      	ldrh	r3, [r4, #12]
 8005b16:	bf15      	itete	ne
 8005b18:	6560      	strne	r0, [r4, #84]	; 0x54
 8005b1a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8005b1e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8005b22:	81a3      	strheq	r3, [r4, #12]
 8005b24:	bf18      	it	ne
 8005b26:	81a3      	strhne	r3, [r4, #12]
 8005b28:	bd10      	pop	{r4, pc}

08005b2a <__sclose>:
 8005b2a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005b2e:	f000 b83d 	b.w	8005bac <_close_r>

08005b32 <strlen>:
 8005b32:	4603      	mov	r3, r0
 8005b34:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005b38:	2a00      	cmp	r2, #0
 8005b3a:	d1fb      	bne.n	8005b34 <strlen+0x2>
 8005b3c:	1a18      	subs	r0, r3, r0
 8005b3e:	3801      	subs	r0, #1
 8005b40:	4770      	bx	lr

08005b42 <_vsiprintf_r>:
 8005b42:	b510      	push	{r4, lr}
 8005b44:	b09a      	sub	sp, #104	; 0x68
 8005b46:	f44f 7402 	mov.w	r4, #520	; 0x208
 8005b4a:	9100      	str	r1, [sp, #0]
 8005b4c:	9104      	str	r1, [sp, #16]
 8005b4e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8005b52:	9102      	str	r1, [sp, #8]
 8005b54:	9105      	str	r1, [sp, #20]
 8005b56:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8005b5a:	f8ad 100e 	strh.w	r1, [sp, #14]
 8005b5e:	4669      	mov	r1, sp
 8005b60:	f8ad 400c 	strh.w	r4, [sp, #12]
 8005b64:	f000 f8a8 	bl	8005cb8 <_svfiprintf_r>
 8005b68:	9b00      	ldr	r3, [sp, #0]
 8005b6a:	2200      	movs	r2, #0
 8005b6c:	701a      	strb	r2, [r3, #0]
 8005b6e:	b01a      	add	sp, #104	; 0x68
 8005b70:	bd10      	pop	{r4, pc}
	...

08005b74 <vsiprintf>:
 8005b74:	4613      	mov	r3, r2
 8005b76:	460a      	mov	r2, r1
 8005b78:	4601      	mov	r1, r0
 8005b7a:	4802      	ldr	r0, [pc, #8]	; (8005b84 <vsiprintf+0x10>)
 8005b7c:	6800      	ldr	r0, [r0, #0]
 8005b7e:	f7ff bfe0 	b.w	8005b42 <_vsiprintf_r>
 8005b82:	bf00      	nop
 8005b84:	200001e8 	.word	0x200001e8

08005b88 <_write_r>:
 8005b88:	b538      	push	{r3, r4, r5, lr}
 8005b8a:	4c07      	ldr	r4, [pc, #28]	; (8005ba8 <_write_r+0x20>)
 8005b8c:	4605      	mov	r5, r0
 8005b8e:	4608      	mov	r0, r1
 8005b90:	4611      	mov	r1, r2
 8005b92:	2200      	movs	r2, #0
 8005b94:	6022      	str	r2, [r4, #0]
 8005b96:	461a      	mov	r2, r3
 8005b98:	f7ff f8e8 	bl	8004d6c <_write>
 8005b9c:	1c43      	adds	r3, r0, #1
 8005b9e:	d102      	bne.n	8005ba6 <_write_r+0x1e>
 8005ba0:	6823      	ldr	r3, [r4, #0]
 8005ba2:	b103      	cbz	r3, 8005ba6 <_write_r+0x1e>
 8005ba4:	602b      	str	r3, [r5, #0]
 8005ba6:	bd38      	pop	{r3, r4, r5, pc}
 8005ba8:	20002844 	.word	0x20002844

08005bac <_close_r>:
 8005bac:	b538      	push	{r3, r4, r5, lr}
 8005bae:	4c06      	ldr	r4, [pc, #24]	; (8005bc8 <_close_r+0x1c>)
 8005bb0:	2300      	movs	r3, #0
 8005bb2:	4605      	mov	r5, r0
 8005bb4:	4608      	mov	r0, r1
 8005bb6:	6023      	str	r3, [r4, #0]
 8005bb8:	f7ff f8b8 	bl	8004d2c <_close>
 8005bbc:	1c43      	adds	r3, r0, #1
 8005bbe:	d102      	bne.n	8005bc6 <_close_r+0x1a>
 8005bc0:	6823      	ldr	r3, [r4, #0]
 8005bc2:	b103      	cbz	r3, 8005bc6 <_close_r+0x1a>
 8005bc4:	602b      	str	r3, [r5, #0]
 8005bc6:	bd38      	pop	{r3, r4, r5, pc}
 8005bc8:	20002844 	.word	0x20002844

08005bcc <_lseek_r>:
 8005bcc:	b538      	push	{r3, r4, r5, lr}
 8005bce:	4c07      	ldr	r4, [pc, #28]	; (8005bec <_lseek_r+0x20>)
 8005bd0:	4605      	mov	r5, r0
 8005bd2:	4608      	mov	r0, r1
 8005bd4:	4611      	mov	r1, r2
 8005bd6:	2200      	movs	r2, #0
 8005bd8:	6022      	str	r2, [r4, #0]
 8005bda:	461a      	mov	r2, r3
 8005bdc:	f7ff f92c 	bl	8004e38 <_lseek>
 8005be0:	1c43      	adds	r3, r0, #1
 8005be2:	d102      	bne.n	8005bea <_lseek_r+0x1e>
 8005be4:	6823      	ldr	r3, [r4, #0]
 8005be6:	b103      	cbz	r3, 8005bea <_lseek_r+0x1e>
 8005be8:	602b      	str	r3, [r5, #0]
 8005bea:	bd38      	pop	{r3, r4, r5, pc}
 8005bec:	20002844 	.word	0x20002844

08005bf0 <_malloc_usable_size_r>:
 8005bf0:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8005bf4:	2800      	cmp	r0, #0
 8005bf6:	f1a0 0004 	sub.w	r0, r0, #4
 8005bfa:	bfbc      	itt	lt
 8005bfc:	580b      	ldrlt	r3, [r1, r0]
 8005bfe:	18c0      	addlt	r0, r0, r3
 8005c00:	4770      	bx	lr

08005c02 <__ssputs_r>:
 8005c02:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8005c06:	688e      	ldr	r6, [r1, #8]
 8005c08:	429e      	cmp	r6, r3
 8005c0a:	4682      	mov	r10, r0
 8005c0c:	460c      	mov	r4, r1
 8005c0e:	4691      	mov	r9, r2
 8005c10:	4698      	mov	r8, r3
 8005c12:	d835      	bhi.n	8005c80 <__ssputs_r+0x7e>
 8005c14:	898a      	ldrh	r2, [r1, #12]
 8005c16:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8005c1a:	d031      	beq.n	8005c80 <__ssputs_r+0x7e>
 8005c1c:	6825      	ldr	r5, [r4, #0]
 8005c1e:	6909      	ldr	r1, [r1, #16]
 8005c20:	1a6f      	subs	r7, r5, r1
 8005c22:	6965      	ldr	r5, [r4, #20]
 8005c24:	2302      	movs	r3, #2
 8005c26:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005c2a:	fb95 f5f3 	sdiv	r5, r5, r3
 8005c2e:	f108 0301 	add.w	r3, r8, #1
 8005c32:	443b      	add	r3, r7
 8005c34:	429d      	cmp	r5, r3
 8005c36:	bf38      	it	cc
 8005c38:	461d      	movcc	r5, r3
 8005c3a:	0553      	lsls	r3, r2, #21
 8005c3c:	d531      	bpl.n	8005ca2 <__ssputs_r+0xa0>
 8005c3e:	4629      	mov	r1, r5
 8005c40:	f7ff f83a 	bl	8004cb8 <__wrap__malloc_r>
 8005c44:	4606      	mov	r6, r0
 8005c46:	b950      	cbnz	r0, 8005c5e <__ssputs_r+0x5c>
 8005c48:	230c      	movs	r3, #12
 8005c4a:	f8ca 3000 	str.w	r3, [r10]
 8005c4e:	89a3      	ldrh	r3, [r4, #12]
 8005c50:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005c54:	81a3      	strh	r3, [r4, #12]
 8005c56:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005c5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005c5e:	463a      	mov	r2, r7
 8005c60:	6921      	ldr	r1, [r4, #16]
 8005c62:	f7ff fc75 	bl	8005550 <memcpy>
 8005c66:	89a3      	ldrh	r3, [r4, #12]
 8005c68:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005c6c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005c70:	81a3      	strh	r3, [r4, #12]
 8005c72:	6126      	str	r6, [r4, #16]
 8005c74:	6165      	str	r5, [r4, #20]
 8005c76:	443e      	add	r6, r7
 8005c78:	1bed      	subs	r5, r5, r7
 8005c7a:	6026      	str	r6, [r4, #0]
 8005c7c:	60a5      	str	r5, [r4, #8]
 8005c7e:	4646      	mov	r6, r8
 8005c80:	4546      	cmp	r6, r8
 8005c82:	bf28      	it	cs
 8005c84:	4646      	movcs	r6, r8
 8005c86:	4632      	mov	r2, r6
 8005c88:	4649      	mov	r1, r9
 8005c8a:	6820      	ldr	r0, [r4, #0]
 8005c8c:	f7ff fc6b 	bl	8005566 <memmove>
 8005c90:	68a3      	ldr	r3, [r4, #8]
 8005c92:	1b9b      	subs	r3, r3, r6
 8005c94:	60a3      	str	r3, [r4, #8]
 8005c96:	6823      	ldr	r3, [r4, #0]
 8005c98:	441e      	add	r6, r3
 8005c9a:	6026      	str	r6, [r4, #0]
 8005c9c:	2000      	movs	r0, #0
 8005c9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005ca2:	462a      	mov	r2, r5
 8005ca4:	f7ff f80a 	bl	8004cbc <__wrap__realloc_r>
 8005ca8:	4606      	mov	r6, r0
 8005caa:	2800      	cmp	r0, #0
 8005cac:	d1e1      	bne.n	8005c72 <__ssputs_r+0x70>
 8005cae:	6921      	ldr	r1, [r4, #16]
 8005cb0:	4650      	mov	r0, r10
 8005cb2:	f7ff f805 	bl	8004cc0 <__wrap__free_r>
 8005cb6:	e7c7      	b.n	8005c48 <__ssputs_r+0x46>

08005cb8 <_svfiprintf_r>:
 8005cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8005cbc:	b09d      	sub	sp, #116	; 0x74
 8005cbe:	4680      	mov	r8, r0
 8005cc0:	9303      	str	r3, [sp, #12]
 8005cc2:	898b      	ldrh	r3, [r1, #12]
 8005cc4:	061c      	lsls	r4, r3, #24
 8005cc6:	460d      	mov	r5, r1
 8005cc8:	4616      	mov	r6, r2
 8005cca:	d50f      	bpl.n	8005cec <_svfiprintf_r+0x34>
 8005ccc:	690b      	ldr	r3, [r1, #16]
 8005cce:	b96b      	cbnz	r3, 8005cec <_svfiprintf_r+0x34>
 8005cd0:	2140      	movs	r1, #64	; 0x40
 8005cd2:	f7fe fff1 	bl	8004cb8 <__wrap__malloc_r>
 8005cd6:	6028      	str	r0, [r5, #0]
 8005cd8:	6128      	str	r0, [r5, #16]
 8005cda:	b928      	cbnz	r0, 8005ce8 <_svfiprintf_r+0x30>
 8005cdc:	230c      	movs	r3, #12
 8005cde:	f8c8 3000 	str.w	r3, [r8]
 8005ce2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005ce6:	e0c5      	b.n	8005e74 <_svfiprintf_r+0x1bc>
 8005ce8:	2340      	movs	r3, #64	; 0x40
 8005cea:	616b      	str	r3, [r5, #20]
 8005cec:	2300      	movs	r3, #0
 8005cee:	9309      	str	r3, [sp, #36]	; 0x24
 8005cf0:	2320      	movs	r3, #32
 8005cf2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005cf6:	2330      	movs	r3, #48	; 0x30
 8005cf8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005cfc:	f04f 0b01 	mov.w	r11, #1
 8005d00:	4637      	mov	r7, r6
 8005d02:	463c      	mov	r4, r7
 8005d04:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005d08:	2b00      	cmp	r3, #0
 8005d0a:	d13c      	bne.n	8005d86 <_svfiprintf_r+0xce>
 8005d0c:	ebb7 0a06 	subs.w	r10, r7, r6
 8005d10:	d00b      	beq.n	8005d2a <_svfiprintf_r+0x72>
 8005d12:	4653      	mov	r3, r10
 8005d14:	4632      	mov	r2, r6
 8005d16:	4629      	mov	r1, r5
 8005d18:	4640      	mov	r0, r8
 8005d1a:	f7ff ff72 	bl	8005c02 <__ssputs_r>
 8005d1e:	3001      	adds	r0, #1
 8005d20:	f000 80a3 	beq.w	8005e6a <_svfiprintf_r+0x1b2>
 8005d24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005d26:	4453      	add	r3, r10
 8005d28:	9309      	str	r3, [sp, #36]	; 0x24
 8005d2a:	783b      	ldrb	r3, [r7, #0]
 8005d2c:	2b00      	cmp	r3, #0
 8005d2e:	f000 809c 	beq.w	8005e6a <_svfiprintf_r+0x1b2>
 8005d32:	2300      	movs	r3, #0
 8005d34:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005d38:	9304      	str	r3, [sp, #16]
 8005d3a:	9307      	str	r3, [sp, #28]
 8005d3c:	9205      	str	r2, [sp, #20]
 8005d3e:	9306      	str	r3, [sp, #24]
 8005d40:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005d44:	931a      	str	r3, [sp, #104]	; 0x68
 8005d46:	2205      	movs	r2, #5
 8005d48:	7821      	ldrb	r1, [r4, #0]
 8005d4a:	4850      	ldr	r0, [pc, #320]	; (8005e8c <_svfiprintf_r+0x1d4>)
 8005d4c:	f7ff fbb0 	bl	80054b0 <memchr>
 8005d50:	1c67      	adds	r7, r4, #1
 8005d52:	9b04      	ldr	r3, [sp, #16]
 8005d54:	b9d8      	cbnz	r0, 8005d8e <_svfiprintf_r+0xd6>
 8005d56:	06d9      	lsls	r1, r3, #27
 8005d58:	bf44      	itt	mi
 8005d5a:	2220      	movmi	r2, #32
 8005d5c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005d60:	071a      	lsls	r2, r3, #28
 8005d62:	bf44      	itt	mi
 8005d64:	222b      	movmi	r2, #43	; 0x2b
 8005d66:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005d6a:	7822      	ldrb	r2, [r4, #0]
 8005d6c:	2a2a      	cmp	r2, #42	; 0x2a
 8005d6e:	d016      	beq.n	8005d9e <_svfiprintf_r+0xe6>
 8005d70:	9a07      	ldr	r2, [sp, #28]
 8005d72:	2100      	movs	r1, #0
 8005d74:	200a      	movs	r0, #10
 8005d76:	4627      	mov	r7, r4
 8005d78:	3401      	adds	r4, #1
 8005d7a:	783b      	ldrb	r3, [r7, #0]
 8005d7c:	3b30      	subs	r3, #48	; 0x30
 8005d7e:	2b09      	cmp	r3, #9
 8005d80:	d951      	bls.n	8005e26 <_svfiprintf_r+0x16e>
 8005d82:	b1c9      	cbz	r1, 8005db8 <_svfiprintf_r+0x100>
 8005d84:	e011      	b.n	8005daa <_svfiprintf_r+0xf2>
 8005d86:	2b25      	cmp	r3, #37	; 0x25
 8005d88:	d0c0      	beq.n	8005d0c <_svfiprintf_r+0x54>
 8005d8a:	4627      	mov	r7, r4
 8005d8c:	e7b9      	b.n	8005d02 <_svfiprintf_r+0x4a>
 8005d8e:	4a3f      	ldr	r2, [pc, #252]	; (8005e8c <_svfiprintf_r+0x1d4>)
 8005d90:	1a80      	subs	r0, r0, r2
 8005d92:	fa0b f000 	lsl.w	r0, r11, r0
 8005d96:	4318      	orrs	r0, r3
 8005d98:	9004      	str	r0, [sp, #16]
 8005d9a:	463c      	mov	r4, r7
 8005d9c:	e7d3      	b.n	8005d46 <_svfiprintf_r+0x8e>
 8005d9e:	9a03      	ldr	r2, [sp, #12]
 8005da0:	1d11      	adds	r1, r2, #4
 8005da2:	6812      	ldr	r2, [r2, #0]
 8005da4:	9103      	str	r1, [sp, #12]
 8005da6:	2a00      	cmp	r2, #0
 8005da8:	db01      	blt.n	8005dae <_svfiprintf_r+0xf6>
 8005daa:	9207      	str	r2, [sp, #28]
 8005dac:	e004      	b.n	8005db8 <_svfiprintf_r+0x100>
 8005dae:	4252      	negs	r2, r2
 8005db0:	f043 0302 	orr.w	r3, r3, #2
 8005db4:	9207      	str	r2, [sp, #28]
 8005db6:	9304      	str	r3, [sp, #16]
 8005db8:	783b      	ldrb	r3, [r7, #0]
 8005dba:	2b2e      	cmp	r3, #46	; 0x2e
 8005dbc:	d10e      	bne.n	8005ddc <_svfiprintf_r+0x124>
 8005dbe:	787b      	ldrb	r3, [r7, #1]
 8005dc0:	2b2a      	cmp	r3, #42	; 0x2a
 8005dc2:	f107 0101 	add.w	r1, r7, #1
 8005dc6:	d132      	bne.n	8005e2e <_svfiprintf_r+0x176>
 8005dc8:	9b03      	ldr	r3, [sp, #12]
 8005dca:	1d1a      	adds	r2, r3, #4
 8005dcc:	681b      	ldr	r3, [r3, #0]
 8005dce:	9203      	str	r2, [sp, #12]
 8005dd0:	2b00      	cmp	r3, #0
 8005dd2:	bfb8      	it	lt
 8005dd4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8005dd8:	3702      	adds	r7, #2
 8005dda:	9305      	str	r3, [sp, #20]
 8005ddc:	4c2c      	ldr	r4, [pc, #176]	; (8005e90 <_svfiprintf_r+0x1d8>)
 8005dde:	7839      	ldrb	r1, [r7, #0]
 8005de0:	2203      	movs	r2, #3
 8005de2:	4620      	mov	r0, r4
 8005de4:	f7ff fb64 	bl	80054b0 <memchr>
 8005de8:	b138      	cbz	r0, 8005dfa <_svfiprintf_r+0x142>
 8005dea:	2340      	movs	r3, #64	; 0x40
 8005dec:	1b00      	subs	r0, r0, r4
 8005dee:	fa03 f000 	lsl.w	r0, r3, r0
 8005df2:	9b04      	ldr	r3, [sp, #16]
 8005df4:	4303      	orrs	r3, r0
 8005df6:	9304      	str	r3, [sp, #16]
 8005df8:	3701      	adds	r7, #1
 8005dfa:	7839      	ldrb	r1, [r7, #0]
 8005dfc:	4825      	ldr	r0, [pc, #148]	; (8005e94 <_svfiprintf_r+0x1dc>)
 8005dfe:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005e02:	2206      	movs	r2, #6
 8005e04:	1c7e      	adds	r6, r7, #1
 8005e06:	f7ff fb53 	bl	80054b0 <memchr>
 8005e0a:	2800      	cmp	r0, #0
 8005e0c:	d035      	beq.n	8005e7a <_svfiprintf_r+0x1c2>
 8005e0e:	4b22      	ldr	r3, [pc, #136]	; (8005e98 <_svfiprintf_r+0x1e0>)
 8005e10:	b9fb      	cbnz	r3, 8005e52 <_svfiprintf_r+0x19a>
 8005e12:	9b03      	ldr	r3, [sp, #12]
 8005e14:	3307      	adds	r3, #7
 8005e16:	f023 0307 	bic.w	r3, r3, #7
 8005e1a:	3308      	adds	r3, #8
 8005e1c:	9303      	str	r3, [sp, #12]
 8005e1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005e20:	444b      	add	r3, r9
 8005e22:	9309      	str	r3, [sp, #36]	; 0x24
 8005e24:	e76c      	b.n	8005d00 <_svfiprintf_r+0x48>
 8005e26:	fb00 3202 	mla	r2, r0, r2, r3
 8005e2a:	2101      	movs	r1, #1
 8005e2c:	e7a3      	b.n	8005d76 <_svfiprintf_r+0xbe>
 8005e2e:	2300      	movs	r3, #0
 8005e30:	9305      	str	r3, [sp, #20]
 8005e32:	4618      	mov	r0, r3
 8005e34:	240a      	movs	r4, #10
 8005e36:	460f      	mov	r7, r1
 8005e38:	3101      	adds	r1, #1
 8005e3a:	783a      	ldrb	r2, [r7, #0]
 8005e3c:	3a30      	subs	r2, #48	; 0x30
 8005e3e:	2a09      	cmp	r2, #9
 8005e40:	d903      	bls.n	8005e4a <_svfiprintf_r+0x192>
 8005e42:	2b00      	cmp	r3, #0
 8005e44:	d0ca      	beq.n	8005ddc <_svfiprintf_r+0x124>
 8005e46:	9005      	str	r0, [sp, #20]
 8005e48:	e7c8      	b.n	8005ddc <_svfiprintf_r+0x124>
 8005e4a:	fb04 2000 	mla	r0, r4, r0, r2
 8005e4e:	2301      	movs	r3, #1
 8005e50:	e7f1      	b.n	8005e36 <_svfiprintf_r+0x17e>
 8005e52:	ab03      	add	r3, sp, #12
 8005e54:	9300      	str	r3, [sp, #0]
 8005e56:	462a      	mov	r2, r5
 8005e58:	4b10      	ldr	r3, [pc, #64]	; (8005e9c <_svfiprintf_r+0x1e4>)
 8005e5a:	a904      	add	r1, sp, #16
 8005e5c:	4640      	mov	r0, r8
 8005e5e:	f3af 8000 	nop.w
 8005e62:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8005e66:	4681      	mov	r9, r0
 8005e68:	d1d9      	bne.n	8005e1e <_svfiprintf_r+0x166>
 8005e6a:	89ab      	ldrh	r3, [r5, #12]
 8005e6c:	065b      	lsls	r3, r3, #25
 8005e6e:	f53f af38 	bmi.w	8005ce2 <_svfiprintf_r+0x2a>
 8005e72:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005e74:	b01d      	add	sp, #116	; 0x74
 8005e76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8005e7a:	ab03      	add	r3, sp, #12
 8005e7c:	9300      	str	r3, [sp, #0]
 8005e7e:	462a      	mov	r2, r5
 8005e80:	4b06      	ldr	r3, [pc, #24]	; (8005e9c <_svfiprintf_r+0x1e4>)
 8005e82:	a904      	add	r1, sp, #16
 8005e84:	4640      	mov	r0, r8
 8005e86:	f7ff fcd9 	bl	800583c <_printf_i>
 8005e8a:	e7ea      	b.n	8005e62 <_svfiprintf_r+0x1aa>
 8005e8c:	080064fa 	.word	0x080064fa
 8005e90:	08006500 	.word	0x08006500
 8005e94:	08006504 	.word	0x08006504
 8005e98:	00000000 	.word	0x00000000
 8005e9c:	08005c03 	.word	0x08005c03

08005ea0 <_read_r>:
 8005ea0:	b538      	push	{r3, r4, r5, lr}
 8005ea2:	4c07      	ldr	r4, [pc, #28]	; (8005ec0 <_read_r+0x20>)
 8005ea4:	4605      	mov	r5, r0
 8005ea6:	4608      	mov	r0, r1
 8005ea8:	4611      	mov	r1, r2
 8005eaa:	2200      	movs	r2, #0
 8005eac:	6022      	str	r2, [r4, #0]
 8005eae:	461a      	mov	r2, r3
 8005eb0:	f7fe ff92 	bl	8004dd8 <_read>
 8005eb4:	1c43      	adds	r3, r0, #1
 8005eb6:	d102      	bne.n	8005ebe <_read_r+0x1e>
 8005eb8:	6823      	ldr	r3, [r4, #0]
 8005eba:	b103      	cbz	r3, 8005ebe <_read_r+0x1e>
 8005ebc:	602b      	str	r3, [r5, #0]
 8005ebe:	bd38      	pop	{r3, r4, r5, pc}
 8005ec0:	20002844 	.word	0x20002844

08005ec4 <_init>:
 8005ec4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005ec6:	bf00      	nop
 8005ec8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005eca:	bc08      	pop	{r3}
 8005ecc:	469e      	mov	lr, r3
 8005ece:	4770      	bx	lr

08005ed0 <_fini>:
 8005ed0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005ed2:	bf00      	nop
 8005ed4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005ed6:	bc08      	pop	{r3}
 8005ed8:	469e      	mov	lr, r3
 8005eda:	4770      	bx	lr

08005edc <vtable for std_msgs::Time>:
	...
 8005ee4:	0231 0800 0259 0800 0295 0800 029d 0800     1...Y...........

08005ef4 <vtable for rosserial_msgs::TopicInfo>:
	...
 8005efc:	04eb 0800 05c5 0800 02a5 0800 02ad 0800     ................

08005f0c <vtable for rosserial_msgs::Log>:
	...
 8005f14:	04bf 0800 058f 0800 02b5 0800 02bd 0800     ................

08005f24 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 8005f2c:	03dd 0800 067b 0800 02c5 0800 02cd 0800     ....{...........

08005f3c <vtable for basic_lecture::simple_msg_single>:
	...
 8005f44:	02d5 0800 02fd 0800 0311 0800 0319 0800     ................

08005f54 <vtable for basic_lecture::simple_msg>:
	...
 8005f5c:	0321 0800 0373 0800 035d 0800 0365 0800     !...s...]...e...

08005f6c <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 8005f74:	0a55 0800 0b15 0800 036d 0800 7261 6172     U.......m...arra
 8005f84:	0079 3936 6664 3463 6435 6462 3363 3338     y.69dfc45dbdc383
 8005f94:	3166 3738 3763 3631 3236 3464 6162 6566     f187c71662d4bafe
 8005fa4:	6332 6200 7361 6369 6c5f 6365 7574 6572     2c.basic_lecture
 8005fb4:	732f 6d69 6c70 5f65 736d 0067 3461 3163     /simple_msg.a4c1
 8005fc4:	3066 3030 6137 3166 6331 6531 6131 3666     f0007af11c1e1af6
 8005fd4:	6435 6362 3230 3161 6238 6135 6200 7361     5dbc02a18b5a.bas
 8005fe4:	6369 6c5f 6365 7574 6572 732f 6d69 6c70     ic_lecture/simpl
 8005ff4:	5f65 736d 5f67 6973 676e 656c 3900 3066     e_msg_single.9f0
 8006004:	3965 6238 6164 3536 3839 3931 3638 6464     e98bda65981986dd
 8006014:	3566 6133 6166 6137 3034 3465 0039 3131     f53afa7a40e49.11
 8006024:	6261 3764 3133 3263 3935 3333 3632 6331     abd731c25933261c
 8006034:	3664 3831 6233 3164 6432 3236 3539 7200     d6183bd12d6295.r
 8006044:	736f 6573 6972 6c61 6d5f 6773 2f73 6f4c     osserial_msgs/Lo
 8006054:	0067 6130 3564 6631 3838 6366 3434 3938     g.0ad51f88fc4489
 8006064:	6632 6338 3031 3836 3034 3737 3436 3036     2f8c106840776460
 8006074:	3530 7200 736f 6573 6972 6c61 6d5f 6773     05.rosserial_msg
 8006084:	2f73 6f54 6970 4963 666e 006f               s/TopicInfo.

08006090 <rosserial_msgs::REQUESTPARAM>:
 8006090:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 80060a0:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 80060b0:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 80060c0:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 80060d0:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 80060e0:	6566 2e72 6300 3764 3631 6336 3437 3563     fer..cd7166c74c5
 80060f0:	3235 3363 3131 6266 6363 6632 3565 3761     52c311fbcc2fe5a7
 8006100:	6362 3832 0039 7473 5f64 736d 7367 542f     bc289.std_msgs/T
 8006110:	6d69 0065                                   ime.

08006114 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8006114:	0e8f 0800 0e81 0800 0e8d 0800 682f 6d6f     ............/hom
 8006124:	2f65 6166 616c 7470 706f 722f 736f 6c2f     e/falaptop/ros/l
 8006134:	6269 722f 736f 6c5f 6269 422f 6675 6566     ib/ros_lib/Buffe
 8006144:	6572 5364 7265 6169 2f6c 7542 6666 7265     redSerial/Buffer
 8006154:	6465 6553 6972 6c61 632e 7070 2500 2073     edSerial.cpp.%s 
 8006164:	6425 6220 6675 6566 2072 766f 7265 7277     %d buffer overwr
 8006174:	7469 2065 6d28 7861 625f 6675 735f 7a69     ite (max_buf_siz
 8006184:	3a65 2520 2064 7865 6563 6465 6465 203a     e: %d exceeded: 
 8006194:	6425 2129 0a0d 0000                         %d)!....

0800619c <vtable for BufferedSerial>:
	...
 80061a4:	4b75 0800 4b75 0800 0f79 0800 0fd1 0800     uK..uK..y.......
 80061b4:	0e41 0800 0e51 0800 0e55 0800 10f1 0800     A...Q...U.......
 80061c4:	1109 0800 1185 0800 1147 0800               ........G...

080061d0 <us_data>:
 80061d0:	61d8 0800 08d8 2000                         .a..... 

080061d8 <us_interface>:
 80061d8:	2d59 0800 2d7d 0800 2db5 0800 2dcd 0800     Y-..}-...-...-..
 80061e8:	2d99 0800 6970 6d6e 7061 6d20 7369 6d2d     .-..pinmap mis-m
 80061f8:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
 8006208:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
 8006218:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
 8006228:	6e69 756f 0074 0000                         inout...

08006230 <mp_stk_size>:
 8006230:	0210 0000                                   ....

08006234 <mp_tcb_size>:
 8006234:	03cc                                        ..

08006236 <mp_tmr_size>:
	...

08006238 <os_clockrate>:
 8006238:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 8006248:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 8006258:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

08006265 <os_fifo_size>:
 8006265:	0110                                             .

08006266 <os_flags>:
 8006266:	0001                                        ..

08006268 <os_maxtaskrun>:
 8006268:	000f 0000                                   ....

0800626c <os_messageQ_def_osTimerMessageQ>:
 800626c:	0004 0000 08fc 2000                         ....... 

08006274 <os_mutex_def_env_mutex>:
 8006274:	091c 2000                                   ... 

08006278 <os_mutex_def_malloc_mutex>:
 8006278:	092c 2000                                   ,.. 

0800627c <os_mutex_def_singleton_mutex>:
 800627c:	093c 2000                                   <.. 

08006280 <os_rrobin>:
 8006280:	0005 0001                                   ....

08006284 <os_stackinfo>:
 8006284:	0200 0100                                   ....

08006288 <os_thread_def_osTimerThread>:
 8006288:	228d 0800 0002 0000 0001 0000 0320 0000     .".......... ...
 8006298:	1e18 2000                                   ... 

0800629c <os_trv>:
 800629c:	bf1f 0002                                   ....

080062a0 <os_mutex_def_osThreadMutex>:
 80062a0:	1950 2000 6950 6d6e 7061 6520 7272 726f     P.. Pinmap error
 80062b0:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 80062c0:	6562 2e72 0000 0000                         ber.....

080062c8 <ll_pin_defines>:
 80062c8:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 80062d8:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 80062e8:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 80062f8:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
 8006308:	6143 6e6e 746f 6920 696e 6974 6c61 7a69     Cannot initializ
 8006318:	2065 4155 5452 000a                         e UART..

08006320 <PinMap_UART_RX>:
 8006320:	0001 0000 4c00 4000 0812 0000 0003 0000     .....L.@........
 8006330:	4400 4000 0712 0000 000a 0000 1000 4001     .D.@...........@
 8006340:	0712 0000 0017 0000 1000 4001 0712 0000     ...........@....
 8006350:	0025 0000 4800 4000 0712 0000 0027 0000     %....H.@....'...
 8006360:	1400 4001 0812 0000 002b 0000 4800 4000     ...@....+....H.@
 8006370:	0712 0000 0032 0000 5000 4000 0812 0000     ....2....P.@....
 8006380:	ffff 0000 ffff ffff 0000 0000               ............

0800638c <PinMap_UART_TX>:
 800638c:	0000 0000 4c00 4000 0812 0000 0002 0000     .....L.@........
 800639c:	4400 4000 0712 0000 0009 0000 1000 4001     .D.@...........@
 80063ac:	0712 0000 0016 0000 1000 4001 0712 0000     ...........@....
 80063bc:	001a 0000 4800 4000 0712 0000 0026 0000     .....H.@....&...
 80063cc:	1400 4001 0812 0000 002a 0000 4800 4000     ...@....*....H.@
 80063dc:	0712 0000 002c 0000 5000 4000 0812 0000     ....,....P.@....
 80063ec:	ffff 0000 ffff ffff 0000 0000               ............

080063f8 <AHBPrescTable>:
	...
 8006400:	0201 0403 0706 0908                         ........

08006408 <APBAHBPrescTable>:
 8006408:	0000 0000 0201 0403 0201 0403 0706 0908     ................

08006418 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 8006418:	49df 0800 49e3 0800 49eb 0800               .I...I...I..

08006424 <vtable for mbed::SerialBase>:
	...
 800642c:	499f 0800 49a1 0800 0f2d 0800 0f65 0800     .I...I..-...e...

0800643c <vtable for mbed::RawSerial>:
	...
 8006444:	4b75 0800 4b75 0800 4b8d 0800 4ba1 0800     uK..uK...K...K..
 8006454:	704f 7265 7461 726f 6e20 7765 5d5b 6f20     Operator new[] o
 8006464:	7475 6f20 2066 656d 6f6d 7972 0a0d 0000     ut of memory....

08006474 <__sf_fake_stderr>:
	...

08006494 <__sf_fake_stdin>:
	...

080064b4 <__sf_fake_stdout>:
	...

080064d4 <_global_impure_ptr>:
 80064d4:	01ec 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 80064e4:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 80064f4:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 8006504:	6665 4567 4746 0000                         efgEFG..

0800650c <__EH_FRAME_BEGIN__>:
 800650c:	0000 0000                                   ....
