
NUCLEO_F446RE/JointState_test.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08005fcd


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 00 02 20 cd 5f 00 08 01 60 00 08 01 60 00 08     ... ._...`...`..
 8000010:	01 60 00 08 01 60 00 08 01 60 00 08 00 00 00 00     .`...`...`......
	...
 800002c:	91 5e 00 08 01 60 00 08 00 00 00 00 37 5f 00 08     .^...`......7_..
 800003c:	97 5f 00 08 01 60 00 08 01 60 00 08 01 60 00 08     ._...`...`...`..
 800004c:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 800005c:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 800006c:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 800007c:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 800008c:	25 3c 00 08 29 3c 00 08 01 60 00 08 19 3c 00 08     %<..)<...`...<..
 800009c:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 80000ac:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 80000bc:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 80000cc:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 80000dc:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 80000ec:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 80000fc:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 800010c:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 800011c:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 800012c:	01 60 00 08 01 60 00 08 00 00 00 00 00 00 00 00     .`...`..........
 800013c:	39 3c 00 08 3d 3c 00 08 01 60 00 08 2d 3c 00 08     9<..=<...`..-<..
 800014c:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 800015c:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 800016c:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
	...
 8000184:	01 60 00 08 00 00 00 00 00 00 00 00 01 60 00 08     .`...........`..
	...
 800019c:	01 60 00 08 00 00 00 00 00 00 00 00 00 00 00 00     .`..............
 80001ac:	01 60 00 08 01 60 00 08 01 60 00 08 01 60 00 08     .`...`...`...`..
 80001bc:	01 60 00 08 01 60 00 08                             .`...`..

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000260 	.word	0x20000260
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08007838 	.word	0x08007838

080001e8 <frame_dummy>:
 80001e8:	4b0c      	ldr	r3, [pc, #48]	; (800021c <frame_dummy+0x34>)
 80001ea:	b143      	cbz	r3, 80001fe <frame_dummy+0x16>
 80001ec:	480c      	ldr	r0, [pc, #48]	; (8000220 <frame_dummy+0x38>)
 80001ee:	490d      	ldr	r1, [pc, #52]	; (8000224 <frame_dummy+0x3c>)
 80001f0:	b510      	push	{r4, lr}
 80001f2:	f3af 8000 	nop.w
 80001f6:	480c      	ldr	r0, [pc, #48]	; (8000228 <frame_dummy+0x40>)
 80001f8:	6803      	ldr	r3, [r0, #0]
 80001fa:	b923      	cbnz	r3, 8000206 <frame_dummy+0x1e>
 80001fc:	bd10      	pop	{r4, pc}
 80001fe:	480a      	ldr	r0, [pc, #40]	; (8000228 <frame_dummy+0x40>)
 8000200:	6803      	ldr	r3, [r0, #0]
 8000202:	b933      	cbnz	r3, 8000212 <frame_dummy+0x2a>
 8000204:	4770      	bx	lr
 8000206:	4b09      	ldr	r3, [pc, #36]	; (800022c <frame_dummy+0x44>)
 8000208:	2b00      	cmp	r3, #0
 800020a:	d0f7      	beq.n	80001fc <frame_dummy+0x14>
 800020c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000210:	4718      	bx	r3
 8000212:	4b06      	ldr	r3, [pc, #24]	; (800022c <frame_dummy+0x44>)
 8000214:	2b00      	cmp	r3, #0
 8000216:	d0f5      	beq.n	8000204 <frame_dummy+0x1c>
 8000218:	4718      	bx	r3
 800021a:	bf00      	nop
 800021c:	00000000 	.word	0x00000000
 8000220:	08007838 	.word	0x08007838
 8000224:	20000264 	.word	0x20000264
 8000228:	2000025c 	.word	0x2000025c
 800022c:	00000000 	.word	0x00000000

08000230 <std_msgs::Time::serialize(unsigned char*) const>:
 8000230:	6843      	ldr	r3, [r0, #4]
 8000232:	700b      	strb	r3, [r1, #0]
 8000234:	6843      	ldr	r3, [r0, #4]
 8000236:	0a1b      	lsrs	r3, r3, #8
 8000238:	704b      	strb	r3, [r1, #1]
 800023a:	88c3      	ldrh	r3, [r0, #6]
 800023c:	708b      	strb	r3, [r1, #2]
 800023e:	79c3      	ldrb	r3, [r0, #7]
 8000240:	70cb      	strb	r3, [r1, #3]
 8000242:	6883      	ldr	r3, [r0, #8]
 8000244:	710b      	strb	r3, [r1, #4]
 8000246:	6883      	ldr	r3, [r0, #8]
 8000248:	0a1b      	lsrs	r3, r3, #8
 800024a:	714b      	strb	r3, [r1, #5]
 800024c:	8943      	ldrh	r3, [r0, #10]
 800024e:	718b      	strb	r3, [r1, #6]
 8000250:	7ac3      	ldrb	r3, [r0, #11]
 8000252:	71cb      	strb	r3, [r1, #7]
 8000254:	2008      	movs	r0, #8
 8000256:	4770      	bx	lr

08000258 <std_msgs::Time::deserialize(unsigned char*)>:
 8000258:	780b      	ldrb	r3, [r1, #0]
 800025a:	6043      	str	r3, [r0, #4]
 800025c:	784a      	ldrb	r2, [r1, #1]
 800025e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000262:	6043      	str	r3, [r0, #4]
 8000264:	788a      	ldrb	r2, [r1, #2]
 8000266:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800026a:	6043      	str	r3, [r0, #4]
 800026c:	78ca      	ldrb	r2, [r1, #3]
 800026e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000272:	6043      	str	r3, [r0, #4]
 8000274:	790b      	ldrb	r3, [r1, #4]
 8000276:	6083      	str	r3, [r0, #8]
 8000278:	794a      	ldrb	r2, [r1, #5]
 800027a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800027e:	6083      	str	r3, [r0, #8]
 8000280:	798a      	ldrb	r2, [r1, #6]
 8000282:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000286:	6083      	str	r3, [r0, #8]
 8000288:	79ca      	ldrb	r2, [r1, #7]
 800028a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800028e:	6083      	str	r3, [r0, #8]
 8000290:	2008      	movs	r0, #8
 8000292:	4770      	bx	lr

08000294 <std_msgs::Time::getType()>:
 8000294:	4800      	ldr	r0, [pc, #0]	; (8000298 <std_msgs::Time::getType()+0x4>)
 8000296:	4770      	bx	lr
 8000298:	080073ff 	.word	0x080073ff

0800029c <std_msgs::Time::getMD5()>:
 800029c:	4800      	ldr	r0, [pc, #0]	; (80002a0 <std_msgs::Time::getMD5()+0x4>)
 800029e:	4770      	bx	lr
 80002a0:	080073de 	.word	0x080073de

080002a4 <rosserial_msgs::TopicInfo::getType()>:
 80002a4:	4800      	ldr	r0, [pc, #0]	; (80002a8 <rosserial_msgs::TopicInfo::getType()+0x4>)
 80002a6:	4770      	bx	lr
 80002a8:	080072e9 	.word	0x080072e9

080002ac <rosserial_msgs::TopicInfo::getMD5()>:
 80002ac:	4800      	ldr	r0, [pc, #0]	; (80002b0 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 80002ae:	4770      	bx	lr
 80002b0:	080072c8 	.word	0x080072c8

080002b4 <rosserial_msgs::Log::getType()>:
 80002b4:	4800      	ldr	r0, [pc, #0]	; (80002b8 <rosserial_msgs::Log::getType()+0x4>)
 80002b6:	4770      	bx	lr
 80002b8:	080072b5 	.word	0x080072b5

080002bc <rosserial_msgs::Log::getMD5()>:
 80002bc:	4800      	ldr	r0, [pc, #0]	; (80002c0 <rosserial_msgs::Log::getMD5()+0x4>)
 80002be:	4770      	bx	lr
 80002c0:	08007294 	.word	0x08007294

080002c4 <rosserial_msgs::RequestParamResponse::getType()>:
 80002c4:	4800      	ldr	r0, [pc, #0]	; (80002c8 <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 80002c6:	4770      	bx	lr
 80002c8:	08007302 	.word	0x08007302

080002cc <rosserial_msgs::RequestParamResponse::getMD5()>:
 80002cc:	4800      	ldr	r0, [pc, #0]	; (80002d0 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 80002ce:	4770      	bx	lr
 80002d0:	08007273 	.word	0x08007273

080002d4 <std_msgs::Header::getType()>:
 80002d4:	4800      	ldr	r0, [pc, #0]	; (80002d8 <std_msgs::Header::getType()+0x4>)
 80002d6:	4770      	bx	lr
 80002d8:	0800742e 	.word	0x0800742e

080002dc <std_msgs::Header::getMD5()>:
 80002dc:	4800      	ldr	r0, [pc, #0]	; (80002e0 <std_msgs::Header::getMD5()+0x4>)
 80002de:	4770      	bx	lr
 80002e0:	0800740d 	.word	0x0800740d

080002e4 <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const>:
 80002e4:	6843      	ldr	r3, [r0, #4]
 80002e6:	b570      	push	{r4, r5, r6, lr}
 80002e8:	700b      	strb	r3, [r1, #0]
 80002ea:	6843      	ldr	r3, [r0, #4]
 80002ec:	0a1b      	lsrs	r3, r3, #8
 80002ee:	704b      	strb	r3, [r1, #1]
 80002f0:	88c3      	ldrh	r3, [r0, #6]
 80002f2:	708b      	strb	r3, [r1, #2]
 80002f4:	79c3      	ldrb	r3, [r0, #7]
 80002f6:	70cb      	strb	r3, [r1, #3]
 80002f8:	1d0a      	adds	r2, r1, #4
 80002fa:	2500      	movs	r5, #0
 80002fc:	6844      	ldr	r4, [r0, #4]
 80002fe:	42a5      	cmp	r5, r4
 8000300:	eba2 0301 	sub.w	r3, r2, r1
 8000304:	f102 0208 	add.w	r2, r2, #8
 8000308:	d21d      	bcs.n	8000346 <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0x62>
 800030a:	6903      	ldr	r3, [r0, #16]
 800030c:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 8000310:	eb03 06c5 	add.w	r6, r3, r5, lsl #3
 8000314:	3501      	adds	r5, #1
 8000316:	6873      	ldr	r3, [r6, #4]
 8000318:	f802 4c08 	strb.w	r4, [r2, #-8]
 800031c:	0a26      	lsrs	r6, r4, #8
 800031e:	f802 6c07 	strb.w	r6, [r2, #-7]
 8000322:	0c26      	lsrs	r6, r4, #16
 8000324:	0e24      	lsrs	r4, r4, #24
 8000326:	f802 4c05 	strb.w	r4, [r2, #-5]
 800032a:	0a1c      	lsrs	r4, r3, #8
 800032c:	f802 3c04 	strb.w	r3, [r2, #-4]
 8000330:	f802 4c03 	strb.w	r4, [r2, #-3]
 8000334:	0c1c      	lsrs	r4, r3, #16
 8000336:	0e1b      	lsrs	r3, r3, #24
 8000338:	f802 6c06 	strb.w	r6, [r2, #-6]
 800033c:	f802 4c02 	strb.w	r4, [r2, #-2]
 8000340:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000344:	e7da      	b.n	80002fc <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0x18>
 8000346:	6942      	ldr	r2, [r0, #20]
 8000348:	54ca      	strb	r2, [r1, r3]
 800034a:	6944      	ldr	r4, [r0, #20]
 800034c:	18ca      	adds	r2, r1, r3
 800034e:	0a24      	lsrs	r4, r4, #8
 8000350:	7054      	strb	r4, [r2, #1]
 8000352:	8ac4      	ldrh	r4, [r0, #22]
 8000354:	7094      	strb	r4, [r2, #2]
 8000356:	7dc4      	ldrb	r4, [r0, #23]
 8000358:	70d4      	strb	r4, [r2, #3]
 800035a:	3304      	adds	r3, #4
 800035c:	440b      	add	r3, r1
 800035e:	2500      	movs	r5, #0
 8000360:	6944      	ldr	r4, [r0, #20]
 8000362:	42a5      	cmp	r5, r4
 8000364:	eba3 0201 	sub.w	r2, r3, r1
 8000368:	f103 0308 	add.w	r3, r3, #8
 800036c:	d21d      	bcs.n	80003aa <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0xc6>
 800036e:	6a02      	ldr	r2, [r0, #32]
 8000370:	f852 4035 	ldr.w	r4, [r2, r5, lsl #3]
 8000374:	eb02 06c5 	add.w	r6, r2, r5, lsl #3
 8000378:	3501      	adds	r5, #1
 800037a:	6872      	ldr	r2, [r6, #4]
 800037c:	f803 4c08 	strb.w	r4, [r3, #-8]
 8000380:	0a26      	lsrs	r6, r4, #8
 8000382:	f803 6c07 	strb.w	r6, [r3, #-7]
 8000386:	0c26      	lsrs	r6, r4, #16
 8000388:	0e24      	lsrs	r4, r4, #24
 800038a:	f803 4c05 	strb.w	r4, [r3, #-5]
 800038e:	0a14      	lsrs	r4, r2, #8
 8000390:	f803 2c04 	strb.w	r2, [r3, #-4]
 8000394:	f803 4c03 	strb.w	r4, [r3, #-3]
 8000398:	0c14      	lsrs	r4, r2, #16
 800039a:	0e12      	lsrs	r2, r2, #24
 800039c:	f803 6c06 	strb.w	r6, [r3, #-6]
 80003a0:	f803 4c02 	strb.w	r4, [r3, #-2]
 80003a4:	f803 2c01 	strb.w	r2, [r3, #-1]
 80003a8:	e7da      	b.n	8000360 <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0x7c>
 80003aa:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80003ac:	548b      	strb	r3, [r1, r2]
 80003ae:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80003b0:	188b      	adds	r3, r1, r2
 80003b2:	0a24      	lsrs	r4, r4, #8
 80003b4:	705c      	strb	r4, [r3, #1]
 80003b6:	8cc4      	ldrh	r4, [r0, #38]	; 0x26
 80003b8:	709c      	strb	r4, [r3, #2]
 80003ba:	f890 4027 	ldrb.w	r4, [r0, #39]	; 0x27
 80003be:	70dc      	strb	r4, [r3, #3]
 80003c0:	3204      	adds	r2, #4
 80003c2:	440a      	add	r2, r1
 80003c4:	2500      	movs	r5, #0
 80003c6:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80003c8:	42a5      	cmp	r5, r4
 80003ca:	eba2 0301 	sub.w	r3, r2, r1
 80003ce:	f102 0208 	add.w	r2, r2, #8
 80003d2:	d21d      	bcs.n	8000410 <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0x12c>
 80003d4:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80003d6:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 80003da:	eb03 06c5 	add.w	r6, r3, r5, lsl #3
 80003de:	3501      	adds	r5, #1
 80003e0:	6873      	ldr	r3, [r6, #4]
 80003e2:	f802 4c08 	strb.w	r4, [r2, #-8]
 80003e6:	0a26      	lsrs	r6, r4, #8
 80003e8:	f802 6c07 	strb.w	r6, [r2, #-7]
 80003ec:	0c26      	lsrs	r6, r4, #16
 80003ee:	0e24      	lsrs	r4, r4, #24
 80003f0:	f802 4c05 	strb.w	r4, [r2, #-5]
 80003f4:	0a1c      	lsrs	r4, r3, #8
 80003f6:	f802 3c04 	strb.w	r3, [r2, #-4]
 80003fa:	f802 4c03 	strb.w	r4, [r2, #-3]
 80003fe:	0c1c      	lsrs	r4, r3, #16
 8000400:	0e1b      	lsrs	r3, r3, #24
 8000402:	f802 6c06 	strb.w	r6, [r2, #-6]
 8000406:	f802 4c02 	strb.w	r4, [r2, #-2]
 800040a:	f802 3c01 	strb.w	r3, [r2, #-1]
 800040e:	e7da      	b.n	80003c6 <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0xe2>
 8000410:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8000412:	54ca      	strb	r2, [r1, r3]
 8000414:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8000416:	18ca      	adds	r2, r1, r3
 8000418:	0a24      	lsrs	r4, r4, #8
 800041a:	7054      	strb	r4, [r2, #1]
 800041c:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 800041e:	7094      	strb	r4, [r2, #2]
 8000420:	f890 4037 	ldrb.w	r4, [r0, #55]	; 0x37
 8000424:	70d4      	strb	r4, [r2, #3]
 8000426:	3304      	adds	r3, #4
 8000428:	440b      	add	r3, r1
 800042a:	2500      	movs	r5, #0
 800042c:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800042e:	42a5      	cmp	r5, r4
 8000430:	eba3 0201 	sub.w	r2, r3, r1
 8000434:	f103 0308 	add.w	r3, r3, #8
 8000438:	d21d      	bcs.n	8000476 <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0x192>
 800043a:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800043c:	f852 4035 	ldr.w	r4, [r2, r5, lsl #3]
 8000440:	eb02 06c5 	add.w	r6, r2, r5, lsl #3
 8000444:	3501      	adds	r5, #1
 8000446:	6872      	ldr	r2, [r6, #4]
 8000448:	f803 4c08 	strb.w	r4, [r3, #-8]
 800044c:	0a26      	lsrs	r6, r4, #8
 800044e:	f803 6c07 	strb.w	r6, [r3, #-7]
 8000452:	0c26      	lsrs	r6, r4, #16
 8000454:	0e24      	lsrs	r4, r4, #24
 8000456:	f803 4c05 	strb.w	r4, [r3, #-5]
 800045a:	0a14      	lsrs	r4, r2, #8
 800045c:	f803 2c04 	strb.w	r2, [r3, #-4]
 8000460:	f803 4c03 	strb.w	r4, [r3, #-3]
 8000464:	0c14      	lsrs	r4, r2, #16
 8000466:	0e12      	lsrs	r2, r2, #24
 8000468:	f803 6c06 	strb.w	r6, [r3, #-6]
 800046c:	f803 4c02 	strb.w	r4, [r3, #-2]
 8000470:	f803 2c01 	strb.w	r2, [r3, #-1]
 8000474:	e7da      	b.n	800042c <trajectory_msgs::JointTrajectoryPoint::serialize(unsigned char*) const+0x148>
 8000476:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8000478:	548b      	strb	r3, [r1, r2]
 800047a:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800047c:	4411      	add	r1, r2
 800047e:	121b      	asrs	r3, r3, #8
 8000480:	704b      	strb	r3, [r1, #1]
 8000482:	f9b0 3046 	ldrsh.w	r3, [r0, #70]	; 0x46
 8000486:	708b      	strb	r3, [r1, #2]
 8000488:	f890 3047 	ldrb.w	r3, [r0, #71]	; 0x47
 800048c:	70cb      	strb	r3, [r1, #3]
 800048e:	6c83      	ldr	r3, [r0, #72]	; 0x48
 8000490:	710b      	strb	r3, [r1, #4]
 8000492:	6c83      	ldr	r3, [r0, #72]	; 0x48
 8000494:	121b      	asrs	r3, r3, #8
 8000496:	714b      	strb	r3, [r1, #5]
 8000498:	f9b0 304a 	ldrsh.w	r3, [r0, #74]	; 0x4a
 800049c:	718b      	strb	r3, [r1, #6]
 800049e:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80004a2:	71cb      	strb	r3, [r1, #7]
 80004a4:	f102 0008 	add.w	r0, r2, #8
 80004a8:	bd70      	pop	{r4, r5, r6, pc}
	...

080004ac <trajectory_msgs::JointTrajectoryPoint::getType()>:
 80004ac:	4800      	ldr	r0, [pc, #0]	; (80004b0 <trajectory_msgs::JointTrajectoryPoint::getType()+0x4>)
 80004ae:	4770      	bx	lr
 80004b0:	08007380 	.word	0x08007380

080004b4 <trajectory_msgs::JointTrajectoryPoint::getMD5()>:
 80004b4:	4800      	ldr	r0, [pc, #0]	; (80004b8 <trajectory_msgs::JointTrajectoryPoint::getMD5()+0x4>)
 80004b6:	4770      	bx	lr
 80004b8:	0800735f 	.word	0x0800735f

080004bc <trajectory_msgs::JointTrajectory::getType()>:
 80004bc:	4800      	ldr	r0, [pc, #0]	; (80004c0 <trajectory_msgs::JointTrajectory::getType()+0x4>)
 80004be:	4770      	bx	lr
 80004c0:	0800733f 	.word	0x0800733f

080004c4 <trajectory_msgs::JointTrajectory::getMD5()>:
 80004c4:	4800      	ldr	r0, [pc, #0]	; (80004c8 <trajectory_msgs::JointTrajectory::getMD5()+0x4>)
 80004c6:	4770      	bx	lr
 80004c8:	0800731e 	.word	0x0800731e

080004cc <sensor_msgs::JointState::getType()>:
 80004cc:	4800      	ldr	r0, [pc, #0]	; (80004d0 <sensor_msgs::JointState::getType()+0x4>)
 80004ce:	4770      	bx	lr
 80004d0:	0800725c 	.word	0x0800725c

080004d4 <sensor_msgs::JointState::getMD5()>:
 80004d4:	4800      	ldr	r0, [pc, #0]	; (80004d8 <sensor_msgs::JointState::getMD5()+0x4>)
 80004d6:	4770      	bx	lr
 80004d8:	0800723b 	.word	0x0800723b

080004dc <ros::Subscriber<trajectory_msgs::JointTrajectory, void>::getEndpointType()>:
 80004dc:	f8d0 0094 	ldr.w	r0, [r0, #148]	; 0x94
 80004e0:	4770      	bx	lr
	...

080004e4 <ros::Subscriber<trajectory_msgs::JointTrajectory, void>::getMsgType()>:
 80004e4:	4800      	ldr	r0, [pc, #0]	; (80004e8 <ros::Subscriber<trajectory_msgs::JointTrajectory, void>::getMsgType()+0x4>)
 80004e6:	4770      	bx	lr
 80004e8:	0800733f 	.word	0x0800733f

080004ec <ros::Subscriber<trajectory_msgs::JointTrajectory, void>::getMsgMD5()>:
 80004ec:	4800      	ldr	r0, [pc, #0]	; (80004f0 <ros::Subscriber<trajectory_msgs::JointTrajectory, void>::getMsgMD5()+0x4>)
 80004ee:	4770      	bx	lr
 80004f0:	0800731e 	.word	0x0800731e

080004f4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 80004f4:	f890 05e8 	ldrb.w	r0, [r0, #1512]	; 0x5e8
 80004f8:	4770      	bx	lr

080004fa <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)>:
 80004fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80004fe:	6843      	ldr	r3, [r0, #4]
 8000500:	680e      	ldr	r6, [r1, #0]
 8000502:	429e      	cmp	r6, r3
 8000504:	b0b7      	sub	sp, #220	; 0xdc
 8000506:	4604      	mov	r4, r0
 8000508:	460d      	mov	r5, r1
 800050a:	d904      	bls.n	8000516 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x1c>
 800050c:	00f1      	lsls	r1, r6, #3
 800050e:	6900      	ldr	r0, [r0, #16]
 8000510:	f006 fbe4 	bl	8006cdc <realloc>
 8000514:	6120      	str	r0, [r4, #16]
 8000516:	6066      	str	r6, [r4, #4]
 8000518:	1d29      	adds	r1, r5, #4
 800051a:	2000      	movs	r0, #0
 800051c:	f104 0e08 	add.w	lr, r4, #8
 8000520:	6862      	ldr	r2, [r4, #4]
 8000522:	4290      	cmp	r0, r2
 8000524:	eba1 0305 	sub.w	r3, r1, r5
 8000528:	f101 0108 	add.w	r1, r1, #8
 800052c:	d262      	bcs.n	80005f4 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0xfa>
 800052e:	f811 2c07 	ldrb.w	r2, [r1, #-7]
 8000532:	0213      	lsls	r3, r2, #8
 8000534:	f811 2c06 	ldrb.w	r2, [r1, #-6]
 8000538:	9306      	str	r3, [sp, #24]
 800053a:	2600      	movs	r6, #0
 800053c:	0413      	lsls	r3, r2, #16
 800053e:	9609      	str	r6, [sp, #36]	; 0x24
 8000540:	9607      	str	r6, [sp, #28]
 8000542:	9308      	str	r3, [sp, #32]
 8000544:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8000548:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
 800054c:	4316      	orrs	r6, r2
 800054e:	f811 2c08 	ldrb.w	r2, [r1, #-8]
 8000552:	431f      	orrs	r7, r3
 8000554:	ea42 0806 	orr.w	r8, r2, r6
 8000558:	2300      	movs	r3, #0
 800055a:	f811 6c05 	ldrb.w	r6, [r1, #-5]
 800055e:	ea43 0907 	orr.w	r9, r3, r7
 8000562:	2300      	movs	r3, #0
 8000564:	930b      	str	r3, [sp, #44]	; 0x2c
 8000566:	0633      	lsls	r3, r6, #24
 8000568:	930a      	str	r3, [sp, #40]	; 0x28
 800056a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800056e:	4646      	mov	r6, r8
 8000570:	4316      	orrs	r6, r2
 8000572:	4632      	mov	r2, r6
 8000574:	f811 6c04 	ldrb.w	r6, [r1, #-4]
 8000578:	9601      	str	r6, [sp, #4]
 800057a:	464f      	mov	r7, r9
 800057c:	2600      	movs	r6, #0
 800057e:	431f      	orrs	r7, r3
 8000580:	9600      	str	r6, [sp, #0]
 8000582:	463b      	mov	r3, r7
 8000584:	e9dd 6700 	ldrd	r6, r7, [sp]
 8000588:	4316      	orrs	r6, r2
 800058a:	4632      	mov	r2, r6
 800058c:	f811 6c03 	ldrb.w	r6, [r1, #-3]
 8000590:	0236      	lsls	r6, r6, #8
 8000592:	961f      	str	r6, [sp, #124]	; 0x7c
 8000594:	2600      	movs	r6, #0
 8000596:	431f      	orrs	r7, r3
 8000598:	961e      	str	r6, [sp, #120]	; 0x78
 800059a:	463b      	mov	r3, r7
 800059c:	e9dd 671e 	ldrd	r6, r7, [sp, #120]	; 0x78
 80005a0:	4316      	orrs	r6, r2
 80005a2:	4632      	mov	r2, r6
 80005a4:	f811 6c02 	ldrb.w	r6, [r1, #-2]
 80005a8:	0436      	lsls	r6, r6, #16
 80005aa:	9621      	str	r6, [sp, #132]	; 0x84
 80005ac:	2600      	movs	r6, #0
 80005ae:	431f      	orrs	r7, r3
 80005b0:	9620      	str	r6, [sp, #128]	; 0x80
 80005b2:	463b      	mov	r3, r7
 80005b4:	e9dd 6720 	ldrd	r6, r7, [sp, #128]	; 0x80
 80005b8:	4316      	orrs	r6, r2
 80005ba:	4632      	mov	r2, r6
 80005bc:	f811 6c01 	ldrb.w	r6, [r1, #-1]
 80005c0:	0636      	lsls	r6, r6, #24
 80005c2:	9623      	str	r6, [sp, #140]	; 0x8c
 80005c4:	2600      	movs	r6, #0
 80005c6:	431f      	orrs	r7, r3
 80005c8:	9622      	str	r6, [sp, #136]	; 0x88
 80005ca:	463b      	mov	r3, r7
 80005cc:	e9dd 6722 	ldrd	r6, r7, [sp, #136]	; 0x88
 80005d0:	4316      	orrs	r6, r2
 80005d2:	431f      	orrs	r7, r3
 80005d4:	4632      	mov	r2, r6
 80005d6:	463b      	mov	r3, r7
 80005d8:	e9c4 2302 	strd	r2, r3, [r4, #8]
 80005dc:	6922      	ldr	r2, [r4, #16]
 80005de:	f8de 3000 	ldr.w	r3, [lr]
 80005e2:	f842 3030 	str.w	r3, [r2, r0, lsl #3]
 80005e6:	eb02 06c0 	add.w	r6, r2, r0, lsl #3
 80005ea:	f8de 3004 	ldr.w	r3, [lr, #4]
 80005ee:	6073      	str	r3, [r6, #4]
 80005f0:	3001      	adds	r0, #1
 80005f2:	e795      	b.n	8000520 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x26>
 80005f4:	18e9      	adds	r1, r5, r3
 80005f6:	5ce8      	ldrb	r0, [r5, r3]
 80005f8:	788a      	ldrb	r2, [r1, #2]
 80005fa:	784e      	ldrb	r6, [r1, #1]
 80005fc:	0412      	lsls	r2, r2, #16
 80005fe:	ea42 2606 	orr.w	r6, r2, r6, lsl #8
 8000602:	78ca      	ldrb	r2, [r1, #3]
 8000604:	4306      	orrs	r6, r0
 8000606:	1d1f      	adds	r7, r3, #4
 8000608:	6963      	ldr	r3, [r4, #20]
 800060a:	ea46 6602 	orr.w	r6, r6, r2, lsl #24
 800060e:	429e      	cmp	r6, r3
 8000610:	d904      	bls.n	800061c <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x122>
 8000612:	00f1      	lsls	r1, r6, #3
 8000614:	6a20      	ldr	r0, [r4, #32]
 8000616:	f006 fb61 	bl	8006cdc <realloc>
 800061a:	6220      	str	r0, [r4, #32]
 800061c:	6166      	str	r6, [r4, #20]
 800061e:	19eb      	adds	r3, r5, r7
 8000620:	2200      	movs	r2, #0
 8000622:	f104 0e18 	add.w	lr, r4, #24
 8000626:	6961      	ldr	r1, [r4, #20]
 8000628:	428a      	cmp	r2, r1
 800062a:	eba3 0005 	sub.w	r0, r3, r5
 800062e:	f103 0308 	add.w	r3, r3, #8
 8000632:	d260      	bcs.n	80006f6 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x1fc>
 8000634:	f813 0c07 	ldrb.w	r0, [r3, #-7]
 8000638:	0201      	lsls	r1, r0, #8
 800063a:	f813 0c06 	ldrb.w	r0, [r3, #-6]
 800063e:	910c      	str	r1, [sp, #48]	; 0x30
 8000640:	2600      	movs	r6, #0
 8000642:	0401      	lsls	r1, r0, #16
 8000644:	960f      	str	r6, [sp, #60]	; 0x3c
 8000646:	960d      	str	r6, [sp, #52]	; 0x34
 8000648:	910e      	str	r1, [sp, #56]	; 0x38
 800064a:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800064e:	e9dd 670c 	ldrd	r6, r7, [sp, #48]	; 0x30
 8000652:	4306      	orrs	r6, r0
 8000654:	f813 0c08 	ldrb.w	r0, [r3, #-8]
 8000658:	430f      	orrs	r7, r1
 800065a:	ea40 0806 	orr.w	r8, r0, r6
 800065e:	2100      	movs	r1, #0
 8000660:	f813 6c05 	ldrb.w	r6, [r3, #-5]
 8000664:	ea41 0907 	orr.w	r9, r1, r7
 8000668:	2100      	movs	r1, #0
 800066a:	9111      	str	r1, [sp, #68]	; 0x44
 800066c:	0631      	lsls	r1, r6, #24
 800066e:	f813 6c04 	ldrb.w	r6, [r3, #-4]
 8000672:	9603      	str	r6, [sp, #12]
 8000674:	9110      	str	r1, [sp, #64]	; 0x40
 8000676:	2600      	movs	r6, #0
 8000678:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800067c:	9602      	str	r6, [sp, #8]
 800067e:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8000682:	ea40 0008 	orr.w	r0, r0, r8
 8000686:	4306      	orrs	r6, r0
 8000688:	4630      	mov	r0, r6
 800068a:	f813 6c03 	ldrb.w	r6, [r3, #-3]
 800068e:	0236      	lsls	r6, r6, #8
 8000690:	9625      	str	r6, [sp, #148]	; 0x94
 8000692:	ea41 0109 	orr.w	r1, r1, r9
 8000696:	2600      	movs	r6, #0
 8000698:	430f      	orrs	r7, r1
 800069a:	9624      	str	r6, [sp, #144]	; 0x90
 800069c:	4639      	mov	r1, r7
 800069e:	e9dd 6724 	ldrd	r6, r7, [sp, #144]	; 0x90
 80006a2:	4306      	orrs	r6, r0
 80006a4:	4630      	mov	r0, r6
 80006a6:	f813 6c02 	ldrb.w	r6, [r3, #-2]
 80006aa:	0436      	lsls	r6, r6, #16
 80006ac:	9627      	str	r6, [sp, #156]	; 0x9c
 80006ae:	2600      	movs	r6, #0
 80006b0:	430f      	orrs	r7, r1
 80006b2:	9626      	str	r6, [sp, #152]	; 0x98
 80006b4:	4639      	mov	r1, r7
 80006b6:	e9dd 6726 	ldrd	r6, r7, [sp, #152]	; 0x98
 80006ba:	4306      	orrs	r6, r0
 80006bc:	4630      	mov	r0, r6
 80006be:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 80006c2:	0636      	lsls	r6, r6, #24
 80006c4:	9629      	str	r6, [sp, #164]	; 0xa4
 80006c6:	2600      	movs	r6, #0
 80006c8:	430f      	orrs	r7, r1
 80006ca:	9628      	str	r6, [sp, #160]	; 0xa0
 80006cc:	4639      	mov	r1, r7
 80006ce:	e9dd 6728 	ldrd	r6, r7, [sp, #160]	; 0xa0
 80006d2:	4306      	orrs	r6, r0
 80006d4:	430f      	orrs	r7, r1
 80006d6:	4630      	mov	r0, r6
 80006d8:	4639      	mov	r1, r7
 80006da:	e9c4 0106 	strd	r0, r1, [r4, #24]
 80006de:	6a20      	ldr	r0, [r4, #32]
 80006e0:	f8de 1000 	ldr.w	r1, [lr]
 80006e4:	f840 1032 	str.w	r1, [r0, r2, lsl #3]
 80006e8:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 80006ec:	f8de 1004 	ldr.w	r1, [lr, #4]
 80006f0:	6071      	str	r1, [r6, #4]
 80006f2:	3201      	adds	r2, #1
 80006f4:	e797      	b.n	8000626 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x12c>
 80006f6:	182a      	adds	r2, r5, r0
 80006f8:	5c29      	ldrb	r1, [r5, r0]
 80006fa:	7893      	ldrb	r3, [r2, #2]
 80006fc:	7856      	ldrb	r6, [r2, #1]
 80006fe:	041b      	lsls	r3, r3, #16
 8000700:	ea43 2606 	orr.w	r6, r3, r6, lsl #8
 8000704:	78d3      	ldrb	r3, [r2, #3]
 8000706:	430e      	orrs	r6, r1
 8000708:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
 800070c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800070e:	429e      	cmp	r6, r3
 8000710:	f100 0704 	add.w	r7, r0, #4
 8000714:	d904      	bls.n	8000720 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x226>
 8000716:	00f1      	lsls	r1, r6, #3
 8000718:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800071a:	f006 fadf 	bl	8006cdc <realloc>
 800071e:	6320      	str	r0, [r4, #48]	; 0x30
 8000720:	6266      	str	r6, [r4, #36]	; 0x24
 8000722:	19eb      	adds	r3, r5, r7
 8000724:	2200      	movs	r2, #0
 8000726:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800072a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800072c:	428a      	cmp	r2, r1
 800072e:	eba3 0005 	sub.w	r0, r3, r5
 8000732:	f103 0308 	add.w	r3, r3, #8
 8000736:	d260      	bcs.n	80007fa <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x300>
 8000738:	f813 0c07 	ldrb.w	r0, [r3, #-7]
 800073c:	0201      	lsls	r1, r0, #8
 800073e:	f813 0c06 	ldrb.w	r0, [r3, #-6]
 8000742:	9112      	str	r1, [sp, #72]	; 0x48
 8000744:	2600      	movs	r6, #0
 8000746:	0401      	lsls	r1, r0, #16
 8000748:	9615      	str	r6, [sp, #84]	; 0x54
 800074a:	9613      	str	r6, [sp, #76]	; 0x4c
 800074c:	9114      	str	r1, [sp, #80]	; 0x50
 800074e:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
 8000752:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 8000756:	4306      	orrs	r6, r0
 8000758:	f813 0c08 	ldrb.w	r0, [r3, #-8]
 800075c:	430f      	orrs	r7, r1
 800075e:	ea40 0806 	orr.w	r8, r0, r6
 8000762:	2100      	movs	r1, #0
 8000764:	f813 6c05 	ldrb.w	r6, [r3, #-5]
 8000768:	ea41 0907 	orr.w	r9, r1, r7
 800076c:	2100      	movs	r1, #0
 800076e:	9117      	str	r1, [sp, #92]	; 0x5c
 8000770:	0631      	lsls	r1, r6, #24
 8000772:	f813 6c04 	ldrb.w	r6, [r3, #-4]
 8000776:	9605      	str	r6, [sp, #20]
 8000778:	9116      	str	r1, [sp, #88]	; 0x58
 800077a:	2600      	movs	r6, #0
 800077c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
 8000780:	9604      	str	r6, [sp, #16]
 8000782:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
 8000786:	ea40 0008 	orr.w	r0, r0, r8
 800078a:	4306      	orrs	r6, r0
 800078c:	4630      	mov	r0, r6
 800078e:	f813 6c03 	ldrb.w	r6, [r3, #-3]
 8000792:	0236      	lsls	r6, r6, #8
 8000794:	962b      	str	r6, [sp, #172]	; 0xac
 8000796:	ea41 0109 	orr.w	r1, r1, r9
 800079a:	2600      	movs	r6, #0
 800079c:	430f      	orrs	r7, r1
 800079e:	962a      	str	r6, [sp, #168]	; 0xa8
 80007a0:	4639      	mov	r1, r7
 80007a2:	e9dd 672a 	ldrd	r6, r7, [sp, #168]	; 0xa8
 80007a6:	4306      	orrs	r6, r0
 80007a8:	4630      	mov	r0, r6
 80007aa:	f813 6c02 	ldrb.w	r6, [r3, #-2]
 80007ae:	0436      	lsls	r6, r6, #16
 80007b0:	962d      	str	r6, [sp, #180]	; 0xb4
 80007b2:	2600      	movs	r6, #0
 80007b4:	430f      	orrs	r7, r1
 80007b6:	962c      	str	r6, [sp, #176]	; 0xb0
 80007b8:	4639      	mov	r1, r7
 80007ba:	e9dd 672c 	ldrd	r6, r7, [sp, #176]	; 0xb0
 80007be:	4306      	orrs	r6, r0
 80007c0:	4630      	mov	r0, r6
 80007c2:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 80007c6:	0636      	lsls	r6, r6, #24
 80007c8:	962f      	str	r6, [sp, #188]	; 0xbc
 80007ca:	2600      	movs	r6, #0
 80007cc:	430f      	orrs	r7, r1
 80007ce:	962e      	str	r6, [sp, #184]	; 0xb8
 80007d0:	4639      	mov	r1, r7
 80007d2:	e9dd 672e 	ldrd	r6, r7, [sp, #184]	; 0xb8
 80007d6:	4306      	orrs	r6, r0
 80007d8:	430f      	orrs	r7, r1
 80007da:	4630      	mov	r0, r6
 80007dc:	4639      	mov	r1, r7
 80007de:	e9c4 010a 	strd	r0, r1, [r4, #40]	; 0x28
 80007e2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80007e4:	f8de 1000 	ldr.w	r1, [lr]
 80007e8:	f840 1032 	str.w	r1, [r0, r2, lsl #3]
 80007ec:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 80007f0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80007f4:	6071      	str	r1, [r6, #4]
 80007f6:	3201      	adds	r2, #1
 80007f8:	e797      	b.n	800072a <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x230>
 80007fa:	182a      	adds	r2, r5, r0
 80007fc:	5c29      	ldrb	r1, [r5, r0]
 80007fe:	7893      	ldrb	r3, [r2, #2]
 8000800:	7856      	ldrb	r6, [r2, #1]
 8000802:	041b      	lsls	r3, r3, #16
 8000804:	ea43 2606 	orr.w	r6, r3, r6, lsl #8
 8000808:	78d3      	ldrb	r3, [r2, #3]
 800080a:	430e      	orrs	r6, r1
 800080c:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
 8000810:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000812:	429e      	cmp	r6, r3
 8000814:	f100 0704 	add.w	r7, r0, #4
 8000818:	d904      	bls.n	8000824 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x32a>
 800081a:	00f1      	lsls	r1, r6, #3
 800081c:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800081e:	f006 fa5d 	bl	8006cdc <realloc>
 8000822:	6420      	str	r0, [r4, #64]	; 0x40
 8000824:	6366      	str	r6, [r4, #52]	; 0x34
 8000826:	19eb      	adds	r3, r5, r7
 8000828:	2200      	movs	r2, #0
 800082a:	f104 0e38 	add.w	lr, r4, #56	; 0x38
 800082e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000830:	428a      	cmp	r2, r1
 8000832:	eba3 0005 	sub.w	r0, r3, r5
 8000836:	f103 0308 	add.w	r3, r3, #8
 800083a:	d25d      	bcs.n	80008f8 <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x3fe>
 800083c:	f813 0c07 	ldrb.w	r0, [r3, #-7]
 8000840:	f813 bc04 	ldrb.w	r11, [r3, #-4]
 8000844:	0201      	lsls	r1, r0, #8
 8000846:	f813 0c06 	ldrb.w	r0, [r3, #-6]
 800084a:	9118      	str	r1, [sp, #96]	; 0x60
 800084c:	2600      	movs	r6, #0
 800084e:	0401      	lsls	r1, r0, #16
 8000850:	961b      	str	r6, [sp, #108]	; 0x6c
 8000852:	9619      	str	r6, [sp, #100]	; 0x64
 8000854:	911a      	str	r1, [sp, #104]	; 0x68
 8000856:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
 800085a:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
 800085e:	4306      	orrs	r6, r0
 8000860:	f813 0c08 	ldrb.w	r0, [r3, #-8]
 8000864:	430f      	orrs	r7, r1
 8000866:	ea40 0806 	orr.w	r8, r0, r6
 800086a:	2100      	movs	r1, #0
 800086c:	f813 6c05 	ldrb.w	r6, [r3, #-5]
 8000870:	ea41 0907 	orr.w	r9, r1, r7
 8000874:	2100      	movs	r1, #0
 8000876:	911d      	str	r1, [sp, #116]	; 0x74
 8000878:	0631      	lsls	r1, r6, #24
 800087a:	f813 6c03 	ldrb.w	r6, [r3, #-3]
 800087e:	911c      	str	r1, [sp, #112]	; 0x70
 8000880:	f04f 0a00 	mov.w	r10, #0
 8000884:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
 8000888:	0236      	lsls	r6, r6, #8
 800088a:	9631      	str	r6, [sp, #196]	; 0xc4
 800088c:	f8cd a0c0 	str.w	r10, [sp, #192]	; 0xc0
 8000890:	e9dd 6730 	ldrd	r6, r7, [sp, #192]	; 0xc0
 8000894:	ea40 0008 	orr.w	r0, r0, r8
 8000898:	ea40 000a 	orr.w	r0, r0, r10
 800089c:	4306      	orrs	r6, r0
 800089e:	4630      	mov	r0, r6
 80008a0:	f813 6c02 	ldrb.w	r6, [r3, #-2]
 80008a4:	f8cd a0c8 	str.w	r10, [sp, #200]	; 0xc8
 80008a8:	ea41 0109 	orr.w	r1, r1, r9
 80008ac:	ea41 010b 	orr.w	r1, r1, r11
 80008b0:	0436      	lsls	r6, r6, #16
 80008b2:	430f      	orrs	r7, r1
 80008b4:	9633      	str	r6, [sp, #204]	; 0xcc
 80008b6:	4639      	mov	r1, r7
 80008b8:	e9dd 6732 	ldrd	r6, r7, [sp, #200]	; 0xc8
 80008bc:	4306      	orrs	r6, r0
 80008be:	4630      	mov	r0, r6
 80008c0:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 80008c4:	f8cd a0d0 	str.w	r10, [sp, #208]	; 0xd0
 80008c8:	0636      	lsls	r6, r6, #24
 80008ca:	430f      	orrs	r7, r1
 80008cc:	9635      	str	r6, [sp, #212]	; 0xd4
 80008ce:	4639      	mov	r1, r7
 80008d0:	e9dd 6734 	ldrd	r6, r7, [sp, #208]	; 0xd0
 80008d4:	4306      	orrs	r6, r0
 80008d6:	430f      	orrs	r7, r1
 80008d8:	4630      	mov	r0, r6
 80008da:	4639      	mov	r1, r7
 80008dc:	e9c4 010e 	strd	r0, r1, [r4, #56]	; 0x38
 80008e0:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80008e2:	f8de 1000 	ldr.w	r1, [lr]
 80008e6:	f840 1032 	str.w	r1, [r0, r2, lsl #3]
 80008ea:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 80008ee:	f8de 1004 	ldr.w	r1, [lr, #4]
 80008f2:	6071      	str	r1, [r6, #4]
 80008f4:	3201      	adds	r2, #1
 80008f6:	e79a      	b.n	800082e <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)+0x334>
 80008f8:	5c2b      	ldrb	r3, [r5, r0]
 80008fa:	6463      	str	r3, [r4, #68]	; 0x44
 80008fc:	4405      	add	r5, r0
 80008fe:	3008      	adds	r0, #8
 8000900:	786a      	ldrb	r2, [r5, #1]
 8000902:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000906:	6463      	str	r3, [r4, #68]	; 0x44
 8000908:	78aa      	ldrb	r2, [r5, #2]
 800090a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800090e:	6463      	str	r3, [r4, #68]	; 0x44
 8000910:	78ea      	ldrb	r2, [r5, #3]
 8000912:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000916:	6463      	str	r3, [r4, #68]	; 0x44
 8000918:	792b      	ldrb	r3, [r5, #4]
 800091a:	64a3      	str	r3, [r4, #72]	; 0x48
 800091c:	796a      	ldrb	r2, [r5, #5]
 800091e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000922:	64a3      	str	r3, [r4, #72]	; 0x48
 8000924:	79aa      	ldrb	r2, [r5, #6]
 8000926:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800092a:	64a3      	str	r3, [r4, #72]	; 0x48
 800092c:	79ea      	ldrb	r2, [r5, #7]
 800092e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000932:	64a3      	str	r3, [r4, #72]	; 0x48
 8000934:	b037      	add	sp, #220	; 0xdc
 8000936:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}

0800093a <ros::Publisher::publish(ros::Msg const*)>:
 800093a:	68c3      	ldr	r3, [r0, #12]
 800093c:	681a      	ldr	r2, [r3, #0]
 800093e:	b410      	push	{r4}
 8000940:	6814      	ldr	r4, [r2, #0]
 8000942:	460a      	mov	r2, r1
 8000944:	6881      	ldr	r1, [r0, #8]
 8000946:	4618      	mov	r0, r3
 8000948:	4623      	mov	r3, r4
 800094a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800094e:	4718      	bx	r3

08000950 <messageCb(trajectory_msgs::JointTrajectory const&)>:
 8000950:	4a29      	ldr	r2, [pc, #164]	; (80009f8 <messageCb(trajectory_msgs::JointTrajectory const&)+0xa8>)
 8000952:	6853      	ldr	r3, [r2, #4]
 8000954:	6819      	ldr	r1, [r3, #0]
 8000956:	6813      	ldr	r3, [r2, #0]
 8000958:	4219      	tst	r1, r3
 800095a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 800095e:	bf0c      	ite	eq
 8000960:	6892      	ldreq	r2, [r2, #8]
 8000962:	68d2      	ldrne	r2, [r2, #12]
 8000964:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8000a04 <messageCb(trajectory_msgs::JointTrajectory const&)+0xb4>
 8000968:	4c24      	ldr	r4, [pc, #144]	; (80009fc <messageCb(trajectory_msgs::JointTrajectory const&)+0xac>)
 800096a:	bf18      	it	ne
 800096c:	041b      	lslne	r3, r3, #16
 800096e:	6013      	str	r3, [r2, #0]
 8000970:	f898 3000 	ldrb.w	r3, [r8]
 8000974:	4606      	mov	r6, r0
 8000976:	b99b      	cbnz	r3, 80009a0 <messageCb(trajectory_msgs::JointTrajectory const&)+0x50>
 8000978:	6985      	ldr	r5, [r0, #24]
 800097a:	6265      	str	r5, [r4, #36]	; 0x24
 800097c:	00ef      	lsls	r7, r5, #3
 800097e:	4638      	mov	r0, r7
 8000980:	f005 feb0 	bl	80066e4 <malloc>
 8000984:	6320      	str	r0, [r4, #48]	; 0x30
 8000986:	4638      	mov	r0, r7
 8000988:	6365      	str	r5, [r4, #52]	; 0x34
 800098a:	f005 feab 	bl	80066e4 <malloc>
 800098e:	6420      	str	r0, [r4, #64]	; 0x40
 8000990:	4638      	mov	r0, r7
 8000992:	6465      	str	r5, [r4, #68]	; 0x44
 8000994:	f005 fea6 	bl	80066e4 <malloc>
 8000998:	2301      	movs	r3, #1
 800099a:	6520      	str	r0, [r4, #80]	; 0x50
 800099c:	f888 3000 	strb.w	r3, [r8]
 80009a0:	f8d4 9024 	ldr.w	r9, [r4, #36]	; 0x24
 80009a4:	f8d4 8030 	ldr.w	r8, [r4, #48]	; 0x30
 80009a8:	6c27      	ldr	r7, [r4, #64]	; 0x40
 80009aa:	f8d4 a050 	ldr.w	r10, [r4, #80]	; 0x50
 80009ae:	2300      	movs	r3, #0
 80009b0:	b2d8      	uxtb	r0, r3
 80009b2:	4581      	cmp	r9, r0
 80009b4:	f103 0501 	add.w	r5, r3, #1
 80009b8:	d918      	bls.n	80009ec <messageCb(trajectory_msgs::JointTrajectory const&)+0x9c>
 80009ba:	6fb3      	ldr	r3, [r6, #120]	; 0x78
 80009bc:	691b      	ldr	r3, [r3, #16]
 80009be:	00c4      	lsls	r4, r0, #3
 80009c0:	4423      	add	r3, r4
 80009c2:	ed93 7b00 	vldr	d7, [r3]
 80009c6:	eb08 0304 	add.w	r3, r8, r4
 80009ca:	ed83 7b00 	vstr	d7, [r3]
 80009ce:	f005 fc6b 	bl	80062a8 <__aeabi_i2d>
 80009d2:	eb07 0e04 	add.w	lr, r7, r4
 80009d6:	460b      	mov	r3, r1
 80009d8:	4602      	mov	r2, r0
 80009da:	e9ce 2300 	strd	r2, r3, [lr]
 80009de:	f005 fb17 	bl	8006010 <__adddf3>
 80009e2:	4454      	add	r4, r10
 80009e4:	e9c4 0100 	strd	r0, r1, [r4]
 80009e8:	462b      	mov	r3, r5
 80009ea:	e7e1      	b.n	80009b0 <messageCb(trajectory_msgs::JointTrajectory const&)+0x60>
 80009ec:	4903      	ldr	r1, [pc, #12]	; (80009fc <messageCb(trajectory_msgs::JointTrajectory const&)+0xac>)
 80009ee:	4804      	ldr	r0, [pc, #16]	; (8000a00 <messageCb(trajectory_msgs::JointTrajectory const&)+0xb0>)
 80009f0:	f7ff ffa3 	bl	800093a <ros::Publisher::publish(ros::Msg const*)>
 80009f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80009f8:	200002f0 	.word	0x200002f0
 80009fc:	20000298 	.word	0x20000298
 8000a00:	20000280 	.word	0x20000280
 8000a04:	2000027c 	.word	0x2000027c

08000a08 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 8000a08:	3801      	subs	r0, #1
 8000a0a:	2300      	movs	r3, #0
 8000a0c:	fa21 f203 	lsr.w	r2, r1, r3
 8000a10:	3308      	adds	r3, #8
 8000a12:	2b20      	cmp	r3, #32
 8000a14:	f800 2f01 	strb.w	r2, [r0, #1]!
 8000a18:	d1f8      	bne.n	8000a0c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 8000a1a:	4770      	bx	lr

08000a1c <std_msgs::Header::serialize(unsigned char*) const>:
 8000a1c:	6843      	ldr	r3, [r0, #4]
 8000a1e:	b570      	push	{r4, r5, r6, lr}
 8000a20:	700b      	strb	r3, [r1, #0]
 8000a22:	6843      	ldr	r3, [r0, #4]
 8000a24:	0a1b      	lsrs	r3, r3, #8
 8000a26:	704b      	strb	r3, [r1, #1]
 8000a28:	88c3      	ldrh	r3, [r0, #6]
 8000a2a:	708b      	strb	r3, [r1, #2]
 8000a2c:	79c3      	ldrb	r3, [r0, #7]
 8000a2e:	70cb      	strb	r3, [r1, #3]
 8000a30:	6883      	ldr	r3, [r0, #8]
 8000a32:	710b      	strb	r3, [r1, #4]
 8000a34:	6883      	ldr	r3, [r0, #8]
 8000a36:	0a1b      	lsrs	r3, r3, #8
 8000a38:	714b      	strb	r3, [r1, #5]
 8000a3a:	8943      	ldrh	r3, [r0, #10]
 8000a3c:	718b      	strb	r3, [r1, #6]
 8000a3e:	7ac3      	ldrb	r3, [r0, #11]
 8000a40:	71cb      	strb	r3, [r1, #7]
 8000a42:	68c3      	ldr	r3, [r0, #12]
 8000a44:	720b      	strb	r3, [r1, #8]
 8000a46:	68c3      	ldr	r3, [r0, #12]
 8000a48:	0a1b      	lsrs	r3, r3, #8
 8000a4a:	724b      	strb	r3, [r1, #9]
 8000a4c:	89c3      	ldrh	r3, [r0, #14]
 8000a4e:	728b      	strb	r3, [r1, #10]
 8000a50:	7bc3      	ldrb	r3, [r0, #15]
 8000a52:	72cb      	strb	r3, [r1, #11]
 8000a54:	4605      	mov	r5, r0
 8000a56:	6900      	ldr	r0, [r0, #16]
 8000a58:	460c      	mov	r4, r1
 8000a5a:	f006 f99a 	bl	8006d92 <strlen>
 8000a5e:	4606      	mov	r6, r0
 8000a60:	4601      	mov	r1, r0
 8000a62:	f104 000c 	add.w	r0, r4, #12
 8000a66:	f7ff ffcf 	bl	8000a08 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000a6a:	4632      	mov	r2, r6
 8000a6c:	6929      	ldr	r1, [r5, #16]
 8000a6e:	f104 0010 	add.w	r0, r4, #16
 8000a72:	f005 fe9d 	bl	80067b0 <memcpy>
 8000a76:	f106 0010 	add.w	r0, r6, #16
 8000a7a:	bd70      	pop	{r4, r5, r6, pc}

08000a7c <sensor_msgs::JointState::serialize(unsigned char*) const>:
 8000a7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a80:	4604      	mov	r4, r0
 8000a82:	3004      	adds	r0, #4
 8000a84:	460d      	mov	r5, r1
 8000a86:	f7ff ffc9 	bl	8000a1c <std_msgs::Header::serialize(unsigned char*) const>
 8000a8a:	69a3      	ldr	r3, [r4, #24]
 8000a8c:	542b      	strb	r3, [r5, r0]
 8000a8e:	69a2      	ldr	r2, [r4, #24]
 8000a90:	182b      	adds	r3, r5, r0
 8000a92:	0a12      	lsrs	r2, r2, #8
 8000a94:	705a      	strb	r2, [r3, #1]
 8000a96:	8b62      	ldrh	r2, [r4, #26]
 8000a98:	709a      	strb	r2, [r3, #2]
 8000a9a:	7ee2      	ldrb	r2, [r4, #27]
 8000a9c:	70da      	strb	r2, [r3, #3]
 8000a9e:	3004      	adds	r0, #4
 8000aa0:	2700      	movs	r7, #0
 8000aa2:	69a3      	ldr	r3, [r4, #24]
 8000aa4:	429f      	cmp	r7, r3
 8000aa6:	eb05 0800 	add.w	r8, r5, r0
 8000aaa:	f100 0904 	add.w	r9, r0, #4
 8000aae:	d215      	bcs.n	8000adc <sensor_msgs::JointState::serialize(unsigned char*) const+0x60>
 8000ab0:	6a23      	ldr	r3, [r4, #32]
 8000ab2:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8000ab6:	f006 f96c 	bl	8006d92 <strlen>
 8000aba:	4606      	mov	r6, r0
 8000abc:	4601      	mov	r1, r0
 8000abe:	4640      	mov	r0, r8
 8000ac0:	f7ff ffa2 	bl	8000a08 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000ac4:	6a23      	ldr	r3, [r4, #32]
 8000ac6:	4632      	mov	r2, r6
 8000ac8:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 8000acc:	eb05 0009 	add.w	r0, r5, r9
 8000ad0:	f005 fe6e 	bl	80067b0 <memcpy>
 8000ad4:	3701      	adds	r7, #1
 8000ad6:	eb06 0009 	add.w	r0, r6, r9
 8000ada:	e7e2      	b.n	8000aa2 <sensor_msgs::JointState::serialize(unsigned char*) const+0x26>
 8000adc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000ade:	542b      	strb	r3, [r5, r0]
 8000ae0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000ae2:	0a1b      	lsrs	r3, r3, #8
 8000ae4:	f888 3001 	strb.w	r3, [r8, #1]
 8000ae8:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8000aea:	f888 3002 	strb.w	r3, [r8, #2]
 8000aee:	f894 3027 	ldrb.w	r3, [r4, #39]	; 0x27
 8000af2:	f888 3003 	strb.w	r3, [r8, #3]
 8000af6:	2000      	movs	r0, #0
 8000af8:	eb05 0309 	add.w	r3, r5, r9
 8000afc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8000afe:	4288      	cmp	r0, r1
 8000b00:	eba3 0205 	sub.w	r2, r3, r5
 8000b04:	f103 0308 	add.w	r3, r3, #8
 8000b08:	d21d      	bcs.n	8000b46 <sensor_msgs::JointState::serialize(unsigned char*) const+0xca>
 8000b0a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8000b0c:	f852 1030 	ldr.w	r1, [r2, r0, lsl #3]
 8000b10:	eb02 06c0 	add.w	r6, r2, r0, lsl #3
 8000b14:	3001      	adds	r0, #1
 8000b16:	6872      	ldr	r2, [r6, #4]
 8000b18:	f803 1c08 	strb.w	r1, [r3, #-8]
 8000b1c:	0a0e      	lsrs	r6, r1, #8
 8000b1e:	f803 6c07 	strb.w	r6, [r3, #-7]
 8000b22:	0c0e      	lsrs	r6, r1, #16
 8000b24:	0e09      	lsrs	r1, r1, #24
 8000b26:	f803 1c05 	strb.w	r1, [r3, #-5]
 8000b2a:	0a11      	lsrs	r1, r2, #8
 8000b2c:	f803 2c04 	strb.w	r2, [r3, #-4]
 8000b30:	f803 1c03 	strb.w	r1, [r3, #-3]
 8000b34:	0c11      	lsrs	r1, r2, #16
 8000b36:	0e12      	lsrs	r2, r2, #24
 8000b38:	f803 6c06 	strb.w	r6, [r3, #-6]
 8000b3c:	f803 1c02 	strb.w	r1, [r3, #-2]
 8000b40:	f803 2c01 	strb.w	r2, [r3, #-1]
 8000b44:	e7da      	b.n	8000afc <sensor_msgs::JointState::serialize(unsigned char*) const+0x80>
 8000b46:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000b48:	54ab      	strb	r3, [r5, r2]
 8000b4a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000b4c:	18ab      	adds	r3, r5, r2
 8000b4e:	0a09      	lsrs	r1, r1, #8
 8000b50:	7059      	strb	r1, [r3, #1]
 8000b52:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
 8000b54:	7099      	strb	r1, [r3, #2]
 8000b56:	f894 1037 	ldrb.w	r1, [r4, #55]	; 0x37
 8000b5a:	70d9      	strb	r1, [r3, #3]
 8000b5c:	3204      	adds	r2, #4
 8000b5e:	442a      	add	r2, r5
 8000b60:	2000      	movs	r0, #0
 8000b62:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000b64:	4288      	cmp	r0, r1
 8000b66:	eba2 0305 	sub.w	r3, r2, r5
 8000b6a:	f102 0208 	add.w	r2, r2, #8
 8000b6e:	d21d      	bcs.n	8000bac <sensor_msgs::JointState::serialize(unsigned char*) const+0x130>
 8000b70:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000b72:	f853 1030 	ldr.w	r1, [r3, r0, lsl #3]
 8000b76:	eb03 06c0 	add.w	r6, r3, r0, lsl #3
 8000b7a:	3001      	adds	r0, #1
 8000b7c:	6873      	ldr	r3, [r6, #4]
 8000b7e:	f802 1c08 	strb.w	r1, [r2, #-8]
 8000b82:	0a0e      	lsrs	r6, r1, #8
 8000b84:	f802 6c07 	strb.w	r6, [r2, #-7]
 8000b88:	0c0e      	lsrs	r6, r1, #16
 8000b8a:	0e09      	lsrs	r1, r1, #24
 8000b8c:	f802 1c05 	strb.w	r1, [r2, #-5]
 8000b90:	0a19      	lsrs	r1, r3, #8
 8000b92:	f802 3c04 	strb.w	r3, [r2, #-4]
 8000b96:	f802 1c03 	strb.w	r1, [r2, #-3]
 8000b9a:	0c19      	lsrs	r1, r3, #16
 8000b9c:	0e1b      	lsrs	r3, r3, #24
 8000b9e:	f802 6c06 	strb.w	r6, [r2, #-6]
 8000ba2:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000ba6:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000baa:	e7da      	b.n	8000b62 <sensor_msgs::JointState::serialize(unsigned char*) const+0xe6>
 8000bac:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000bae:	54ea      	strb	r2, [r5, r3]
 8000bb0:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8000bb2:	18ea      	adds	r2, r5, r3
 8000bb4:	0a09      	lsrs	r1, r1, #8
 8000bb6:	7051      	strb	r1, [r2, #1]
 8000bb8:	f8b4 1046 	ldrh.w	r1, [r4, #70]	; 0x46
 8000bbc:	7091      	strb	r1, [r2, #2]
 8000bbe:	f894 1047 	ldrb.w	r1, [r4, #71]	; 0x47
 8000bc2:	70d1      	strb	r1, [r2, #3]
 8000bc4:	3304      	adds	r3, #4
 8000bc6:	442b      	add	r3, r5
 8000bc8:	2600      	movs	r6, #0
 8000bca:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000bcc:	4296      	cmp	r6, r2
 8000bce:	eba3 0005 	sub.w	r0, r3, r5
 8000bd2:	f103 0308 	add.w	r3, r3, #8
 8000bd6:	d21d      	bcs.n	8000c14 <sensor_msgs::JointState::serialize(unsigned char*) const+0x198>
 8000bd8:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8000bda:	f852 1036 	ldr.w	r1, [r2, r6, lsl #3]
 8000bde:	eb02 00c6 	add.w	r0, r2, r6, lsl #3
 8000be2:	3601      	adds	r6, #1
 8000be4:	6842      	ldr	r2, [r0, #4]
 8000be6:	f803 1c08 	strb.w	r1, [r3, #-8]
 8000bea:	0a08      	lsrs	r0, r1, #8
 8000bec:	f803 0c07 	strb.w	r0, [r3, #-7]
 8000bf0:	0c08      	lsrs	r0, r1, #16
 8000bf2:	0e09      	lsrs	r1, r1, #24
 8000bf4:	f803 1c05 	strb.w	r1, [r3, #-5]
 8000bf8:	0a11      	lsrs	r1, r2, #8
 8000bfa:	f803 2c04 	strb.w	r2, [r3, #-4]
 8000bfe:	f803 1c03 	strb.w	r1, [r3, #-3]
 8000c02:	0c11      	lsrs	r1, r2, #16
 8000c04:	0e12      	lsrs	r2, r2, #24
 8000c06:	f803 0c06 	strb.w	r0, [r3, #-6]
 8000c0a:	f803 1c02 	strb.w	r1, [r3, #-2]
 8000c0e:	f803 2c01 	strb.w	r2, [r3, #-1]
 8000c12:	e7da      	b.n	8000bca <sensor_msgs::JointState::serialize(unsigned char*) const+0x14e>
 8000c14:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08000c18 <trajectory_msgs::JointTrajectory::serialize(unsigned char*) const>:
 8000c18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c1c:	4604      	mov	r4, r0
 8000c1e:	3004      	adds	r0, #4
 8000c20:	460f      	mov	r7, r1
 8000c22:	f7ff fefb 	bl	8000a1c <std_msgs::Header::serialize(unsigned char*) const>
 8000c26:	69a3      	ldr	r3, [r4, #24]
 8000c28:	543b      	strb	r3, [r7, r0]
 8000c2a:	69a2      	ldr	r2, [r4, #24]
 8000c2c:	183b      	adds	r3, r7, r0
 8000c2e:	0a12      	lsrs	r2, r2, #8
 8000c30:	705a      	strb	r2, [r3, #1]
 8000c32:	8b62      	ldrh	r2, [r4, #26]
 8000c34:	709a      	strb	r2, [r3, #2]
 8000c36:	7ee2      	ldrb	r2, [r4, #27]
 8000c38:	70da      	strb	r2, [r3, #3]
 8000c3a:	f04f 0800 	mov.w	r8, #0
 8000c3e:	1d02      	adds	r2, r0, #4
 8000c40:	69a3      	ldr	r3, [r4, #24]
 8000c42:	4598      	cmp	r8, r3
 8000c44:	eb07 0902 	add.w	r9, r7, r2
 8000c48:	f102 0604 	add.w	r6, r2, #4
 8000c4c:	d214      	bcs.n	8000c78 <trajectory_msgs::JointTrajectory::serialize(unsigned char*) const+0x60>
 8000c4e:	6a23      	ldr	r3, [r4, #32]
 8000c50:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8000c54:	f006 f89d 	bl	8006d92 <strlen>
 8000c58:	4605      	mov	r5, r0
 8000c5a:	4601      	mov	r1, r0
 8000c5c:	4648      	mov	r0, r9
 8000c5e:	f7ff fed3 	bl	8000a08 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000c62:	6a23      	ldr	r3, [r4, #32]
 8000c64:	462a      	mov	r2, r5
 8000c66:	f853 1028 	ldr.w	r1, [r3, r8, lsl #2]
 8000c6a:	19b8      	adds	r0, r7, r6
 8000c6c:	f005 fda0 	bl	80067b0 <memcpy>
 8000c70:	f108 0801 	add.w	r8, r8, #1
 8000c74:	19aa      	adds	r2, r5, r6
 8000c76:	e7e3      	b.n	8000c40 <trajectory_msgs::JointTrajectory::serialize(unsigned char*) const+0x28>
 8000c78:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000c7a:	54bb      	strb	r3, [r7, r2]
 8000c7c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000c7e:	0a1b      	lsrs	r3, r3, #8
 8000c80:	f889 3001 	strb.w	r3, [r9, #1]
 8000c84:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8000c86:	f889 3002 	strb.w	r3, [r9, #2]
 8000c8a:	f894 3027 	ldrb.w	r3, [r4, #39]	; 0x27
 8000c8e:	f889 3003 	strb.w	r3, [r9, #3]
 8000c92:	4635      	mov	r5, r6
 8000c94:	f04f 0850 	mov.w	r8, #80	; 0x50
 8000c98:	2600      	movs	r6, #0
 8000c9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000c9c:	429e      	cmp	r6, r3
 8000c9e:	d20a      	bcs.n	8000cb6 <trajectory_msgs::JointTrajectory::serialize(unsigned char*) const+0x9e>
 8000ca0:	fb08 f306 	mul.w	r3, r8, r6
 8000ca4:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8000ca6:	58c2      	ldr	r2, [r0, r3]
 8000ca8:	1979      	adds	r1, r7, r5
 8000caa:	6812      	ldr	r2, [r2, #0]
 8000cac:	4418      	add	r0, r3
 8000cae:	4790      	blx	r2
 8000cb0:	3601      	adds	r6, #1
 8000cb2:	4405      	add	r5, r0
 8000cb4:	e7f1      	b.n	8000c9a <trajectory_msgs::JointTrajectory::serialize(unsigned char*) const+0x82>
 8000cb6:	4628      	mov	r0, r5
 8000cb8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08000cbc <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 8000cbc:	6843      	ldr	r3, [r0, #4]
 8000cbe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cc2:	700b      	strb	r3, [r1, #0]
 8000cc4:	6843      	ldr	r3, [r0, #4]
 8000cc6:	0a1b      	lsrs	r3, r3, #8
 8000cc8:	704b      	strb	r3, [r1, #1]
 8000cca:	88c3      	ldrh	r3, [r0, #6]
 8000ccc:	708b      	strb	r3, [r1, #2]
 8000cce:	79c3      	ldrb	r3, [r0, #7]
 8000cd0:	70cb      	strb	r3, [r1, #3]
 8000cd2:	460d      	mov	r5, r1
 8000cd4:	1d0a      	adds	r2, r1, #4
 8000cd6:	4604      	mov	r4, r0
 8000cd8:	2100      	movs	r1, #0
 8000cda:	6860      	ldr	r0, [r4, #4]
 8000cdc:	4281      	cmp	r1, r0
 8000cde:	eba2 0305 	sub.w	r3, r2, r5
 8000ce2:	f102 0204 	add.w	r2, r2, #4
 8000ce6:	d20f      	bcs.n	8000d08 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 8000ce8:	68e3      	ldr	r3, [r4, #12]
 8000cea:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8000cee:	f802 3c04 	strb.w	r3, [r2, #-4]
 8000cf2:	0a18      	lsrs	r0, r3, #8
 8000cf4:	f802 0c03 	strb.w	r0, [r2, #-3]
 8000cf8:	0c18      	lsrs	r0, r3, #16
 8000cfa:	0e1b      	lsrs	r3, r3, #24
 8000cfc:	f802 0c02 	strb.w	r0, [r2, #-2]
 8000d00:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000d04:	3101      	adds	r1, #1
 8000d06:	e7e8      	b.n	8000cda <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 8000d08:	6922      	ldr	r2, [r4, #16]
 8000d0a:	54ea      	strb	r2, [r5, r3]
 8000d0c:	6921      	ldr	r1, [r4, #16]
 8000d0e:	18ea      	adds	r2, r5, r3
 8000d10:	0a09      	lsrs	r1, r1, #8
 8000d12:	7051      	strb	r1, [r2, #1]
 8000d14:	8a61      	ldrh	r1, [r4, #18]
 8000d16:	7091      	strb	r1, [r2, #2]
 8000d18:	7ce1      	ldrb	r1, [r4, #19]
 8000d1a:	70d1      	strb	r1, [r2, #3]
 8000d1c:	3304      	adds	r3, #4
 8000d1e:	442b      	add	r3, r5
 8000d20:	2100      	movs	r1, #0
 8000d22:	6922      	ldr	r2, [r4, #16]
 8000d24:	4291      	cmp	r1, r2
 8000d26:	eba3 0605 	sub.w	r6, r3, r5
 8000d2a:	f103 0304 	add.w	r3, r3, #4
 8000d2e:	d20f      	bcs.n	8000d50 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 8000d30:	69a2      	ldr	r2, [r4, #24]
 8000d32:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8000d36:	f803 2c04 	strb.w	r2, [r3, #-4]
 8000d3a:	0a10      	lsrs	r0, r2, #8
 8000d3c:	f803 0c03 	strb.w	r0, [r3, #-3]
 8000d40:	0c10      	lsrs	r0, r2, #16
 8000d42:	0e12      	lsrs	r2, r2, #24
 8000d44:	f803 0c02 	strb.w	r0, [r3, #-2]
 8000d48:	f803 2c01 	strb.w	r2, [r3, #-1]
 8000d4c:	3101      	adds	r1, #1
 8000d4e:	e7e8      	b.n	8000d22 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 8000d50:	69e3      	ldr	r3, [r4, #28]
 8000d52:	55ab      	strb	r3, [r5, r6]
 8000d54:	69e2      	ldr	r2, [r4, #28]
 8000d56:	19ab      	adds	r3, r5, r6
 8000d58:	0a12      	lsrs	r2, r2, #8
 8000d5a:	705a      	strb	r2, [r3, #1]
 8000d5c:	8be2      	ldrh	r2, [r4, #30]
 8000d5e:	709a      	strb	r2, [r3, #2]
 8000d60:	7fe2      	ldrb	r2, [r4, #31]
 8000d62:	70da      	strb	r2, [r3, #3]
 8000d64:	3604      	adds	r6, #4
 8000d66:	2700      	movs	r7, #0
 8000d68:	69e3      	ldr	r3, [r4, #28]
 8000d6a:	429f      	cmp	r7, r3
 8000d6c:	d214      	bcs.n	8000d98 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 8000d6e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000d70:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8000d74:	f006 f80d 	bl	8006d92 <strlen>
 8000d78:	4680      	mov	r8, r0
 8000d7a:	4601      	mov	r1, r0
 8000d7c:	19a8      	adds	r0, r5, r6
 8000d7e:	f7ff fe43 	bl	8000a08 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000d82:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000d84:	3604      	adds	r6, #4
 8000d86:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 8000d8a:	19a8      	adds	r0, r5, r6
 8000d8c:	4642      	mov	r2, r8
 8000d8e:	f005 fd0f 	bl	80067b0 <memcpy>
 8000d92:	4446      	add	r6, r8
 8000d94:	3701      	adds	r7, #1
 8000d96:	e7e7      	b.n	8000d68 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 8000d98:	4630      	mov	r0, r6
 8000d9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000d9e <rosserial_msgs::Log::serialize(unsigned char*) const>:
 8000d9e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000da0:	460e      	mov	r6, r1
 8000da2:	7903      	ldrb	r3, [r0, #4]
 8000da4:	f806 3b01 	strb.w	r3, [r6], #1
 8000da8:	4605      	mov	r5, r0
 8000daa:	6880      	ldr	r0, [r0, #8]
 8000dac:	460f      	mov	r7, r1
 8000dae:	f005 fff0 	bl	8006d92 <strlen>
 8000db2:	4604      	mov	r4, r0
 8000db4:	4601      	mov	r1, r0
 8000db6:	4630      	mov	r0, r6
 8000db8:	f7ff fe26 	bl	8000a08 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000dbc:	4622      	mov	r2, r4
 8000dbe:	68a9      	ldr	r1, [r5, #8]
 8000dc0:	1d78      	adds	r0, r7, #5
 8000dc2:	f005 fcf5 	bl	80067b0 <memcpy>
 8000dc6:	1d60      	adds	r0, r4, #5
 8000dc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000dca <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 8000dca:	8883      	ldrh	r3, [r0, #4]
 8000dcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000dd0:	700b      	strb	r3, [r1, #0]
 8000dd2:	8883      	ldrh	r3, [r0, #4]
 8000dd4:	0a1b      	lsrs	r3, r3, #8
 8000dd6:	704b      	strb	r3, [r1, #1]
 8000dd8:	4605      	mov	r5, r0
 8000dda:	6880      	ldr	r0, [r0, #8]
 8000ddc:	460c      	mov	r4, r1
 8000dde:	f005 ffd8 	bl	8006d92 <strlen>
 8000de2:	4607      	mov	r7, r0
 8000de4:	4601      	mov	r1, r0
 8000de6:	1ca0      	adds	r0, r4, #2
 8000de8:	f7ff fe0e 	bl	8000a08 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000dec:	463a      	mov	r2, r7
 8000dee:	68a9      	ldr	r1, [r5, #8]
 8000df0:	1da0      	adds	r0, r4, #6
 8000df2:	f005 fcdd 	bl	80067b0 <memcpy>
 8000df6:	68e8      	ldr	r0, [r5, #12]
 8000df8:	f005 ffcb 	bl	8006d92 <strlen>
 8000dfc:	f107 0806 	add.w	r8, r7, #6
 8000e00:	4606      	mov	r6, r0
 8000e02:	4601      	mov	r1, r0
 8000e04:	370a      	adds	r7, #10
 8000e06:	eb04 0008 	add.w	r0, r4, r8
 8000e0a:	f7ff fdfd 	bl	8000a08 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000e0e:	4632      	mov	r2, r6
 8000e10:	68e9      	ldr	r1, [r5, #12]
 8000e12:	19e0      	adds	r0, r4, r7
 8000e14:	f005 fccc 	bl	80067b0 <memcpy>
 8000e18:	6928      	ldr	r0, [r5, #16]
 8000e1a:	f005 ffba 	bl	8006d92 <strlen>
 8000e1e:	443e      	add	r6, r7
 8000e20:	4601      	mov	r1, r0
 8000e22:	4607      	mov	r7, r0
 8000e24:	19a0      	adds	r0, r4, r6
 8000e26:	3604      	adds	r6, #4
 8000e28:	f7ff fdee 	bl	8000a08 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000e2c:	463a      	mov	r2, r7
 8000e2e:	19a0      	adds	r0, r4, r6
 8000e30:	6929      	ldr	r1, [r5, #16]
 8000e32:	443e      	add	r6, r7
 8000e34:	f005 fcbc 	bl	80067b0 <memcpy>
 8000e38:	696b      	ldr	r3, [r5, #20]
 8000e3a:	55a3      	strb	r3, [r4, r6]
 8000e3c:	4434      	add	r4, r6
 8000e3e:	0a1a      	lsrs	r2, r3, #8
 8000e40:	7062      	strb	r2, [r4, #1]
 8000e42:	0c1a      	lsrs	r2, r3, #16
 8000e44:	0e1b      	lsrs	r3, r3, #24
 8000e46:	70a2      	strb	r2, [r4, #2]
 8000e48:	70e3      	strb	r3, [r4, #3]
 8000e4a:	1d30      	adds	r0, r6, #4
 8000e4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000e50 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 8000e50:	b510      	push	{r4, lr}
 8000e52:	2300      	movs	r3, #0
 8000e54:	6003      	str	r3, [r0, #0]
 8000e56:	3901      	subs	r1, #1
 8000e58:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8000e5c:	fa02 f403 	lsl.w	r4, r2, r3
 8000e60:	6802      	ldr	r2, [r0, #0]
 8000e62:	3308      	adds	r3, #8
 8000e64:	4322      	orrs	r2, r4
 8000e66:	2b20      	cmp	r3, #32
 8000e68:	6002      	str	r2, [r0, #0]
 8000e6a:	d1f5      	bne.n	8000e58 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 8000e6c:	bd10      	pop	{r4, pc}

08000e6e <rosserial_msgs::Log::deserialize(unsigned char*)>:
 8000e6e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000e70:	460c      	mov	r4, r1
 8000e72:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000e76:	7103      	strb	r3, [r0, #4]
 8000e78:	4605      	mov	r5, r0
 8000e7a:	a801      	add	r0, sp, #4
 8000e7c:	f7ff ffe8 	bl	8000e50 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000e80:	9b01      	ldr	r3, [sp, #4]
 8000e82:	1d62      	adds	r2, r4, #5
 8000e84:	1d58      	adds	r0, r3, #5
 8000e86:	1b11      	subs	r1, r2, r4
 8000e88:	4288      	cmp	r0, r1
 8000e8a:	d904      	bls.n	8000e96 <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 8000e8c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000e90:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000e94:	e7f7      	b.n	8000e86 <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 8000e96:	4423      	add	r3, r4
 8000e98:	2200      	movs	r2, #0
 8000e9a:	3404      	adds	r4, #4
 8000e9c:	711a      	strb	r2, [r3, #4]
 8000e9e:	60ac      	str	r4, [r5, #8]
 8000ea0:	b003      	add	sp, #12
 8000ea2:	bd30      	pop	{r4, r5, pc}

08000ea4 <std_msgs::Header::deserialize(unsigned char*)>:
 8000ea4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000ea6:	780b      	ldrb	r3, [r1, #0]
 8000ea8:	6043      	str	r3, [r0, #4]
 8000eaa:	784a      	ldrb	r2, [r1, #1]
 8000eac:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000eb0:	6043      	str	r3, [r0, #4]
 8000eb2:	788a      	ldrb	r2, [r1, #2]
 8000eb4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000eb8:	6043      	str	r3, [r0, #4]
 8000eba:	78ca      	ldrb	r2, [r1, #3]
 8000ebc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000ec0:	6043      	str	r3, [r0, #4]
 8000ec2:	790b      	ldrb	r3, [r1, #4]
 8000ec4:	6083      	str	r3, [r0, #8]
 8000ec6:	794a      	ldrb	r2, [r1, #5]
 8000ec8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000ecc:	6083      	str	r3, [r0, #8]
 8000ece:	798a      	ldrb	r2, [r1, #6]
 8000ed0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000ed4:	6083      	str	r3, [r0, #8]
 8000ed6:	79ca      	ldrb	r2, [r1, #7]
 8000ed8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000edc:	6083      	str	r3, [r0, #8]
 8000ede:	7a0b      	ldrb	r3, [r1, #8]
 8000ee0:	60c3      	str	r3, [r0, #12]
 8000ee2:	7a4a      	ldrb	r2, [r1, #9]
 8000ee4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000ee8:	60c3      	str	r3, [r0, #12]
 8000eea:	7a8a      	ldrb	r2, [r1, #10]
 8000eec:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000ef0:	60c3      	str	r3, [r0, #12]
 8000ef2:	7aca      	ldrb	r2, [r1, #11]
 8000ef4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000ef8:	60c3      	str	r3, [r0, #12]
 8000efa:	460c      	mov	r4, r1
 8000efc:	4605      	mov	r5, r0
 8000efe:	310c      	adds	r1, #12
 8000f00:	a801      	add	r0, sp, #4
 8000f02:	f7ff ffa5 	bl	8000e50 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000f06:	9b01      	ldr	r3, [sp, #4]
 8000f08:	f104 0210 	add.w	r2, r4, #16
 8000f0c:	f103 0010 	add.w	r0, r3, #16
 8000f10:	1b11      	subs	r1, r2, r4
 8000f12:	4288      	cmp	r0, r1
 8000f14:	d904      	bls.n	8000f20 <std_msgs::Header::deserialize(unsigned char*)+0x7c>
 8000f16:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000f1a:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000f1e:	e7f7      	b.n	8000f10 <std_msgs::Header::deserialize(unsigned char*)+0x6c>
 8000f20:	4423      	add	r3, r4
 8000f22:	2200      	movs	r2, #0
 8000f24:	340f      	adds	r4, #15
 8000f26:	73da      	strb	r2, [r3, #15]
 8000f28:	612c      	str	r4, [r5, #16]
 8000f2a:	b003      	add	sp, #12
 8000f2c:	bd30      	pop	{r4, r5, pc}

08000f2e <trajectory_msgs::JointTrajectory::deserialize(unsigned char*)>:
 8000f2e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8000f32:	4604      	mov	r4, r0
 8000f34:	3004      	adds	r0, #4
 8000f36:	460f      	mov	r7, r1
 8000f38:	f7ff ffb4 	bl	8000ea4 <std_msgs::Header::deserialize(unsigned char*)>
 8000f3c:	183b      	adds	r3, r7, r0
 8000f3e:	5c3a      	ldrb	r2, [r7, r0]
 8000f40:	789d      	ldrb	r5, [r3, #2]
 8000f42:	7859      	ldrb	r1, [r3, #1]
 8000f44:	78db      	ldrb	r3, [r3, #3]
 8000f46:	042d      	lsls	r5, r5, #16
 8000f48:	ea45 2501 	orr.w	r5, r5, r1, lsl #8
 8000f4c:	4315      	orrs	r5, r2
 8000f4e:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
 8000f52:	69a3      	ldr	r3, [r4, #24]
 8000f54:	429d      	cmp	r5, r3
 8000f56:	f100 0604 	add.w	r6, r0, #4
 8000f5a:	d904      	bls.n	8000f66 <trajectory_msgs::JointTrajectory::deserialize(unsigned char*)+0x38>
 8000f5c:	00a9      	lsls	r1, r5, #2
 8000f5e:	6a20      	ldr	r0, [r4, #32]
 8000f60:	f005 febc 	bl	8006cdc <realloc>
 8000f64:	6220      	str	r0, [r4, #32]
 8000f66:	f04f 0800 	mov.w	r8, #0
 8000f6a:	61a5      	str	r5, [r4, #24]
 8000f6c:	46c1      	mov	r9, r8
 8000f6e:	69a3      	ldr	r3, [r4, #24]
 8000f70:	4598      	cmp	r8, r3
 8000f72:	eb07 0106 	add.w	r1, r7, r6
 8000f76:	f106 0504 	add.w	r5, r6, #4
 8000f7a:	d219      	bcs.n	8000fb0 <trajectory_msgs::JointTrajectory::deserialize(unsigned char*)+0x82>
 8000f7c:	a801      	add	r0, sp, #4
 8000f7e:	f7ff ff67 	bl	8000e50 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000f82:	9e01      	ldr	r6, [sp, #4]
 8000f84:	197b      	adds	r3, r7, r5
 8000f86:	442e      	add	r6, r5
 8000f88:	1bda      	subs	r2, r3, r7
 8000f8a:	4296      	cmp	r6, r2
 8000f8c:	d904      	bls.n	8000f98 <trajectory_msgs::JointTrajectory::deserialize(unsigned char*)+0x6a>
 8000f8e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000f92:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000f96:	e7f7      	b.n	8000f88 <trajectory_msgs::JointTrajectory::deserialize(unsigned char*)+0x5a>
 8000f98:	19bb      	adds	r3, r7, r6
 8000f9a:	3d01      	subs	r5, #1
 8000f9c:	f803 9c01 	strb.w	r9, [r3, #-1]
 8000fa0:	6a23      	ldr	r3, [r4, #32]
 8000fa2:	443d      	add	r5, r7
 8000fa4:	61e5      	str	r5, [r4, #28]
 8000fa6:	f843 5028 	str.w	r5, [r3, r8, lsl #2]
 8000faa:	f108 0801 	add.w	r8, r8, #1
 8000fae:	e7de      	b.n	8000f6e <trajectory_msgs::JointTrajectory::deserialize(unsigned char*)+0x40>
 8000fb0:	5dbb      	ldrb	r3, [r7, r6]
 8000fb2:	788e      	ldrb	r6, [r1, #2]
 8000fb4:	784a      	ldrb	r2, [r1, #1]
 8000fb6:	0436      	lsls	r6, r6, #16
 8000fb8:	ea46 2602 	orr.w	r6, r6, r2, lsl #8
 8000fbc:	431e      	orrs	r6, r3
 8000fbe:	78cb      	ldrb	r3, [r1, #3]
 8000fc0:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
 8000fc4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000fc6:	429e      	cmp	r6, r3
 8000fc8:	d905      	bls.n	8000fd6 <trajectory_msgs::JointTrajectory::deserialize(unsigned char*)+0xa8>
 8000fca:	2150      	movs	r1, #80	; 0x50
 8000fcc:	4371      	muls	r1, r6
 8000fce:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8000fd0:	f005 fe84 	bl	8006cdc <realloc>
 8000fd4:	67a0      	str	r0, [r4, #120]	; 0x78
 8000fd6:	6266      	str	r6, [r4, #36]	; 0x24
 8000fd8:	f104 0828 	add.w	r8, r4, #40	; 0x28
 8000fdc:	2600      	movs	r6, #0
 8000fde:	f04f 0950 	mov.w	r9, #80	; 0x50
 8000fe2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000fe4:	429e      	cmp	r6, r3
 8000fe6:	d20d      	bcs.n	8001004 <trajectory_msgs::JointTrajectory::deserialize(unsigned char*)+0xd6>
 8000fe8:	1979      	adds	r1, r7, r5
 8000fea:	4640      	mov	r0, r8
 8000fec:	f7ff fa85 	bl	80004fa <trajectory_msgs::JointTrajectoryPoint::deserialize(unsigned char*)>
 8000ff0:	4405      	add	r5, r0
 8000ff2:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8000ff4:	2250      	movs	r2, #80	; 0x50
 8000ff6:	fb09 0006 	mla	r0, r9, r6, r0
 8000ffa:	4641      	mov	r1, r8
 8000ffc:	f005 fbd8 	bl	80067b0 <memcpy>
 8001000:	3601      	adds	r6, #1
 8001002:	e7ee      	b.n	8000fe2 <trajectory_msgs::JointTrajectory::deserialize(unsigned char*)+0xb4>
 8001004:	4628      	mov	r0, r5
 8001006:	b003      	add	sp, #12
 8001008:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800100c <ros::Subscriber<trajectory_msgs::JointTrajectory, void>::callback(unsigned char*)>:
 800100c:	b570      	push	{r4, r5, r6, lr}
 800100e:	4605      	mov	r5, r0
 8001010:	f100 0410 	add.w	r4, r0, #16
 8001014:	4620      	mov	r0, r4
 8001016:	f7ff ff8a 	bl	8000f2e <trajectory_msgs::JointTrajectory::deserialize(unsigned char*)>
 800101a:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 800101e:	4620      	mov	r0, r4
 8001020:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001024:	4718      	bx	r3

08001026 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 8001026:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001028:	780b      	ldrb	r3, [r1, #0]
 800102a:	8083      	strh	r3, [r0, #4]
 800102c:	784a      	ldrb	r2, [r1, #1]
 800102e:	b085      	sub	sp, #20
 8001030:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001034:	8083      	strh	r3, [r0, #4]
 8001036:	460c      	mov	r4, r1
 8001038:	4606      	mov	r6, r0
 800103a:	3102      	adds	r1, #2
 800103c:	a801      	add	r0, sp, #4
 800103e:	f7ff ff07 	bl	8000e50 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8001042:	9f01      	ldr	r7, [sp, #4]
 8001044:	1da3      	adds	r3, r4, #6
 8001046:	1dbd      	adds	r5, r7, #6
 8001048:	1b1a      	subs	r2, r3, r4
 800104a:	4295      	cmp	r5, r2
 800104c:	d904      	bls.n	8001058 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 800104e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001052:	f803 2c02 	strb.w	r2, [r3, #-2]
 8001056:	e7f7      	b.n	8001048 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 8001058:	19e3      	adds	r3, r4, r7
 800105a:	2200      	movs	r2, #0
 800105c:	715a      	strb	r2, [r3, #5]
 800105e:	1d63      	adds	r3, r4, #5
 8001060:	60b3      	str	r3, [r6, #8]
 8001062:	1961      	adds	r1, r4, r5
 8001064:	a802      	add	r0, sp, #8
 8001066:	f7ff fef3 	bl	8000e50 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800106a:	1d2b      	adds	r3, r5, #4
 800106c:	9d02      	ldr	r5, [sp, #8]
 800106e:	f107 020a 	add.w	r2, r7, #10
 8001072:	441d      	add	r5, r3
 8001074:	4422      	add	r2, r4
 8001076:	1b11      	subs	r1, r2, r4
 8001078:	428d      	cmp	r5, r1
 800107a:	d904      	bls.n	8001086 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 800107c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8001080:	f802 1c02 	strb.w	r1, [r2, #-2]
 8001084:	e7f7      	b.n	8001076 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 8001086:	1961      	adds	r1, r4, r5
 8001088:	3b01      	subs	r3, #1
 800108a:	4423      	add	r3, r4
 800108c:	2200      	movs	r2, #0
 800108e:	f801 2c01 	strb.w	r2, [r1, #-1]
 8001092:	a803      	add	r0, sp, #12
 8001094:	60f3      	str	r3, [r6, #12]
 8001096:	f7ff fedb 	bl	8000e50 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800109a:	9803      	ldr	r0, [sp, #12]
 800109c:	3504      	adds	r5, #4
 800109e:	4428      	add	r0, r5
 80010a0:	1963      	adds	r3, r4, r5
 80010a2:	1b1a      	subs	r2, r3, r4
 80010a4:	4290      	cmp	r0, r2
 80010a6:	d904      	bls.n	80010b2 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 80010a8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80010ac:	f803 2c02 	strb.w	r2, [r3, #-2]
 80010b0:	e7f7      	b.n	80010a2 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 80010b2:	1822      	adds	r2, r4, r0
 80010b4:	3d01      	subs	r5, #1
 80010b6:	2300      	movs	r3, #0
 80010b8:	4425      	add	r5, r4
 80010ba:	f802 3c01 	strb.w	r3, [r2, #-1]
 80010be:	6135      	str	r5, [r6, #16]
 80010c0:	7893      	ldrb	r3, [r2, #2]
 80010c2:	7851      	ldrb	r1, [r2, #1]
 80010c4:	78d2      	ldrb	r2, [r2, #3]
 80010c6:	041b      	lsls	r3, r3, #16
 80010c8:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80010cc:	5c21      	ldrb	r1, [r4, r0]
 80010ce:	430b      	orrs	r3, r1
 80010d0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80010d4:	3004      	adds	r0, #4
 80010d6:	6173      	str	r3, [r6, #20]
 80010d8:	b005      	add	sp, #20
 80010da:	bdf0      	pop	{r4, r5, r6, r7, pc}

080010dc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 80010dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80010e0:	6843      	ldr	r3, [r0, #4]
 80010e2:	680d      	ldr	r5, [r1, #0]
 80010e4:	429d      	cmp	r5, r3
 80010e6:	4604      	mov	r4, r0
 80010e8:	460e      	mov	r6, r1
 80010ea:	d904      	bls.n	80010f6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 80010ec:	00a9      	lsls	r1, r5, #2
 80010ee:	68c0      	ldr	r0, [r0, #12]
 80010f0:	f005 fdf4 	bl	8006cdc <realloc>
 80010f4:	60e0      	str	r0, [r4, #12]
 80010f6:	6065      	str	r5, [r4, #4]
 80010f8:	1d32      	adds	r2, r6, #4
 80010fa:	2100      	movs	r1, #0
 80010fc:	6860      	ldr	r0, [r4, #4]
 80010fe:	4281      	cmp	r1, r0
 8001100:	eba2 0306 	sub.w	r3, r2, r6
 8001104:	f102 0204 	add.w	r2, r2, #4
 8001108:	d213      	bcs.n	8001132 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 800110a:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 800110e:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 8001112:	041b      	lsls	r3, r3, #16
 8001114:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8001118:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 800111c:	4303      	orrs	r3, r0
 800111e:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8001122:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8001126:	68e0      	ldr	r0, [r4, #12]
 8001128:	60a3      	str	r3, [r4, #8]
 800112a:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 800112e:	3101      	adds	r1, #1
 8001130:	e7e4      	b.n	80010fc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 8001132:	18f2      	adds	r2, r6, r3
 8001134:	5cf1      	ldrb	r1, [r6, r3]
 8001136:	7895      	ldrb	r5, [r2, #2]
 8001138:	7850      	ldrb	r0, [r2, #1]
 800113a:	78d2      	ldrb	r2, [r2, #3]
 800113c:	042d      	lsls	r5, r5, #16
 800113e:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8001142:	430d      	orrs	r5, r1
 8001144:	1d1f      	adds	r7, r3, #4
 8001146:	6923      	ldr	r3, [r4, #16]
 8001148:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800114c:	429d      	cmp	r5, r3
 800114e:	d904      	bls.n	800115a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 8001150:	00a9      	lsls	r1, r5, #2
 8001152:	69a0      	ldr	r0, [r4, #24]
 8001154:	f005 fdc2 	bl	8006cdc <realloc>
 8001158:	61a0      	str	r0, [r4, #24]
 800115a:	6125      	str	r5, [r4, #16]
 800115c:	19f3      	adds	r3, r6, r7
 800115e:	2100      	movs	r1, #0
 8001160:	6922      	ldr	r2, [r4, #16]
 8001162:	4291      	cmp	r1, r2
 8001164:	eba3 0506 	sub.w	r5, r3, r6
 8001168:	f103 0304 	add.w	r3, r3, #4
 800116c:	d213      	bcs.n	8001196 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 800116e:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8001172:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8001176:	0412      	lsls	r2, r2, #16
 8001178:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800117c:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 8001180:	4302      	orrs	r2, r0
 8001182:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8001186:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 800118a:	69a0      	ldr	r0, [r4, #24]
 800118c:	6162      	str	r2, [r4, #20]
 800118e:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 8001192:	3101      	adds	r1, #1
 8001194:	e7e4      	b.n	8001160 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 8001196:	1973      	adds	r3, r6, r5
 8001198:	5d72      	ldrb	r2, [r6, r5]
 800119a:	789f      	ldrb	r7, [r3, #2]
 800119c:	7859      	ldrb	r1, [r3, #1]
 800119e:	78db      	ldrb	r3, [r3, #3]
 80011a0:	043f      	lsls	r7, r7, #16
 80011a2:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 80011a6:	4317      	orrs	r7, r2
 80011a8:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 80011ac:	69e3      	ldr	r3, [r4, #28]
 80011ae:	429f      	cmp	r7, r3
 80011b0:	f105 0504 	add.w	r5, r5, #4
 80011b4:	d904      	bls.n	80011c0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 80011b6:	00b9      	lsls	r1, r7, #2
 80011b8:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80011ba:	f005 fd8f 	bl	8006cdc <realloc>
 80011be:	6260      	str	r0, [r4, #36]	; 0x24
 80011c0:	61e7      	str	r7, [r4, #28]
 80011c2:	2700      	movs	r7, #0
 80011c4:	46b8      	mov	r8, r7
 80011c6:	69e3      	ldr	r3, [r4, #28]
 80011c8:	429f      	cmp	r7, r3
 80011ca:	d21a      	bcs.n	8001202 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 80011cc:	1971      	adds	r1, r6, r5
 80011ce:	a801      	add	r0, sp, #4
 80011d0:	f7ff fe3e 	bl	8000e50 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80011d4:	1d2b      	adds	r3, r5, #4
 80011d6:	9d01      	ldr	r5, [sp, #4]
 80011d8:	18f2      	adds	r2, r6, r3
 80011da:	441d      	add	r5, r3
 80011dc:	1b91      	subs	r1, r2, r6
 80011de:	42a9      	cmp	r1, r5
 80011e0:	d204      	bcs.n	80011ec <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 80011e2:	f812 1b01 	ldrb.w	r1, [r2], #1
 80011e6:	f802 1c02 	strb.w	r1, [r2, #-2]
 80011ea:	e7f7      	b.n	80011dc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 80011ec:	1972      	adds	r2, r6, r5
 80011ee:	3b01      	subs	r3, #1
 80011f0:	f802 8c01 	strb.w	r8, [r2, #-1]
 80011f4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80011f6:	4433      	add	r3, r6
 80011f8:	6223      	str	r3, [r4, #32]
 80011fa:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 80011fe:	3701      	adds	r7, #1
 8001200:	e7e1      	b.n	80011c6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 8001202:	4628      	mov	r0, r5
 8001204:	b002      	add	sp, #8
 8001206:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800120a <sensor_msgs::JointState::deserialize(unsigned char*)>:
 800120a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 800120e:	4604      	mov	r4, r0
 8001210:	b0ad      	sub	sp, #180	; 0xb4
 8001212:	3004      	adds	r0, #4
 8001214:	460d      	mov	r5, r1
 8001216:	f7ff fe45 	bl	8000ea4 <std_msgs::Header::deserialize(unsigned char*)>
 800121a:	182a      	adds	r2, r5, r0
 800121c:	5c29      	ldrb	r1, [r5, r0]
 800121e:	7893      	ldrb	r3, [r2, #2]
 8001220:	7857      	ldrb	r7, [r2, #1]
 8001222:	041b      	lsls	r3, r3, #16
 8001224:	ea43 2707 	orr.w	r7, r3, r7, lsl #8
 8001228:	78d3      	ldrb	r3, [r2, #3]
 800122a:	430f      	orrs	r7, r1
 800122c:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 8001230:	69a3      	ldr	r3, [r4, #24]
 8001232:	429f      	cmp	r7, r3
 8001234:	f100 0604 	add.w	r6, r0, #4
 8001238:	d904      	bls.n	8001244 <sensor_msgs::JointState::deserialize(unsigned char*)+0x3a>
 800123a:	00b9      	lsls	r1, r7, #2
 800123c:	6a20      	ldr	r0, [r4, #32]
 800123e:	f005 fd4d 	bl	8006cdc <realloc>
 8001242:	6220      	str	r0, [r4, #32]
 8001244:	61a7      	str	r7, [r4, #24]
 8001246:	2200      	movs	r2, #0
 8001248:	69a3      	ldr	r3, [r4, #24]
 800124a:	9229      	str	r2, [sp, #164]	; 0xa4
 800124c:	429a      	cmp	r2, r3
 800124e:	eb05 0106 	add.w	r1, r5, r6
 8001252:	f106 0704 	add.w	r7, r6, #4
 8001256:	d21b      	bcs.n	8001290 <sensor_msgs::JointState::deserialize(unsigned char*)+0x86>
 8001258:	a82b      	add	r0, sp, #172	; 0xac
 800125a:	f7ff fdf9 	bl	8000e50 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800125e:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8001260:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8001262:	443e      	add	r6, r7
 8001264:	19eb      	adds	r3, r5, r7
 8001266:	1b59      	subs	r1, r3, r5
 8001268:	428e      	cmp	r6, r1
 800126a:	d904      	bls.n	8001276 <sensor_msgs::JointState::deserialize(unsigned char*)+0x6c>
 800126c:	f813 1b01 	ldrb.w	r1, [r3], #1
 8001270:	f803 1c02 	strb.w	r1, [r3, #-2]
 8001274:	e7f7      	b.n	8001266 <sensor_msgs::JointState::deserialize(unsigned char*)+0x5c>
 8001276:	19ab      	adds	r3, r5, r6
 8001278:	f04f 0100 	mov.w	r1, #0
 800127c:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001280:	6a21      	ldr	r1, [r4, #32]
 8001282:	1e7b      	subs	r3, r7, #1
 8001284:	442b      	add	r3, r5
 8001286:	61e3      	str	r3, [r4, #28]
 8001288:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 800128c:	3201      	adds	r2, #1
 800128e:	e7db      	b.n	8001248 <sensor_msgs::JointState::deserialize(unsigned char*)+0x3e>
 8001290:	5dab      	ldrb	r3, [r5, r6]
 8001292:	788e      	ldrb	r6, [r1, #2]
 8001294:	784a      	ldrb	r2, [r1, #1]
 8001296:	0436      	lsls	r6, r6, #16
 8001298:	ea46 2602 	orr.w	r6, r6, r2, lsl #8
 800129c:	431e      	orrs	r6, r3
 800129e:	78cb      	ldrb	r3, [r1, #3]
 80012a0:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
 80012a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80012a6:	429e      	cmp	r6, r3
 80012a8:	d904      	bls.n	80012b4 <sensor_msgs::JointState::deserialize(unsigned char*)+0xaa>
 80012aa:	00f1      	lsls	r1, r6, #3
 80012ac:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80012ae:	f005 fd15 	bl	8006cdc <realloc>
 80012b2:	6320      	str	r0, [r4, #48]	; 0x30
 80012b4:	6266      	str	r6, [r4, #36]	; 0x24
 80012b6:	19eb      	adds	r3, r5, r7
 80012b8:	2200      	movs	r2, #0
 80012ba:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80012be:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80012c0:	428a      	cmp	r2, r1
 80012c2:	eba3 0005 	sub.w	r0, r3, r5
 80012c6:	f103 0308 	add.w	r3, r3, #8
 80012ca:	d262      	bcs.n	8001392 <sensor_msgs::JointState::deserialize(unsigned char*)+0x188>
 80012cc:	f813 0c07 	ldrb.w	r0, [r3, #-7]
 80012d0:	0201      	lsls	r1, r0, #8
 80012d2:	f813 0c06 	ldrb.w	r0, [r3, #-6]
 80012d6:	9104      	str	r1, [sp, #16]
 80012d8:	2600      	movs	r6, #0
 80012da:	0401      	lsls	r1, r0, #16
 80012dc:	9607      	str	r6, [sp, #28]
 80012de:	9605      	str	r6, [sp, #20]
 80012e0:	9106      	str	r1, [sp, #24]
 80012e2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80012e6:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
 80012ea:	4306      	orrs	r6, r0
 80012ec:	f813 0c08 	ldrb.w	r0, [r3, #-8]
 80012f0:	430f      	orrs	r7, r1
 80012f2:	ea40 0806 	orr.w	r8, r0, r6
 80012f6:	2100      	movs	r1, #0
 80012f8:	f813 6c05 	ldrb.w	r6, [r3, #-5]
 80012fc:	ea41 0907 	orr.w	r9, r1, r7
 8001300:	2100      	movs	r1, #0
 8001302:	9109      	str	r1, [sp, #36]	; 0x24
 8001304:	0631      	lsls	r1, r6, #24
 8001306:	9108      	str	r1, [sp, #32]
 8001308:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800130c:	4646      	mov	r6, r8
 800130e:	4306      	orrs	r6, r0
 8001310:	4630      	mov	r0, r6
 8001312:	f813 6c04 	ldrb.w	r6, [r3, #-4]
 8001316:	9601      	str	r6, [sp, #4]
 8001318:	464f      	mov	r7, r9
 800131a:	2600      	movs	r6, #0
 800131c:	430f      	orrs	r7, r1
 800131e:	9600      	str	r6, [sp, #0]
 8001320:	4639      	mov	r1, r7
 8001322:	e9dd 6700 	ldrd	r6, r7, [sp]
 8001326:	4306      	orrs	r6, r0
 8001328:	4630      	mov	r0, r6
 800132a:	f813 6c03 	ldrb.w	r6, [r3, #-3]
 800132e:	0236      	lsls	r6, r6, #8
 8001330:	9617      	str	r6, [sp, #92]	; 0x5c
 8001332:	2600      	movs	r6, #0
 8001334:	430f      	orrs	r7, r1
 8001336:	9616      	str	r6, [sp, #88]	; 0x58
 8001338:	4639      	mov	r1, r7
 800133a:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
 800133e:	4306      	orrs	r6, r0
 8001340:	4630      	mov	r0, r6
 8001342:	f813 6c02 	ldrb.w	r6, [r3, #-2]
 8001346:	0436      	lsls	r6, r6, #16
 8001348:	9619      	str	r6, [sp, #100]	; 0x64
 800134a:	2600      	movs	r6, #0
 800134c:	430f      	orrs	r7, r1
 800134e:	9618      	str	r6, [sp, #96]	; 0x60
 8001350:	4639      	mov	r1, r7
 8001352:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
 8001356:	4306      	orrs	r6, r0
 8001358:	4630      	mov	r0, r6
 800135a:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 800135e:	0636      	lsls	r6, r6, #24
 8001360:	961b      	str	r6, [sp, #108]	; 0x6c
 8001362:	2600      	movs	r6, #0
 8001364:	430f      	orrs	r7, r1
 8001366:	961a      	str	r6, [sp, #104]	; 0x68
 8001368:	4639      	mov	r1, r7
 800136a:	e9dd 671a 	ldrd	r6, r7, [sp, #104]	; 0x68
 800136e:	4306      	orrs	r6, r0
 8001370:	430f      	orrs	r7, r1
 8001372:	4630      	mov	r0, r6
 8001374:	4639      	mov	r1, r7
 8001376:	e9c4 010a 	strd	r0, r1, [r4, #40]	; 0x28
 800137a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800137c:	f8de 1000 	ldr.w	r1, [lr]
 8001380:	f840 1032 	str.w	r1, [r0, r2, lsl #3]
 8001384:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 8001388:	f8de 1004 	ldr.w	r1, [lr, #4]
 800138c:	6071      	str	r1, [r6, #4]
 800138e:	3201      	adds	r2, #1
 8001390:	e795      	b.n	80012be <sensor_msgs::JointState::deserialize(unsigned char*)+0xb4>
 8001392:	182a      	adds	r2, r5, r0
 8001394:	5c29      	ldrb	r1, [r5, r0]
 8001396:	7893      	ldrb	r3, [r2, #2]
 8001398:	7856      	ldrb	r6, [r2, #1]
 800139a:	041b      	lsls	r3, r3, #16
 800139c:	ea43 2606 	orr.w	r6, r3, r6, lsl #8
 80013a0:	78d3      	ldrb	r3, [r2, #3]
 80013a2:	430e      	orrs	r6, r1
 80013a4:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
 80013a8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80013aa:	429e      	cmp	r6, r3
 80013ac:	f100 0704 	add.w	r7, r0, #4
 80013b0:	d904      	bls.n	80013bc <sensor_msgs::JointState::deserialize(unsigned char*)+0x1b2>
 80013b2:	00f1      	lsls	r1, r6, #3
 80013b4:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80013b6:	f005 fc91 	bl	8006cdc <realloc>
 80013ba:	6420      	str	r0, [r4, #64]	; 0x40
 80013bc:	6366      	str	r6, [r4, #52]	; 0x34
 80013be:	19eb      	adds	r3, r5, r7
 80013c0:	2200      	movs	r2, #0
 80013c2:	f104 0e38 	add.w	lr, r4, #56	; 0x38
 80013c6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80013c8:	428a      	cmp	r2, r1
 80013ca:	eba3 0005 	sub.w	r0, r3, r5
 80013ce:	f103 0308 	add.w	r3, r3, #8
 80013d2:	d25d      	bcs.n	8001490 <sensor_msgs::JointState::deserialize(unsigned char*)+0x286>
 80013d4:	f813 0c07 	ldrb.w	r0, [r3, #-7]
 80013d8:	f813 bc04 	ldrb.w	r11, [r3, #-4]
 80013dc:	0201      	lsls	r1, r0, #8
 80013de:	f813 0c06 	ldrb.w	r0, [r3, #-6]
 80013e2:	910a      	str	r1, [sp, #40]	; 0x28
 80013e4:	2600      	movs	r6, #0
 80013e6:	0401      	lsls	r1, r0, #16
 80013e8:	960d      	str	r6, [sp, #52]	; 0x34
 80013ea:	960b      	str	r6, [sp, #44]	; 0x2c
 80013ec:	910c      	str	r1, [sp, #48]	; 0x30
 80013ee:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80013f2:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	; 0x28
 80013f6:	4306      	orrs	r6, r0
 80013f8:	f813 0c08 	ldrb.w	r0, [r3, #-8]
 80013fc:	430f      	orrs	r7, r1
 80013fe:	ea40 0806 	orr.w	r8, r0, r6
 8001402:	2100      	movs	r1, #0
 8001404:	f813 6c05 	ldrb.w	r6, [r3, #-5]
 8001408:	ea41 0907 	orr.w	r9, r1, r7
 800140c:	2100      	movs	r1, #0
 800140e:	910f      	str	r1, [sp, #60]	; 0x3c
 8001410:	0631      	lsls	r1, r6, #24
 8001412:	f813 6c03 	ldrb.w	r6, [r3, #-3]
 8001416:	910e      	str	r1, [sp, #56]	; 0x38
 8001418:	f04f 0a00 	mov.w	r10, #0
 800141c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8001420:	0236      	lsls	r6, r6, #8
 8001422:	961d      	str	r6, [sp, #116]	; 0x74
 8001424:	f8cd a070 	str.w	r10, [sp, #112]	; 0x70
 8001428:	e9dd 671c 	ldrd	r6, r7, [sp, #112]	; 0x70
 800142c:	ea40 0008 	orr.w	r0, r0, r8
 8001430:	ea40 000a 	orr.w	r0, r0, r10
 8001434:	4306      	orrs	r6, r0
 8001436:	4630      	mov	r0, r6
 8001438:	f813 6c02 	ldrb.w	r6, [r3, #-2]
 800143c:	f8cd a078 	str.w	r10, [sp, #120]	; 0x78
 8001440:	ea41 0109 	orr.w	r1, r1, r9
 8001444:	ea41 010b 	orr.w	r1, r1, r11
 8001448:	0436      	lsls	r6, r6, #16
 800144a:	430f      	orrs	r7, r1
 800144c:	961f      	str	r6, [sp, #124]	; 0x7c
 800144e:	4639      	mov	r1, r7
 8001450:	e9dd 671e 	ldrd	r6, r7, [sp, #120]	; 0x78
 8001454:	4306      	orrs	r6, r0
 8001456:	4630      	mov	r0, r6
 8001458:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 800145c:	f8cd a080 	str.w	r10, [sp, #128]	; 0x80
 8001460:	0636      	lsls	r6, r6, #24
 8001462:	430f      	orrs	r7, r1
 8001464:	9621      	str	r6, [sp, #132]	; 0x84
 8001466:	4639      	mov	r1, r7
 8001468:	e9dd 6720 	ldrd	r6, r7, [sp, #128]	; 0x80
 800146c:	4306      	orrs	r6, r0
 800146e:	430f      	orrs	r7, r1
 8001470:	4630      	mov	r0, r6
 8001472:	4639      	mov	r1, r7
 8001474:	e9c4 010e 	strd	r0, r1, [r4, #56]	; 0x38
 8001478:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800147a:	f8de 1000 	ldr.w	r1, [lr]
 800147e:	f840 1032 	str.w	r1, [r0, r2, lsl #3]
 8001482:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 8001486:	f8de 1004 	ldr.w	r1, [lr, #4]
 800148a:	6071      	str	r1, [r6, #4]
 800148c:	3201      	adds	r2, #1
 800148e:	e79a      	b.n	80013c6 <sensor_msgs::JointState::deserialize(unsigned char*)+0x1bc>
 8001490:	182a      	adds	r2, r5, r0
 8001492:	5c29      	ldrb	r1, [r5, r0]
 8001494:	7893      	ldrb	r3, [r2, #2]
 8001496:	7856      	ldrb	r6, [r2, #1]
 8001498:	041b      	lsls	r3, r3, #16
 800149a:	ea43 2606 	orr.w	r6, r3, r6, lsl #8
 800149e:	78d3      	ldrb	r3, [r2, #3]
 80014a0:	430e      	orrs	r6, r1
 80014a2:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
 80014a6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80014a8:	429e      	cmp	r6, r3
 80014aa:	f100 0704 	add.w	r7, r0, #4
 80014ae:	d904      	bls.n	80014ba <sensor_msgs::JointState::deserialize(unsigned char*)+0x2b0>
 80014b0:	00f1      	lsls	r1, r6, #3
 80014b2:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80014b4:	f005 fc12 	bl	8006cdc <realloc>
 80014b8:	6520      	str	r0, [r4, #80]	; 0x50
 80014ba:	6466      	str	r6, [r4, #68]	; 0x44
 80014bc:	19eb      	adds	r3, r5, r7
 80014be:	2200      	movs	r2, #0
 80014c0:	f104 0e48 	add.w	lr, r4, #72	; 0x48
 80014c4:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80014c6:	428a      	cmp	r2, r1
 80014c8:	eba3 0005 	sub.w	r0, r3, r5
 80014cc:	f103 0308 	add.w	r3, r3, #8
 80014d0:	d260      	bcs.n	8001594 <sensor_msgs::JointState::deserialize(unsigned char*)+0x38a>
 80014d2:	f813 0c07 	ldrb.w	r0, [r3, #-7]
 80014d6:	0201      	lsls	r1, r0, #8
 80014d8:	f813 0c06 	ldrb.w	r0, [r3, #-6]
 80014dc:	9110      	str	r1, [sp, #64]	; 0x40
 80014de:	2600      	movs	r6, #0
 80014e0:	0401      	lsls	r1, r0, #16
 80014e2:	9613      	str	r6, [sp, #76]	; 0x4c
 80014e4:	9611      	str	r6, [sp, #68]	; 0x44
 80014e6:	9112      	str	r1, [sp, #72]	; 0x48
 80014e8:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 80014ec:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 80014f0:	4306      	orrs	r6, r0
 80014f2:	f813 0c08 	ldrb.w	r0, [r3, #-8]
 80014f6:	430f      	orrs	r7, r1
 80014f8:	ea40 0806 	orr.w	r8, r0, r6
 80014fc:	2100      	movs	r1, #0
 80014fe:	f813 6c05 	ldrb.w	r6, [r3, #-5]
 8001502:	ea41 0907 	orr.w	r9, r1, r7
 8001506:	2100      	movs	r1, #0
 8001508:	9115      	str	r1, [sp, #84]	; 0x54
 800150a:	0631      	lsls	r1, r6, #24
 800150c:	f813 6c04 	ldrb.w	r6, [r3, #-4]
 8001510:	9603      	str	r6, [sp, #12]
 8001512:	9114      	str	r1, [sp, #80]	; 0x50
 8001514:	2600      	movs	r6, #0
 8001516:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
 800151a:	9602      	str	r6, [sp, #8]
 800151c:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8001520:	ea40 0008 	orr.w	r0, r0, r8
 8001524:	4306      	orrs	r6, r0
 8001526:	4630      	mov	r0, r6
 8001528:	f813 6c03 	ldrb.w	r6, [r3, #-3]
 800152c:	0236      	lsls	r6, r6, #8
 800152e:	9623      	str	r6, [sp, #140]	; 0x8c
 8001530:	ea41 0109 	orr.w	r1, r1, r9
 8001534:	2600      	movs	r6, #0
 8001536:	430f      	orrs	r7, r1
 8001538:	9622      	str	r6, [sp, #136]	; 0x88
 800153a:	4639      	mov	r1, r7
 800153c:	e9dd 6722 	ldrd	r6, r7, [sp, #136]	; 0x88
 8001540:	4306      	orrs	r6, r0
 8001542:	4630      	mov	r0, r6
 8001544:	f813 6c02 	ldrb.w	r6, [r3, #-2]
 8001548:	0436      	lsls	r6, r6, #16
 800154a:	9625      	str	r6, [sp, #148]	; 0x94
 800154c:	2600      	movs	r6, #0
 800154e:	430f      	orrs	r7, r1
 8001550:	9624      	str	r6, [sp, #144]	; 0x90
 8001552:	4639      	mov	r1, r7
 8001554:	e9dd 6724 	ldrd	r6, r7, [sp, #144]	; 0x90
 8001558:	4306      	orrs	r6, r0
 800155a:	4630      	mov	r0, r6
 800155c:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 8001560:	0636      	lsls	r6, r6, #24
 8001562:	9627      	str	r6, [sp, #156]	; 0x9c
 8001564:	2600      	movs	r6, #0
 8001566:	430f      	orrs	r7, r1
 8001568:	9626      	str	r6, [sp, #152]	; 0x98
 800156a:	4639      	mov	r1, r7
 800156c:	e9dd 6726 	ldrd	r6, r7, [sp, #152]	; 0x98
 8001570:	4306      	orrs	r6, r0
 8001572:	430f      	orrs	r7, r1
 8001574:	4630      	mov	r0, r6
 8001576:	4639      	mov	r1, r7
 8001578:	e9c4 0112 	strd	r0, r1, [r4, #72]	; 0x48
 800157c:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800157e:	f8de 1000 	ldr.w	r1, [lr]
 8001582:	f840 1032 	str.w	r1, [r0, r2, lsl #3]
 8001586:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 800158a:	f8de 1004 	ldr.w	r1, [lr, #4]
 800158e:	6071      	str	r1, [r6, #4]
 8001590:	3201      	adds	r2, #1
 8001592:	e797      	b.n	80014c4 <sensor_msgs::JointState::deserialize(unsigned char*)+0x2ba>
 8001594:	b02d      	add	sp, #180	; 0xb4
 8001596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
	...

0800159c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 800159c:	b530      	push	{r4, r5, lr}
 800159e:	b085      	sub	sp, #20
 80015a0:	4604      	mov	r4, r0
 80015a2:	4b09      	ldr	r3, [pc, #36]	; (80015c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 80015a4:	9301      	str	r3, [sp, #4]
 80015a6:	2300      	movs	r3, #0
 80015a8:	9302      	str	r3, [sp, #8]
 80015aa:	9303      	str	r3, [sp, #12]
 80015ac:	f854 3bec 	ldr.w	r3, [r4], #236
 80015b0:	aa01      	add	r2, sp, #4
 80015b2:	681b      	ldr	r3, [r3, #0]
 80015b4:	210a      	movs	r1, #10
 80015b6:	4605      	mov	r5, r0
 80015b8:	4798      	blx	r3
 80015ba:	4620      	mov	r0, r4
 80015bc:	f004 fa99 	bl	8005af2 <mbed::Timer::read_ms()>
 80015c0:	f8c5 00fc 	str.w	r0, [r5, #252]	; 0xfc
 80015c4:	b005      	add	sp, #20
 80015c6:	bd30      	pop	{r4, r5, pc}
 80015c8:	08007144 	.word	0x08007144

080015cc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 80015cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80015d0:	b086      	sub	sp, #24
 80015d2:	4b2b      	ldr	r3, [pc, #172]	; (8001680 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 80015d4:	9300      	str	r3, [sp, #0]
 80015d6:	2200      	movs	r2, #0
 80015d8:	4b2a      	ldr	r3, [pc, #168]	; (8001684 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 80015da:	f8ad 2004 	strh.w	r2, [sp, #4]
 80015de:	4605      	mov	r5, r0
 80015e0:	9302      	str	r3, [sp, #8]
 80015e2:	9303      	str	r3, [sp, #12]
 80015e4:	9304      	str	r3, [sp, #16]
 80015e6:	9205      	str	r2, [sp, #20]
 80015e8:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 80015ec:	f500 66ae 	add.w	r6, r0, #1392	; 0x570
 80015f0:	f44f 7700 	mov.w	r7, #512	; 0x200
 80015f4:	6823      	ldr	r3, [r4, #0]
 80015f6:	b1bb      	cbz	r3, 8001628 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 80015f8:	6858      	ldr	r0, [r3, #4]
 80015fa:	689a      	ldr	r2, [r3, #8]
 80015fc:	f8ad 2004 	strh.w	r2, [sp, #4]
 8001600:	681a      	ldr	r2, [r3, #0]
 8001602:	6803      	ldr	r3, [r0, #0]
 8001604:	9202      	str	r2, [sp, #8]
 8001606:	689b      	ldr	r3, [r3, #8]
 8001608:	4798      	blx	r3
 800160a:	6823      	ldr	r3, [r4, #0]
 800160c:	9003      	str	r0, [sp, #12]
 800160e:	6858      	ldr	r0, [r3, #4]
 8001610:	6803      	ldr	r3, [r0, #0]
 8001612:	68db      	ldr	r3, [r3, #12]
 8001614:	4798      	blx	r3
 8001616:	6821      	ldr	r1, [r4, #0]
 8001618:	682b      	ldr	r3, [r5, #0]
 800161a:	9004      	str	r0, [sp, #16]
 800161c:	9705      	str	r7, [sp, #20]
 800161e:	681b      	ldr	r3, [r3, #0]
 8001620:	6909      	ldr	r1, [r1, #16]
 8001622:	466a      	mov	r2, sp
 8001624:	4628      	mov	r0, r5
 8001626:	4798      	blx	r3
 8001628:	3404      	adds	r4, #4
 800162a:	42b4      	cmp	r4, r6
 800162c:	d1e2      	bne.n	80015f4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 800162e:	f205 56d4 	addw	r6, r5, #1492	; 0x5d4
 8001632:	f44f 7700 	mov.w	r7, #512	; 0x200
 8001636:	6820      	ldr	r0, [r4, #0]
 8001638:	b1c8      	cbz	r0, 800166e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 800163a:	6843      	ldr	r3, [r0, #4]
 800163c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8001640:	6883      	ldr	r3, [r0, #8]
 8001642:	9302      	str	r3, [sp, #8]
 8001644:	6803      	ldr	r3, [r0, #0]
 8001646:	689b      	ldr	r3, [r3, #8]
 8001648:	4798      	blx	r3
 800164a:	9003      	str	r0, [sp, #12]
 800164c:	6820      	ldr	r0, [r4, #0]
 800164e:	6803      	ldr	r3, [r0, #0]
 8001650:	68db      	ldr	r3, [r3, #12]
 8001652:	4798      	blx	r3
 8001654:	682b      	ldr	r3, [r5, #0]
 8001656:	9004      	str	r0, [sp, #16]
 8001658:	6820      	ldr	r0, [r4, #0]
 800165a:	f8d3 8000 	ldr.w	r8, [r3]
 800165e:	6803      	ldr	r3, [r0, #0]
 8001660:	9705      	str	r7, [sp, #20]
 8001662:	685b      	ldr	r3, [r3, #4]
 8001664:	4798      	blx	r3
 8001666:	466a      	mov	r2, sp
 8001668:	4601      	mov	r1, r0
 800166a:	4628      	mov	r0, r5
 800166c:	47c0      	blx	r8
 800166e:	3404      	adds	r4, #4
 8001670:	42a6      	cmp	r6, r4
 8001672:	d1e0      	bne.n	8001636 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 8001674:	2301      	movs	r3, #1
 8001676:	f885 35e8 	strb.w	r3, [r5, #1512]	; 0x5e8
 800167a:	b006      	add	sp, #24
 800167c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001680:	0800715c 	.word	0x0800715c
 8001684:	080074c6 	.word	0x080074c6

08001688 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 8001688:	b5f0      	push	{r4, r5, r6, r7, lr}
 800168a:	b085      	sub	sp, #20
 800168c:	f100 05ec 	add.w	r5, r0, #236	; 0xec
 8001690:	4b1f      	ldr	r3, [pc, #124]	; (8001710 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 8001692:	9301      	str	r3, [sp, #4]
 8001694:	4604      	mov	r4, r0
 8001696:	2300      	movs	r3, #0
 8001698:	4628      	mov	r0, r5
 800169a:	9302      	str	r3, [sp, #8]
 800169c:	9303      	str	r3, [sp, #12]
 800169e:	460e      	mov	r6, r1
 80016a0:	f004 fa27 	bl	8005af2 <mbed::Timer::read_ms()>
 80016a4:	f8d4 20fc 	ldr.w	r2, [r4, #252]	; 0xfc
 80016a8:	4631      	mov	r1, r6
 80016aa:	1a87      	subs	r7, r0, r2
 80016ac:	a801      	add	r0, sp, #4
 80016ae:	f7fe fdd3 	bl	8000258 <std_msgs::Time::deserialize(unsigned char*)>
 80016b2:	9b02      	ldr	r3, [sp, #8]
 80016b4:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 80016b8:	fbb7 f2f6 	udiv	r2, r7, r6
 80016bc:	4413      	add	r3, r2
 80016be:	9302      	str	r3, [sp, #8]
 80016c0:	fb06 7212 	mls	r2, r6, r2, r7
 80016c4:	9b03      	ldr	r3, [sp, #12]
 80016c6:	4f13      	ldr	r7, [pc, #76]	; (8001714 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 80016c8:	4628      	mov	r0, r5
 80016ca:	fb07 3202 	mla	r2, r7, r2, r3
 80016ce:	9203      	str	r2, [sp, #12]
 80016d0:	f004 fa0f 	bl	8005af2 <mbed::Timer::read_ms()>
 80016d4:	9a02      	ldr	r2, [sp, #8]
 80016d6:	fbb0 f3f6 	udiv	r3, r0, r6
 80016da:	3a01      	subs	r2, #1
 80016dc:	1ad2      	subs	r2, r2, r3
 80016de:	9903      	ldr	r1, [sp, #12]
 80016e0:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80016e4:	4a0c      	ldr	r2, [pc, #48]	; (8001718 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x90>)
 80016e6:	fb06 0313 	mls	r3, r6, r3, r0
 80016ea:	440a      	add	r2, r1
 80016ec:	fb07 2313 	mls	r3, r7, r3, r2
 80016f0:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 80016f4:	f504 7182 	add.w	r1, r4, #260	; 0x104
 80016f8:	f504 7080 	add.w	r0, r4, #256	; 0x100
 80016fc:	f000 fb06 	bl	8001d0c <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8001700:	4628      	mov	r0, r5
 8001702:	f004 f9f6 	bl	8005af2 <mbed::Timer::read_ms()>
 8001706:	f8c4 05f0 	str.w	r0, [r4, #1520]	; 0x5f0
 800170a:	b005      	add	sp, #20
 800170c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800170e:	bf00      	nop
 8001710:	08007144 	.word	0x08007144
 8001714:	000f4240 	.word	0x000f4240
 8001718:	3b9aca00 	.word	0x3b9aca00

0800171c <_GLOBAL__sub_I_myled>:
 800171c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800171e:	4c63      	ldr	r4, [pc, #396]	; (80018ac <_GLOBAL__sub_I_myled+0x190>)
 8001720:	4d63      	ldr	r5, [pc, #396]	; (80018b0 <_GLOBAL__sub_I_myled+0x194>)
 8001722:	4f64      	ldr	r7, [pc, #400]	; (80018b4 <_GLOBAL__sub_I_myled+0x198>)
 8001724:	221c      	movs	r2, #28
 8001726:	2100      	movs	r1, #0
 8001728:	4620      	mov	r0, r4
 800172a:	f005 f866 	bl	80067fa <memset>
 800172e:	4620      	mov	r0, r4
 8001730:	2105      	movs	r1, #5
 8001732:	f000 fd13 	bl	800215c <gpio_init_out>
 8001736:	4628      	mov	r0, r5
 8001738:	4b5f      	ldr	r3, [pc, #380]	; (80018b8 <_GLOBAL__sub_I_myled+0x19c>)
 800173a:	f840 3b04 	str.w	r3, [r0], #4
 800173e:	2400      	movs	r4, #0
 8001740:	2304      	movs	r3, #4
 8001742:	2203      	movs	r2, #3
 8001744:	2102      	movs	r1, #2
 8001746:	f105 06ec 	add.w	r6, r5, #236	; 0xec
 800174a:	e88d 0018 	stmia.w	sp, {r3, r4}
 800174e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001752:	f000 fbd1 	bl	8001ef8 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8001756:	4630      	mov	r0, r6
 8001758:	f004 f9e1 	bl	8005b1e <mbed::Timer::Timer()>
 800175c:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8001760:	f8c5 30e8 	str.w	r3, [r5, #232]	; 0xe8
 8001764:	4630      	mov	r0, r6
 8001766:	f44f 7600 	mov.w	r6, #512	; 0x200
 800176a:	f004 f996 	bl	8005a9a <mbed::Timer::start()>
 800176e:	4632      	mov	r2, r6
 8001770:	4621      	mov	r1, r4
 8001772:	f505 7086 	add.w	r0, r5, #268	; 0x10c
 8001776:	f8c5 40fc 	str.w	r4, [r5, #252]	; 0xfc
 800177a:	f8c5 4100 	str.w	r4, [r5, #256]	; 0x100
 800177e:	f8c5 4104 	str.w	r4, [r5, #260]	; 0x104
 8001782:	f8c5 4108 	str.w	r4, [r5, #264]	; 0x108
 8001786:	f005 f838 	bl	80067fa <memset>
 800178a:	4632      	mov	r2, r6
 800178c:	4621      	mov	r1, r4
 800178e:	2664      	movs	r6, #100	; 0x64
 8001790:	f505 7043 	add.w	r0, r5, #780	; 0x30c
 8001794:	f005 f831 	bl	80067fa <memset>
 8001798:	4632      	mov	r2, r6
 800179a:	4621      	mov	r1, r4
 800179c:	f205 500c 	addw	r0, r5, #1292	; 0x50c
 80017a0:	f005 f82b 	bl	80067fa <memset>
 80017a4:	4632      	mov	r2, r6
 80017a6:	4621      	mov	r1, r4
 80017a8:	f505 60ae 	add.w	r0, r5, #1392	; 0x570
 80017ac:	f005 f825 	bl	80067fa <memset>
 80017b0:	4b42      	ldr	r3, [pc, #264]	; (80018bc <_GLOBAL__sub_I_myled+0x1a0>)
 80017b2:	f8c5 35fc 	str.w	r3, [r5, #1532]	; 0x5fc
 80017b6:	f505 63c2 	add.w	r3, r5, #1552	; 0x610
 80017ba:	2200      	movs	r2, #0
 80017bc:	f8c5 4600 	str.w	r4, [r5, #1536]	; 0x600
 80017c0:	f8c5 4604 	str.w	r4, [r5, #1540]	; 0x604
 80017c4:	f8c5 4608 	str.w	r4, [r5, #1544]	; 0x608
 80017c8:	f8c5 460c 	str.w	r4, [r5, #1548]	; 0x60c
 80017cc:	601a      	str	r2, [r3, #0]
 80017ce:	f8c5 4614 	str.w	r4, [r5, #1556]	; 0x614
 80017d2:	f8c5 4618 	str.w	r4, [r5, #1560]	; 0x618
 80017d6:	f8c5 461c 	str.w	r4, [r5, #1564]	; 0x61c
 80017da:	f8c5 4620 	str.w	r4, [r5, #1568]	; 0x620
 80017de:	4a38      	ldr	r2, [pc, #224]	; (80018c0 <_GLOBAL__sub_I_myled+0x1a4>)
 80017e0:	4938      	ldr	r1, [pc, #224]	; (80018c4 <_GLOBAL__sub_I_myled+0x1a8>)
 80017e2:	f8c5 45d4 	str.w	r4, [r5, #1492]	; 0x5d4
 80017e6:	4628      	mov	r0, r5
 80017e8:	f8c5 45d8 	str.w	r4, [r5, #1496]	; 0x5d8
 80017ec:	f8c5 45dc 	str.w	r4, [r5, #1500]	; 0x5dc
 80017f0:	f8c5 45e0 	str.w	r4, [r5, #1504]	; 0x5e0
 80017f4:	f8c5 45e4 	str.w	r4, [r5, #1508]	; 0x5e4
 80017f8:	f885 45e8 	strb.w	r4, [r5, #1512]	; 0x5e8
 80017fc:	f8c5 45ec 	str.w	r4, [r5, #1516]	; 0x5ec
 8001800:	f8c5 45f0 	str.w	r4, [r5, #1520]	; 0x5f0
 8001804:	f8c5 45f4 	str.w	r4, [r5, #1524]	; 0x5f4
 8001808:	f885 45f8 	strb.w	r4, [r5, #1528]	; 0x5f8
 800180c:	f004 fae8 	bl	8005de0 <__aeabi_atexit>
 8001810:	4b2d      	ldr	r3, [pc, #180]	; (80018c8 <_GLOBAL__sub_I_myled+0x1ac>)
 8001812:	4a2e      	ldr	r2, [pc, #184]	; (80018cc <_GLOBAL__sub_I_myled+0x1b0>)
 8001814:	601a      	str	r2, [r3, #0]
 8001816:	4a2e      	ldr	r2, [pc, #184]	; (80018d0 <_GLOBAL__sub_I_myled+0x1b4>)
 8001818:	4e2e      	ldr	r6, [pc, #184]	; (80018d4 <_GLOBAL__sub_I_myled+0x1b8>)
 800181a:	4d2f      	ldr	r5, [pc, #188]	; (80018d8 <_GLOBAL__sub_I_myled+0x1bc>)
 800181c:	611c      	str	r4, [r3, #16]
 800181e:	2000      	movs	r0, #0
 8001820:	2100      	movs	r1, #0
 8001822:	e9c3 010a 	strd	r0, r1, [r3, #40]	; 0x28
 8001826:	615d      	str	r5, [r3, #20]
 8001828:	619c      	str	r4, [r3, #24]
 800182a:	61dc      	str	r4, [r3, #28]
 800182c:	621c      	str	r4, [r3, #32]
 800182e:	625c      	str	r4, [r3, #36]	; 0x24
 8001830:	631c      	str	r4, [r3, #48]	; 0x30
 8001832:	635c      	str	r4, [r3, #52]	; 0x34
 8001834:	605e      	str	r6, [r3, #4]
 8001836:	609c      	str	r4, [r3, #8]
 8001838:	60dc      	str	r4, [r3, #12]
 800183a:	e9c3 010e 	strd	r0, r1, [r3, #56]	; 0x38
 800183e:	641c      	str	r4, [r3, #64]	; 0x40
 8001840:	645c      	str	r4, [r3, #68]	; 0x44
 8001842:	e9c3 0112 	strd	r0, r1, [r3, #72]	; 0x48
 8001846:	651c      	str	r4, [r3, #80]	; 0x50
 8001848:	6053      	str	r3, [r2, #4]
 800184a:	4b24      	ldr	r3, [pc, #144]	; (80018dc <_GLOBAL__sub_I_myled+0x1c0>)
 800184c:	6017      	str	r7, [r2, #0]
 800184e:	6114      	str	r4, [r2, #16]
 8001850:	4a23      	ldr	r2, [pc, #140]	; (80018e0 <_GLOBAL__sub_I_myled+0x1c4>)
 8001852:	601a      	str	r2, [r3, #0]
 8001854:	4a23      	ldr	r2, [pc, #140]	; (80018e4 <_GLOBAL__sub_I_myled+0x1c8>)
 8001856:	611a      	str	r2, [r3, #16]
 8001858:	4a23      	ldr	r2, [pc, #140]	; (80018e8 <_GLOBAL__sub_I_myled+0x1cc>)
 800185a:	615e      	str	r6, [r3, #20]
 800185c:	619c      	str	r4, [r3, #24]
 800185e:	61dc      	str	r4, [r3, #28]
 8001860:	621c      	str	r4, [r3, #32]
 8001862:	625d      	str	r5, [r3, #36]	; 0x24
 8001864:	629c      	str	r4, [r3, #40]	; 0x28
 8001866:	62dc      	str	r4, [r3, #44]	; 0x2c
 8001868:	631c      	str	r4, [r3, #48]	; 0x30
 800186a:	635c      	str	r4, [r3, #52]	; 0x34
 800186c:	639a      	str	r2, [r3, #56]	; 0x38
 800186e:	4a1f      	ldr	r2, [pc, #124]	; (80018ec <_GLOBAL__sub_I_myled+0x1d0>)
 8001870:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8001874:	2201      	movs	r2, #1
 8001876:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 800187a:	4a1d      	ldr	r2, [pc, #116]	; (80018f0 <_GLOBAL__sub_I_myled+0x1d4>)
 800187c:	63dc      	str	r4, [r3, #60]	; 0x3c
 800187e:	e9c3 0110 	strd	r0, r1, [r3, #64]	; 0x40
 8001882:	649c      	str	r4, [r3, #72]	; 0x48
 8001884:	64dc      	str	r4, [r3, #76]	; 0x4c
 8001886:	e9c3 0114 	strd	r0, r1, [r3, #80]	; 0x50
 800188a:	659c      	str	r4, [r3, #88]	; 0x58
 800188c:	65dc      	str	r4, [r3, #92]	; 0x5c
 800188e:	e9c3 0118 	strd	r0, r1, [r3, #96]	; 0x60
 8001892:	669c      	str	r4, [r3, #104]	; 0x68
 8001894:	66dc      	str	r4, [r3, #108]	; 0x6c
 8001896:	e9c3 011c 	strd	r0, r1, [r3, #112]	; 0x70
 800189a:	679c      	str	r4, [r3, #120]	; 0x78
 800189c:	67dc      	str	r4, [r3, #124]	; 0x7c
 800189e:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
 80018a2:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
 80018a6:	609a      	str	r2, [r3, #8]
 80018a8:	b003      	add	sp, #12
 80018aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80018ac:	200002f0 	.word	0x200002f0
 80018b0:	2000030c 	.word	0x2000030c
 80018b4:	08007228 	.word	0x08007228
 80018b8:	08007204 	.word	0x08007204
 80018bc:	0800718c 	.word	0x0800718c
 80018c0:	200001c4 	.word	0x200001c4
 80018c4:	08001ccd 	.word	0x08001ccd
 80018c8:	20000298 	.word	0x20000298
 80018cc:	080071ec 	.word	0x080071ec
 80018d0:	20000280 	.word	0x20000280
 80018d4:	080071a4 	.word	0x080071a4
 80018d8:	080074c6 	.word	0x080074c6
 80018dc:	20000930 	.word	0x20000930
 80018e0:	08007218 	.word	0x08007218
 80018e4:	080071d4 	.word	0x080071d4
 80018e8:	080071bc 	.word	0x080071bc
 80018ec:	08000951 	.word	0x08000951
 80018f0:	08007234 	.word	0x08007234

080018f4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 80018f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80018f6:	2963      	cmp	r1, #99	; 0x63
 80018f8:	b085      	sub	sp, #20
 80018fa:	4604      	mov	r4, r0
 80018fc:	460e      	mov	r6, r1
 80018fe:	dd03      	ble.n	8001908 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8001900:	f890 55e8 	ldrb.w	r5, [r0, #1512]	; 0x5e8
 8001904:	2d00      	cmp	r5, #0
 8001906:	d04d      	beq.n	80019a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8001908:	6813      	ldr	r3, [r2, #0]
 800190a:	f204 3113 	addw	r1, r4, #787	; 0x313
 800190e:	681b      	ldr	r3, [r3, #0]
 8001910:	4610      	mov	r0, r2
 8001912:	4798      	blx	r3
 8001914:	23ff      	movs	r3, #255	; 0xff
 8001916:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
 800191a:	23fe      	movs	r3, #254	; 0xfe
 800191c:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8001920:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
 8001924:	b2c3      	uxtb	r3, r0
 8001926:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
 800192a:	4413      	add	r3, r2
 800192c:	43db      	mvns	r3, r3
 800192e:	f884 6311 	strb.w	r6, [r4, #785]	; 0x311
 8001932:	f346 2607 	sbfx	r6, r6, #8, #8
 8001936:	f884 230f 	strb.w	r2, [r4, #783]	; 0x30f
 800193a:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
 800193e:	f884 6312 	strb.w	r6, [r4, #786]	; 0x312
 8001942:	f204 3111 	addw	r1, r4, #785	; 0x311
 8001946:	2205      	movs	r2, #5
 8001948:	2300      	movs	r3, #0
 800194a:	1d86      	adds	r6, r0, #6
 800194c:	42b2      	cmp	r2, r6
 800194e:	dc04      	bgt.n	800195a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8001950:	f811 5b01 	ldrb.w	r5, [r1], #1
 8001954:	3201      	adds	r2, #1
 8001956:	442b      	add	r3, r5
 8001958:	e7f8      	b.n	800194c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 800195a:	f100 0508 	add.w	r5, r0, #8
 800195e:	4420      	add	r0, r4
 8001960:	43db      	mvns	r3, r3
 8001962:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8001966:	f880 3313 	strb.w	r3, [r0, #787]	; 0x313
 800196a:	dc0c      	bgt.n	8001986 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 800196c:	f504 7743 	add.w	r7, r4, #780	; 0x30c
 8001970:	463e      	mov	r6, r7
 8001972:	3404      	adds	r4, #4
 8001974:	1bf3      	subs	r3, r6, r7
 8001976:	429d      	cmp	r5, r3
 8001978:	dd14      	ble.n	80019a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 800197a:	f816 1b01 	ldrb.w	r1, [r6], #1
 800197e:	4620      	mov	r0, r4
 8001980:	f000 fb2a 	bl	8001fd8 <BufferedSerial::putc(int)>
 8001984:	e7f6      	b.n	8001974 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 8001986:	4b09      	ldr	r3, [pc, #36]	; (80019ac <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 8001988:	9301      	str	r3, [sp, #4]
 800198a:	2303      	movs	r3, #3
 800198c:	f88d 3008 	strb.w	r3, [sp, #8]
 8001990:	4b07      	ldr	r3, [pc, #28]	; (80019b0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 8001992:	9303      	str	r3, [sp, #12]
 8001994:	6823      	ldr	r3, [r4, #0]
 8001996:	aa01      	add	r2, sp, #4
 8001998:	681b      	ldr	r3, [r3, #0]
 800199a:	2107      	movs	r1, #7
 800199c:	4620      	mov	r0, r4
 800199e:	4798      	blx	r3
 80019a0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80019a4:	4628      	mov	r0, r5
 80019a6:	b005      	add	sp, #20
 80019a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80019aa:	bf00      	nop
 80019ac:	08007174 	.word	0x08007174
 80019b0:	080073a5 	.word	0x080073a5

080019b4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 80019b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80019b8:	f100 08ec 	add.w	r8, r0, #236	; 0xec
 80019bc:	4604      	mov	r4, r0
 80019be:	4640      	mov	r0, r8
 80019c0:	f004 f897 	bl	8005af2 <mbed::Timer::read_ms()>
 80019c4:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	; 0x5f0
 80019c8:	f642 22f8 	movw	r2, #11000	; 0x2af8
 80019cc:	1ac3      	subs	r3, r0, r3
 80019ce:	4293      	cmp	r3, r2
 80019d0:	bf84      	itt	hi
 80019d2:	2300      	movhi	r3, #0
 80019d4:	f884 35e8 	strbhi.w	r3, [r4, #1512]	; 0x5e8
 80019d8:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	; 0x5d4
 80019dc:	4605      	mov	r5, r0
 80019de:	b133      	cbz	r3, 80019ee <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 80019e0:	f8d4 35f4 	ldr.w	r3, [r4, #1524]	; 0x5f4
 80019e4:	4283      	cmp	r3, r0
 80019e6:	bf3c      	itt	cc
 80019e8:	2300      	movcc	r3, #0
 80019ea:	f8c4 35d4 	strcc.w	r3, [r4, #1492]	; 0x5d4
 80019ee:	f104 0904 	add.w	r9, r4, #4
 80019f2:	2600      	movs	r6, #0
 80019f4:	f504 7786 	add.w	r7, r4, #268	; 0x10c
 80019f8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80019fc:	b9ab      	cbnz	r3, 8001a2a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x76>
 80019fe:	4648      	mov	r0, r9
 8001a00:	f000 f992 	bl	8001d28 <BufferedSerial::readable()>
 8001a04:	b9e8      	cbnz	r0, 8001a42 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x8e>
 8001a06:	f894 05e8 	ldrb.w	r0, [r4, #1512]	; 0x5e8
 8001a0a:	b160      	cbz	r0, 8001a26 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
 8001a0c:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	; 0x5ec
 8001a10:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8001a14:	1aeb      	subs	r3, r5, r3
 8001a16:	4293      	cmp	r3, r2
 8001a18:	d904      	bls.n	8001a24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x70>
 8001a1a:	4620      	mov	r0, r4
 8001a1c:	f7ff fdbe 	bl	800159c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8001a20:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8001a24:	2000      	movs	r0, #0
 8001a26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8001a2a:	4640      	mov	r0, r8
 8001a2c:	f004 f861 	bl	8005af2 <mbed::Timer::read_ms()>
 8001a30:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8001a34:	1b40      	subs	r0, r0, r5
 8001a36:	4298      	cmp	r0, r3
 8001a38:	d9e1      	bls.n	80019fe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4a>
 8001a3a:	f06f 0001 	mvn.w	r0, #1
 8001a3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8001a42:	4648      	mov	r0, r9
 8001a44:	f000 f97a 	bl	8001d3c <BufferedSerial::getc()>
 8001a48:	2800      	cmp	r0, #0
 8001a4a:	dbdc      	blt.n	8001a06 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x52>
 8001a4c:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8001a50:	f8d4 a5d4 	ldr.w	r10, [r4, #1492]	; 0x5d4
 8001a54:	4403      	add	r3, r0
 8001a56:	f1ba 0f07 	cmp.w	r10, #7
 8001a5a:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 8001a5e:	d112      	bne.n	8001a86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd2>
 8001a60:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8001a64:	1c5a      	adds	r2, r3, #1
 8001a66:	4423      	add	r3, r4
 8001a68:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
 8001a6c:	f883 010c 	strb.w	r0, [r3, #268]	; 0x10c
 8001a70:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8001a74:	3b01      	subs	r3, #1
 8001a76:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8001a7a:	2b00      	cmp	r3, #0
 8001a7c:	d1bc      	bne.n	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001a7e:	2308      	movs	r3, #8
 8001a80:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8001a84:	e7b8      	b.n	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001a86:	f1ba 0f00 	cmp.w	r10, #0
 8001a8a:	d114      	bne.n	8001ab6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x102>
 8001a8c:	28ff      	cmp	r0, #255	; 0xff
 8001a8e:	d107      	bne.n	8001aa0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xec>
 8001a90:	2301      	movs	r3, #1
 8001a92:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8001a96:	f105 0314 	add.w	r3, r5, #20
 8001a9a:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 8001a9e:	e7ab      	b.n	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001aa0:	4640      	mov	r0, r8
 8001aa2:	f004 f826 	bl	8005af2 <mbed::Timer::read_ms()>
 8001aa6:	f241 3388 	movw	r3, #5000	; 0x1388
 8001aaa:	1b40      	subs	r0, r0, r5
 8001aac:	4298      	cmp	r0, r3
 8001aae:	d9a3      	bls.n	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001ab0:	f884 a5e8 	strb.w	r10, [r4, #1512]	; 0x5e8
 8001ab4:	e7c1      	b.n	8001a3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
 8001ab6:	f1ba 0f01 	cmp.w	r10, #1
 8001aba:	d10d      	bne.n	8001ad8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x124>
 8001abc:	28fe      	cmp	r0, #254	; 0xfe
 8001abe:	d101      	bne.n	8001ac4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x110>
 8001ac0:	2302      	movs	r3, #2
 8001ac2:	e7dd      	b.n	8001a80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8001ac4:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8001ac8:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8001acc:	2b00      	cmp	r3, #0
 8001ace:	d193      	bne.n	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001ad0:	4620      	mov	r0, r4
 8001ad2:	f7ff fd63 	bl	800159c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8001ad6:	e78f      	b.n	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001ad8:	f1ba 0f02 	cmp.w	r10, #2
 8001adc:	d109      	bne.n	8001af2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8001ade:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8001ae2:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
 8001ae6:	2303      	movs	r3, #3
 8001ae8:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8001aec:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8001af0:	e782      	b.n	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001af2:	f1ba 0f03 	cmp.w	r10, #3
 8001af6:	d107      	bne.n	8001b08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x154>
 8001af8:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8001afc:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8001b00:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8001b04:	2304      	movs	r3, #4
 8001b06:	e7bb      	b.n	8001a80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8001b08:	f1ba 0f04 	cmp.w	r10, #4
 8001b0c:	d10b      	bne.n	8001b26 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8001b0e:	425a      	negs	r2, r3
 8001b10:	b2d2      	uxtb	r2, r2
 8001b12:	b2db      	uxtb	r3, r3
 8001b14:	bf58      	it	pl
 8001b16:	4253      	negpl	r3, r2
 8001b18:	2bff      	cmp	r3, #255	; 0xff
 8001b1a:	d101      	bne.n	8001b20 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16c>
 8001b1c:	2305      	movs	r3, #5
 8001b1e:	e7af      	b.n	8001a80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8001b20:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8001b24:	e768      	b.n	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001b26:	f1ba 0f05 	cmp.w	r10, #5
 8001b2a:	d103      	bne.n	8001b34 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
 8001b2c:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8001b30:	2306      	movs	r3, #6
 8001b32:	e7d9      	b.n	8001ae8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x134>
 8001b34:	f1ba 0f06 	cmp.w	r10, #6
 8001b38:	d10b      	bne.n	8001b52 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19e>
 8001b3a:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8001b3e:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8001b42:	2307      	movs	r3, #7
 8001b44:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8001b48:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8001b4c:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8001b50:	e793      	b.n	8001a7a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xc6>
 8001b52:	f1ba 0f08 	cmp.w	r10, #8
 8001b56:	f47f af4f 	bne.w	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001b5a:	425a      	negs	r2, r3
 8001b5c:	b2d2      	uxtb	r2, r2
 8001b5e:	b2db      	uxtb	r3, r3
 8001b60:	bf58      	it	pl
 8001b62:	4253      	negpl	r3, r2
 8001b64:	2bff      	cmp	r3, #255	; 0xff
 8001b66:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8001b6a:	f47f af45 	bne.w	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001b6e:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8001b72:	b96b      	cbnz	r3, 8001b90 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1dc>
 8001b74:	4620      	mov	r0, r4
 8001b76:	f7ff fd11 	bl	800159c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8001b7a:	4620      	mov	r0, r4
 8001b7c:	f7ff fd26 	bl	80015cc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8001b80:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8001b84:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8001b88:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001b8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8001b90:	2b0a      	cmp	r3, #10
 8001b92:	d104      	bne.n	8001b9e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
 8001b94:	4639      	mov	r1, r7
 8001b96:	4620      	mov	r0, r4
 8001b98:	f7ff fd76 	bl	8001688 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 8001b9c:	e72c      	b.n	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001b9e:	2b06      	cmp	r3, #6
 8001ba0:	d108      	bne.n	8001bb4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
 8001ba2:	4639      	mov	r1, r7
 8001ba4:	f204 50fc 	addw	r0, r4, #1532	; 0x5fc
 8001ba8:	f7ff fa98 	bl	80010dc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8001bac:	2301      	movs	r3, #1
 8001bae:	f884 35f8 	strb.w	r3, [r4, #1528]	; 0x5f8
 8001bb2:	e721      	b.n	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001bb4:	2b0b      	cmp	r3, #11
 8001bb6:	d102      	bne.n	8001bbe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20a>
 8001bb8:	f884 65e8 	strb.w	r6, [r4, #1512]	; 0x5e8
 8001bbc:	e71c      	b.n	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001bbe:	33f8      	adds	r3, #248	; 0xf8
 8001bc0:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8001bc4:	2800      	cmp	r0, #0
 8001bc6:	f43f af17 	beq.w	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8001bca:	6803      	ldr	r3, [r0, #0]
 8001bcc:	4639      	mov	r1, r7
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	4798      	blx	r3
 8001bd2:	e711      	b.n	80019f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>

08001bd4 <main>:
 8001bd4:	4b36      	ldr	r3, [pc, #216]	; (8001cb0 <main+0xdc>)
 8001bd6:	4c37      	ldr	r4, [pc, #220]	; (8001cb4 <main+0xe0>)
 8001bd8:	68da      	ldr	r2, [r3, #12]
 8001bda:	681b      	ldr	r3, [r3, #0]
 8001bdc:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8001be0:	041b      	lsls	r3, r3, #16
 8001be2:	b580      	push	{r7, lr}
 8001be4:	1d20      	adds	r0, r4, #4
 8001be6:	6013      	str	r3, [r2, #0]
 8001be8:	f8c4 10e8 	str.w	r1, [r4, #232]	; 0xe8
 8001bec:	f003 fe72 	bl	80058d4 <mbed::SerialBase::baud(int)>
 8001bf0:	2300      	movs	r3, #0
 8001bf2:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8001bf6:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8001bfa:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
 8001bfe:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 8001c02:	f504 62a1 	add.w	r2, r4, #1288	; 0x508
 8001c06:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8001c0a:	2900      	cmp	r1, #0
 8001c0c:	d147      	bne.n	8001c9e <main+0xca>
 8001c0e:	4a2a      	ldr	r2, [pc, #168]	; (8001cb8 <main+0xe4>)
 8001c10:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8001c14:	337d      	adds	r3, #125	; 0x7d
 8001c16:	f8c1 250c 	str.w	r2, [r1, #1292]	; 0x50c
 8001c1a:	6093      	str	r3, [r2, #8]
 8001c1c:	60d4      	str	r4, [r2, #12]
 8001c1e:	4a27      	ldr	r2, [pc, #156]	; (8001cbc <main+0xe8>)
 8001c20:	2300      	movs	r3, #0
 8001c22:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8001c26:	2900      	cmp	r1, #0
 8001c28:	d13d      	bne.n	8001ca6 <main+0xd2>
 8001c2a:	f503 71ae 	add.w	r1, r3, #348	; 0x15c
 8001c2e:	4a24      	ldr	r2, [pc, #144]	; (8001cc0 <main+0xec>)
 8001c30:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
 8001c34:	3364      	adds	r3, #100	; 0x64
 8001c36:	6053      	str	r3, [r2, #4]
 8001c38:	4c22      	ldr	r4, [pc, #136]	; (8001cc4 <main+0xf0>)
 8001c3a:	2702      	movs	r7, #2
 8001c3c:	2010      	movs	r0, #16
 8001c3e:	6267      	str	r7, [r4, #36]	; 0x24
 8001c40:	f004 fd50 	bl	80066e4 <malloc>
 8001c44:	4606      	mov	r6, r0
 8001c46:	6320      	str	r0, [r4, #48]	; 0x30
 8001c48:	2010      	movs	r0, #16
 8001c4a:	6367      	str	r7, [r4, #52]	; 0x34
 8001c4c:	f004 fd4a 	bl	80066e4 <malloc>
 8001c50:	4605      	mov	r5, r0
 8001c52:	6420      	str	r0, [r4, #64]	; 0x40
 8001c54:	2010      	movs	r0, #16
 8001c56:	6467      	str	r7, [r4, #68]	; 0x44
 8001c58:	f004 fd44 	bl	80066e4 <malloc>
 8001c5c:	2200      	movs	r2, #0
 8001c5e:	2300      	movs	r3, #0
 8001c60:	e9c6 2300 	strd	r2, r3, [r6]
 8001c64:	e9c6 2302 	strd	r2, r3, [r6, #8]
 8001c68:	4b17      	ldr	r3, [pc, #92]	; (8001cc8 <main+0xf4>)
 8001c6a:	4e13      	ldr	r6, [pc, #76]	; (8001cb8 <main+0xe4>)
 8001c6c:	6520      	str	r0, [r4, #80]	; 0x50
 8001c6e:	2200      	movs	r2, #0
 8001c70:	e9c5 2300 	strd	r2, r3, [r5]
 8001c74:	e9c5 2302 	strd	r2, r3, [r5, #8]
 8001c78:	2200      	movs	r2, #0
 8001c7a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c7e:	e9c0 2300 	strd	r2, r3, [r0]
 8001c82:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8001c86:	4d0b      	ldr	r5, [pc, #44]	; (8001cb4 <main+0xe0>)
 8001c88:	4621      	mov	r1, r4
 8001c8a:	4630      	mov	r0, r6
 8001c8c:	f7fe fe55 	bl	800093a <ros::Publisher::publish(ros::Msg const*)>
 8001c90:	4628      	mov	r0, r5
 8001c92:	f7ff fe8f 	bl	80019b4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8001c96:	2014      	movs	r0, #20
 8001c98:	f003 ffa0 	bl	8005bdc <wait_ms>
 8001c9c:	e7f4      	b.n	8001c88 <main+0xb4>
 8001c9e:	3301      	adds	r3, #1
 8001ca0:	2b19      	cmp	r3, #25
 8001ca2:	d1b0      	bne.n	8001c06 <main+0x32>
 8001ca4:	e7bb      	b.n	8001c1e <main+0x4a>
 8001ca6:	3301      	adds	r3, #1
 8001ca8:	2b19      	cmp	r3, #25
 8001caa:	d1ba      	bne.n	8001c22 <main+0x4e>
 8001cac:	e7c4      	b.n	8001c38 <main+0x64>
 8001cae:	bf00      	nop
 8001cb0:	200002f0 	.word	0x200002f0
 8001cb4:	2000030c 	.word	0x2000030c
 8001cb8:	20000280 	.word	0x20000280
 8001cbc:	20000878 	.word	0x20000878
 8001cc0:	20000930 	.word	0x20000930
 8001cc4:	20000298 	.word	0x20000298
 8001cc8:	3ff00000 	.word	0x3ff00000

08001ccc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 8001ccc:	b510      	push	{r4, lr}
 8001cce:	4b04      	ldr	r3, [pc, #16]	; (8001ce0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 8001cd0:	4604      	mov	r4, r0
 8001cd2:	f840 3b04 	str.w	r3, [r0], #4
 8001cd6:	f000 f8c3 	bl	8001e60 <BufferedSerial::~BufferedSerial()>
 8001cda:	4620      	mov	r0, r4
 8001cdc:	bd10      	pop	{r4, pc}
 8001cde:	bf00      	nop
 8001ce0:	08007204 	.word	0x08007204

08001ce4 <_start>:
 8001ce4:	4807      	ldr	r0, [pc, #28]	; (8001d04 <_start+0x20>)
 8001ce6:	4a08      	ldr	r2, [pc, #32]	; (8001d08 <_start+0x24>)
 8001ce8:	b508      	push	{r3, lr}
 8001cea:	1a12      	subs	r2, r2, r0
 8001cec:	2100      	movs	r1, #0
 8001cee:	f004 fd84 	bl	80067fa <memset>
 8001cf2:	f004 f833 	bl	8005d5c <software_init_hook>
 8001cf6:	f004 fcd1 	bl	800669c <__libc_init_array>
 8001cfa:	f004 f836 	bl	8005d6a <__wrap_main>
 8001cfe:	f004 f871 	bl	8005de4 <__wrap_exit>
 8001d02:	bf00      	nop
 8001d04:	20000260 	.word	0x20000260
 8001d08:	20002938 	.word	0x20002938

08001d0c <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 8001d0c:	b530      	push	{r4, r5, lr}
 8001d0e:	6802      	ldr	r2, [r0, #0]
 8001d10:	680d      	ldr	r5, [r1, #0]
 8001d12:	4c04      	ldr	r4, [pc, #16]	; (8001d24 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 8001d14:	fbb5 f3f4 	udiv	r3, r5, r4
 8001d18:	441a      	add	r2, r3
 8001d1a:	fb04 5313 	mls	r3, r4, r3, r5
 8001d1e:	6002      	str	r2, [r0, #0]
 8001d20:	600b      	str	r3, [r1, #0]
 8001d22:	bd30      	pop	{r4, r5, pc}
 8001d24:	3b9aca00 	.word	0x3b9aca00

08001d28 <BufferedSerial::readable()>:
 8001d28:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 8001d2c:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 8001d30:	1a10      	subs	r0, r2, r0
 8001d32:	bf18      	it	ne
 8001d34:	2001      	movne	r0, #1
 8001d36:	4770      	bx	lr

08001d38 <BufferedSerial::writeable()>:
 8001d38:	2001      	movs	r0, #1
 8001d3a:	4770      	bx	lr

08001d3c <BufferedSerial::getc()>:
 8001d3c:	b510      	push	{r4, lr}
 8001d3e:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 8001d42:	f8d0 10bc 	ldr.w	r1, [r0, #188]	; 0xbc
 8001d46:	4603      	mov	r3, r0
 8001d48:	1c50      	adds	r0, r2, #1
 8001d4a:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
 8001d4e:	5c88      	ldrb	r0, [r1, r2]
 8001d50:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8001d54:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
 8001d58:	3a01      	subs	r2, #1
 8001d5a:	fbb4 f1f2 	udiv	r1, r4, r2
 8001d5e:	fb02 4211 	mls	r2, r2, r1, r4
 8001d62:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 8001d66:	bd10      	pop	{r4, pc}

08001d68 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 8001d68:	4603      	mov	r3, r0
 8001d6a:	b110      	cbz	r0, 8001d72 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 8001d6c:	c907      	ldmia	r1, {r0, r1, r2}
 8001d6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8001d72:	4770      	bx	lr

08001d74 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 8001d74:	4770      	bx	lr

08001d76 <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 8001d76:	6842      	ldr	r2, [r0, #4]
 8001d78:	6881      	ldr	r1, [r0, #8]
 8001d7a:	6803      	ldr	r3, [r0, #0]
 8001d7c:	f012 0f01 	tst.w	r2, #1
 8001d80:	ea4f 0262 	mov.w	r2, r2, asr #1
 8001d84:	bf1c      	itt	ne
 8001d86:	5888      	ldrne	r0, [r1, r2]
 8001d88:	58c3      	ldrne	r3, [r0, r3]
 8001d8a:	1888      	adds	r0, r1, r2
 8001d8c:	4718      	bx	r3

08001d8e <mbed::Callback<void ()>::~Callback()>:
 8001d8e:	68c3      	ldr	r3, [r0, #12]
 8001d90:	b510      	push	{r4, lr}
 8001d92:	4604      	mov	r4, r0
 8001d94:	b10b      	cbz	r3, 8001d9a <mbed::Callback<void ()>::~Callback()+0xc>
 8001d96:	689b      	ldr	r3, [r3, #8]
 8001d98:	4798      	blx	r3
 8001d9a:	4620      	mov	r0, r4
 8001d9c:	bd10      	pop	{r4, pc}

08001d9e <BufferedSerial::txIrq()>:
 8001d9e:	b530      	push	{r4, r5, lr}
 8001da0:	4604      	mov	r4, r0
 8001da2:	b085      	sub	sp, #20
 8001da4:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8001da8:	4628      	mov	r0, r5
 8001daa:	f002 fa73 	bl	8004294 <serial_writable>
 8001dae:	b330      	cbz	r0, 8001dfe <BufferedSerial::txIrq()+0x60>
 8001db0:	f8d4 20d0 	ldr.w	r2, [r4, #208]	; 0xd0
 8001db4:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8001db8:	429a      	cmp	r2, r3
 8001dba:	d016      	beq.n	8001dea <BufferedSerial::txIrq()+0x4c>
 8001dbc:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8001dc0:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 8001dc4:	1c59      	adds	r1, r3, #1
 8001dc6:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
 8001dca:	5cd1      	ldrb	r1, [r2, r3]
 8001dcc:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 8001dd0:	f8d4 00d4 	ldr.w	r0, [r4, #212]	; 0xd4
 8001dd4:	3b01      	subs	r3, #1
 8001dd6:	fbb0 f2f3 	udiv	r2, r0, r3
 8001dda:	fb03 0312 	mls	r3, r3, r2, r0
 8001dde:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 8001de2:	4628      	mov	r0, r5
 8001de4:	f002 fa60 	bl	80042a8 <serial_putc>
 8001de8:	e7de      	b.n	8001da8 <BufferedSerial::txIrq()+0xa>
 8001dea:	2300      	movs	r3, #0
 8001dec:	4620      	mov	r0, r4
 8001dee:	2201      	movs	r2, #1
 8001df0:	4669      	mov	r1, sp
 8001df2:	9303      	str	r3, [sp, #12]
 8001df4:	f003 fdfc 	bl	80059f0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001df8:	4668      	mov	r0, sp
 8001dfa:	f7ff ffc8 	bl	8001d8e <mbed::Callback<void ()>::~Callback()>
 8001dfe:	b005      	add	sp, #20
 8001e00:	bd30      	pop	{r4, r5, pc}

08001e02 <mbed::Callback<void (int)>::~Callback()>:
 8001e02:	68c3      	ldr	r3, [r0, #12]
 8001e04:	b510      	push	{r4, lr}
 8001e06:	4604      	mov	r4, r0
 8001e08:	b10b      	cbz	r3, 8001e0e <mbed::Callback<void (int)>::~Callback()+0xc>
 8001e0a:	689b      	ldr	r3, [r3, #8]
 8001e0c:	4798      	blx	r3
 8001e0e:	4620      	mov	r0, r4
 8001e10:	bd10      	pop	{r4, pc}
	...

08001e14 <mbed::SerialBase::~SerialBase()>:
 8001e14:	b570      	push	{r4, r5, r6, lr}
 8001e16:	4606      	mov	r6, r0
 8001e18:	4b0b      	ldr	r3, [pc, #44]	; (8001e48 <mbed::SerialBase::~SerialBase()+0x34>)
 8001e1a:	f846 3b98 	str.w	r3, [r6], #152
 8001e1e:	4604      	mov	r4, r0
 8001e20:	b146      	cbz	r6, 8001e34 <mbed::SerialBase::~SerialBase()+0x20>
 8001e22:	f100 05b8 	add.w	r5, r0, #184	; 0xb8
 8001e26:	42b5      	cmp	r5, r6
 8001e28:	d004      	beq.n	8001e34 <mbed::SerialBase::~SerialBase()+0x20>
 8001e2a:	3d10      	subs	r5, #16
 8001e2c:	4628      	mov	r0, r5
 8001e2e:	f7ff ffae 	bl	8001d8e <mbed::Callback<void ()>::~Callback()>
 8001e32:	e7f8      	b.n	8001e26 <mbed::SerialBase::~SerialBase()+0x12>
 8001e34:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8001e38:	f7ff ffe3 	bl	8001e02 <mbed::Callback<void (int)>::~Callback()>
 8001e3c:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8001e40:	f7ff ffdf 	bl	8001e02 <mbed::Callback<void (int)>::~Callback()>
 8001e44:	4620      	mov	r0, r4
 8001e46:	bd70      	pop	{r4, r5, r6, pc}
 8001e48:	08007758 	.word	0x08007758

08001e4c <mbed::SerialBase::~SerialBase()>:
 8001e4c:	b510      	push	{r4, lr}
 8001e4e:	4604      	mov	r4, r0
 8001e50:	f7ff ffe0 	bl	8001e14 <mbed::SerialBase::~SerialBase()>
 8001e54:	4620      	mov	r0, r4
 8001e56:	f003 ffe1 	bl	8005e1c <operator delete(void*)>
 8001e5a:	4620      	mov	r0, r4
 8001e5c:	bd10      	pop	{r4, pc}
	...

08001e60 <BufferedSerial::~BufferedSerial()>:
 8001e60:	b530      	push	{r4, r5, lr}
 8001e62:	4b13      	ldr	r3, [pc, #76]	; (8001eb0 <BufferedSerial::~BufferedSerial()+0x50>)
 8001e64:	6003      	str	r3, [r0, #0]
 8001e66:	b085      	sub	sp, #20
 8001e68:	2500      	movs	r5, #0
 8001e6a:	462a      	mov	r2, r5
 8001e6c:	4669      	mov	r1, sp
 8001e6e:	4604      	mov	r4, r0
 8001e70:	9503      	str	r5, [sp, #12]
 8001e72:	f003 fdbd 	bl	80059f0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001e76:	4668      	mov	r0, sp
 8001e78:	f7ff ff89 	bl	8001d8e <mbed::Callback<void ()>::~Callback()>
 8001e7c:	2201      	movs	r2, #1
 8001e7e:	4669      	mov	r1, sp
 8001e80:	4620      	mov	r0, r4
 8001e82:	9503      	str	r5, [sp, #12]
 8001e84:	f003 fdb4 	bl	80059f0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001e88:	4668      	mov	r0, sp
 8001e8a:	f7ff ff80 	bl	8001d8e <mbed::Callback<void ()>::~Callback()>
 8001e8e:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8001e92:	f000 f923 	bl	80020dc <Buffer<char>::~Buffer()>
 8001e96:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8001e9a:	f000 f91f 	bl	80020dc <Buffer<char>::~Buffer()>
 8001e9e:	4b05      	ldr	r3, [pc, #20]	; (8001eb4 <BufferedSerial::~BufferedSerial()+0x54>)
 8001ea0:	6023      	str	r3, [r4, #0]
 8001ea2:	4620      	mov	r0, r4
 8001ea4:	f7ff ffb6 	bl	8001e14 <mbed::SerialBase::~SerialBase()>
 8001ea8:	4620      	mov	r0, r4
 8001eaa:	b005      	add	sp, #20
 8001eac:	bd30      	pop	{r4, r5, pc}
 8001eae:	bf00      	nop
 8001eb0:	080074d0 	.word	0x080074d0
 8001eb4:	08007770 	.word	0x08007770

08001eb8 <BufferedSerial::~BufferedSerial()>:
 8001eb8:	b510      	push	{r4, lr}
 8001eba:	4604      	mov	r4, r0
 8001ebc:	f7ff ffd0 	bl	8001e60 <BufferedSerial::~BufferedSerial()>
 8001ec0:	4620      	mov	r0, r4
 8001ec2:	f003 ffab 	bl	8005e1c <operator delete(void*)>
 8001ec6:	4620      	mov	r0, r4
 8001ec8:	bd10      	pop	{r4, pc}
	...

08001ecc <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 8001ecc:	b510      	push	{r4, lr}
 8001ece:	b086      	sub	sp, #24
 8001ed0:	e88d 000c 	stmia.w	sp, {r2, r3}
 8001ed4:	9b01      	ldr	r3, [sp, #4]
 8001ed6:	9202      	str	r2, [sp, #8]
 8001ed8:	9303      	str	r3, [sp, #12]
 8001eda:	9104      	str	r1, [sp, #16]
 8001edc:	4b05      	ldr	r3, [pc, #20]	; (8001ef4 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 8001ede:	f89d 2020 	ldrb.w	r2, [sp, #32]
 8001ee2:	9305      	str	r3, [sp, #20]
 8001ee4:	a902      	add	r1, sp, #8
 8001ee6:	f003 fd83 	bl	80059f0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001eea:	a802      	add	r0, sp, #8
 8001eec:	f7ff ff4f 	bl	8001d8e <mbed::Callback<void ()>::~Callback()>
 8001ef0:	b006      	add	sp, #24
 8001ef2:	bd10      	pop	{r4, pc}
 8001ef4:	08007440 	.word	0x08007440

08001ef8 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 8001ef8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8001efa:	4604      	mov	r4, r0
 8001efc:	461d      	mov	r5, r3
 8001efe:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8001f02:	9e08      	ldr	r6, [sp, #32]
 8001f04:	f003 fdac 	bl	8005a60 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 8001f08:	4620      	mov	r0, r4
 8001f0a:	4b0f      	ldr	r3, [pc, #60]	; (8001f48 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 8001f0c:	f840 3bbc 	str.w	r3, [r0], #188
 8001f10:	4629      	mov	r1, r5
 8001f12:	f000 f8f2 	bl	80020fa <Buffer<char>::Buffer(unsigned long)>
 8001f16:	fb06 f105 	mul.w	r1, r6, r5
 8001f1a:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8001f1e:	f000 f8ec 	bl	80020fa <Buffer<char>::Buffer(unsigned long)>
 8001f22:	4b0a      	ldr	r3, [pc, #40]	; (8001f4c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x54>)
 8001f24:	9302      	str	r3, [sp, #8]
 8001f26:	2300      	movs	r3, #0
 8001f28:	9303      	str	r3, [sp, #12]
 8001f2a:	9300      	str	r3, [sp, #0]
 8001f2c:	ab04      	add	r3, sp, #16
 8001f2e:	4620      	mov	r0, r4
 8001f30:	e913 000c 	ldmdb	r3, {r2, r3}
 8001f34:	4621      	mov	r1, r4
 8001f36:	f7ff ffc9 	bl	8001ecc <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001f3a:	4620      	mov	r0, r4
 8001f3c:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 8001f40:	f8c4 60e0 	str.w	r6, [r4, #224]	; 0xe0
 8001f44:	b004      	add	sp, #16
 8001f46:	bd70      	pop	{r4, r5, r6, pc}
 8001f48:	080074d0 	.word	0x080074d0
 8001f4c:	08001fb7 	.word	0x08001fb7

08001f50 <BufferedSerial::prime()>:
 8001f50:	b570      	push	{r4, r5, r6, lr}
 8001f52:	4604      	mov	r4, r0
 8001f54:	b086      	sub	sp, #24
 8001f56:	304c      	adds	r0, #76	; 0x4c
 8001f58:	f002 f99c 	bl	8004294 <serial_writable>
 8001f5c:	b1c0      	cbz	r0, 8001f90 <BufferedSerial::prime()+0x40>
 8001f5e:	ad02      	add	r5, sp, #8
 8001f60:	2201      	movs	r2, #1
 8001f62:	4629      	mov	r1, r5
 8001f64:	2600      	movs	r6, #0
 8001f66:	4620      	mov	r0, r4
 8001f68:	9605      	str	r6, [sp, #20]
 8001f6a:	f003 fd41 	bl	80059f0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001f6e:	4628      	mov	r0, r5
 8001f70:	f7ff ff0d 	bl	8001d8e <mbed::Callback<void ()>::~Callback()>
 8001f74:	4620      	mov	r0, r4
 8001f76:	f7ff ff12 	bl	8001d9e <BufferedSerial::txIrq()>
 8001f7a:	4b06      	ldr	r3, [pc, #24]	; (8001f94 <BufferedSerial::prime()+0x44>)
 8001f7c:	9302      	str	r3, [sp, #8]
 8001f7e:	2301      	movs	r3, #1
 8001f80:	9603      	str	r6, [sp, #12]
 8001f82:	9300      	str	r3, [sp, #0]
 8001f84:	e895 000c 	ldmia.w	r5, {r2, r3}
 8001f88:	4621      	mov	r1, r4
 8001f8a:	4620      	mov	r0, r4
 8001f8c:	f7ff ff9e 	bl	8001ecc <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001f90:	b006      	add	sp, #24
 8001f92:	bd70      	pop	{r4, r5, r6, pc}
 8001f94:	08001d9f 	.word	0x08001d9f

08001f98 <Buffer<char>::put(char)>:
 8001f98:	6843      	ldr	r3, [r0, #4]
 8001f9a:	6802      	ldr	r2, [r0, #0]
 8001f9c:	b510      	push	{r4, lr}
 8001f9e:	1c5c      	adds	r4, r3, #1
 8001fa0:	6044      	str	r4, [r0, #4]
 8001fa2:	54d1      	strb	r1, [r2, r3]
 8001fa4:	68c3      	ldr	r3, [r0, #12]
 8001fa6:	6841      	ldr	r1, [r0, #4]
 8001fa8:	3b01      	subs	r3, #1
 8001faa:	fbb1 f2f3 	udiv	r2, r1, r3
 8001fae:	fb03 1312 	mls	r3, r3, r2, r1
 8001fb2:	6043      	str	r3, [r0, #4]
 8001fb4:	bd10      	pop	{r4, pc}

08001fb6 <BufferedSerial::rxIrq()>:
 8001fb6:	b538      	push	{r3, r4, r5, lr}
 8001fb8:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8001fbc:	4604      	mov	r4, r0
 8001fbe:	4628      	mov	r0, r5
 8001fc0:	f002 f94c 	bl	800425c <serial_readable>
 8001fc4:	b138      	cbz	r0, 8001fd6 <BufferedSerial::rxIrq()+0x20>
 8001fc6:	4628      	mov	r0, r5
 8001fc8:	f002 f952 	bl	8004270 <serial_getc>
 8001fcc:	b2c1      	uxtb	r1, r0
 8001fce:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8001fd2:	f7ff ffe1 	bl	8001f98 <Buffer<char>::put(char)>
 8001fd6:	bd38      	pop	{r3, r4, r5, pc}

08001fd8 <BufferedSerial::putc(int)>:
 8001fd8:	b538      	push	{r3, r4, r5, lr}
 8001fda:	4605      	mov	r5, r0
 8001fdc:	460c      	mov	r4, r1
 8001fde:	30cc      	adds	r0, #204	; 0xcc
 8001fe0:	b2c9      	uxtb	r1, r1
 8001fe2:	f7ff ffd9 	bl	8001f98 <Buffer<char>::put(char)>
 8001fe6:	4628      	mov	r0, r5
 8001fe8:	f7ff ffb2 	bl	8001f50 <BufferedSerial::prime()>
 8001fec:	4620      	mov	r0, r4
 8001fee:	bd38      	pop	{r3, r4, r5, pc}

08001ff0 <BufferedSerial::puts(char const*)>:
 8001ff0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001ff4:	4607      	mov	r7, r0
 8001ff6:	460c      	mov	r4, r1
 8001ff8:	b1b1      	cbz	r1, 8002028 <BufferedSerial::puts(char const*)+0x38>
 8001ffa:	460d      	mov	r5, r1
 8001ffc:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8002000:	462e      	mov	r6, r5
 8002002:	f816 1b01 	ldrb.w	r1, [r6], #1
 8002006:	b121      	cbz	r1, 8002012 <BufferedSerial::puts(char const*)+0x22>
 8002008:	4640      	mov	r0, r8
 800200a:	f7ff ffc5 	bl	8001f98 <Buffer<char>::put(char)>
 800200e:	4635      	mov	r5, r6
 8002010:	e7f6      	b.n	8002000 <BufferedSerial::puts(char const*)+0x10>
 8002012:	210a      	movs	r1, #10
 8002014:	4640      	mov	r0, r8
 8002016:	f7ff ffbf 	bl	8001f98 <Buffer<char>::put(char)>
 800201a:	1b2c      	subs	r4, r5, r4
 800201c:	4638      	mov	r0, r7
 800201e:	f7ff ff97 	bl	8001f50 <BufferedSerial::prime()>
 8002022:	1c60      	adds	r0, r4, #1
 8002024:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002028:	4608      	mov	r0, r1
 800202a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800202e <BufferedSerial::write(void const*, unsigned int)>:
 800202e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002032:	4607      	mov	r7, r0
 8002034:	460d      	mov	r5, r1
 8002036:	b191      	cbz	r1, 800205e <BufferedSerial::write(void const*, unsigned int)+0x30>
 8002038:	b1a2      	cbz	r2, 8002064 <BufferedSerial::write(void const*, unsigned int)+0x36>
 800203a:	188c      	adds	r4, r1, r2
 800203c:	460e      	mov	r6, r1
 800203e:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8002042:	42b4      	cmp	r4, r6
 8002044:	d005      	beq.n	8002052 <BufferedSerial::write(void const*, unsigned int)+0x24>
 8002046:	f816 1b01 	ldrb.w	r1, [r6], #1
 800204a:	4640      	mov	r0, r8
 800204c:	f7ff ffa4 	bl	8001f98 <Buffer<char>::put(char)>
 8002050:	e7f7      	b.n	8002042 <BufferedSerial::write(void const*, unsigned int)+0x14>
 8002052:	4638      	mov	r0, r7
 8002054:	f7ff ff7c 	bl	8001f50 <BufferedSerial::prime()>
 8002058:	1b60      	subs	r0, r4, r5
 800205a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800205e:	4608      	mov	r0, r1
 8002060:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002064:	4610      	mov	r0, r2
 8002066:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800206c <BufferedSerial::printf(char const*, ...)>:
 800206c:	b40e      	push	{r1, r2, r3}
 800206e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002072:	b085      	sub	sp, #20
 8002074:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 8002078:	af02      	add	r7, sp, #8
 800207a:	1dd3      	adds	r3, r2, #7
 800207c:	f023 0307 	bic.w	r3, r3, #7
 8002080:	f107 0424 	add.w	r4, r7, #36	; 0x24
 8002084:	ebad 0d03 	sub.w	sp, sp, r3
 8002088:	f854 8b04 	ldr.w	r8, [r4], #4
 800208c:	ae02      	add	r6, sp, #8
 800208e:	4605      	mov	r5, r0
 8002090:	2100      	movs	r1, #0
 8002092:	4630      	mov	r0, r6
 8002094:	f004 fbb1 	bl	80067fa <memset>
 8002098:	4622      	mov	r2, r4
 800209a:	4641      	mov	r1, r8
 800209c:	4630      	mov	r0, r6
 800209e:	607c      	str	r4, [r7, #4]
 80020a0:	f004 fe98 	bl	8006dd4 <vsiprintf>
 80020a4:	f8d5 30dc 	ldr.w	r3, [r5, #220]	; 0xdc
 80020a8:	4283      	cmp	r3, r0
 80020aa:	4602      	mov	r2, r0
 80020ac:	d20c      	bcs.n	80020c8 <BufferedSerial::printf(char const*, ...)+0x5c>
 80020ae:	9000      	str	r0, [sp, #0]
 80020b0:	225d      	movs	r2, #93	; 0x5d
 80020b2:	4808      	ldr	r0, [pc, #32]	; (80020d4 <BufferedSerial::printf(char const*, ...)+0x68>)
 80020b4:	4908      	ldr	r1, [pc, #32]	; (80020d8 <BufferedSerial::printf(char const*, ...)+0x6c>)
 80020b6:	f000 f917 	bl	80022e8 <error>
 80020ba:	2000      	movs	r0, #0
 80020bc:	370c      	adds	r7, #12
 80020be:	46bd      	mov	sp, r7
 80020c0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80020c4:	b003      	add	sp, #12
 80020c6:	4770      	bx	lr
 80020c8:	4631      	mov	r1, r6
 80020ca:	4628      	mov	r0, r5
 80020cc:	f7ff ffaf 	bl	800202e <BufferedSerial::write(void const*, unsigned int)>
 80020d0:	e7f4      	b.n	80020bc <BufferedSerial::printf(char const*, ...)+0x50>
 80020d2:	bf00      	nop
 80020d4:	0800748d 	.word	0x0800748d
 80020d8:	0800744c 	.word	0x0800744c

080020dc <Buffer<char>::~Buffer()>:
 80020dc:	b510      	push	{r4, lr}
 80020de:	4604      	mov	r4, r0
 80020e0:	6800      	ldr	r0, [r0, #0]
 80020e2:	b108      	cbz	r0, 80020e8 <Buffer<char>::~Buffer()+0xc>
 80020e4:	f003 fe96 	bl	8005e14 <operator delete[](void*)>
 80020e8:	4620      	mov	r0, r4
 80020ea:	bd10      	pop	{r4, pc}

080020ec <Buffer<char>::clear()>:
 80020ec:	2100      	movs	r1, #0
 80020ee:	6041      	str	r1, [r0, #4]
 80020f0:	68c2      	ldr	r2, [r0, #12]
 80020f2:	6081      	str	r1, [r0, #8]
 80020f4:	6800      	ldr	r0, [r0, #0]
 80020f6:	f004 bb80 	b.w	80067fa <memset>

080020fa <Buffer<char>::Buffer(unsigned long)>:
 80020fa:	b538      	push	{r3, r4, r5, lr}
 80020fc:	4604      	mov	r4, r0
 80020fe:	4608      	mov	r0, r1
 8002100:	460d      	mov	r5, r1
 8002102:	f003 fe7b 	bl	8005dfc <operator new[](unsigned int)>
 8002106:	60e5      	str	r5, [r4, #12]
 8002108:	6020      	str	r0, [r4, #0]
 800210a:	4620      	mov	r0, r4
 800210c:	f7ff ffee 	bl	80020ec <Buffer<char>::clear()>
 8002110:	4620      	mov	r0, r4
 8002112:	bd38      	pop	{r3, r4, r5, pc}

08002114 <_gpio_init_out.part.2>:
 8002114:	b538      	push	{r3, r4, r5, lr}
 8002116:	4604      	mov	r4, r0
 8002118:	460d      	mov	r5, r1
 800211a:	6803      	ldr	r3, [r0, #0]
 800211c:	b15a      	cbz	r2, 8002136 <_gpio_init_out.part.2+0x22>
 800211e:	6882      	ldr	r2, [r0, #8]
 8002120:	6013      	str	r3, [r2, #0]
 8002122:	4620      	mov	r0, r4
 8002124:	2101      	movs	r1, #1
 8002126:	f001 fcbf 	bl	8003aa8 <gpio_dir>
 800212a:	4629      	mov	r1, r5
 800212c:	4620      	mov	r0, r4
 800212e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002132:	f001 bcb5 	b.w	8003aa0 <gpio_mode>
 8002136:	68c2      	ldr	r2, [r0, #12]
 8002138:	041b      	lsls	r3, r3, #16
 800213a:	e7f1      	b.n	8002120 <_gpio_init_out.part.2+0xc>

0800213c <gpio_init_out_ex>:
 800213c:	b570      	push	{r4, r5, r6, lr}
 800213e:	460e      	mov	r6, r1
 8002140:	4604      	mov	r4, r0
 8002142:	4615      	mov	r5, r2
 8002144:	f001 fc8c 	bl	8003a60 <gpio_init>
 8002148:	3601      	adds	r6, #1
 800214a:	d006      	beq.n	800215a <gpio_init_out_ex+0x1e>
 800214c:	462a      	mov	r2, r5
 800214e:	4620      	mov	r0, r4
 8002150:	2100      	movs	r1, #0
 8002152:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002156:	f7ff bfdd 	b.w	8002114 <_gpio_init_out.part.2>
 800215a:	bd70      	pop	{r4, r5, r6, pc}

0800215c <gpio_init_out>:
 800215c:	2200      	movs	r2, #0
 800215e:	f7ff bfed 	b.w	800213c <gpio_init_out_ex>
	...

08002164 <get_us_ticker_data>:
 8002164:	4800      	ldr	r0, [pc, #0]	; (8002168 <get_us_ticker_data+0x4>)
 8002166:	4770      	bx	lr
 8002168:	080074fc 	.word	0x080074fc

0800216c <us_ticker_irq_handler>:
 800216c:	4801      	ldr	r0, [pc, #4]	; (8002174 <us_ticker_irq_handler+0x8>)
 800216e:	f000 b803 	b.w	8002178 <ticker_irq_handler>
 8002172:	bf00      	nop
 8002174:	080074fc 	.word	0x080074fc

08002178 <ticker_irq_handler>:
 8002178:	6803      	ldr	r3, [r0, #0]
 800217a:	b570      	push	{r4, r5, r6, lr}
 800217c:	68db      	ldr	r3, [r3, #12]
 800217e:	4604      	mov	r4, r0
 8002180:	4798      	blx	r3
 8002182:	6863      	ldr	r3, [r4, #4]
 8002184:	685a      	ldr	r2, [r3, #4]
 8002186:	6823      	ldr	r3, [r4, #0]
 8002188:	b91a      	cbnz	r2, 8002192 <ticker_irq_handler+0x1a>
 800218a:	689b      	ldr	r3, [r3, #8]
 800218c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002190:	4718      	bx	r3
 8002192:	685b      	ldr	r3, [r3, #4]
 8002194:	6815      	ldr	r5, [r2, #0]
 8002196:	4798      	blx	r3
 8002198:	6863      	ldr	r3, [r4, #4]
 800219a:	1a28      	subs	r0, r5, r0
 800219c:	2800      	cmp	r0, #0
 800219e:	685a      	ldr	r2, [r3, #4]
 80021a0:	dc07      	bgt.n	80021b2 <ticker_irq_handler+0x3a>
 80021a2:	6891      	ldr	r1, [r2, #8]
 80021a4:	6059      	str	r1, [r3, #4]
 80021a6:	681b      	ldr	r3, [r3, #0]
 80021a8:	2b00      	cmp	r3, #0
 80021aa:	d0ea      	beq.n	8002182 <ticker_irq_handler+0xa>
 80021ac:	6850      	ldr	r0, [r2, #4]
 80021ae:	4798      	blx	r3
 80021b0:	e7e7      	b.n	8002182 <ticker_irq_handler+0xa>
 80021b2:	6823      	ldr	r3, [r4, #0]
 80021b4:	6810      	ldr	r0, [r2, #0]
 80021b6:	691b      	ldr	r3, [r3, #16]
 80021b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80021bc:	4718      	bx	r3

080021be <ticker_read>:
 80021be:	6803      	ldr	r3, [r0, #0]
 80021c0:	685b      	ldr	r3, [r3, #4]
 80021c2:	4718      	bx	r3

080021c4 <pinmap_pinout>:
 80021c4:	b510      	push	{r4, lr}
 80021c6:	4604      	mov	r4, r0
 80021c8:	3001      	adds	r0, #1
 80021ca:	d10d      	bne.n	80021e8 <pinmap_pinout+0x24>
 80021cc:	bd10      	pop	{r4, pc}
 80021ce:	429c      	cmp	r4, r3
 80021d0:	d109      	bne.n	80021e6 <pinmap_pinout+0x22>
 80021d2:	4620      	mov	r0, r4
 80021d4:	6889      	ldr	r1, [r1, #8]
 80021d6:	f001 fd97 	bl	8003d08 <pin_function>
 80021da:	4620      	mov	r0, r4
 80021dc:	2100      	movs	r1, #0
 80021de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80021e2:	f001 be15 	b.w	8003e10 <pin_mode>
 80021e6:	310c      	adds	r1, #12
 80021e8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80021ec:	1c5a      	adds	r2, r3, #1
 80021ee:	d1ee      	bne.n	80021ce <pinmap_pinout+0xa>
 80021f0:	4802      	ldr	r0, [pc, #8]	; (80021fc <pinmap_pinout+0x38>)
 80021f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80021f6:	f000 b877 	b.w	80022e8 <error>
 80021fa:	bf00      	nop
 80021fc:	08007549 	.word	0x08007549

08002200 <pinmap_merge>:
 8002200:	4288      	cmp	r0, r1
 8002202:	b508      	push	{r3, lr}
 8002204:	d008      	beq.n	8002218 <pinmap_merge+0x18>
 8002206:	1c43      	adds	r3, r0, #1
 8002208:	d006      	beq.n	8002218 <pinmap_merge+0x18>
 800220a:	3101      	adds	r1, #1
 800220c:	d006      	beq.n	800221c <pinmap_merge+0x1c>
 800220e:	4804      	ldr	r0, [pc, #16]	; (8002220 <pinmap_merge+0x20>)
 8002210:	f000 f86a 	bl	80022e8 <error>
 8002214:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002218:	4608      	mov	r0, r1
 800221a:	bd08      	pop	{r3, pc}
 800221c:	4601      	mov	r1, r0
 800221e:	e7fb      	b.n	8002218 <pinmap_merge+0x18>
 8002220:	08007518 	.word	0x08007518

08002224 <pinmap_find_peripheral>:
 8002224:	f9b1 3000 	ldrsh.w	r3, [r1]
 8002228:	1c5a      	adds	r2, r3, #1
 800222a:	d101      	bne.n	8002230 <pinmap_find_peripheral+0xc>
 800222c:	4618      	mov	r0, r3
 800222e:	4770      	bx	lr
 8002230:	4283      	cmp	r3, r0
 8002232:	d101      	bne.n	8002238 <pinmap_find_peripheral+0x14>
 8002234:	6848      	ldr	r0, [r1, #4]
 8002236:	4770      	bx	lr
 8002238:	310c      	adds	r1, #12
 800223a:	e7f3      	b.n	8002224 <pinmap_find_peripheral>

0800223c <pinmap_peripheral>:
 800223c:	1c42      	adds	r2, r0, #1
 800223e:	b510      	push	{r4, lr}
 8002240:	4604      	mov	r4, r0
 8002242:	d007      	beq.n	8002254 <pinmap_peripheral+0x18>
 8002244:	f7ff ffee 	bl	8002224 <pinmap_find_peripheral>
 8002248:	1c43      	adds	r3, r0, #1
 800224a:	4604      	mov	r4, r0
 800224c:	d102      	bne.n	8002254 <pinmap_peripheral+0x18>
 800224e:	4802      	ldr	r0, [pc, #8]	; (8002258 <pinmap_peripheral+0x1c>)
 8002250:	f000 f84a 	bl	80022e8 <error>
 8002254:	4620      	mov	r0, r4
 8002256:	bd10      	pop	{r4, pc}
 8002258:	08007529 	.word	0x08007529

0800225c <mbed_die>:
 800225c:	b500      	push	{lr}
 800225e:	b089      	sub	sp, #36	; 0x24
 8002260:	f000 f818 	bl	8002294 <core_util_critical_section_enter>
 8002264:	2105      	movs	r1, #5
 8002266:	a801      	add	r0, sp, #4
 8002268:	f7ff ff78 	bl	800215c <gpio_init_out>
 800226c:	9b03      	ldr	r3, [sp, #12]
 800226e:	9a01      	ldr	r2, [sp, #4]
 8002270:	601a      	str	r2, [r3, #0]
 8002272:	2096      	movs	r0, #150	; 0x96
 8002274:	f003 fcb2 	bl	8005bdc <wait_ms>
 8002278:	9b01      	ldr	r3, [sp, #4]
 800227a:	9a04      	ldr	r2, [sp, #16]
 800227c:	041b      	lsls	r3, r3, #16
 800227e:	6013      	str	r3, [r2, #0]
 8002280:	2096      	movs	r0, #150	; 0x96
 8002282:	f003 fcab 	bl	8005bdc <wait_ms>
 8002286:	e7f1      	b.n	800226c <mbed_die+0x10>

08002288 <core_util_are_interrupts_enabled>:
 8002288:	f3ef 8010 	mrs	r0, PRIMASK
 800228c:	43c0      	mvns	r0, r0
 800228e:	f000 0001 	and.w	r0, r0, #1
 8002292:	4770      	bx	lr

08002294 <core_util_critical_section_enter>:
 8002294:	b508      	push	{r3, lr}
 8002296:	f7ff fff7 	bl	8002288 <core_util_are_interrupts_enabled>
 800229a:	b672      	cpsid	i
 800229c:	4b06      	ldr	r3, [pc, #24]	; (80022b8 <core_util_critical_section_enter+0x24>)
 800229e:	681a      	ldr	r2, [r3, #0]
 80022a0:	b922      	cbnz	r2, 80022ac <core_util_critical_section_enter+0x18>
 80022a2:	f080 0001 	eor.w	r0, r0, #1
 80022a6:	4a05      	ldr	r2, [pc, #20]	; (80022bc <core_util_critical_section_enter+0x28>)
 80022a8:	b2c0      	uxtb	r0, r0
 80022aa:	7010      	strb	r0, [r2, #0]
 80022ac:	681a      	ldr	r2, [r3, #0]
 80022ae:	681a      	ldr	r2, [r3, #0]
 80022b0:	3201      	adds	r2, #1
 80022b2:	601a      	str	r2, [r3, #0]
 80022b4:	bd08      	pop	{r3, pc}
 80022b6:	bf00      	nop
 80022b8:	200009d4 	.word	0x200009d4
 80022bc:	200009d0 	.word	0x200009d0

080022c0 <core_util_critical_section_exit>:
 80022c0:	b508      	push	{r3, lr}
 80022c2:	4b07      	ldr	r3, [pc, #28]	; (80022e0 <core_util_critical_section_exit+0x20>)
 80022c4:	681a      	ldr	r2, [r3, #0]
 80022c6:	b152      	cbz	r2, 80022de <core_util_critical_section_exit+0x1e>
 80022c8:	f7ff ffde 	bl	8002288 <core_util_are_interrupts_enabled>
 80022cc:	681a      	ldr	r2, [r3, #0]
 80022ce:	3a01      	subs	r2, #1
 80022d0:	601a      	str	r2, [r3, #0]
 80022d2:	681b      	ldr	r3, [r3, #0]
 80022d4:	b91b      	cbnz	r3, 80022de <core_util_critical_section_exit+0x1e>
 80022d6:	4b03      	ldr	r3, [pc, #12]	; (80022e4 <core_util_critical_section_exit+0x24>)
 80022d8:	781b      	ldrb	r3, [r3, #0]
 80022da:	b903      	cbnz	r3, 80022de <core_util_critical_section_exit+0x1e>
 80022dc:	b662      	cpsie	i
 80022de:	bd08      	pop	{r3, pc}
 80022e0:	200009d4 	.word	0x200009d4
 80022e4:	200009d0 	.word	0x200009d0

080022e8 <error>:
 80022e8:	b40f      	push	{r0, r1, r2, r3}
 80022ea:	2001      	movs	r0, #1
 80022ec:	b508      	push	{r3, lr}
 80022ee:	f003 fd79 	bl	8005de4 <__wrap_exit>

080022f2 <default_idle_hook>:
 80022f2:	f001 bc02 	b.w	8003afa <hal_sleep>
	...

080022f8 <rtos_idle_loop>:
 80022f8:	b508      	push	{r3, lr}
 80022fa:	4c02      	ldr	r4, [pc, #8]	; (8002304 <rtos_idle_loop+0xc>)
 80022fc:	6823      	ldr	r3, [r4, #0]
 80022fe:	4798      	blx	r3
 8002300:	e7fc      	b.n	80022fc <rtos_idle_loop+0x4>
 8002302:	bf00      	nop
 8002304:	200001c8 	.word	0x200001c8

08002308 <rt_put_prio>:
 8002308:	b530      	push	{r4, r5, lr}
 800230a:	7802      	ldrb	r2, [r0, #0]
 800230c:	788c      	ldrb	r4, [r1, #2]
 800230e:	6843      	ldr	r3, [r0, #4]
 8002310:	3a01      	subs	r2, #1
 8002312:	b2d2      	uxtb	r2, r2
 8002314:	b113      	cbz	r3, 800231c <rt_put_prio+0x14>
 8002316:	789d      	ldrb	r5, [r3, #2]
 8002318:	42a5      	cmp	r5, r4
 800231a:	d207      	bcs.n	800232c <rt_put_prio+0x24>
 800231c:	2a02      	cmp	r2, #2
 800231e:	604b      	str	r3, [r1, #4]
 8002320:	6041      	str	r1, [r0, #4]
 8002322:	d806      	bhi.n	8002332 <rt_put_prio+0x2a>
 8002324:	b103      	cbz	r3, 8002328 <rt_put_prio+0x20>
 8002326:	6099      	str	r1, [r3, #8]
 8002328:	6088      	str	r0, [r1, #8]
 800232a:	bd30      	pop	{r4, r5, pc}
 800232c:	4618      	mov	r0, r3
 800232e:	685b      	ldr	r3, [r3, #4]
 8002330:	e7f0      	b.n	8002314 <rt_put_prio+0xc>
 8002332:	2300      	movs	r3, #0
 8002334:	608b      	str	r3, [r1, #8]
 8002336:	bd30      	pop	{r4, r5, pc}

08002338 <rt_get_first>:
 8002338:	7802      	ldrb	r2, [r0, #0]
 800233a:	6843      	ldr	r3, [r0, #4]
 800233c:	3a01      	subs	r2, #1
 800233e:	6859      	ldr	r1, [r3, #4]
 8002340:	6041      	str	r1, [r0, #4]
 8002342:	2a02      	cmp	r2, #2
 8002344:	f04f 0200 	mov.w	r2, #0
 8002348:	d805      	bhi.n	8002356 <rt_get_first+0x1e>
 800234a:	b109      	cbz	r1, 8002350 <rt_get_first+0x18>
 800234c:	6088      	str	r0, [r1, #8]
 800234e:	605a      	str	r2, [r3, #4]
 8002350:	609a      	str	r2, [r3, #8]
 8002352:	4618      	mov	r0, r3
 8002354:	4770      	bx	lr
 8002356:	605a      	str	r2, [r3, #4]
 8002358:	e7fb      	b.n	8002352 <rt_get_first+0x1a>
	...

0800235c <rt_put_rdy_first>:
 800235c:	4b03      	ldr	r3, [pc, #12]	; (800236c <rt_put_rdy_first+0x10>)
 800235e:	685a      	ldr	r2, [r3, #4]
 8002360:	6042      	str	r2, [r0, #4]
 8002362:	2200      	movs	r2, #0
 8002364:	6082      	str	r2, [r0, #8]
 8002366:	6058      	str	r0, [r3, #4]
 8002368:	4770      	bx	lr
 800236a:	bf00      	nop
 800236c:	20001e44 	.word	0x20001e44

08002370 <rt_put_dly>:
 8002370:	4b10      	ldr	r3, [pc, #64]	; (80023b4 <rt_put_dly+0x44>)
 8002372:	68da      	ldr	r2, [r3, #12]
 8002374:	b510      	push	{r4, lr}
 8002376:	b18a      	cbz	r2, 800239c <rt_put_dly+0x2c>
 8002378:	8a9a      	ldrh	r2, [r3, #20]
 800237a:	68dc      	ldr	r4, [r3, #12]
 800237c:	428a      	cmp	r2, r1
 800237e:	d30c      	bcc.n	800239a <rt_put_dly+0x2a>
 8002380:	60c4      	str	r4, [r0, #12]
 8002382:	60d8      	str	r0, [r3, #12]
 8002384:	68c4      	ldr	r4, [r0, #12]
 8002386:	6103      	str	r3, [r0, #16]
 8002388:	b104      	cbz	r4, 800238c <rt_put_dly+0x1c>
 800238a:	6120      	str	r0, [r4, #16]
 800238c:	1a52      	subs	r2, r2, r1
 800238e:	b292      	uxth	r2, r2
 8002390:	8282      	strh	r2, [r0, #20]
 8002392:	8a99      	ldrh	r1, [r3, #20]
 8002394:	1a8a      	subs	r2, r1, r2
 8002396:	829a      	strh	r2, [r3, #20]
 8002398:	bd10      	pop	{r4, pc}
 800239a:	b93c      	cbnz	r4, 80023ac <rt_put_dly+0x3c>
 800239c:	2400      	movs	r4, #0
 800239e:	1a8a      	subs	r2, r1, r2
 80023a0:	60c4      	str	r4, [r0, #12]
 80023a2:	60d8      	str	r0, [r3, #12]
 80023a4:	6103      	str	r3, [r0, #16]
 80023a6:	829a      	strh	r2, [r3, #20]
 80023a8:	8284      	strh	r4, [r0, #20]
 80023aa:	bd10      	pop	{r4, pc}
 80023ac:	8aa3      	ldrh	r3, [r4, #20]
 80023ae:	441a      	add	r2, r3
 80023b0:	4623      	mov	r3, r4
 80023b2:	e7e2      	b.n	800237a <rt_put_dly+0xa>
 80023b4:	20001e5c 	.word	0x20001e5c

080023b8 <rt_dec_dly>:
 80023b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80023bc:	4d17      	ldr	r5, [pc, #92]	; (800241c <rt_dec_dly+0x64>)
 80023be:	68eb      	ldr	r3, [r5, #12]
 80023c0:	b153      	cbz	r3, 80023d8 <rt_dec_dly+0x20>
 80023c2:	8aab      	ldrh	r3, [r5, #20]
 80023c4:	4f16      	ldr	r7, [pc, #88]	; (8002420 <rt_dec_dly+0x68>)
 80023c6:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8002424 <rt_dec_dly+0x6c>
 80023ca:	3b01      	subs	r3, #1
 80023cc:	82ab      	strh	r3, [r5, #20]
 80023ce:	2600      	movs	r6, #0
 80023d0:	8aaa      	ldrh	r2, [r5, #20]
 80023d2:	b90a      	cbnz	r2, 80023d8 <rt_dec_dly+0x20>
 80023d4:	68ec      	ldr	r4, [r5, #12]
 80023d6:	b90c      	cbnz	r4, 80023dc <rt_dec_dly+0x24>
 80023d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80023dc:	68a3      	ldr	r3, [r4, #8]
 80023de:	b133      	cbz	r3, 80023ee <rt_dec_dly+0x36>
 80023e0:	6861      	ldr	r1, [r4, #4]
 80023e2:	6059      	str	r1, [r3, #4]
 80023e4:	6861      	ldr	r1, [r4, #4]
 80023e6:	b109      	cbz	r1, 80023ec <rt_dec_dly+0x34>
 80023e8:	608b      	str	r3, [r1, #8]
 80023ea:	6062      	str	r2, [r4, #4]
 80023ec:	60a6      	str	r6, [r4, #8]
 80023ee:	4621      	mov	r1, r4
 80023f0:	4638      	mov	r0, r7
 80023f2:	f7ff ff89 	bl	8002308 <rt_put_prio>
 80023f6:	8aa3      	ldrh	r3, [r4, #20]
 80023f8:	82ab      	strh	r3, [r5, #20]
 80023fa:	7863      	ldrb	r3, [r4, #1]
 80023fc:	2b04      	cmp	r3, #4
 80023fe:	bf01      	itttt	eq
 8002400:	f8d8 3000 	ldreq.w	r3, [r8]
 8002404:	8ae2      	ldrheq	r2, [r4, #22]
 8002406:	189b      	addeq	r3, r3, r2
 8002408:	82a3      	strheq	r3, [r4, #20]
 800240a:	2301      	movs	r3, #1
 800240c:	7063      	strb	r3, [r4, #1]
 800240e:	68e3      	ldr	r3, [r4, #12]
 8002410:	60eb      	str	r3, [r5, #12]
 8002412:	b10b      	cbz	r3, 8002418 <rt_dec_dly+0x60>
 8002414:	611d      	str	r5, [r3, #16]
 8002416:	60e6      	str	r6, [r4, #12]
 8002418:	6126      	str	r6, [r4, #16]
 800241a:	e7d9      	b.n	80023d0 <rt_dec_dly+0x18>
 800241c:	20001e5c 	.word	0x20001e5c
 8002420:	20001e44 	.word	0x20001e44
 8002424:	200028a4 	.word	0x200028a4

08002428 <rt_rmv_list>:
 8002428:	6883      	ldr	r3, [r0, #8]
 800242a:	b12b      	cbz	r3, 8002438 <rt_rmv_list+0x10>
 800242c:	6842      	ldr	r2, [r0, #4]
 800242e:	605a      	str	r2, [r3, #4]
 8002430:	6842      	ldr	r2, [r0, #4]
 8002432:	b15a      	cbz	r2, 800244c <rt_rmv_list+0x24>
 8002434:	6093      	str	r3, [r2, #8]
 8002436:	4770      	bx	lr
 8002438:	4b05      	ldr	r3, [pc, #20]	; (8002450 <rt_rmv_list+0x28>)
 800243a:	685a      	ldr	r2, [r3, #4]
 800243c:	4290      	cmp	r0, r2
 800243e:	d102      	bne.n	8002446 <rt_rmv_list+0x1e>
 8002440:	6842      	ldr	r2, [r0, #4]
 8002442:	605a      	str	r2, [r3, #4]
 8002444:	4770      	bx	lr
 8002446:	4613      	mov	r3, r2
 8002448:	2a00      	cmp	r2, #0
 800244a:	d1f6      	bne.n	800243a <rt_rmv_list+0x12>
 800244c:	4770      	bx	lr
 800244e:	bf00      	nop
 8002450:	20001e44 	.word	0x20001e44

08002454 <rt_resort_prio>:
 8002454:	b510      	push	{r4, lr}
 8002456:	6884      	ldr	r4, [r0, #8]
 8002458:	4601      	mov	r1, r0
 800245a:	b92c      	cbnz	r4, 8002468 <rt_resort_prio+0x14>
 800245c:	7843      	ldrb	r3, [r0, #1]
 800245e:	2b01      	cmp	r3, #1
 8002460:	d10d      	bne.n	800247e <rt_resort_prio+0x2a>
 8002462:	4c07      	ldr	r4, [pc, #28]	; (8002480 <rt_resort_prio+0x2c>)
 8002464:	e003      	b.n	800246e <rt_resort_prio+0x1a>
 8002466:	68a4      	ldr	r4, [r4, #8]
 8002468:	7823      	ldrb	r3, [r4, #0]
 800246a:	2b00      	cmp	r3, #0
 800246c:	d0fb      	beq.n	8002466 <rt_resort_prio+0x12>
 800246e:	4608      	mov	r0, r1
 8002470:	f7ff ffda 	bl	8002428 <rt_rmv_list>
 8002474:	4620      	mov	r0, r4
 8002476:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800247a:	f7ff bf45 	b.w	8002308 <rt_put_prio>
 800247e:	bd10      	pop	{r4, pc}
 8002480:	20001e44 	.word	0x20001e44

08002484 <rt_rmv_dly>:
 8002484:	6903      	ldr	r3, [r0, #16]
 8002486:	b510      	push	{r4, lr}
 8002488:	b163      	cbz	r3, 80024a4 <rt_rmv_dly+0x20>
 800248a:	68c2      	ldr	r2, [r0, #12]
 800248c:	60da      	str	r2, [r3, #12]
 800248e:	68c2      	ldr	r2, [r0, #12]
 8002490:	b14a      	cbz	r2, 80024a6 <rt_rmv_dly+0x22>
 8002492:	8a99      	ldrh	r1, [r3, #20]
 8002494:	8a84      	ldrh	r4, [r0, #20]
 8002496:	4421      	add	r1, r4
 8002498:	8299      	strh	r1, [r3, #20]
 800249a:	6113      	str	r3, [r2, #16]
 800249c:	2300      	movs	r3, #0
 800249e:	60c3      	str	r3, [r0, #12]
 80024a0:	2300      	movs	r3, #0
 80024a2:	6103      	str	r3, [r0, #16]
 80024a4:	bd10      	pop	{r4, pc}
 80024a6:	829a      	strh	r2, [r3, #20]
 80024a8:	e7fa      	b.n	80024a0 <rt_rmv_dly+0x1c>
	...

080024ac <rt_psq_enq>:
 80024ac:	b470      	push	{r4, r5, r6}
 80024ae:	4b11      	ldr	r3, [pc, #68]	; (80024f4 <rt_psq_enq+0x48>)
 80024b0:	78dd      	ldrb	r5, [r3, #3]
 80024b2:	f3ef 8610 	mrs	r6, PRIMASK
 80024b6:	f3ef 8210 	mrs	r2, PRIMASK
 80024ba:	b672      	cpsid	i
 80024bc:	789a      	ldrb	r2, [r3, #2]
 80024be:	4295      	cmp	r5, r2
 80024c0:	d911      	bls.n	80024e6 <rt_psq_enq+0x3a>
 80024c2:	3201      	adds	r2, #1
 80024c4:	709a      	strb	r2, [r3, #2]
 80024c6:	781a      	ldrb	r2, [r3, #0]
 80024c8:	1c54      	adds	r4, r2, #1
 80024ca:	42a5      	cmp	r5, r4
 80024cc:	bf08      	it	eq
 80024ce:	2400      	moveq	r4, #0
 80024d0:	701c      	strb	r4, [r3, #0]
 80024d2:	b906      	cbnz	r6, 80024d6 <rt_psq_enq+0x2a>
 80024d4:	b662      	cpsie	i
 80024d6:	4295      	cmp	r5, r2
 80024d8:	d907      	bls.n	80024ea <rt_psq_enq+0x3e>
 80024da:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80024de:	bc70      	pop	{r4, r5, r6}
 80024e0:	6058      	str	r0, [r3, #4]
 80024e2:	6099      	str	r1, [r3, #8]
 80024e4:	4770      	bx	lr
 80024e6:	2e00      	cmp	r6, #0
 80024e8:	d0f4      	beq.n	80024d4 <rt_psq_enq+0x28>
 80024ea:	2002      	movs	r0, #2
 80024ec:	bc70      	pop	{r4, r5, r6}
 80024ee:	f000 b829 	b.w	8002544 <os_error>
 80024f2:	bf00      	nop
 80024f4:	20001e78 	.word	0x20001e78

080024f8 <pre_main>:
 80024f8:	b508      	push	{r3, lr}
 80024fa:	480b      	ldr	r0, [pc, #44]	; (8002528 <pre_main+0x30>)
 80024fc:	f000 fca4 	bl	8002e48 <osMutexCreate>
 8002500:	4b0a      	ldr	r3, [pc, #40]	; (800252c <pre_main+0x34>)
 8002502:	6018      	str	r0, [r3, #0]
 8002504:	480a      	ldr	r0, [pc, #40]	; (8002530 <pre_main+0x38>)
 8002506:	f000 fc9f 	bl	8002e48 <osMutexCreate>
 800250a:	4b0a      	ldr	r3, [pc, #40]	; (8002534 <pre_main+0x3c>)
 800250c:	6018      	str	r0, [r3, #0]
 800250e:	480a      	ldr	r0, [pc, #40]	; (8002538 <pre_main+0x40>)
 8002510:	f000 fc9a 	bl	8002e48 <osMutexCreate>
 8002514:	4b09      	ldr	r3, [pc, #36]	; (800253c <pre_main+0x44>)
 8002516:	6018      	str	r0, [r3, #0]
 8002518:	f004 f8c0 	bl	800669c <__libc_init_array>
 800251c:	2100      	movs	r1, #0
 800251e:	4608      	mov	r0, r1
 8002520:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002524:	f003 bc21 	b.w	8005d6a <__wrap_main>
 8002528:	080075a8 	.word	0x080075a8
 800252c:	20001f00 	.word	0x20001f00
 8002530:	080075a4 	.word	0x080075a4
 8002534:	200009e0 	.word	0x200009e0
 8002538:	080075a0 	.word	0x080075a0
 800253c:	200009d8 	.word	0x200009d8

08002540 <os_idle_demon>:
 8002540:	f7ff beda 	b.w	80022f8 <rtos_idle_loop>

08002544 <os_error>:
 8002544:	b510      	push	{r4, lr}
 8002546:	4604      	mov	r4, r0
 8002548:	f000 fbec 	bl	8002d24 <svcThreadGetId>
 800254c:	4621      	mov	r1, r4
 800254e:	4602      	mov	r2, r0
 8002550:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002554:	4801      	ldr	r0, [pc, #4]	; (800255c <os_error+0x18>)
 8002556:	f7ff bec7 	b.w	80022e8 <error>
 800255a:	bf00      	nop
 800255c:	08007568 	.word	0x08007568

08002560 <sysThreadTerminate>:
 8002560:	f003 bc5e 	b.w	8005e20 <thread_terminate_hook>

08002564 <set_stack_heap>:
 8002564:	4a0b      	ldr	r2, [pc, #44]	; (8002594 <set_stack_heap+0x30>)
 8002566:	4b0c      	ldr	r3, [pc, #48]	; (8002598 <set_stack_heap+0x34>)
 8002568:	480c      	ldr	r0, [pc, #48]	; (800259c <set_stack_heap+0x38>)
 800256a:	b430      	push	{r4, r5}
 800256c:	601a      	str	r2, [r3, #0]
 800256e:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 8002572:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
 8002576:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800257a:	4619      	mov	r1, r3
 800257c:	bf28      	it	cs
 800257e:	f44f 6180 	movcs.w	r1, #1024	; 0x400
 8002582:	4d07      	ldr	r5, [pc, #28]	; (80025a0 <set_stack_heap+0x3c>)
 8002584:	4c07      	ldr	r4, [pc, #28]	; (80025a4 <set_stack_heap+0x40>)
 8002586:	6001      	str	r1, [r0, #0]
 8002588:	1a5b      	subs	r3, r3, r1
 800258a:	441a      	add	r2, r3
 800258c:	602a      	str	r2, [r5, #0]
 800258e:	6023      	str	r3, [r4, #0]
 8002590:	bc30      	pop	{r4, r5}
 8002592:	4770      	bx	lr
 8002594:	20002938 	.word	0x20002938
 8002598:	20001e34 	.word	0x20001e34
 800259c:	200009e4 	.word	0x200009e4
 80025a0:	200009e8 	.word	0x200009e8
 80025a4:	20001e30 	.word	0x20001e30

080025a8 <software_init_hook_rtos>:
 80025a8:	f000 fd22 	bl	8002ff0 <osKernelInitialize>
 80025ac:	f7ff ffda 	bl	8002564 <set_stack_heap>
 80025b0:	4803      	ldr	r0, [pc, #12]	; (80025c0 <software_init_hook_rtos+0x18>)
 80025b2:	2100      	movs	r1, #0
 80025b4:	f000 fcd0 	bl	8002f58 <osThreadCreate>
 80025b8:	f000 fb36 	bl	8002c28 <osKernelStart>
 80025bc:	e7fe      	b.n	80025bc <software_init_hook_rtos+0x14>
 80025be:	0000      	.short	0x0000
 80025c0:	200001cc 	.word	0x200001cc

080025c4 <__rtos_malloc_lock>:
 80025c4:	4b02      	ldr	r3, [pc, #8]	; (80025d0 <__rtos_malloc_lock+0xc>)
 80025c6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80025ca:	6818      	ldr	r0, [r3, #0]
 80025cc:	f000 bc5a 	b.w	8002e84 <osMutexWait>
 80025d0:	200009e0 	.word	0x200009e0

080025d4 <__rtos_malloc_unlock>:
 80025d4:	4b01      	ldr	r3, [pc, #4]	; (80025dc <__rtos_malloc_unlock+0x8>)
 80025d6:	6818      	ldr	r0, [r3, #0]
 80025d8:	f000 bc7c 	b.w	8002ed4 <osMutexRelease>
 80025dc:	200009e0 	.word	0x200009e0

080025e0 <rt_init_stack>:
 80025e0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80025e2:	089b      	lsrs	r3, r3, #2
 80025e4:	bf04      	itt	eq
 80025e6:	4b22      	ldreq	r3, [pc, #136]	; (8002670 <rt_init_stack+0x90>)
 80025e8:	881b      	ldrheq	r3, [r3, #0]
 80025ea:	b5f0      	push	{r4, r5, r6, r7, lr}
 80025ec:	6b05      	ldr	r5, [r0, #48]	; 0x30
 80025ee:	bf08      	it	eq
 80025f0:	089b      	lsreq	r3, r3, #2
 80025f2:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 80025f6:	0754      	lsls	r4, r2, #29
 80025f8:	bf48      	it	mi
 80025fa:	3a04      	submi	r2, #4
 80025fc:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 8002600:	e902 0042 	stmdb	r2, {r1, r6}
 8002604:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 8002608:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 800260c:	f1a2 070c 	sub.w	r7, r2, #12
 8002610:	f04f 0e00 	mov.w	lr, #0
 8002614:	f846 ef04 	str.w	lr, [r6, #4]!
 8002618:	42be      	cmp	r6, r7
 800261a:	d1fb      	bne.n	8002614 <rt_init_stack+0x34>
 800261c:	69c6      	ldr	r6, [r0, #28]
 800261e:	f842 6c20 	str.w	r6, [r2, #-32]
 8002622:	6341      	str	r1, [r0, #52]	; 0x34
 8002624:	4912      	ldr	r1, [pc, #72]	; (8002670 <rt_init_stack+0x90>)
 8002626:	62c4      	str	r4, [r0, #44]	; 0x2c
 8002628:	6809      	ldr	r1, [r1, #0]
 800262a:	00c9      	lsls	r1, r1, #3
 800262c:	d517      	bpl.n	800265e <rt_init_stack+0x7e>
 800262e:	2b11      	cmp	r3, #17
 8002630:	d915      	bls.n	800265e <rt_init_stack+0x7e>
 8002632:	3b10      	subs	r3, #16
 8002634:	f06f 0107 	mvn.w	r1, #7
 8002638:	085b      	lsrs	r3, r3, #1
 800263a:	434b      	muls	r3, r1
 800263c:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8002640:	440a      	add	r2, r1
 8002642:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 8002646:	4621      	mov	r1, r4
 8002648:	4291      	cmp	r1, r2
 800264a:	d10b      	bne.n	8002664 <rt_init_stack+0x84>
 800264c:	3308      	adds	r3, #8
 800264e:	441c      	add	r4, r3
 8002650:	1f23      	subs	r3, r4, #4
 8002652:	429d      	cmp	r5, r3
 8002654:	bf3c      	itt	cc
 8002656:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 800265a:	f844 3c04 	strcc.w	r3, [r4, #-4]
 800265e:	4b05      	ldr	r3, [pc, #20]	; (8002674 <rt_init_stack+0x94>)
 8002660:	602b      	str	r3, [r5, #0]
 8002662:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002664:	f841 0c04 	str.w	r0, [r1, #-4]
 8002668:	f841 0d08 	str.w	r0, [r1, #-8]!
 800266c:	e7ec      	b.n	8002648 <rt_init_stack+0x68>
 800266e:	bf00      	nop
 8002670:	080075b0 	.word	0x080075b0
 8002674:	e25a2ea5 	.word	0xe25a2ea5

08002678 <rt_ret_val>:
 8002678:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800267c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800267e:	b112      	cbz	r2, 8002686 <rt_ret_val+0xe>
 8002680:	3360      	adds	r3, #96	; 0x60
 8002682:	6019      	str	r1, [r3, #0]
 8002684:	4770      	bx	lr
 8002686:	3320      	adds	r3, #32
 8002688:	e7fb      	b.n	8002682 <rt_ret_val+0xa>

0800268a <rt_ret_val2>:
 800268a:	b510      	push	{r4, lr}
 800268c:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8002690:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8002692:	b11c      	cbz	r4, 800269c <rt_ret_val2+0x12>
 8002694:	3360      	adds	r3, #96	; 0x60
 8002696:	e883 0006 	stmia.w	r3, {r1, r2}
 800269a:	bd10      	pop	{r4, pc}
 800269c:	3320      	adds	r3, #32
 800269e:	e7fa      	b.n	8002696 <rt_ret_val2+0xc>

080026a0 <rt_psh_req>:
 80026a0:	4b05      	ldr	r3, [pc, #20]	; (80026b8 <rt_psh_req+0x18>)
 80026a2:	781b      	ldrb	r3, [r3, #0]
 80026a4:	b923      	cbnz	r3, 80026b0 <rt_psh_req+0x10>
 80026a6:	4b05      	ldr	r3, [pc, #20]	; (80026bc <rt_psh_req+0x1c>)
 80026a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80026ac:	601a      	str	r2, [r3, #0]
 80026ae:	4770      	bx	lr
 80026b0:	4b03      	ldr	r3, [pc, #12]	; (80026c0 <rt_psh_req+0x20>)
 80026b2:	2201      	movs	r2, #1
 80026b4:	701a      	strb	r2, [r3, #0]
 80026b6:	4770      	bx	lr
 80026b8:	20001a3c 	.word	0x20001a3c
 80026bc:	e000ed04 	.word	0xe000ed04
 80026c0:	20001a3d 	.word	0x20001a3d

080026c4 <rt_pop_req>:
 80026c4:	b538      	push	{r3, r4, r5, lr}
 80026c6:	4b1a      	ldr	r3, [pc, #104]	; (8002730 <rt_pop_req+0x6c>)
 80026c8:	4c1a      	ldr	r4, [pc, #104]	; (8002734 <rt_pop_req+0x70>)
 80026ca:	6818      	ldr	r0, [r3, #0]
 80026cc:	2301      	movs	r3, #1
 80026ce:	7043      	strb	r3, [r0, #1]
 80026d0:	f7ff fe44 	bl	800235c <rt_put_rdy_first>
 80026d4:	7865      	ldrb	r5, [r4, #1]
 80026d6:	78a3      	ldrb	r3, [r4, #2]
 80026d8:	b93b      	cbnz	r3, 80026ea <rt_pop_req+0x26>
 80026da:	4817      	ldr	r0, [pc, #92]	; (8002738 <rt_pop_req+0x74>)
 80026dc:	7065      	strb	r5, [r4, #1]
 80026de:	f7ff fe2b 	bl	8002338 <rt_get_first>
 80026e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80026e6:	f000 bd5d 	b.w	80031a4 <rt_switch_req>
 80026ea:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80026ee:	6858      	ldr	r0, [r3, #4]
 80026f0:	7802      	ldrb	r2, [r0, #0]
 80026f2:	b99a      	cbnz	r2, 800271c <rt_pop_req+0x58>
 80026f4:	8919      	ldrh	r1, [r3, #8]
 80026f6:	f000 f9bb 	bl	8002a70 <rt_evt_psh>
 80026fa:	78e3      	ldrb	r3, [r4, #3]
 80026fc:	3501      	adds	r5, #1
 80026fe:	429d      	cmp	r5, r3
 8002700:	bf08      	it	eq
 8002702:	2500      	moveq	r5, #0
 8002704:	f3ef 8310 	mrs	r3, PRIMASK
 8002708:	f3ef 8210 	mrs	r2, PRIMASK
 800270c:	b672      	cpsid	i
 800270e:	78a2      	ldrb	r2, [r4, #2]
 8002710:	3a01      	subs	r2, #1
 8002712:	70a2      	strb	r2, [r4, #2]
 8002714:	2b00      	cmp	r3, #0
 8002716:	d1de      	bne.n	80026d6 <rt_pop_req+0x12>
 8002718:	b662      	cpsie	i
 800271a:	e7dc      	b.n	80026d6 <rt_pop_req+0x12>
 800271c:	2a01      	cmp	r2, #1
 800271e:	d103      	bne.n	8002728 <rt_pop_req+0x64>
 8002720:	6899      	ldr	r1, [r3, #8]
 8002722:	f000 f933 	bl	800298c <rt_mbx_psh>
 8002726:	e7e8      	b.n	80026fa <rt_pop_req+0x36>
 8002728:	f001 f844 	bl	80037b4 <rt_sem_psh>
 800272c:	e7e5      	b.n	80026fa <rt_pop_req+0x36>
 800272e:	bf00      	nop
 8002730:	2000285c 	.word	0x2000285c
 8002734:	20001e78 	.word	0x20001e78
 8002738:	20001e44 	.word	0x20001e44

0800273c <os_tick_init>:
 800273c:	4b08      	ldr	r3, [pc, #32]	; (8002760 <os_tick_init+0x24>)
 800273e:	681a      	ldr	r2, [r3, #0]
 8002740:	4b08      	ldr	r3, [pc, #32]	; (8002764 <os_tick_init+0x28>)
 8002742:	601a      	str	r2, [r3, #0]
 8002744:	2200      	movs	r2, #0
 8002746:	605a      	str	r2, [r3, #4]
 8002748:	2207      	movs	r2, #7
 800274a:	f843 2c04 	str.w	r2, [r3, #-4]
 800274e:	4a06      	ldr	r2, [pc, #24]	; (8002768 <os_tick_init+0x2c>)
 8002750:	6813      	ldr	r3, [r2, #0]
 8002752:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8002756:	6013      	str	r3, [r2, #0]
 8002758:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800275c:	4770      	bx	lr
 800275e:	bf00      	nop
 8002760:	080075c8 	.word	0x080075c8
 8002764:	e000e014 	.word	0xe000e014
 8002768:	e000ed20 	.word	0xe000ed20

0800276c <os_tick_irqack>:
 800276c:	4770      	bx	lr
	...

08002770 <rt_systick>:
 8002770:	b508      	push	{r3, lr}
 8002772:	4b0b      	ldr	r3, [pc, #44]	; (80027a0 <rt_systick+0x30>)
 8002774:	6818      	ldr	r0, [r3, #0]
 8002776:	2301      	movs	r3, #1
 8002778:	7043      	strb	r3, [r0, #1]
 800277a:	f7ff fdef 	bl	800235c <rt_put_rdy_first>
 800277e:	f000 f9ad 	bl	8002adc <rt_chk_robin>
 8002782:	4a08      	ldr	r2, [pc, #32]	; (80027a4 <rt_systick+0x34>)
 8002784:	6813      	ldr	r3, [r2, #0]
 8002786:	3301      	adds	r3, #1
 8002788:	6013      	str	r3, [r2, #0]
 800278a:	f7ff fe15 	bl	80023b8 <rt_dec_dly>
 800278e:	f000 fc91 	bl	80030b4 <sysTimerTick>
 8002792:	4805      	ldr	r0, [pc, #20]	; (80027a8 <rt_systick+0x38>)
 8002794:	f7ff fdd0 	bl	8002338 <rt_get_first>
 8002798:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800279c:	f000 bd02 	b.w	80031a4 <rt_switch_req>
 80027a0:	2000285c 	.word	0x2000285c
 80027a4:	200028a4 	.word	0x200028a4
 80027a8:	20001e44 	.word	0x20001e44

080027ac <rt_stk_check>:
 80027ac:	4b06      	ldr	r3, [pc, #24]	; (80027c8 <rt_stk_check+0x1c>)
 80027ae:	681a      	ldr	r2, [r3, #0]
 80027b0:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80027b2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80027b4:	4293      	cmp	r3, r2
 80027b6:	d803      	bhi.n	80027c0 <rt_stk_check+0x14>
 80027b8:	681a      	ldr	r2, [r3, #0]
 80027ba:	4b04      	ldr	r3, [pc, #16]	; (80027cc <rt_stk_check+0x20>)
 80027bc:	429a      	cmp	r2, r3
 80027be:	d002      	beq.n	80027c6 <rt_stk_check+0x1a>
 80027c0:	2001      	movs	r0, #1
 80027c2:	f7ff bebf 	b.w	8002544 <os_error>
 80027c6:	4770      	bx	lr
 80027c8:	2000285c 	.word	0x2000285c
 80027cc:	e25a2ea5 	.word	0xe25a2ea5

080027d0 <_init_box>:
 80027d0:	2a00      	cmp	r2, #0
 80027d2:	bfbb      	ittet	lt
 80027d4:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 80027d8:	3207      	addlt	r2, #7
 80027da:	3203      	addge	r2, #3
 80027dc:	f022 0207 	biclt.w	r2, r2, #7
 80027e0:	bfa8      	it	ge
 80027e2:	f022 0203 	bicge.w	r2, r2, #3
 80027e6:	b510      	push	{r4, lr}
 80027e8:	bfb4      	ite	lt
 80027ea:	2310      	movlt	r3, #16
 80027ec:	230c      	movge	r3, #12
 80027ee:	b192      	cbz	r2, 8002816 <_init_box+0x46>
 80027f0:	18d4      	adds	r4, r2, r3
 80027f2:	428c      	cmp	r4, r1
 80027f4:	d80f      	bhi.n	8002816 <_init_box+0x46>
 80027f6:	4401      	add	r1, r0
 80027f8:	4403      	add	r3, r0
 80027fa:	4254      	negs	r4, r2
 80027fc:	6041      	str	r1, [r0, #4]
 80027fe:	6003      	str	r3, [r0, #0]
 8002800:	6082      	str	r2, [r0, #8]
 8002802:	4421      	add	r1, r4
 8002804:	1898      	adds	r0, r3, r2
 8002806:	4281      	cmp	r1, r0
 8002808:	d302      	bcc.n	8002810 <_init_box+0x40>
 800280a:	5100      	str	r0, [r0, r4]
 800280c:	4603      	mov	r3, r0
 800280e:	e7f9      	b.n	8002804 <_init_box+0x34>
 8002810:	2000      	movs	r0, #0
 8002812:	6018      	str	r0, [r3, #0]
 8002814:	bd10      	pop	{r4, pc}
 8002816:	2001      	movs	r0, #1
 8002818:	bd10      	pop	{r4, pc}

0800281a <rt_alloc_box>:
 800281a:	f3ef 8310 	mrs	r3, PRIMASK
 800281e:	b672      	cpsid	i
 8002820:	6802      	ldr	r2, [r0, #0]
 8002822:	f003 0301 	and.w	r3, r3, #1
 8002826:	b10a      	cbz	r2, 800282c <rt_alloc_box+0x12>
 8002828:	6811      	ldr	r1, [r2, #0]
 800282a:	6001      	str	r1, [r0, #0]
 800282c:	b903      	cbnz	r3, 8002830 <rt_alloc_box+0x16>
 800282e:	b662      	cpsie	i
 8002830:	4610      	mov	r0, r2
 8002832:	4770      	bx	lr

08002834 <rt_free_box>:
 8002834:	4281      	cmp	r1, r0
 8002836:	d30d      	bcc.n	8002854 <rt_free_box+0x20>
 8002838:	6843      	ldr	r3, [r0, #4]
 800283a:	4299      	cmp	r1, r3
 800283c:	d20a      	bcs.n	8002854 <rt_free_box+0x20>
 800283e:	f3ef 8310 	mrs	r3, PRIMASK
 8002842:	b672      	cpsid	i
 8002844:	6802      	ldr	r2, [r0, #0]
 8002846:	600a      	str	r2, [r1, #0]
 8002848:	6001      	str	r1, [r0, #0]
 800284a:	f013 0001 	ands.w	r0, r3, #1
 800284e:	d103      	bne.n	8002858 <rt_free_box+0x24>
 8002850:	b662      	cpsie	i
 8002852:	4770      	bx	lr
 8002854:	2001      	movs	r0, #1
 8002856:	4770      	bx	lr
 8002858:	2000      	movs	r0, #0
 800285a:	4770      	bx	lr

0800285c <rt_mbx_init>:
 800285c:	2301      	movs	r3, #1
 800285e:	3910      	subs	r1, #16
 8002860:	7003      	strb	r3, [r0, #0]
 8002862:	0889      	lsrs	r1, r1, #2
 8002864:	2300      	movs	r3, #0
 8002866:	7043      	strb	r3, [r0, #1]
 8002868:	7083      	strb	r3, [r0, #2]
 800286a:	6043      	str	r3, [r0, #4]
 800286c:	8103      	strh	r3, [r0, #8]
 800286e:	8143      	strh	r3, [r0, #10]
 8002870:	8183      	strh	r3, [r0, #12]
 8002872:	81c1      	strh	r1, [r0, #14]
 8002874:	4770      	bx	lr
	...

08002878 <rt_mbx_wait>:
 8002878:	b570      	push	{r4, r5, r6, lr}
 800287a:	8985      	ldrh	r5, [r0, #12]
 800287c:	4604      	mov	r4, r0
 800287e:	4616      	mov	r6, r2
 8002880:	2d00      	cmp	r5, #0
 8002882:	d038      	beq.n	80028f6 <rt_mbx_wait+0x7e>
 8002884:	8943      	ldrh	r3, [r0, #10]
 8002886:	1d1a      	adds	r2, r3, #4
 8002888:	3301      	adds	r3, #1
 800288a:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800288e:	600a      	str	r2, [r1, #0]
 8002890:	89c2      	ldrh	r2, [r0, #14]
 8002892:	b29b      	uxth	r3, r3
 8002894:	429a      	cmp	r2, r3
 8002896:	8143      	strh	r3, [r0, #10]
 8002898:	bf04      	itt	eq
 800289a:	2300      	moveq	r3, #0
 800289c:	8143      	strheq	r3, [r0, #10]
 800289e:	6843      	ldr	r3, [r0, #4]
 80028a0:	b1f3      	cbz	r3, 80028e0 <rt_mbx_wait+0x68>
 80028a2:	7843      	ldrb	r3, [r0, #1]
 80028a4:	2b02      	cmp	r3, #2
 80028a6:	d11b      	bne.n	80028e0 <rt_mbx_wait+0x68>
 80028a8:	f7ff fd46 	bl	8002338 <rt_get_first>
 80028ac:	2100      	movs	r1, #0
 80028ae:	4605      	mov	r5, r0
 80028b0:	f7ff fee2 	bl	8002678 <rt_ret_val>
 80028b4:	8923      	ldrh	r3, [r4, #8]
 80028b6:	69e9      	ldr	r1, [r5, #28]
 80028b8:	1d1a      	adds	r2, r3, #4
 80028ba:	3301      	adds	r3, #1
 80028bc:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 80028c0:	89e2      	ldrh	r2, [r4, #14]
 80028c2:	b29b      	uxth	r3, r3
 80028c4:	429a      	cmp	r2, r3
 80028c6:	8123      	strh	r3, [r4, #8]
 80028c8:	bf08      	it	eq
 80028ca:	2300      	moveq	r3, #0
 80028cc:	4628      	mov	r0, r5
 80028ce:	bf08      	it	eq
 80028d0:	8123      	strheq	r3, [r4, #8]
 80028d2:	f7ff fdd7 	bl	8002484 <rt_rmv_dly>
 80028d6:	4628      	mov	r0, r5
 80028d8:	f000 fc7e 	bl	80031d8 <rt_dispatch>
 80028dc:	2000      	movs	r0, #0
 80028de:	bd70      	pop	{r4, r5, r6, pc}
 80028e0:	f3ef 8010 	mrs	r0, PRIMASK
 80028e4:	f3ef 8310 	mrs	r3, PRIMASK
 80028e8:	b672      	cpsid	i
 80028ea:	3d01      	subs	r5, #1
 80028ec:	81a5      	strh	r5, [r4, #12]
 80028ee:	2800      	cmp	r0, #0
 80028f0:	d1f4      	bne.n	80028dc <rt_mbx_wait+0x64>
 80028f2:	b662      	cpsie	i
 80028f4:	bd70      	pop	{r4, r5, r6, pc}
 80028f6:	b14a      	cbz	r2, 800290c <rt_mbx_wait+0x94>
 80028f8:	6842      	ldr	r2, [r0, #4]
 80028fa:	4b09      	ldr	r3, [pc, #36]	; (8002920 <rt_mbx_wait+0xa8>)
 80028fc:	b142      	cbz	r2, 8002910 <rt_mbx_wait+0x98>
 80028fe:	6819      	ldr	r1, [r3, #0]
 8002900:	f7ff fd02 	bl	8002308 <rt_put_prio>
 8002904:	2108      	movs	r1, #8
 8002906:	4630      	mov	r0, r6
 8002908:	f000 fc8a 	bl	8003220 <rt_block>
 800290c:	2001      	movs	r0, #1
 800290e:	bd70      	pop	{r4, r5, r6, pc}
 8002910:	681b      	ldr	r3, [r3, #0]
 8002912:	6043      	str	r3, [r0, #4]
 8002914:	605a      	str	r2, [r3, #4]
 8002916:	6098      	str	r0, [r3, #8]
 8002918:	2301      	movs	r3, #1
 800291a:	7043      	strb	r3, [r0, #1]
 800291c:	e7f2      	b.n	8002904 <rt_mbx_wait+0x8c>
 800291e:	bf00      	nop
 8002920:	2000285c 	.word	0x2000285c

08002924 <rt_mbx_check>:
 8002924:	89c2      	ldrh	r2, [r0, #14]
 8002926:	8980      	ldrh	r0, [r0, #12]
 8002928:	1a10      	subs	r0, r2, r0
 800292a:	4770      	bx	lr

0800292c <isr_mbx_send>:
 800292c:	b508      	push	{r3, lr}
 800292e:	f7ff fdbd 	bl	80024ac <rt_psq_enq>
 8002932:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002936:	f7ff beb3 	b.w	80026a0 <rt_psh_req>

0800293a <isr_mbx_receive>:
 800293a:	8983      	ldrh	r3, [r0, #12]
 800293c:	b510      	push	{r4, lr}
 800293e:	4604      	mov	r4, r0
 8002940:	b30b      	cbz	r3, 8002986 <isr_mbx_receive+0x4c>
 8002942:	8943      	ldrh	r3, [r0, #10]
 8002944:	3304      	adds	r3, #4
 8002946:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800294a:	600b      	str	r3, [r1, #0]
 800294c:	7843      	ldrb	r3, [r0, #1]
 800294e:	2b02      	cmp	r3, #2
 8002950:	d104      	bne.n	800295c <isr_mbx_receive+0x22>
 8002952:	2100      	movs	r1, #0
 8002954:	f7ff fdaa 	bl	80024ac <rt_psq_enq>
 8002958:	f7ff fea2 	bl	80026a0 <rt_psh_req>
 800295c:	f3ef 8310 	mrs	r3, PRIMASK
 8002960:	f3ef 8210 	mrs	r2, PRIMASK
 8002964:	b672      	cpsid	i
 8002966:	89a2      	ldrh	r2, [r4, #12]
 8002968:	3a01      	subs	r2, #1
 800296a:	81a2      	strh	r2, [r4, #12]
 800296c:	b903      	cbnz	r3, 8002970 <isr_mbx_receive+0x36>
 800296e:	b662      	cpsie	i
 8002970:	8963      	ldrh	r3, [r4, #10]
 8002972:	89e2      	ldrh	r2, [r4, #14]
 8002974:	3301      	adds	r3, #1
 8002976:	b29b      	uxth	r3, r3
 8002978:	429a      	cmp	r2, r3
 800297a:	8163      	strh	r3, [r4, #10]
 800297c:	d101      	bne.n	8002982 <isr_mbx_receive+0x48>
 800297e:	2300      	movs	r3, #0
 8002980:	8163      	strh	r3, [r4, #10]
 8002982:	2004      	movs	r0, #4
 8002984:	bd10      	pop	{r4, pc}
 8002986:	4618      	mov	r0, r3
 8002988:	bd10      	pop	{r4, pc}
	...

0800298c <rt_mbx_psh>:
 800298c:	6843      	ldr	r3, [r0, #4]
 800298e:	b570      	push	{r4, r5, r6, lr}
 8002990:	4604      	mov	r4, r0
 8002992:	460e      	mov	r6, r1
 8002994:	2b00      	cmp	r3, #0
 8002996:	d04b      	beq.n	8002a30 <rt_mbx_psh+0xa4>
 8002998:	7845      	ldrb	r5, [r0, #1]
 800299a:	2d02      	cmp	r5, #2
 800299c:	d020      	beq.n	80029e0 <rt_mbx_psh+0x54>
 800299e:	2d03      	cmp	r5, #3
 80029a0:	d00a      	beq.n	80029b8 <rt_mbx_psh+0x2c>
 80029a2:	2d01      	cmp	r5, #1
 80029a4:	d161      	bne.n	8002a6a <rt_mbx_psh+0xde>
 80029a6:	f7ff fcc7 	bl	8002338 <rt_get_first>
 80029aa:	4604      	mov	r4, r0
 80029ac:	4632      	mov	r2, r6
 80029ae:	2110      	movs	r1, #16
 80029b0:	f7ff fe6b 	bl	800268a <rt_ret_val2>
 80029b4:	7065      	strb	r5, [r4, #1]
 80029b6:	e00e      	b.n	80029d6 <rt_mbx_psh+0x4a>
 80029b8:	4608      	mov	r0, r1
 80029ba:	f7ff ff2e 	bl	800281a <rt_alloc_box>
 80029be:	4605      	mov	r5, r0
 80029c0:	2800      	cmp	r0, #0
 80029c2:	d052      	beq.n	8002a6a <rt_mbx_psh+0xde>
 80029c4:	4620      	mov	r0, r4
 80029c6:	f7ff fcb7 	bl	8002338 <rt_get_first>
 80029ca:	4629      	mov	r1, r5
 80029cc:	4604      	mov	r4, r0
 80029ce:	f7ff fe53 	bl	8002678 <rt_ret_val>
 80029d2:	2301      	movs	r3, #1
 80029d4:	7063      	strb	r3, [r4, #1]
 80029d6:	4620      	mov	r0, r4
 80029d8:	f7ff fd54 	bl	8002484 <rt_rmv_dly>
 80029dc:	4621      	mov	r1, r4
 80029de:	e022      	b.n	8002a26 <rt_mbx_psh+0x9a>
 80029e0:	f7ff fcaa 	bl	8002338 <rt_get_first>
 80029e4:	2100      	movs	r1, #0
 80029e6:	4605      	mov	r5, r0
 80029e8:	f7ff fe46 	bl	8002678 <rt_ret_val>
 80029ec:	8923      	ldrh	r3, [r4, #8]
 80029ee:	69e9      	ldr	r1, [r5, #28]
 80029f0:	1d1a      	adds	r2, r3, #4
 80029f2:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 80029f6:	f3ef 8210 	mrs	r2, PRIMASK
 80029fa:	f3ef 8110 	mrs	r1, PRIMASK
 80029fe:	b672      	cpsid	i
 8002a00:	89a1      	ldrh	r1, [r4, #12]
 8002a02:	3101      	adds	r1, #1
 8002a04:	81a1      	strh	r1, [r4, #12]
 8002a06:	b902      	cbnz	r2, 8002a0a <rt_mbx_psh+0x7e>
 8002a08:	b662      	cpsie	i
 8002a0a:	89e2      	ldrh	r2, [r4, #14]
 8002a0c:	3301      	adds	r3, #1
 8002a0e:	b29b      	uxth	r3, r3
 8002a10:	429a      	cmp	r2, r3
 8002a12:	8123      	strh	r3, [r4, #8]
 8002a14:	bf04      	itt	eq
 8002a16:	2300      	moveq	r3, #0
 8002a18:	8123      	strheq	r3, [r4, #8]
 8002a1a:	2301      	movs	r3, #1
 8002a1c:	706b      	strb	r3, [r5, #1]
 8002a1e:	4628      	mov	r0, r5
 8002a20:	f7ff fd30 	bl	8002484 <rt_rmv_dly>
 8002a24:	4629      	mov	r1, r5
 8002a26:	4811      	ldr	r0, [pc, #68]	; (8002a6c <rt_mbx_psh+0xe0>)
 8002a28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002a2c:	f7ff bc6c 	b.w	8002308 <rt_put_prio>
 8002a30:	8980      	ldrh	r0, [r0, #12]
 8002a32:	89e1      	ldrh	r1, [r4, #14]
 8002a34:	4288      	cmp	r0, r1
 8002a36:	d213      	bcs.n	8002a60 <rt_mbx_psh+0xd4>
 8002a38:	8923      	ldrh	r3, [r4, #8]
 8002a3a:	1d1a      	adds	r2, r3, #4
 8002a3c:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8002a40:	f3ef 8210 	mrs	r2, PRIMASK
 8002a44:	f3ef 8510 	mrs	r5, PRIMASK
 8002a48:	b672      	cpsid	i
 8002a4a:	3001      	adds	r0, #1
 8002a4c:	81a0      	strh	r0, [r4, #12]
 8002a4e:	b902      	cbnz	r2, 8002a52 <rt_mbx_psh+0xc6>
 8002a50:	b662      	cpsie	i
 8002a52:	3301      	adds	r3, #1
 8002a54:	b29b      	uxth	r3, r3
 8002a56:	4299      	cmp	r1, r3
 8002a58:	bf08      	it	eq
 8002a5a:	2300      	moveq	r3, #0
 8002a5c:	8123      	strh	r3, [r4, #8]
 8002a5e:	bd70      	pop	{r4, r5, r6, pc}
 8002a60:	2003      	movs	r0, #3
 8002a62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002a66:	f7ff bd6d 	b.w	8002544 <os_error>
 8002a6a:	bd70      	pop	{r4, r5, r6, pc}
 8002a6c:	20001e44 	.word	0x20001e44

08002a70 <rt_evt_psh>:
 8002a70:	b510      	push	{r4, lr}
 8002a72:	8b03      	ldrh	r3, [r0, #24]
 8002a74:	7842      	ldrb	r2, [r0, #1]
 8002a76:	4319      	orrs	r1, r3
 8002a78:	2a06      	cmp	r2, #6
 8002a7a:	4604      	mov	r4, r0
 8002a7c:	8301      	strh	r1, [r0, #24]
 8002a7e:	8b43      	ldrh	r3, [r0, #26]
 8002a80:	d115      	bne.n	8002aae <rt_evt_psh+0x3e>
 8002a82:	ea33 0201 	bics.w	r2, r3, r1
 8002a86:	d119      	bne.n	8002abc <rt_evt_psh+0x4c>
 8002a88:	ea21 0103 	bic.w	r1, r1, r3
 8002a8c:	8321      	strh	r1, [r4, #24]
 8002a8e:	4620      	mov	r0, r4
 8002a90:	f7ff fcf8 	bl	8002484 <rt_rmv_dly>
 8002a94:	2301      	movs	r3, #1
 8002a96:	4620      	mov	r0, r4
 8002a98:	7063      	strb	r3, [r4, #1]
 8002a9a:	8b62      	ldrh	r2, [r4, #26]
 8002a9c:	2108      	movs	r1, #8
 8002a9e:	f7ff fdf4 	bl	800268a <rt_ret_val2>
 8002aa2:	4621      	mov	r1, r4
 8002aa4:	4806      	ldr	r0, [pc, #24]	; (8002ac0 <rt_evt_psh+0x50>)
 8002aa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002aaa:	f7ff bc2d 	b.w	8002308 <rt_put_prio>
 8002aae:	2a05      	cmp	r2, #5
 8002ab0:	d104      	bne.n	8002abc <rt_evt_psh+0x4c>
 8002ab2:	ea11 0203 	ands.w	r2, r1, r3
 8002ab6:	d001      	beq.n	8002abc <rt_evt_psh+0x4c>
 8002ab8:	8342      	strh	r2, [r0, #26]
 8002aba:	e7e5      	b.n	8002a88 <rt_evt_psh+0x18>
 8002abc:	bd10      	pop	{r4, pc}
 8002abe:	bf00      	nop
 8002ac0:	20001e44 	.word	0x20001e44

08002ac4 <rt_init_robin>:
 8002ac4:	4b03      	ldr	r3, [pc, #12]	; (8002ad4 <rt_init_robin+0x10>)
 8002ac6:	2200      	movs	r2, #0
 8002ac8:	601a      	str	r2, [r3, #0]
 8002aca:	4a03      	ldr	r2, [pc, #12]	; (8002ad8 <rt_init_robin+0x14>)
 8002acc:	6812      	ldr	r2, [r2, #0]
 8002ace:	80da      	strh	r2, [r3, #6]
 8002ad0:	4770      	bx	lr
 8002ad2:	bf00      	nop
 8002ad4:	20002848 	.word	0x20002848
 8002ad8:	080075ac 	.word	0x080075ac

08002adc <rt_chk_robin>:
 8002adc:	b508      	push	{r3, lr}
 8002ade:	4b0e      	ldr	r3, [pc, #56]	; (8002b18 <rt_chk_robin+0x3c>)
 8002ae0:	685a      	ldr	r2, [r3, #4]
 8002ae2:	4b0e      	ldr	r3, [pc, #56]	; (8002b1c <rt_chk_robin+0x40>)
 8002ae4:	6819      	ldr	r1, [r3, #0]
 8002ae6:	4291      	cmp	r1, r2
 8002ae8:	490d      	ldr	r1, [pc, #52]	; (8002b20 <rt_chk_robin+0x44>)
 8002aea:	d005      	beq.n	8002af8 <rt_chk_robin+0x1c>
 8002aec:	601a      	str	r2, [r3, #0]
 8002aee:	88da      	ldrh	r2, [r3, #6]
 8002af0:	6808      	ldr	r0, [r1, #0]
 8002af2:	3a01      	subs	r2, #1
 8002af4:	4402      	add	r2, r0
 8002af6:	809a      	strh	r2, [r3, #4]
 8002af8:	8898      	ldrh	r0, [r3, #4]
 8002afa:	880a      	ldrh	r2, [r1, #0]
 8002afc:	4290      	cmp	r0, r2
 8002afe:	d10a      	bne.n	8002b16 <rt_chk_robin+0x3a>
 8002b00:	2200      	movs	r2, #0
 8002b02:	4805      	ldr	r0, [pc, #20]	; (8002b18 <rt_chk_robin+0x3c>)
 8002b04:	601a      	str	r2, [r3, #0]
 8002b06:	f7ff fc17 	bl	8002338 <rt_get_first>
 8002b0a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002b0e:	4601      	mov	r1, r0
 8002b10:	4801      	ldr	r0, [pc, #4]	; (8002b18 <rt_chk_robin+0x3c>)
 8002b12:	f7ff bbf9 	b.w	8002308 <rt_put_prio>
 8002b16:	bd08      	pop	{r3, pc}
 8002b18:	20001e44 	.word	0x20001e44
 8002b1c:	20002848 	.word	0x20002848
 8002b20:	200028a4 	.word	0x200028a4

08002b24 <rt_timer_insert>:
 8002b24:	4a0b      	ldr	r2, [pc, #44]	; (8002b54 <rt_timer_insert+0x30>)
 8002b26:	6813      	ldr	r3, [r2, #0]
 8002b28:	b530      	push	{r4, r5, lr}
 8002b2a:	2400      	movs	r4, #0
 8002b2c:	b943      	cbnz	r3, 8002b40 <rt_timer_insert+0x1c>
 8002b2e:	6003      	str	r3, [r0, #0]
 8002b30:	6081      	str	r1, [r0, #8]
 8002b32:	b113      	cbz	r3, 8002b3a <rt_timer_insert+0x16>
 8002b34:	689d      	ldr	r5, [r3, #8]
 8002b36:	1a69      	subs	r1, r5, r1
 8002b38:	6099      	str	r1, [r3, #8]
 8002b3a:	b144      	cbz	r4, 8002b4e <rt_timer_insert+0x2a>
 8002b3c:	6020      	str	r0, [r4, #0]
 8002b3e:	bd30      	pop	{r4, r5, pc}
 8002b40:	689d      	ldr	r5, [r3, #8]
 8002b42:	42a9      	cmp	r1, r5
 8002b44:	d3f3      	bcc.n	8002b2e <rt_timer_insert+0xa>
 8002b46:	461c      	mov	r4, r3
 8002b48:	1b49      	subs	r1, r1, r5
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	e7ee      	b.n	8002b2c <rt_timer_insert+0x8>
 8002b4e:	6010      	str	r0, [r2, #0]
 8002b50:	bd30      	pop	{r4, r5, pc}
 8002b52:	bf00      	nop
 8002b54:	20002858 	.word	0x20002858

08002b58 <rt_ms2tick>:
 8002b58:	b1c0      	cbz	r0, 8002b8c <rt_ms2tick+0x34>
 8002b5a:	1c43      	adds	r3, r0, #1
 8002b5c:	d011      	beq.n	8002b82 <rt_ms2tick+0x2a>
 8002b5e:	4b0c      	ldr	r3, [pc, #48]	; (8002b90 <rt_ms2tick+0x38>)
 8002b60:	4298      	cmp	r0, r3
 8002b62:	d811      	bhi.n	8002b88 <rt_ms2tick+0x30>
 8002b64:	4b0b      	ldr	r3, [pc, #44]	; (8002b94 <rt_ms2tick+0x3c>)
 8002b66:	681b      	ldr	r3, [r3, #0]
 8002b68:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8002b6c:	1e5a      	subs	r2, r3, #1
 8002b6e:	fb01 2000 	mla	r0, r1, r0, r2
 8002b72:	fbb0 f3f3 	udiv	r3, r0, r3
 8002b76:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002b7a:	4283      	cmp	r3, r0
 8002b7c:	d806      	bhi.n	8002b8c <rt_ms2tick+0x34>
 8002b7e:	b298      	uxth	r0, r3
 8002b80:	4770      	bx	lr
 8002b82:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002b86:	4770      	bx	lr
 8002b88:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002b8c:	4770      	bx	lr
 8002b8e:	bf00      	nop
 8002b90:	003d0900 	.word	0x003d0900
 8002b94:	08007564 	.word	0x08007564

08002b98 <rt_tid2ptcb>:
 8002b98:	b138      	cbz	r0, 8002baa <rt_tid2ptcb+0x12>
 8002b9a:	0783      	lsls	r3, r0, #30
 8002b9c:	d104      	bne.n	8002ba8 <rt_tid2ptcb+0x10>
 8002b9e:	7803      	ldrb	r3, [r0, #0]
 8002ba0:	2b00      	cmp	r3, #0
 8002ba2:	bf18      	it	ne
 8002ba4:	2000      	movne	r0, #0
 8002ba6:	4770      	bx	lr
 8002ba8:	2000      	movs	r0, #0
 8002baa:	4770      	bx	lr

08002bac <svcKernelStart>:
 8002bac:	b5b0      	push	{r4, r5, r7, lr}
 8002bae:	4d0e      	ldr	r5, [pc, #56]	; (8002be8 <svcKernelStart+0x3c>)
 8002bb0:	7828      	ldrb	r0, [r5, #0]
 8002bb2:	af00      	add	r7, sp, #0
 8002bb4:	b9a8      	cbnz	r0, 8002be2 <svcKernelStart+0x36>
 8002bb6:	4c0d      	ldr	r4, [pc, #52]	; (8002bec <svcKernelStart+0x40>)
 8002bb8:	6823      	ldr	r3, [r4, #0]
 8002bba:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 8002bbe:	f000 fb51 	bl	8003264 <rt_tsk_prio>
 8002bc2:	6823      	ldr	r3, [r4, #0]
 8002bc4:	78da      	ldrb	r2, [r3, #3]
 8002bc6:	2aff      	cmp	r2, #255	; 0xff
 8002bc8:	d103      	bne.n	8002bd2 <svcKernelStart+0x26>
 8002bca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002bcc:	3220      	adds	r2, #32
 8002bce:	f382 8809 	msr	PSP, r2
 8002bd2:	6862      	ldr	r2, [r4, #4]
 8002bd4:	b90a      	cbnz	r2, 8002bda <svcKernelStart+0x2e>
 8002bd6:	e884 000c 	stmia.w	r4, {r2, r3}
 8002bda:	f000 fcfb 	bl	80035d4 <rt_sys_start>
 8002bde:	2301      	movs	r3, #1
 8002be0:	702b      	strb	r3, [r5, #0]
 8002be2:	2000      	movs	r0, #0
 8002be4:	bdb0      	pop	{r4, r5, r7, pc}
 8002be6:	bf00      	nop
 8002be8:	20002855 	.word	0x20002855
 8002bec:	2000285c 	.word	0x2000285c

08002bf0 <svcKernelRunning>:
 8002bf0:	4b01      	ldr	r3, [pc, #4]	; (8002bf8 <svcKernelRunning+0x8>)
 8002bf2:	7818      	ldrb	r0, [r3, #0]
 8002bf4:	4770      	bx	lr
 8002bf6:	bf00      	nop
 8002bf8:	20002855 	.word	0x20002855

08002bfc <osKernelRunning>:
 8002bfc:	b510      	push	{r4, lr}
 8002bfe:	f3ef 8410 	mrs	r4, PRIMASK
 8002c02:	b934      	cbnz	r4, 8002c12 <osKernelRunning+0x16>
 8002c04:	f3ef 8405 	mrs	r4, IPSR
 8002c08:	b91c      	cbnz	r4, 8002c12 <osKernelRunning+0x16>
 8002c0a:	f3ef 8414 	mrs	r4, CONTROL
 8002c0e:	07e4      	lsls	r4, r4, #31
 8002c10:	d402      	bmi.n	8002c18 <osKernelRunning+0x1c>
 8002c12:	4b03      	ldr	r3, [pc, #12]	; (8002c20 <osKernelRunning+0x24>)
 8002c14:	7818      	ldrb	r0, [r3, #0]
 8002c16:	bd10      	pop	{r4, pc}
 8002c18:	f8df c008 	ldr.w	r12, [pc, #8]	; 8002c24 <osKernelRunning+0x28>
 8002c1c:	df00      	svc	0
 8002c1e:	bd10      	pop	{r4, pc}
 8002c20:	20002855 	.word	0x20002855
 8002c24:	08002bf1 	.word	0x08002bf1

08002c28 <osKernelStart>:
 8002c28:	b590      	push	{r4, r7, lr}
 8002c2a:	b089      	sub	sp, #36	; 0x24
 8002c2c:	af00      	add	r7, sp, #0
 8002c2e:	f3ef 8310 	mrs	r3, PRIMASK
 8002c32:	2b00      	cmp	r3, #0
 8002c34:	d137      	bne.n	8002ca6 <osKernelStart+0x7e>
 8002c36:	f3ef 8305 	mrs	r3, IPSR
 8002c3a:	2b00      	cmp	r3, #0
 8002c3c:	d133      	bne.n	8002ca6 <osKernelStart+0x7e>
 8002c3e:	f7ff ffdd 	bl	8002bfc <osKernelRunning>
 8002c42:	b928      	cbnz	r0, 8002c50 <osKernelStart+0x28>
 8002c44:	4c19      	ldr	r4, [pc, #100]	; (8002cac <osKernelStart+0x84>)
 8002c46:	6824      	ldr	r4, [r4, #0]
 8002c48:	b114      	cbz	r4, 8002c50 <osKernelStart+0x28>
 8002c4a:	6864      	ldr	r4, [r4, #4]
 8002c4c:	b104      	cbz	r4, 8002c50 <osKernelStart+0x28>
 8002c4e:	47a0      	blx	r4
 8002c50:	f3ef 8414 	mrs	r4, CONTROL
 8002c54:	f004 0403 	and.w	r4, r4, #3
 8002c58:	2c02      	cmp	r4, #2
 8002c5a:	d018      	beq.n	8002c8e <osKernelStart+0x66>
 8002c5c:	2c03      	cmp	r4, #3
 8002c5e:	d01c      	beq.n	8002c9a <osKernelStart+0x72>
 8002c60:	2c01      	cmp	r4, #1
 8002c62:	d01e      	beq.n	8002ca2 <osKernelStart+0x7a>
 8002c64:	f107 0420 	add.w	r4, r7, #32
 8002c68:	f384 8809 	msr	PSP, r4
 8002c6c:	4c10      	ldr	r4, [pc, #64]	; (8002cb0 <osKernelStart+0x88>)
 8002c6e:	7824      	ldrb	r4, [r4, #0]
 8002c70:	07e4      	lsls	r4, r4, #31
 8002c72:	d510      	bpl.n	8002c96 <osKernelStart+0x6e>
 8002c74:	2402      	movs	r4, #2
 8002c76:	f384 8814 	msr	CONTROL, r4
 8002c7a:	f3bf 8f4f 	dsb	sy
 8002c7e:	f3bf 8f6f 	isb	sy
 8002c82:	f8df c030 	ldr.w	r12, [pc, #48]	; 8002cb4 <osKernelStart+0x8c>
 8002c86:	df00      	svc	0
 8002c88:	3724      	adds	r7, #36	; 0x24
 8002c8a:	46bd      	mov	sp, r7
 8002c8c:	bd90      	pop	{r4, r7, pc}
 8002c8e:	4c08      	ldr	r4, [pc, #32]	; (8002cb0 <osKernelStart+0x88>)
 8002c90:	7824      	ldrb	r4, [r4, #0]
 8002c92:	07e4      	lsls	r4, r4, #31
 8002c94:	d4f5      	bmi.n	8002c82 <osKernelStart+0x5a>
 8002c96:	2403      	movs	r4, #3
 8002c98:	e7ed      	b.n	8002c76 <osKernelStart+0x4e>
 8002c9a:	4c05      	ldr	r4, [pc, #20]	; (8002cb0 <osKernelStart+0x88>)
 8002c9c:	7824      	ldrb	r4, [r4, #0]
 8002c9e:	07e4      	lsls	r4, r4, #31
 8002ca0:	d5ef      	bpl.n	8002c82 <osKernelStart+0x5a>
 8002ca2:	20ff      	movs	r0, #255	; 0xff
 8002ca4:	e7f0      	b.n	8002c88 <osKernelStart+0x60>
 8002ca6:	2082      	movs	r0, #130	; 0x82
 8002ca8:	e7ee      	b.n	8002c88 <osKernelStart+0x60>
 8002caa:	bf00      	nop
 8002cac:	20002844 	.word	0x20002844
 8002cb0:	08007592 	.word	0x08007592
 8002cb4:	08002bad 	.word	0x08002bad

08002cb8 <svcThreadCreate>:
 8002cb8:	b570      	push	{r4, r5, r6, lr}
 8002cba:	460b      	mov	r3, r1
 8002cbc:	4616      	mov	r6, r2
 8002cbe:	4602      	mov	r2, r0
 8002cc0:	b910      	cbnz	r0, 8002cc8 <svcThreadCreate+0x10>
 8002cc2:	2400      	movs	r4, #0
 8002cc4:	4620      	mov	r0, r4
 8002cc6:	bd70      	pop	{r4, r5, r6, pc}
 8002cc8:	6800      	ldr	r0, [r0, #0]
 8002cca:	2800      	cmp	r0, #0
 8002ccc:	d0f9      	beq.n	8002cc2 <svcThreadCreate+0xa>
 8002cce:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 8002cd2:	1ce5      	adds	r5, r4, #3
 8002cd4:	b2ad      	uxth	r5, r5
 8002cd6:	2d06      	cmp	r5, #6
 8002cd8:	d8f3      	bhi.n	8002cc2 <svcThreadCreate+0xa>
 8002cda:	68d1      	ldr	r1, [r2, #12]
 8002cdc:	b1c1      	cbz	r1, 8002d10 <svcThreadCreate+0x58>
 8002cde:	6912      	ldr	r2, [r2, #16]
 8002ce0:	3404      	adds	r4, #4
 8002ce2:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 8002ce6:	f000 fafb 	bl	80032e0 <rt_tsk_create>
 8002cea:	2800      	cmp	r0, #0
 8002cec:	d0e9      	beq.n	8002cc2 <svcThreadCreate+0xa>
 8002cee:	4b0a      	ldr	r3, [pc, #40]	; (8002d18 <svcThreadCreate+0x60>)
 8002cf0:	4a0a      	ldr	r2, [pc, #40]	; (8002d1c <svcThreadCreate+0x64>)
 8002cf2:	3801      	subs	r0, #1
 8002cf4:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002cf8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002cfa:	635a      	str	r2, [r3, #52]	; 0x34
 8002cfc:	4b08      	ldr	r3, [pc, #32]	; (8002d20 <svcThreadCreate+0x68>)
 8002cfe:	681b      	ldr	r3, [r3, #0]
 8002d00:	b143      	cbz	r3, 8002d14 <svcThreadCreate+0x5c>
 8002d02:	689b      	ldr	r3, [r3, #8]
 8002d04:	b133      	cbz	r3, 8002d14 <svcThreadCreate+0x5c>
 8002d06:	4631      	mov	r1, r6
 8002d08:	78e0      	ldrb	r0, [r4, #3]
 8002d0a:	4798      	blx	r3
 8002d0c:	63e0      	str	r0, [r4, #60]	; 0x3c
 8002d0e:	e7d9      	b.n	8002cc4 <svcThreadCreate+0xc>
 8002d10:	460a      	mov	r2, r1
 8002d12:	e7e5      	b.n	8002ce0 <svcThreadCreate+0x28>
 8002d14:	63e6      	str	r6, [r4, #60]	; 0x3c
 8002d16:	e7d5      	b.n	8002cc4 <svcThreadCreate+0xc>
 8002d18:	20002228 	.word	0x20002228
 8002d1c:	08002ea5 	.word	0x08002ea5
 8002d20:	20002844 	.word	0x20002844

08002d24 <svcThreadGetId>:
 8002d24:	b508      	push	{r3, lr}
 8002d26:	f000 fa95 	bl	8003254 <rt_tsk_self>
 8002d2a:	b118      	cbz	r0, 8002d34 <svcThreadGetId+0x10>
 8002d2c:	3801      	subs	r0, #1
 8002d2e:	4b02      	ldr	r3, [pc, #8]	; (8002d38 <svcThreadGetId+0x14>)
 8002d30:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002d34:	bd08      	pop	{r3, pc}
 8002d36:	bf00      	nop
 8002d38:	20002228 	.word	0x20002228

08002d3c <svcThreadTerminate>:
 8002d3c:	b510      	push	{r4, lr}
 8002d3e:	f7ff ff2b 	bl	8002b98 <rt_tid2ptcb>
 8002d42:	4604      	mov	r4, r0
 8002d44:	b170      	cbz	r0, 8002d64 <svcThreadTerminate+0x28>
 8002d46:	4b08      	ldr	r3, [pc, #32]	; (8002d68 <svcThreadTerminate+0x2c>)
 8002d48:	681b      	ldr	r3, [r3, #0]
 8002d4a:	b11b      	cbz	r3, 8002d54 <svcThreadTerminate+0x18>
 8002d4c:	68db      	ldr	r3, [r3, #12]
 8002d4e:	b10b      	cbz	r3, 8002d54 <svcThreadTerminate+0x18>
 8002d50:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002d52:	4798      	blx	r3
 8002d54:	78e0      	ldrb	r0, [r4, #3]
 8002d56:	f000 fb19 	bl	800338c <rt_tsk_delete>
 8002d5a:	28ff      	cmp	r0, #255	; 0xff
 8002d5c:	bf0c      	ite	eq
 8002d5e:	2081      	moveq	r0, #129	; 0x81
 8002d60:	2000      	movne	r0, #0
 8002d62:	bd10      	pop	{r4, pc}
 8002d64:	2080      	movs	r0, #128	; 0x80
 8002d66:	bd10      	pop	{r4, pc}
 8002d68:	20002844 	.word	0x20002844

08002d6c <svcDelay>:
 8002d6c:	b508      	push	{r3, lr}
 8002d6e:	b128      	cbz	r0, 8002d7c <svcDelay+0x10>
 8002d70:	f7ff fef2 	bl	8002b58 <rt_ms2tick>
 8002d74:	f000 fd1a 	bl	80037ac <rt_dly_wait>
 8002d78:	2040      	movs	r0, #64	; 0x40
 8002d7a:	bd08      	pop	{r3, pc}
 8002d7c:	bd08      	pop	{r3, pc}
	...

08002d80 <osDelay>:
 8002d80:	b510      	push	{r4, lr}
 8002d82:	f3ef 8410 	mrs	r4, PRIMASK
 8002d86:	b934      	cbnz	r4, 8002d96 <osDelay+0x16>
 8002d88:	f3ef 8405 	mrs	r4, IPSR
 8002d8c:	b91c      	cbnz	r4, 8002d96 <osDelay+0x16>
 8002d8e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002d9c <osDelay+0x1c>
 8002d92:	df00      	svc	0
 8002d94:	bd10      	pop	{r4, pc}
 8002d96:	2082      	movs	r0, #130	; 0x82
 8002d98:	bd10      	pop	{r4, pc}
 8002d9a:	0000      	.short	0x0000
 8002d9c:	08002d6d 	.word	0x08002d6d

08002da0 <svcTimerCall>:
 8002da0:	0783      	lsls	r3, r0, #30
 8002da2:	d105      	bne.n	8002db0 <svcTimerCall+0x10>
 8002da4:	b138      	cbz	r0, 8002db6 <svcTimerCall+0x16>
 8002da6:	6943      	ldr	r3, [r0, #20]
 8002da8:	6901      	ldr	r1, [r0, #16]
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	4618      	mov	r0, r3
 8002dae:	4770      	bx	lr
 8002db0:	2300      	movs	r3, #0
 8002db2:	4619      	mov	r1, r3
 8002db4:	e7fa      	b.n	8002dac <svcTimerCall+0xc>
 8002db6:	4603      	mov	r3, r0
 8002db8:	e7fb      	b.n	8002db2 <svcTimerCall+0x12>
	...

08002dbc <osTimerCall>:
 8002dbc:	b510      	push	{r4, lr}
 8002dbe:	4604      	mov	r4, r0
 8002dc0:	4608      	mov	r0, r1
 8002dc2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002dd0 <osTimerCall+0x14>
 8002dc6:	df00      	svc	0
 8002dc8:	e884 0003 	stmia.w	r4, {r0, r1}
 8002dcc:	4620      	mov	r0, r4
 8002dce:	bd10      	pop	{r4, pc}
 8002dd0:	08002da1 	.word	0x08002da1

08002dd4 <svcMutexCreate>:
 8002dd4:	b510      	push	{r4, lr}
 8002dd6:	b148      	cbz	r0, 8002dec <svcMutexCreate+0x18>
 8002dd8:	6804      	ldr	r4, [r0, #0]
 8002dda:	b124      	cbz	r4, 8002de6 <svcMutexCreate+0x12>
 8002ddc:	7823      	ldrb	r3, [r4, #0]
 8002dde:	b923      	cbnz	r3, 8002dea <svcMutexCreate+0x16>
 8002de0:	4620      	mov	r0, r4
 8002de2:	f000 fc3d 	bl	8003660 <rt_mut_init>
 8002de6:	4620      	mov	r0, r4
 8002de8:	bd10      	pop	{r4, pc}
 8002dea:	2000      	movs	r0, #0
 8002dec:	bd10      	pop	{r4, pc}

08002dee <svcMutexWait>:
 8002dee:	b570      	push	{r4, r5, r6, lr}
 8002df0:	f010 0403 	ands.w	r4, r0, #3
 8002df4:	4605      	mov	r5, r0
 8002df6:	460e      	mov	r6, r1
 8002df8:	d111      	bne.n	8002e1e <svcMutexWait+0x30>
 8002dfa:	b180      	cbz	r0, 8002e1e <svcMutexWait+0x30>
 8002dfc:	7803      	ldrb	r3, [r0, #0]
 8002dfe:	2b03      	cmp	r3, #3
 8002e00:	d10d      	bne.n	8002e1e <svcMutexWait+0x30>
 8002e02:	4608      	mov	r0, r1
 8002e04:	f7ff fea8 	bl	8002b58 <rt_ms2tick>
 8002e08:	4601      	mov	r1, r0
 8002e0a:	4628      	mov	r0, r5
 8002e0c:	f000 fca0 	bl	8003750 <rt_mut_wait>
 8002e10:	2801      	cmp	r0, #1
 8002e12:	d106      	bne.n	8002e22 <svcMutexWait+0x34>
 8002e14:	2e00      	cmp	r6, #0
 8002e16:	bf14      	ite	ne
 8002e18:	20c1      	movne	r0, #193	; 0xc1
 8002e1a:	2081      	moveq	r0, #129	; 0x81
 8002e1c:	bd70      	pop	{r4, r5, r6, pc}
 8002e1e:	2080      	movs	r0, #128	; 0x80
 8002e20:	bd70      	pop	{r4, r5, r6, pc}
 8002e22:	4620      	mov	r0, r4
 8002e24:	bd70      	pop	{r4, r5, r6, pc}

08002e26 <svcMutexRelease>:
 8002e26:	0782      	lsls	r2, r0, #30
 8002e28:	b508      	push	{r3, lr}
 8002e2a:	d10a      	bne.n	8002e42 <svcMutexRelease+0x1c>
 8002e2c:	b148      	cbz	r0, 8002e42 <svcMutexRelease+0x1c>
 8002e2e:	7803      	ldrb	r3, [r0, #0]
 8002e30:	2b03      	cmp	r3, #3
 8002e32:	d106      	bne.n	8002e42 <svcMutexRelease+0x1c>
 8002e34:	f000 fc1c 	bl	8003670 <rt_mut_release>
 8002e38:	28ff      	cmp	r0, #255	; 0xff
 8002e3a:	bf0c      	ite	eq
 8002e3c:	2081      	moveq	r0, #129	; 0x81
 8002e3e:	2000      	movne	r0, #0
 8002e40:	bd08      	pop	{r3, pc}
 8002e42:	2080      	movs	r0, #128	; 0x80
 8002e44:	bd08      	pop	{r3, pc}
	...

08002e48 <osMutexCreate>:
 8002e48:	b570      	push	{r4, r5, r6, lr}
 8002e4a:	4605      	mov	r5, r0
 8002e4c:	f3ef 8410 	mrs	r4, PRIMASK
 8002e50:	b994      	cbnz	r4, 8002e78 <osMutexCreate+0x30>
 8002e52:	f3ef 8605 	mrs	r6, IPSR
 8002e56:	b97e      	cbnz	r6, 8002e78 <osMutexCreate+0x30>
 8002e58:	f3ef 8414 	mrs	r4, CONTROL
 8002e5c:	07e4      	lsls	r4, r4, #31
 8002e5e:	d406      	bmi.n	8002e6e <osMutexCreate+0x26>
 8002e60:	4c06      	ldr	r4, [pc, #24]	; (8002e7c <osMutexCreate+0x34>)
 8002e62:	7824      	ldrb	r4, [r4, #0]
 8002e64:	b91c      	cbnz	r4, 8002e6e <osMutexCreate+0x26>
 8002e66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002e6a:	f7ff bfb3 	b.w	8002dd4 <svcMutexCreate>
 8002e6e:	4628      	mov	r0, r5
 8002e70:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002e80 <osMutexCreate+0x38>
 8002e74:	df00      	svc	0
 8002e76:	bd70      	pop	{r4, r5, r6, pc}
 8002e78:	2000      	movs	r0, #0
 8002e7a:	bd70      	pop	{r4, r5, r6, pc}
 8002e7c:	20002855 	.word	0x20002855
 8002e80:	08002dd5 	.word	0x08002dd5

08002e84 <osMutexWait>:
 8002e84:	b510      	push	{r4, lr}
 8002e86:	f3ef 8410 	mrs	r4, PRIMASK
 8002e8a:	b934      	cbnz	r4, 8002e9a <osMutexWait+0x16>
 8002e8c:	f3ef 8405 	mrs	r4, IPSR
 8002e90:	b91c      	cbnz	r4, 8002e9a <osMutexWait+0x16>
 8002e92:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002ea0 <osMutexWait+0x1c>
 8002e96:	df00      	svc	0
 8002e98:	bd10      	pop	{r4, pc}
 8002e9a:	2082      	movs	r0, #130	; 0x82
 8002e9c:	bd10      	pop	{r4, pc}
 8002e9e:	0000      	.short	0x0000
 8002ea0:	08002def 	.word	0x08002def

08002ea4 <osThreadExit>:
 8002ea4:	4808      	ldr	r0, [pc, #32]	; (8002ec8 <osThreadExit+0x24>)
 8002ea6:	b508      	push	{r3, lr}
 8002ea8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002eac:	6800      	ldr	r0, [r0, #0]
 8002eae:	f7ff ffe9 	bl	8002e84 <osMutexWait>
 8002eb2:	f8df c018 	ldr.w	r12, [pc, #24]	; 8002ecc <osThreadExit+0x28>
 8002eb6:	df00      	svc	0
 8002eb8:	4604      	mov	r4, r0
 8002eba:	f7ff fb51 	bl	8002560 <sysThreadTerminate>
 8002ebe:	4620      	mov	r0, r4
 8002ec0:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002ed0 <osThreadExit+0x2c>
 8002ec4:	df00      	svc	0
 8002ec6:	e7fe      	b.n	8002ec6 <osThreadExit+0x22>
 8002ec8:	20002850 	.word	0x20002850
 8002ecc:	08002d25 	.word	0x08002d25
 8002ed0:	08002d3d 	.word	0x08002d3d

08002ed4 <osMutexRelease>:
 8002ed4:	b510      	push	{r4, lr}
 8002ed6:	f3ef 8410 	mrs	r4, PRIMASK
 8002eda:	b934      	cbnz	r4, 8002eea <osMutexRelease+0x16>
 8002edc:	f3ef 8405 	mrs	r4, IPSR
 8002ee0:	b91c      	cbnz	r4, 8002eea <osMutexRelease+0x16>
 8002ee2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002ef0 <osMutexRelease+0x1c>
 8002ee6:	df00      	svc	0
 8002ee8:	bd10      	pop	{r4, pc}
 8002eea:	2082      	movs	r0, #130	; 0x82
 8002eec:	bd10      	pop	{r4, pc}
 8002eee:	0000      	.short	0x0000
 8002ef0:	08002e27 	.word	0x08002e27

08002ef4 <osThreadContextCreate>:
 8002ef4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002ef8:	4680      	mov	r8, r0
 8002efa:	460f      	mov	r7, r1
 8002efc:	4616      	mov	r6, r2
 8002efe:	f3ef 8410 	mrs	r4, PRIMASK
 8002f02:	bb04      	cbnz	r4, 8002f46 <osThreadContextCreate+0x52>
 8002f04:	f3ef 8305 	mrs	r3, IPSR
 8002f08:	b9d3      	cbnz	r3, 8002f40 <osThreadContextCreate+0x4c>
 8002f0a:	f3ef 8314 	mrs	r3, CONTROL
 8002f0e:	07db      	lsls	r3, r3, #31
 8002f10:	d406      	bmi.n	8002f20 <osThreadContextCreate+0x2c>
 8002f12:	4b0e      	ldr	r3, [pc, #56]	; (8002f4c <osThreadContextCreate+0x58>)
 8002f14:	781b      	ldrb	r3, [r3, #0]
 8002f16:	b91b      	cbnz	r3, 8002f20 <osThreadContextCreate+0x2c>
 8002f18:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002f1c:	f7ff becc 	b.w	8002cb8 <svcThreadCreate>
 8002f20:	4d0b      	ldr	r5, [pc, #44]	; (8002f50 <osThreadContextCreate+0x5c>)
 8002f22:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002f26:	6828      	ldr	r0, [r5, #0]
 8002f28:	f7ff ffac 	bl	8002e84 <osMutexWait>
 8002f2c:	4640      	mov	r0, r8
 8002f2e:	4639      	mov	r1, r7
 8002f30:	4632      	mov	r2, r6
 8002f32:	f8df c020 	ldr.w	r12, [pc, #32]	; 8002f54 <osThreadContextCreate+0x60>
 8002f36:	df00      	svc	0
 8002f38:	4604      	mov	r4, r0
 8002f3a:	6828      	ldr	r0, [r5, #0]
 8002f3c:	f7ff ffca 	bl	8002ed4 <osMutexRelease>
 8002f40:	4620      	mov	r0, r4
 8002f42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002f46:	2400      	movs	r4, #0
 8002f48:	e7fa      	b.n	8002f40 <osThreadContextCreate+0x4c>
 8002f4a:	bf00      	nop
 8002f4c:	20002855 	.word	0x20002855
 8002f50:	20002850 	.word	0x20002850
 8002f54:	08002cb9 	.word	0x08002cb9

08002f58 <osThreadCreate>:
 8002f58:	2200      	movs	r2, #0
 8002f5a:	f7ff bfcb 	b.w	8002ef4 <osThreadContextCreate>

08002f5e <svcMessageCreate>:
 8002f5e:	b510      	push	{r4, lr}
 8002f60:	4604      	mov	r4, r0
 8002f62:	b160      	cbz	r0, 8002f7e <svcMessageCreate+0x20>
 8002f64:	6801      	ldr	r1, [r0, #0]
 8002f66:	b151      	cbz	r1, 8002f7e <svcMessageCreate+0x20>
 8002f68:	6840      	ldr	r0, [r0, #4]
 8002f6a:	b148      	cbz	r0, 8002f80 <svcMessageCreate+0x22>
 8002f6c:	7803      	ldrb	r3, [r0, #0]
 8002f6e:	b933      	cbnz	r3, 8002f7e <svcMessageCreate+0x20>
 8002f70:	3104      	adds	r1, #4
 8002f72:	0089      	lsls	r1, r1, #2
 8002f74:	b289      	uxth	r1, r1
 8002f76:	f7ff fc71 	bl	800285c <rt_mbx_init>
 8002f7a:	6860      	ldr	r0, [r4, #4]
 8002f7c:	bd10      	pop	{r4, pc}
 8002f7e:	2000      	movs	r0, #0
 8002f80:	bd10      	pop	{r4, pc}
	...

08002f84 <svcKernelInitialize>:
 8002f84:	b538      	push	{r3, r4, r5, lr}
 8002f86:	4c11      	ldr	r4, [pc, #68]	; (8002fcc <svcKernelInitialize+0x48>)
 8002f88:	7823      	ldrb	r3, [r4, #0]
 8002f8a:	b90b      	cbnz	r3, 8002f90 <svcKernelInitialize+0xc>
 8002f8c:	f000 faa8 	bl	80034e0 <rt_sys_init>
 8002f90:	4b0f      	ldr	r3, [pc, #60]	; (8002fd0 <svcKernelInitialize+0x4c>)
 8002f92:	7825      	ldrb	r5, [r4, #0]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	22ff      	movs	r2, #255	; 0xff
 8002f98:	709a      	strb	r2, [r3, #2]
 8002f9a:	b98d      	cbnz	r5, 8002fc0 <svcKernelInitialize+0x3c>
 8002f9c:	4629      	mov	r1, r5
 8002f9e:	480d      	ldr	r0, [pc, #52]	; (8002fd4 <svcKernelInitialize+0x50>)
 8002fa0:	f7ff ffdd 	bl	8002f5e <svcMessageCreate>
 8002fa4:	4b0c      	ldr	r3, [pc, #48]	; (8002fd8 <svcKernelInitialize+0x54>)
 8002fa6:	462a      	mov	r2, r5
 8002fa8:	6018      	str	r0, [r3, #0]
 8002faa:	4629      	mov	r1, r5
 8002fac:	480b      	ldr	r0, [pc, #44]	; (8002fdc <svcKernelInitialize+0x58>)
 8002fae:	f7ff fe83 	bl	8002cb8 <svcThreadCreate>
 8002fb2:	4b0b      	ldr	r3, [pc, #44]	; (8002fe0 <svcKernelInitialize+0x5c>)
 8002fb4:	6018      	str	r0, [r3, #0]
 8002fb6:	480b      	ldr	r0, [pc, #44]	; (8002fe4 <svcKernelInitialize+0x60>)
 8002fb8:	f7ff ff46 	bl	8002e48 <osMutexCreate>
 8002fbc:	4b0a      	ldr	r3, [pc, #40]	; (8002fe8 <svcKernelInitialize+0x64>)
 8002fbe:	6018      	str	r0, [r3, #0]
 8002fc0:	2301      	movs	r3, #1
 8002fc2:	7023      	strb	r3, [r4, #0]
 8002fc4:	4b09      	ldr	r3, [pc, #36]	; (8002fec <svcKernelInitialize+0x68>)
 8002fc6:	2000      	movs	r0, #0
 8002fc8:	7018      	strb	r0, [r3, #0]
 8002fca:	bd38      	pop	{r3, r4, r5, pc}
 8002fcc:	20002854 	.word	0x20002854
 8002fd0:	2000285c 	.word	0x2000285c
 8002fd4:	08007598 	.word	0x08007598
 8002fd8:	20001f04 	.word	0x20001f04
 8002fdc:	080075b4 	.word	0x080075b4
 8002fe0:	20001efc 	.word	0x20001efc
 8002fe4:	080075cc 	.word	0x080075cc
 8002fe8:	20002850 	.word	0x20002850
 8002fec:	20002855 	.word	0x20002855

08002ff0 <osKernelInitialize>:
 8002ff0:	b510      	push	{r4, lr}
 8002ff2:	f3ef 8410 	mrs	r4, PRIMASK
 8002ff6:	b974      	cbnz	r4, 8003016 <osKernelInitialize+0x26>
 8002ff8:	f3ef 8405 	mrs	r4, IPSR
 8002ffc:	b95c      	cbnz	r4, 8003016 <osKernelInitialize+0x26>
 8002ffe:	f3ef 8414 	mrs	r4, CONTROL
 8003002:	07e4      	lsls	r4, r4, #31
 8003004:	d403      	bmi.n	800300e <osKernelInitialize+0x1e>
 8003006:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800300a:	f7ff bfbb 	b.w	8002f84 <svcKernelInitialize>
 800300e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800301c <osKernelInitialize+0x2c>
 8003012:	df00      	svc	0
 8003014:	bd10      	pop	{r4, pc}
 8003016:	2082      	movs	r0, #130	; 0x82
 8003018:	bd10      	pop	{r4, pc}
 800301a:	0000      	.short	0x0000
 800301c:	08002f85 	.word	0x08002f85

08003020 <svcMessageGet>:
 8003020:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8003024:	460c      	mov	r4, r1
 8003026:	4680      	mov	r8, r0
 8003028:	b318      	cbz	r0, 8003072 <svcMessageGet+0x52>
 800302a:	7803      	ldrb	r3, [r0, #0]
 800302c:	2b01      	cmp	r3, #1
 800302e:	d125      	bne.n	800307c <svcMessageGet+0x5c>
 8003030:	4608      	mov	r0, r1
 8003032:	f7ff fd91 	bl	8002b58 <rt_ms2tick>
 8003036:	a902      	add	r1, sp, #8
 8003038:	4602      	mov	r2, r0
 800303a:	4640      	mov	r0, r8
 800303c:	f7ff fc1c 	bl	8002878 <rt_mbx_wait>
 8003040:	2801      	cmp	r0, #1
 8003042:	d111      	bne.n	8003068 <svcMessageGet+0x48>
 8003044:	2000      	movs	r0, #0
 8003046:	2c00      	cmp	r4, #0
 8003048:	4602      	mov	r2, r0
 800304a:	4603      	mov	r3, r0
 800304c:	bf18      	it	ne
 800304e:	2040      	movne	r0, #64	; 0x40
 8003050:	9902      	ldr	r1, [sp, #8]
 8003052:	4604      	mov	r4, r0
 8003054:	460d      	mov	r5, r1
 8003056:	4616      	mov	r6, r2
 8003058:	461f      	mov	r7, r3
 800305a:	4620      	mov	r0, r4
 800305c:	4629      	mov	r1, r5
 800305e:	4632      	mov	r2, r6
 8003060:	463b      	mov	r3, r7
 8003062:	b004      	add	sp, #16
 8003064:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003068:	2000      	movs	r0, #0
 800306a:	4602      	mov	r2, r0
 800306c:	4603      	mov	r3, r0
 800306e:	2010      	movs	r0, #16
 8003070:	e7ee      	b.n	8003050 <svcMessageGet+0x30>
 8003072:	2480      	movs	r4, #128	; 0x80
 8003074:	4605      	mov	r5, r0
 8003076:	4606      	mov	r6, r0
 8003078:	4607      	mov	r7, r0
 800307a:	e7ee      	b.n	800305a <svcMessageGet+0x3a>
 800307c:	2500      	movs	r5, #0
 800307e:	2480      	movs	r4, #128	; 0x80
 8003080:	462e      	mov	r6, r5
 8003082:	462f      	mov	r7, r5
 8003084:	e7e9      	b.n	800305a <svcMessageGet+0x3a>

08003086 <isrMessagePut>:
 8003086:	b570      	push	{r4, r5, r6, lr}
 8003088:	460e      	mov	r6, r1
 800308a:	4614      	mov	r4, r2
 800308c:	4605      	mov	r5, r0
 800308e:	b160      	cbz	r0, 80030aa <isrMessagePut+0x24>
 8003090:	b95a      	cbnz	r2, 80030aa <isrMessagePut+0x24>
 8003092:	7803      	ldrb	r3, [r0, #0]
 8003094:	2b01      	cmp	r3, #1
 8003096:	d108      	bne.n	80030aa <isrMessagePut+0x24>
 8003098:	f7ff fc44 	bl	8002924 <rt_mbx_check>
 800309c:	b138      	cbz	r0, 80030ae <isrMessagePut+0x28>
 800309e:	4628      	mov	r0, r5
 80030a0:	4631      	mov	r1, r6
 80030a2:	f7ff fc43 	bl	800292c <isr_mbx_send>
 80030a6:	4620      	mov	r0, r4
 80030a8:	bd70      	pop	{r4, r5, r6, pc}
 80030aa:	2080      	movs	r0, #128	; 0x80
 80030ac:	bd70      	pop	{r4, r5, r6, pc}
 80030ae:	2081      	movs	r0, #129	; 0x81
 80030b0:	bd70      	pop	{r4, r5, r6, pc}
	...

080030b4 <sysTimerTick>:
 80030b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80030b6:	4e11      	ldr	r6, [pc, #68]	; (80030fc <sysTimerTick+0x48>)
 80030b8:	6834      	ldr	r4, [r6, #0]
 80030ba:	b12c      	cbz	r4, 80030c8 <sysTimerTick+0x14>
 80030bc:	68a3      	ldr	r3, [r4, #8]
 80030be:	4f10      	ldr	r7, [pc, #64]	; (8003100 <sysTimerTick+0x4c>)
 80030c0:	3b01      	subs	r3, #1
 80030c2:	60a3      	str	r3, [r4, #8]
 80030c4:	68a2      	ldr	r2, [r4, #8]
 80030c6:	b102      	cbz	r2, 80030ca <sysTimerTick+0x16>
 80030c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80030ca:	6825      	ldr	r5, [r4, #0]
 80030cc:	6838      	ldr	r0, [r7, #0]
 80030ce:	6035      	str	r5, [r6, #0]
 80030d0:	4621      	mov	r1, r4
 80030d2:	f7ff ffd8 	bl	8003086 <isrMessagePut>
 80030d6:	b110      	cbz	r0, 80030de <sysTimerTick+0x2a>
 80030d8:	2004      	movs	r0, #4
 80030da:	f7ff fa33 	bl	8002544 <os_error>
 80030de:	7963      	ldrb	r3, [r4, #5]
 80030e0:	2b01      	cmp	r3, #1
 80030e2:	d107      	bne.n	80030f4 <sysTimerTick+0x40>
 80030e4:	68e1      	ldr	r1, [r4, #12]
 80030e6:	4620      	mov	r0, r4
 80030e8:	f7ff fd1c 	bl	8002b24 <rt_timer_insert>
 80030ec:	2d00      	cmp	r5, #0
 80030ee:	d0eb      	beq.n	80030c8 <sysTimerTick+0x14>
 80030f0:	462c      	mov	r4, r5
 80030f2:	e7e7      	b.n	80030c4 <sysTimerTick+0x10>
 80030f4:	2301      	movs	r3, #1
 80030f6:	7123      	strb	r3, [r4, #4]
 80030f8:	e7f8      	b.n	80030ec <sysTimerTick+0x38>
 80030fa:	bf00      	nop
 80030fc:	20002858 	.word	0x20002858
 8003100:	20001f04 	.word	0x20001f04

08003104 <isrMessageGet>:
 8003104:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003106:	4604      	mov	r4, r0
 8003108:	4616      	mov	r6, r2
 800310a:	4608      	mov	r0, r1
 800310c:	b101      	cbz	r1, 8003110 <isrMessageGet+0xc>
 800310e:	b122      	cbz	r2, 800311a <isrMessageGet+0x16>
 8003110:	2380      	movs	r3, #128	; 0x80
 8003112:	6023      	str	r3, [r4, #0]
 8003114:	4620      	mov	r0, r4
 8003116:	b004      	add	sp, #16
 8003118:	bd70      	pop	{r4, r5, r6, pc}
 800311a:	780b      	ldrb	r3, [r1, #0]
 800311c:	2b01      	cmp	r3, #1
 800311e:	d1f7      	bne.n	8003110 <isrMessageGet+0xc>
 8003120:	a902      	add	r1, sp, #8
 8003122:	f7ff fc0a 	bl	800293a <isr_mbx_receive>
 8003126:	2804      	cmp	r0, #4
 8003128:	bf08      	it	eq
 800312a:	2310      	moveq	r3, #16
 800312c:	ad01      	add	r5, sp, #4
 800312e:	bf14      	ite	ne
 8003130:	9601      	strne	r6, [sp, #4]
 8003132:	9301      	streq	r3, [sp, #4]
 8003134:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003138:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800313c:	e7ea      	b.n	8003114 <isrMessageGet+0x10>
	...

08003140 <osMessageGet>:
 8003140:	b538      	push	{r3, r4, r5, lr}
 8003142:	4604      	mov	r4, r0
 8003144:	4615      	mov	r5, r2
 8003146:	f3ef 8010 	mrs	r0, PRIMASK
 800314a:	b910      	cbnz	r0, 8003152 <osMessageGet+0x12>
 800314c:	f3ef 8005 	mrs	r0, IPSR
 8003150:	b128      	cbz	r0, 800315e <osMessageGet+0x1e>
 8003152:	462a      	mov	r2, r5
 8003154:	4620      	mov	r0, r4
 8003156:	f7ff ffd5 	bl	8003104 <isrMessageGet>
 800315a:	4620      	mov	r0, r4
 800315c:	bd38      	pop	{r3, r4, r5, pc}
 800315e:	4608      	mov	r0, r1
 8003160:	4611      	mov	r1, r2
 8003162:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8003170 <osMessageGet+0x30>
 8003166:	df00      	svc	0
 8003168:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800316c:	e7f5      	b.n	800315a <osMessageGet+0x1a>
 800316e:	0000      	.short	0x0000
 8003170:	08003021 	.word	0x08003021

08003174 <osTimerThread>:
 8003174:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003176:	4c0a      	ldr	r4, [pc, #40]	; (80031a0 <osTimerThread+0x2c>)
 8003178:	6821      	ldr	r1, [r4, #0]
 800317a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800317e:	a803      	add	r0, sp, #12
 8003180:	f7ff ffde 	bl	8003140 <osMessageGet>
 8003184:	9b03      	ldr	r3, [sp, #12]
 8003186:	2b10      	cmp	r3, #16
 8003188:	d1f6      	bne.n	8003178 <osTimerThread+0x4>
 800318a:	9904      	ldr	r1, [sp, #16]
 800318c:	a801      	add	r0, sp, #4
 800318e:	f7ff fe15 	bl	8002dbc <osTimerCall>
 8003192:	9b01      	ldr	r3, [sp, #4]
 8003194:	2b00      	cmp	r3, #0
 8003196:	d0ef      	beq.n	8003178 <osTimerThread+0x4>
 8003198:	9802      	ldr	r0, [sp, #8]
 800319a:	4798      	blx	r3
 800319c:	e7ec      	b.n	8003178 <osTimerThread+0x4>
 800319e:	bf00      	nop
 80031a0:	20001f04 	.word	0x20001f04

080031a4 <rt_switch_req>:
 80031a4:	4b05      	ldr	r3, [pc, #20]	; (80031bc <rt_switch_req+0x18>)
 80031a6:	6058      	str	r0, [r3, #4]
 80031a8:	2302      	movs	r3, #2
 80031aa:	7043      	strb	r3, [r0, #1]
 80031ac:	4b04      	ldr	r3, [pc, #16]	; (80031c0 <rt_switch_req+0x1c>)
 80031ae:	681b      	ldr	r3, [r3, #0]
 80031b0:	b11b      	cbz	r3, 80031ba <rt_switch_req+0x16>
 80031b2:	691b      	ldr	r3, [r3, #16]
 80031b4:	b10b      	cbz	r3, 80031ba <rt_switch_req+0x16>
 80031b6:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80031b8:	4718      	bx	r3
 80031ba:	4770      	bx	lr
 80031bc:	2000285c 	.word	0x2000285c
 80031c0:	20002844 	.word	0x20002844

080031c4 <rt_dispatch.part.0>:
 80031c4:	b508      	push	{r3, lr}
 80031c6:	4803      	ldr	r0, [pc, #12]	; (80031d4 <rt_dispatch.part.0+0x10>)
 80031c8:	f7ff f8b6 	bl	8002338 <rt_get_first>
 80031cc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80031d0:	f7ff bfe8 	b.w	80031a4 <rt_switch_req>
 80031d4:	20001e44 	.word	0x20001e44

080031d8 <rt_dispatch>:
 80031d8:	b570      	push	{r4, r5, r6, lr}
 80031da:	4604      	mov	r4, r0
 80031dc:	b918      	cbnz	r0, 80031e6 <rt_dispatch+0xe>
 80031de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80031e2:	f7ff bfef 	b.w	80031c4 <rt_dispatch.part.0>
 80031e6:	4e0c      	ldr	r6, [pc, #48]	; (8003218 <rt_dispatch+0x40>)
 80031e8:	78a2      	ldrb	r2, [r4, #2]
 80031ea:	6830      	ldr	r0, [r6, #0]
 80031ec:	7883      	ldrb	r3, [r0, #2]
 80031ee:	429a      	cmp	r2, r3
 80031f0:	f04f 0501 	mov.w	r5, #1
 80031f4:	d908      	bls.n	8003208 <rt_dispatch+0x30>
 80031f6:	f7ff f8b1 	bl	800235c <rt_put_rdy_first>
 80031fa:	6833      	ldr	r3, [r6, #0]
 80031fc:	705d      	strb	r5, [r3, #1]
 80031fe:	4620      	mov	r0, r4
 8003200:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003204:	f7ff bfce 	b.w	80031a4 <rt_switch_req>
 8003208:	7065      	strb	r5, [r4, #1]
 800320a:	4621      	mov	r1, r4
 800320c:	4803      	ldr	r0, [pc, #12]	; (800321c <rt_dispatch+0x44>)
 800320e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003212:	f7ff b879 	b.w	8002308 <rt_put_prio>
 8003216:	bf00      	nop
 8003218:	2000285c 	.word	0x2000285c
 800321c:	20001e44 	.word	0x20001e44

08003220 <rt_block>:
 8003220:	b538      	push	{r3, r4, r5, lr}
 8003222:	460d      	mov	r5, r1
 8003224:	4601      	mov	r1, r0
 8003226:	b180      	cbz	r0, 800324a <rt_block+0x2a>
 8003228:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800322c:	4298      	cmp	r0, r3
 800322e:	4c07      	ldr	r4, [pc, #28]	; (800324c <rt_block+0x2c>)
 8003230:	d002      	beq.n	8003238 <rt_block+0x18>
 8003232:	6820      	ldr	r0, [r4, #0]
 8003234:	f7ff f89c 	bl	8002370 <rt_put_dly>
 8003238:	6823      	ldr	r3, [r4, #0]
 800323a:	4805      	ldr	r0, [pc, #20]	; (8003250 <rt_block+0x30>)
 800323c:	705d      	strb	r5, [r3, #1]
 800323e:	f7ff f87b 	bl	8002338 <rt_get_first>
 8003242:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003246:	f7ff bfad 	b.w	80031a4 <rt_switch_req>
 800324a:	bd38      	pop	{r3, r4, r5, pc}
 800324c:	2000285c 	.word	0x2000285c
 8003250:	20001e44 	.word	0x20001e44

08003254 <rt_tsk_self>:
 8003254:	4b02      	ldr	r3, [pc, #8]	; (8003260 <rt_tsk_self+0xc>)
 8003256:	6818      	ldr	r0, [r3, #0]
 8003258:	b100      	cbz	r0, 800325c <rt_tsk_self+0x8>
 800325a:	78c0      	ldrb	r0, [r0, #3]
 800325c:	4770      	bx	lr
 800325e:	bf00      	nop
 8003260:	2000285c 	.word	0x2000285c

08003264 <rt_tsk_prio>:
 8003264:	b510      	push	{r4, lr}
 8003266:	b9a8      	cbnz	r0, 8003294 <rt_tsk_prio+0x30>
 8003268:	4b19      	ldr	r3, [pc, #100]	; (80032d0 <rt_tsk_prio+0x6c>)
 800326a:	681b      	ldr	r3, [r3, #0]
 800326c:	7099      	strb	r1, [r3, #2]
 800326e:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8003272:	4818      	ldr	r0, [pc, #96]	; (80032d4 <rt_tsk_prio+0x70>)
 8003274:	6843      	ldr	r3, [r0, #4]
 8003276:	789b      	ldrb	r3, [r3, #2]
 8003278:	428b      	cmp	r3, r1
 800327a:	d801      	bhi.n	8003280 <rt_tsk_prio+0x1c>
 800327c:	2000      	movs	r0, #0
 800327e:	bd10      	pop	{r4, pc}
 8003280:	4c13      	ldr	r4, [pc, #76]	; (80032d0 <rt_tsk_prio+0x6c>)
 8003282:	6821      	ldr	r1, [r4, #0]
 8003284:	f7ff f840 	bl	8002308 <rt_put_prio>
 8003288:	6823      	ldr	r3, [r4, #0]
 800328a:	2201      	movs	r2, #1
 800328c:	705a      	strb	r2, [r3, #1]
 800328e:	f7ff ff99 	bl	80031c4 <rt_dispatch.part.0>
 8003292:	e7f3      	b.n	800327c <rt_tsk_prio+0x18>
 8003294:	4b10      	ldr	r3, [pc, #64]	; (80032d8 <rt_tsk_prio+0x74>)
 8003296:	881b      	ldrh	r3, [r3, #0]
 8003298:	4298      	cmp	r0, r3
 800329a:	d817      	bhi.n	80032cc <rt_tsk_prio+0x68>
 800329c:	3801      	subs	r0, #1
 800329e:	4b0f      	ldr	r3, [pc, #60]	; (80032dc <rt_tsk_prio+0x78>)
 80032a0:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 80032a4:	b194      	cbz	r4, 80032cc <rt_tsk_prio+0x68>
 80032a6:	4b0a      	ldr	r3, [pc, #40]	; (80032d0 <rt_tsk_prio+0x6c>)
 80032a8:	70a1      	strb	r1, [r4, #2]
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 80032b0:	429c      	cmp	r4, r3
 80032b2:	d0de      	beq.n	8003272 <rt_tsk_prio+0xe>
 80032b4:	4620      	mov	r0, r4
 80032b6:	f7ff f8cd 	bl	8002454 <rt_resort_prio>
 80032ba:	7863      	ldrb	r3, [r4, #1]
 80032bc:	2b01      	cmp	r3, #1
 80032be:	d1dd      	bne.n	800327c <rt_tsk_prio+0x18>
 80032c0:	4804      	ldr	r0, [pc, #16]	; (80032d4 <rt_tsk_prio+0x70>)
 80032c2:	f7ff f839 	bl	8002338 <rt_get_first>
 80032c6:	f7ff ff87 	bl	80031d8 <rt_dispatch>
 80032ca:	e7d7      	b.n	800327c <rt_tsk_prio+0x18>
 80032cc:	20ff      	movs	r0, #255	; 0xff
 80032ce:	bd10      	pop	{r4, pc}
 80032d0:	2000285c 	.word	0x2000285c
 80032d4:	20001e44 	.word	0x20001e44
 80032d8:	08007594 	.word	0x08007594
 80032dc:	20002228 	.word	0x20002228

080032e0 <rt_tsk_create>:
 80032e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80032e4:	f011 0fff 	tst.w	r1, #255	; 0xff
 80032e8:	460d      	mov	r5, r1
 80032ea:	4680      	mov	r8, r0
 80032ec:	4823      	ldr	r0, [pc, #140]	; (800337c <rt_tsk_create+0x9c>)
 80032ee:	4616      	mov	r6, r2
 80032f0:	469a      	mov	r10, r3
 80032f2:	bf08      	it	eq
 80032f4:	3501      	addeq	r5, #1
 80032f6:	f7ff fa90 	bl	800281a <rt_alloc_box>
 80032fa:	4604      	mov	r4, r0
 80032fc:	b920      	cbnz	r0, 8003308 <rt_tsk_create+0x28>
 80032fe:	f04f 0900 	mov.w	r9, #0
 8003302:	4648      	mov	r0, r9
 8003304:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8003308:	4b1d      	ldr	r3, [pc, #116]	; (8003380 <rt_tsk_create+0xa0>)
 800330a:	6306      	str	r6, [r0, #48]	; 0x30
 800330c:	881b      	ldrh	r3, [r3, #0]
 800330e:	4e1d      	ldr	r6, [pc, #116]	; (8003384 <rt_tsk_create+0xa4>)
 8003310:	0a28      	lsrs	r0, r5, #8
 8003312:	62a0      	str	r0, [r4, #40]	; 0x28
 8003314:	2100      	movs	r1, #0
 8003316:	428b      	cmp	r3, r1
 8003318:	f101 0901 	add.w	r9, r1, #1
 800331c:	d0ef      	beq.n	80032fe <rt_tsk_create+0x1e>
 800331e:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 8003322:	460f      	mov	r7, r1
 8003324:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8003328:	4649      	mov	r1, r9
 800332a:	2a00      	cmp	r2, #0
 800332c:	d1f3      	bne.n	8003316 <rt_tsk_create+0x36>
 800332e:	b2ed      	uxtb	r5, r5
 8003330:	2301      	movs	r3, #1
 8003332:	f884 9003 	strb.w	r9, [r4, #3]
 8003336:	f8c4 a01c 	str.w	r10, [r4, #28]
 800333a:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 800333e:	7022      	strb	r2, [r4, #0]
 8003340:	7063      	strb	r3, [r4, #1]
 8003342:	70a5      	strb	r5, [r4, #2]
 8003344:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8003348:	6062      	str	r2, [r4, #4]
 800334a:	60a2      	str	r2, [r4, #8]
 800334c:	60e2      	str	r2, [r4, #12]
 800334e:	6122      	str	r2, [r4, #16]
 8003350:	6222      	str	r2, [r4, #32]
 8003352:	82a2      	strh	r2, [r4, #20]
 8003354:	82e2      	strh	r2, [r4, #22]
 8003356:	8322      	strh	r2, [r4, #24]
 8003358:	8362      	strh	r2, [r4, #26]
 800335a:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800335e:	b918      	cbnz	r0, 8003368 <rt_tsk_create+0x88>
 8003360:	4809      	ldr	r0, [pc, #36]	; (8003388 <rt_tsk_create+0xa8>)
 8003362:	f7ff fa5a 	bl	800281a <rt_alloc_box>
 8003366:	6320      	str	r0, [r4, #48]	; 0x30
 8003368:	4620      	mov	r0, r4
 800336a:	4641      	mov	r1, r8
 800336c:	f7ff f938 	bl	80025e0 <rt_init_stack>
 8003370:	4620      	mov	r0, r4
 8003372:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 8003376:	f7ff ff2f 	bl	80031d8 <rt_dispatch>
 800337a:	e7c2      	b.n	8003302 <rt_tsk_create+0x22>
 800337c:	20002264 	.word	0x20002264
 8003380:	08007594 	.word	0x08007594
 8003384:	20002228 	.word	0x20002228
 8003388:	20002630 	.word	0x20002630

0800338c <rt_tsk_delete>:
 800338c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8003390:	4d4d      	ldr	r5, [pc, #308]	; (80034c8 <rt_tsk_delete+0x13c>)
 8003392:	b118      	cbz	r0, 800339c <rt_tsk_delete+0x10>
 8003394:	682b      	ldr	r3, [r5, #0]
 8003396:	78db      	ldrb	r3, [r3, #3]
 8003398:	4298      	cmp	r0, r3
 800339a:	d141      	bne.n	8003420 <rt_tsk_delete+0x94>
 800339c:	682c      	ldr	r4, [r5, #0]
 800339e:	f8df 813c 	ldr.w	r8, [pc, #316]	; 80034dc <rt_tsk_delete+0x150>
 80033a2:	2300      	movs	r3, #0
 80033a4:	7063      	strb	r3, [r4, #1]
 80033a6:	f002 fd48 	bl	8005e3a <rt_get_PSP>
 80033aa:	62e0      	str	r0, [r4, #44]	; 0x2c
 80033ac:	f7ff f9fe 	bl	80027ac <rt_stk_check>
 80033b0:	682b      	ldr	r3, [r5, #0]
 80033b2:	6a1c      	ldr	r4, [r3, #32]
 80033b4:	2701      	movs	r7, #1
 80033b6:	b9a4      	cbnz	r4, 80033e2 <rt_tsk_delete+0x56>
 80033b8:	682a      	ldr	r2, [r5, #0]
 80033ba:	4944      	ldr	r1, [pc, #272]	; (80034cc <rt_tsk_delete+0x140>)
 80033bc:	78d3      	ldrb	r3, [r2, #3]
 80033be:	4844      	ldr	r0, [pc, #272]	; (80034d0 <rt_tsk_delete+0x144>)
 80033c0:	3b01      	subs	r3, #1
 80033c2:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 80033c6:	6b11      	ldr	r1, [r2, #48]	; 0x30
 80033c8:	f7ff fa34 	bl	8002834 <rt_free_box>
 80033cc:	6829      	ldr	r1, [r5, #0]
 80033ce:	4841      	ldr	r0, [pc, #260]	; (80034d4 <rt_tsk_delete+0x148>)
 80033d0:	630c      	str	r4, [r1, #48]	; 0x30
 80033d2:	f7ff fa2f 	bl	8002834 <rt_free_box>
 80033d6:	602c      	str	r4, [r5, #0]
 80033d8:	f7ff fef4 	bl	80031c4 <rt_dispatch.part.0>
 80033dc:	4620      	mov	r0, r4
 80033de:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80033e2:	6863      	ldr	r3, [r4, #4]
 80033e4:	b1b3      	cbz	r3, 8003414 <rt_tsk_delete+0x88>
 80033e6:	4620      	mov	r0, r4
 80033e8:	f7fe ffa6 	bl	8002338 <rt_get_first>
 80033ec:	2100      	movs	r1, #0
 80033ee:	4606      	mov	r6, r0
 80033f0:	f7ff f942 	bl	8002678 <rt_ret_val>
 80033f4:	4630      	mov	r0, r6
 80033f6:	f7ff f845 	bl	8002484 <rt_rmv_dly>
 80033fa:	7077      	strb	r7, [r6, #1]
 80033fc:	4631      	mov	r1, r6
 80033fe:	4640      	mov	r0, r8
 8003400:	f7fe ff82 	bl	8002308 <rt_put_prio>
 8003404:	68e3      	ldr	r3, [r4, #12]
 8003406:	6a32      	ldr	r2, [r6, #32]
 8003408:	8067      	strh	r7, [r4, #2]
 800340a:	60a6      	str	r6, [r4, #8]
 800340c:	60e2      	str	r2, [r4, #12]
 800340e:	6234      	str	r4, [r6, #32]
 8003410:	461c      	mov	r4, r3
 8003412:	e7d0      	b.n	80033b6 <rt_tsk_delete+0x2a>
 8003414:	68e2      	ldr	r2, [r4, #12]
 8003416:	8063      	strh	r3, [r4, #2]
 8003418:	60a3      	str	r3, [r4, #8]
 800341a:	60e3      	str	r3, [r4, #12]
 800341c:	4614      	mov	r4, r2
 800341e:	e7ca      	b.n	80033b6 <rt_tsk_delete+0x2a>
 8003420:	4b2d      	ldr	r3, [pc, #180]	; (80034d8 <rt_tsk_delete+0x14c>)
 8003422:	881b      	ldrh	r3, [r3, #0]
 8003424:	4298      	cmp	r0, r3
 8003426:	d84d      	bhi.n	80034c4 <rt_tsk_delete+0x138>
 8003428:	4b28      	ldr	r3, [pc, #160]	; (80034cc <rt_tsk_delete+0x140>)
 800342a:	1e47      	subs	r7, r0, #1
 800342c:	4699      	mov	r9, r3
 800342e:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 8003432:	2e00      	cmp	r6, #0
 8003434:	d046      	beq.n	80034c4 <rt_tsk_delete+0x138>
 8003436:	4630      	mov	r0, r6
 8003438:	f7fe fff6 	bl	8002428 <rt_rmv_list>
 800343c:	4630      	mov	r0, r6
 800343e:	f7ff f821 	bl	8002484 <rt_rmv_dly>
 8003442:	f8df b098 	ldr.w	r11, [pc, #152]	; 80034dc <rt_tsk_delete+0x150>
 8003446:	6a34      	ldr	r4, [r6, #32]
 8003448:	f04f 0a01 	mov.w	r10, #1
 800344c:	b9b4      	cbnz	r4, 800347c <rt_tsk_delete+0xf0>
 800344e:	6b31      	ldr	r1, [r6, #48]	; 0x30
 8003450:	481f      	ldr	r0, [pc, #124]	; (80034d0 <rt_tsk_delete+0x144>)
 8003452:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 8003456:	f7ff f9ed 	bl	8002834 <rt_free_box>
 800345a:	4631      	mov	r1, r6
 800345c:	6334      	str	r4, [r6, #48]	; 0x30
 800345e:	481d      	ldr	r0, [pc, #116]	; (80034d4 <rt_tsk_delete+0x148>)
 8003460:	f7ff f9e8 	bl	8002834 <rt_free_box>
 8003464:	481d      	ldr	r0, [pc, #116]	; (80034dc <rt_tsk_delete+0x150>)
 8003466:	6829      	ldr	r1, [r5, #0]
 8003468:	6843      	ldr	r3, [r0, #4]
 800346a:	789a      	ldrb	r2, [r3, #2]
 800346c:	788b      	ldrb	r3, [r1, #2]
 800346e:	429a      	cmp	r2, r3
 8003470:	d9b4      	bls.n	80033dc <rt_tsk_delete+0x50>
 8003472:	2301      	movs	r3, #1
 8003474:	704b      	strb	r3, [r1, #1]
 8003476:	f7fe ff47 	bl	8002308 <rt_put_prio>
 800347a:	e7ad      	b.n	80033d8 <rt_tsk_delete+0x4c>
 800347c:	6863      	ldr	r3, [r4, #4]
 800347e:	b1db      	cbz	r3, 80034b8 <rt_tsk_delete+0x12c>
 8003480:	4620      	mov	r0, r4
 8003482:	f7fe ff59 	bl	8002338 <rt_get_first>
 8003486:	2100      	movs	r1, #0
 8003488:	4680      	mov	r8, r0
 800348a:	f7ff f8f5 	bl	8002678 <rt_ret_val>
 800348e:	4640      	mov	r0, r8
 8003490:	f7fe fff8 	bl	8002484 <rt_rmv_dly>
 8003494:	f888 a001 	strb.w	r10, [r8, #1]
 8003498:	4641      	mov	r1, r8
 800349a:	4658      	mov	r0, r11
 800349c:	f7fe ff34 	bl	8002308 <rt_put_prio>
 80034a0:	68e3      	ldr	r3, [r4, #12]
 80034a2:	f8d8 2020 	ldr.w	r2, [r8, #32]
 80034a6:	f8a4 a002 	strh.w	r10, [r4, #2]
 80034aa:	f8c4 8008 	str.w	r8, [r4, #8]
 80034ae:	60e2      	str	r2, [r4, #12]
 80034b0:	f8c8 4020 	str.w	r4, [r8, #32]
 80034b4:	461c      	mov	r4, r3
 80034b6:	e7c9      	b.n	800344c <rt_tsk_delete+0xc0>
 80034b8:	68e2      	ldr	r2, [r4, #12]
 80034ba:	8063      	strh	r3, [r4, #2]
 80034bc:	60a3      	str	r3, [r4, #8]
 80034be:	60e3      	str	r3, [r4, #12]
 80034c0:	4614      	mov	r4, r2
 80034c2:	e7c3      	b.n	800344c <rt_tsk_delete+0xc0>
 80034c4:	24ff      	movs	r4, #255	; 0xff
 80034c6:	e789      	b.n	80033dc <rt_tsk_delete+0x50>
 80034c8:	2000285c 	.word	0x2000285c
 80034cc:	20002228 	.word	0x20002228
 80034d0:	20002630 	.word	0x20002630
 80034d4:	20002264 	.word	0x20002264
 80034d8:	08007594 	.word	0x08007594
 80034dc:	20001e44 	.word	0x20001e44

080034e0 <rt_sys_init>:
 80034e0:	b538      	push	{r3, r4, r5, lr}
 80034e2:	4b2c      	ldr	r3, [pc, #176]	; (8003594 <rt_sys_init+0xb4>)
 80034e4:	492c      	ldr	r1, [pc, #176]	; (8003598 <rt_sys_init+0xb8>)
 80034e6:	881a      	ldrh	r2, [r3, #0]
 80034e8:	2300      	movs	r3, #0
 80034ea:	4618      	mov	r0, r3
 80034ec:	4293      	cmp	r3, r2
 80034ee:	d34d      	bcc.n	800358c <rt_sys_init+0xac>
 80034f0:	4b2a      	ldr	r3, [pc, #168]	; (800359c <rt_sys_init+0xbc>)
 80034f2:	482b      	ldr	r0, [pc, #172]	; (80035a0 <rt_sys_init+0xc0>)
 80034f4:	8819      	ldrh	r1, [r3, #0]
 80034f6:	4c2b      	ldr	r4, [pc, #172]	; (80035a4 <rt_sys_init+0xc4>)
 80034f8:	2240      	movs	r2, #64	; 0x40
 80034fa:	f7ff f969 	bl	80027d0 <_init_box>
 80034fe:	4b2a      	ldr	r3, [pc, #168]	; (80035a8 <rt_sys_init+0xc8>)
 8003500:	482a      	ldr	r0, [pc, #168]	; (80035ac <rt_sys_init+0xcc>)
 8003502:	881a      	ldrh	r2, [r3, #0]
 8003504:	4b2a      	ldr	r3, [pc, #168]	; (80035b0 <rt_sys_init+0xd0>)
 8003506:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 800350a:	6819      	ldr	r1, [r3, #0]
 800350c:	f7ff f960 	bl	80027d0 <_init_box>
 8003510:	4b28      	ldr	r3, [pc, #160]	; (80035b4 <rt_sys_init+0xd4>)
 8003512:	8819      	ldrh	r1, [r3, #0]
 8003514:	4b28      	ldr	r3, [pc, #160]	; (80035b8 <rt_sys_init+0xd8>)
 8003516:	2208      	movs	r2, #8
 8003518:	6818      	ldr	r0, [r3, #0]
 800351a:	f7ff f959 	bl	80027d0 <_init_box>
 800351e:	23ff      	movs	r3, #255	; 0xff
 8003520:	2500      	movs	r5, #0
 8003522:	70e3      	strb	r3, [r4, #3]
 8003524:	4821      	ldr	r0, [pc, #132]	; (80035ac <rt_sys_init+0xcc>)
 8003526:	62a5      	str	r5, [r4, #40]	; 0x28
 8003528:	2301      	movs	r3, #1
 800352a:	7063      	strb	r3, [r4, #1]
 800352c:	7025      	strb	r5, [r4, #0]
 800352e:	70a5      	strb	r5, [r4, #2]
 8003530:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8003534:	6065      	str	r5, [r4, #4]
 8003536:	60a5      	str	r5, [r4, #8]
 8003538:	60e5      	str	r5, [r4, #12]
 800353a:	6125      	str	r5, [r4, #16]
 800353c:	6225      	str	r5, [r4, #32]
 800353e:	82a5      	strh	r5, [r4, #20]
 8003540:	82e5      	strh	r5, [r4, #22]
 8003542:	8325      	strh	r5, [r4, #24]
 8003544:	8365      	strh	r5, [r4, #26]
 8003546:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 800354a:	f7ff f966 	bl	800281a <rt_alloc_box>
 800354e:	491b      	ldr	r1, [pc, #108]	; (80035bc <rt_sys_init+0xdc>)
 8003550:	6320      	str	r0, [r4, #48]	; 0x30
 8003552:	4620      	mov	r0, r4
 8003554:	f7ff f844 	bl	80025e0 <rt_init_stack>
 8003558:	4b19      	ldr	r3, [pc, #100]	; (80035c0 <rt_sys_init+0xe0>)
 800355a:	2204      	movs	r2, #4
 800355c:	701a      	strb	r2, [r3, #0]
 800355e:	605d      	str	r5, [r3, #4]
 8003560:	4b18      	ldr	r3, [pc, #96]	; (80035c4 <rt_sys_init+0xe4>)
 8003562:	701a      	strb	r2, [r3, #0]
 8003564:	60dd      	str	r5, [r3, #12]
 8003566:	611d      	str	r5, [r3, #16]
 8003568:	829d      	strh	r5, [r3, #20]
 800356a:	4b17      	ldr	r3, [pc, #92]	; (80035c8 <rt_sys_init+0xe8>)
 800356c:	4620      	mov	r0, r4
 800356e:	601c      	str	r4, [r3, #0]
 8003570:	2302      	movs	r3, #2
 8003572:	7063      	strb	r3, [r4, #1]
 8003574:	f7ff fe16 	bl	80031a4 <rt_switch_req>
 8003578:	4a14      	ldr	r2, [pc, #80]	; (80035cc <rt_sys_init+0xec>)
 800357a:	4b15      	ldr	r3, [pc, #84]	; (80035d0 <rt_sys_init+0xf0>)
 800357c:	7812      	ldrb	r2, [r2, #0]
 800357e:	701d      	strb	r5, [r3, #0]
 8003580:	705d      	strb	r5, [r3, #1]
 8003582:	70da      	strb	r2, [r3, #3]
 8003584:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003588:	f7ff ba9c 	b.w	8002ac4 <rt_init_robin>
 800358c:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8003590:	3301      	adds	r3, #1
 8003592:	e7ab      	b.n	80034ec <rt_sys_init+0xc>
 8003594:	08007594 	.word	0x08007594
 8003598:	20002228 	.word	0x20002228
 800359c:	08007560 	.word	0x08007560
 80035a0:	20002264 	.word	0x20002264
 80035a4:	20002864 	.word	0x20002864
 80035a8:	080075b0 	.word	0x080075b0
 80035ac:	20002630 	.word	0x20002630
 80035b0:	0800755c 	.word	0x0800755c
 80035b4:	08007562 	.word	0x08007562
 80035b8:	200009dc 	.word	0x200009dc
 80035bc:	08002541 	.word	0x08002541
 80035c0:	20001e44 	.word	0x20001e44
 80035c4:	20001e5c 	.word	0x20001e5c
 80035c8:	2000285c 	.word	0x2000285c
 80035cc:	08007591 	.word	0x08007591
 80035d0:	20001e78 	.word	0x20001e78

080035d4 <rt_sys_start>:
 80035d4:	b508      	push	{r3, lr}
 80035d6:	4b1e      	ldr	r3, [pc, #120]	; (8003650 <rt_sys_start+0x7c>)
 80035d8:	681a      	ldr	r2, [r3, #0]
 80035da:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 80035de:	601a      	str	r2, [r3, #0]
 80035e0:	681b      	ldr	r3, [r3, #0]
 80035e2:	021b      	lsls	r3, r3, #8
 80035e4:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80035e8:	43db      	mvns	r3, r3
 80035ea:	fab3 f383 	clz	r3, r3
 80035ee:	4a19      	ldr	r2, [pc, #100]	; (8003654 <rt_sys_start+0x80>)
 80035f0:	4819      	ldr	r0, [pc, #100]	; (8003658 <rt_sys_start+0x84>)
 80035f2:	6812      	ldr	r2, [r2, #0]
 80035f4:	6801      	ldr	r1, [r0, #0]
 80035f6:	b2db      	uxtb	r3, r3
 80035f8:	f1c3 0308 	rsb	r3, r3, #8
 80035fc:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8003600:	4293      	cmp	r3, r2
 8003602:	bf98      	it	ls
 8003604:	1c53      	addls	r3, r2, #1
 8003606:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 800360a:	fa02 f303 	lsl.w	r3, r2, r3
 800360e:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003612:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 8003616:	4313      	orrs	r3, r2
 8003618:	6003      	str	r3, [r0, #0]
 800361a:	f7ff f88f 	bl	800273c <os_tick_init>
 800361e:	4b0f      	ldr	r3, [pc, #60]	; (800365c <rt_sys_start+0x88>)
 8003620:	2800      	cmp	r0, #0
 8003622:	6018      	str	r0, [r3, #0]
 8003624:	db12      	blt.n	800364c <rt_sys_start+0x78>
 8003626:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800362a:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 800362e:	22ff      	movs	r2, #255	; 0xff
 8003630:	7002      	strb	r2, [r0, #0]
 8003632:	681a      	ldr	r2, [r3, #0]
 8003634:	0953      	lsrs	r3, r2, #5
 8003636:	009b      	lsls	r3, r3, #2
 8003638:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800363c:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8003640:	f002 021f 	and.w	r2, r2, #31
 8003644:	2101      	movs	r1, #1
 8003646:	fa01 f202 	lsl.w	r2, r1, r2
 800364a:	601a      	str	r2, [r3, #0]
 800364c:	bd08      	pop	{r3, pc}
 800364e:	bf00      	nop
 8003650:	e000ed20 	.word	0xe000ed20
 8003654:	e000ed0c 	.word	0xe000ed0c
 8003658:	e000ed1c 	.word	0xe000ed1c
 800365c:	20002840 	.word	0x20002840

08003660 <rt_mut_init>:
 8003660:	2303      	movs	r3, #3
 8003662:	7003      	strb	r3, [r0, #0]
 8003664:	2300      	movs	r3, #0
 8003666:	8043      	strh	r3, [r0, #2]
 8003668:	6043      	str	r3, [r0, #4]
 800366a:	6083      	str	r3, [r0, #8]
 800366c:	60c3      	str	r3, [r0, #12]
 800366e:	4770      	bx	lr

08003670 <rt_mut_release>:
 8003670:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003674:	8843      	ldrh	r3, [r0, #2]
 8003676:	4605      	mov	r5, r0
 8003678:	2b00      	cmp	r3, #0
 800367a:	d063      	beq.n	8003744 <rt_mut_release+0xd4>
 800367c:	4f32      	ldr	r7, [pc, #200]	; (8003748 <rt_mut_release+0xd8>)
 800367e:	6881      	ldr	r1, [r0, #8]
 8003680:	683a      	ldr	r2, [r7, #0]
 8003682:	4291      	cmp	r1, r2
 8003684:	d15e      	bne.n	8003744 <rt_mut_release+0xd4>
 8003686:	3b01      	subs	r3, #1
 8003688:	b29b      	uxth	r3, r3
 800368a:	8043      	strh	r3, [r0, #2]
 800368c:	b11b      	cbz	r3, 8003696 <rt_mut_release+0x26>
 800368e:	2400      	movs	r4, #0
 8003690:	4620      	mov	r0, r4
 8003692:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003696:	6a0b      	ldr	r3, [r1, #32]
 8003698:	4298      	cmp	r0, r3
 800369a:	d129      	bne.n	80036f0 <rt_mut_release+0x80>
 800369c:	68c3      	ldr	r3, [r0, #12]
 800369e:	620b      	str	r3, [r1, #32]
 80036a0:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 80036a4:	6a0c      	ldr	r4, [r1, #32]
 80036a6:	bb5c      	cbnz	r4, 8003700 <rt_mut_release+0x90>
 80036a8:	708b      	strb	r3, [r1, #2]
 80036aa:	686a      	ldr	r2, [r5, #4]
 80036ac:	f8df 809c 	ldr.w	r8, [pc, #156]	; 800374c <rt_mut_release+0xdc>
 80036b0:	2a00      	cmp	r2, #0
 80036b2:	d03b      	beq.n	800372c <rt_mut_release+0xbc>
 80036b4:	4628      	mov	r0, r5
 80036b6:	f7fe fe3f 	bl	8002338 <rt_get_first>
 80036ba:	4621      	mov	r1, r4
 80036bc:	4606      	mov	r6, r0
 80036be:	f7fe ffdb 	bl	8002678 <rt_ret_val>
 80036c2:	4630      	mov	r0, r6
 80036c4:	f7fe fede 	bl	8002484 <rt_rmv_dly>
 80036c8:	6a33      	ldr	r3, [r6, #32]
 80036ca:	60eb      	str	r3, [r5, #12]
 80036cc:	f04f 0901 	mov.w	r9, #1
 80036d0:	6839      	ldr	r1, [r7, #0]
 80036d2:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80036d6:	f8a5 9002 	strh.w	r9, [r5, #2]
 80036da:	60ae      	str	r6, [r5, #8]
 80036dc:	6235      	str	r5, [r6, #32]
 80036de:	788a      	ldrb	r2, [r1, #2]
 80036e0:	789b      	ldrb	r3, [r3, #2]
 80036e2:	429a      	cmp	r2, r3
 80036e4:	d314      	bcc.n	8003710 <rt_mut_release+0xa0>
 80036e6:	4630      	mov	r0, r6
 80036e8:	f7ff fd76 	bl	80031d8 <rt_dispatch>
 80036ec:	e7d0      	b.n	8003690 <rt_mut_release+0x20>
 80036ee:	4613      	mov	r3, r2
 80036f0:	2b00      	cmp	r3, #0
 80036f2:	d0d5      	beq.n	80036a0 <rt_mut_release+0x30>
 80036f4:	68da      	ldr	r2, [r3, #12]
 80036f6:	4295      	cmp	r5, r2
 80036f8:	d1f9      	bne.n	80036ee <rt_mut_release+0x7e>
 80036fa:	68ea      	ldr	r2, [r5, #12]
 80036fc:	60da      	str	r2, [r3, #12]
 80036fe:	e7cf      	b.n	80036a0 <rt_mut_release+0x30>
 8003700:	6862      	ldr	r2, [r4, #4]
 8003702:	b11a      	cbz	r2, 800370c <rt_mut_release+0x9c>
 8003704:	7892      	ldrb	r2, [r2, #2]
 8003706:	4293      	cmp	r3, r2
 8003708:	bf38      	it	cc
 800370a:	4613      	movcc	r3, r2
 800370c:	68e4      	ldr	r4, [r4, #12]
 800370e:	e7ca      	b.n	80036a6 <rt_mut_release+0x36>
 8003710:	4640      	mov	r0, r8
 8003712:	f7fe fdf9 	bl	8002308 <rt_put_prio>
 8003716:	4631      	mov	r1, r6
 8003718:	4640      	mov	r0, r8
 800371a:	f7fe fdf5 	bl	8002308 <rt_put_prio>
 800371e:	683b      	ldr	r3, [r7, #0]
 8003720:	f883 9001 	strb.w	r9, [r3, #1]
 8003724:	f886 9001 	strb.w	r9, [r6, #1]
 8003728:	4620      	mov	r0, r4
 800372a:	e7dd      	b.n	80036e8 <rt_mut_release+0x78>
 800372c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8003730:	7892      	ldrb	r2, [r2, #2]
 8003732:	429a      	cmp	r2, r3
 8003734:	d9ab      	bls.n	800368e <rt_mut_release+0x1e>
 8003736:	4640      	mov	r0, r8
 8003738:	f7fe fde6 	bl	8002308 <rt_put_prio>
 800373c:	683b      	ldr	r3, [r7, #0]
 800373e:	2201      	movs	r2, #1
 8003740:	705a      	strb	r2, [r3, #1]
 8003742:	e7f1      	b.n	8003728 <rt_mut_release+0xb8>
 8003744:	24ff      	movs	r4, #255	; 0xff
 8003746:	e7a3      	b.n	8003690 <rt_mut_release+0x20>
 8003748:	2000285c 	.word	0x2000285c
 800374c:	20001e44 	.word	0x20001e44

08003750 <rt_mut_wait>:
 8003750:	8843      	ldrh	r3, [r0, #2]
 8003752:	b570      	push	{r4, r5, r6, lr}
 8003754:	4604      	mov	r4, r0
 8003756:	460e      	mov	r6, r1
 8003758:	4d13      	ldr	r5, [pc, #76]	; (80037a8 <rt_mut_wait+0x58>)
 800375a:	b943      	cbnz	r3, 800376e <rt_mut_wait+0x1e>
 800375c:	682a      	ldr	r2, [r5, #0]
 800375e:	6082      	str	r2, [r0, #8]
 8003760:	6a11      	ldr	r1, [r2, #32]
 8003762:	60c1      	str	r1, [r0, #12]
 8003764:	6210      	str	r0, [r2, #32]
 8003766:	3301      	adds	r3, #1
 8003768:	8063      	strh	r3, [r4, #2]
 800376a:	2000      	movs	r0, #0
 800376c:	bd70      	pop	{r4, r5, r6, pc}
 800376e:	6880      	ldr	r0, [r0, #8]
 8003770:	682a      	ldr	r2, [r5, #0]
 8003772:	4290      	cmp	r0, r2
 8003774:	d0f7      	beq.n	8003766 <rt_mut_wait+0x16>
 8003776:	b181      	cbz	r1, 800379a <rt_mut_wait+0x4a>
 8003778:	7893      	ldrb	r3, [r2, #2]
 800377a:	7882      	ldrb	r2, [r0, #2]
 800377c:	429a      	cmp	r2, r3
 800377e:	d202      	bcs.n	8003786 <rt_mut_wait+0x36>
 8003780:	7083      	strb	r3, [r0, #2]
 8003782:	f7fe fe67 	bl	8002454 <rt_resort_prio>
 8003786:	6862      	ldr	r2, [r4, #4]
 8003788:	b14a      	cbz	r2, 800379e <rt_mut_wait+0x4e>
 800378a:	6829      	ldr	r1, [r5, #0]
 800378c:	4620      	mov	r0, r4
 800378e:	f7fe fdbb 	bl	8002308 <rt_put_prio>
 8003792:	2109      	movs	r1, #9
 8003794:	4630      	mov	r0, r6
 8003796:	f7ff fd43 	bl	8003220 <rt_block>
 800379a:	2001      	movs	r0, #1
 800379c:	bd70      	pop	{r4, r5, r6, pc}
 800379e:	682b      	ldr	r3, [r5, #0]
 80037a0:	6063      	str	r3, [r4, #4]
 80037a2:	605a      	str	r2, [r3, #4]
 80037a4:	609c      	str	r4, [r3, #8]
 80037a6:	e7f4      	b.n	8003792 <rt_mut_wait+0x42>
 80037a8:	2000285c 	.word	0x2000285c

080037ac <rt_dly_wait>:
 80037ac:	2103      	movs	r1, #3
 80037ae:	f7ff bd37 	b.w	8003220 <rt_block>
	...

080037b4 <rt_sem_psh>:
 80037b4:	6842      	ldr	r2, [r0, #4]
 80037b6:	b510      	push	{r4, lr}
 80037b8:	b17a      	cbz	r2, 80037da <rt_sem_psh+0x26>
 80037ba:	f7fe fdbd 	bl	8002338 <rt_get_first>
 80037be:	4604      	mov	r4, r0
 80037c0:	f7fe fe60 	bl	8002484 <rt_rmv_dly>
 80037c4:	2101      	movs	r1, #1
 80037c6:	7061      	strb	r1, [r4, #1]
 80037c8:	4620      	mov	r0, r4
 80037ca:	f7fe ff55 	bl	8002678 <rt_ret_val>
 80037ce:	4621      	mov	r1, r4
 80037d0:	4804      	ldr	r0, [pc, #16]	; (80037e4 <rt_sem_psh+0x30>)
 80037d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80037d6:	f7fe bd97 	b.w	8002308 <rt_put_prio>
 80037da:	8842      	ldrh	r2, [r0, #2]
 80037dc:	3201      	adds	r2, #1
 80037de:	8042      	strh	r2, [r0, #2]
 80037e0:	bd10      	pop	{r4, pc}
 80037e2:	bf00      	nop
 80037e4:	20001e44 	.word	0x20001e44

080037e8 <timer_irq_handler>:
 80037e8:	b570      	push	{r4, r5, r6, lr}
 80037ea:	4c13      	ldr	r4, [pc, #76]	; (8003838 <timer_irq_handler+0x50>)
 80037ec:	6823      	ldr	r3, [r4, #0]
 80037ee:	691a      	ldr	r2, [r3, #16]
 80037f0:	0795      	lsls	r5, r2, #30
 80037f2:	d507      	bpl.n	8003804 <timer_irq_handler+0x1c>
 80037f4:	68da      	ldr	r2, [r3, #12]
 80037f6:	0790      	lsls	r0, r2, #30
 80037f8:	d504      	bpl.n	8003804 <timer_irq_handler+0x1c>
 80037fa:	f06f 0202 	mvn.w	r2, #2
 80037fe:	611a      	str	r2, [r3, #16]
 8003800:	f7fe fcb4 	bl	800216c <us_ticker_irq_handler>
 8003804:	6823      	ldr	r3, [r4, #0]
 8003806:	691a      	ldr	r2, [r3, #16]
 8003808:	0751      	lsls	r1, r2, #29
 800380a:	d513      	bpl.n	8003834 <timer_irq_handler+0x4c>
 800380c:	68da      	ldr	r2, [r3, #12]
 800380e:	0752      	lsls	r2, r2, #29
 8003810:	d510      	bpl.n	8003834 <timer_irq_handler+0x4c>
 8003812:	f06f 0204 	mvn.w	r2, #4
 8003816:	4e09      	ldr	r6, [pc, #36]	; (800383c <timer_irq_handler+0x54>)
 8003818:	611a      	str	r2, [r3, #16]
 800381a:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800381c:	6833      	ldr	r3, [r6, #0]
 800381e:	1aeb      	subs	r3, r5, r3
 8003820:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003824:	d306      	bcc.n	8003834 <timer_irq_handler+0x4c>
 8003826:	f002 f81f 	bl	8005868 <HAL_IncTick>
 800382a:	6823      	ldr	r3, [r4, #0]
 800382c:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 8003830:	639a      	str	r2, [r3, #56]	; 0x38
 8003832:	6035      	str	r5, [r6, #0]
 8003834:	bd70      	pop	{r4, r5, r6, pc}
 8003836:	bf00      	nop
 8003838:	200028a8 	.word	0x200028a8
 800383c:	20001a50 	.word	0x20001a50

08003840 <HAL_InitTick>:
 8003840:	b530      	push	{r4, r5, lr}
 8003842:	b089      	sub	sp, #36	; 0x24
 8003844:	a901      	add	r1, sp, #4
 8003846:	a803      	add	r0, sp, #12
 8003848:	f001 ff8a 	bl	8005760 <HAL_RCC_GetClockConfig>
 800384c:	f001 ff58 	bl	8005700 <HAL_RCC_GetPCLK1Freq>
 8003850:	2300      	movs	r3, #0
 8003852:	9302      	str	r3, [sp, #8]
 8003854:	4b24      	ldr	r3, [pc, #144]	; (80038e8 <HAL_InitTick+0xa8>)
 8003856:	9001      	str	r0, [sp, #4]
 8003858:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800385a:	4c24      	ldr	r4, [pc, #144]	; (80038ec <HAL_InitTick+0xac>)
 800385c:	f042 0208 	orr.w	r2, r2, #8
 8003860:	641a      	str	r2, [r3, #64]	; 0x40
 8003862:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003864:	f002 0208 	and.w	r2, r2, #8
 8003868:	9202      	str	r2, [sp, #8]
 800386a:	9a02      	ldr	r2, [sp, #8]
 800386c:	6a1a      	ldr	r2, [r3, #32]
 800386e:	f042 0208 	orr.w	r2, r2, #8
 8003872:	621a      	str	r2, [r3, #32]
 8003874:	6a1a      	ldr	r2, [r3, #32]
 8003876:	f022 0208 	bic.w	r2, r2, #8
 800387a:	621a      	str	r2, [r3, #32]
 800387c:	9a06      	ldr	r2, [sp, #24]
 800387e:	f5a3 330b 	sub.w	r3, r3, #142336	; 0x22c00
 8003882:	6023      	str	r3, [r4, #0]
 8003884:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003888:	60e3      	str	r3, [r4, #12]
 800388a:	4b19      	ldr	r3, [pc, #100]	; (80038f0 <HAL_InitTick+0xb0>)
 800388c:	bb4a      	cbnz	r2, 80038e2 <HAL_InitTick+0xa2>
 800388e:	fbb0 f0f3 	udiv	r0, r0, r3
 8003892:	3801      	subs	r0, #1
 8003894:	2500      	movs	r5, #0
 8003896:	6060      	str	r0, [r4, #4]
 8003898:	4814      	ldr	r0, [pc, #80]	; (80038ec <HAL_InitTick+0xac>)
 800389a:	6125      	str	r5, [r4, #16]
 800389c:	60a5      	str	r5, [r4, #8]
 800389e:	6165      	str	r5, [r4, #20]
 80038a0:	f001 fdda 	bl	8005458 <HAL_TIM_OC_Init>
 80038a4:	4913      	ldr	r1, [pc, #76]	; (80038f4 <HAL_InitTick+0xb4>)
 80038a6:	2032      	movs	r0, #50	; 0x32
 80038a8:	f000 fe54 	bl	8004554 <__NVIC_SetVector>
 80038ac:	4b12      	ldr	r3, [pc, #72]	; (80038f8 <HAL_InitTick+0xb8>)
 80038ae:	480f      	ldr	r0, [pc, #60]	; (80038ec <HAL_InitTick+0xac>)
 80038b0:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 80038b4:	605a      	str	r2, [r3, #4]
 80038b6:	4629      	mov	r1, r5
 80038b8:	f001 fe0e 	bl	80054d8 <HAL_TIM_OC_Start>
 80038bc:	2104      	movs	r1, #4
 80038be:	480b      	ldr	r0, [pc, #44]	; (80038ec <HAL_InitTick+0xac>)
 80038c0:	f001 fe0a 	bl	80054d8 <HAL_TIM_OC_Start>
 80038c4:	6823      	ldr	r3, [r4, #0]
 80038c6:	4a0d      	ldr	r2, [pc, #52]	; (80038fc <HAL_InitTick+0xbc>)
 80038c8:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80038ca:	6011      	str	r1, [r2, #0]
 80038cc:	6812      	ldr	r2, [r2, #0]
 80038ce:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 80038d2:	639a      	str	r2, [r3, #56]	; 0x38
 80038d4:	68da      	ldr	r2, [r3, #12]
 80038d6:	4628      	mov	r0, r5
 80038d8:	f042 0204 	orr.w	r2, r2, #4
 80038dc:	60da      	str	r2, [r3, #12]
 80038de:	b009      	add	sp, #36	; 0x24
 80038e0:	bd30      	pop	{r4, r5, pc}
 80038e2:	0040      	lsls	r0, r0, #1
 80038e4:	e7d3      	b.n	800388e <HAL_InitTick+0x4e>
 80038e6:	bf00      	nop
 80038e8:	40023800 	.word	0x40023800
 80038ec:	200028a8 	.word	0x200028a8
 80038f0:	000f4240 	.word	0x000f4240
 80038f4:	080037e9 	.word	0x080037e9
 80038f8:	e000e100 	.word	0xe000e100
 80038fc:	20001a50 	.word	0x20001a50

08003900 <HAL_SuspendTick>:
 8003900:	4b03      	ldr	r3, [pc, #12]	; (8003910 <HAL_SuspendTick+0x10>)
 8003902:	4a04      	ldr	r2, [pc, #16]	; (8003914 <HAL_SuspendTick+0x14>)
 8003904:	6013      	str	r3, [r2, #0]
 8003906:	68da      	ldr	r2, [r3, #12]
 8003908:	f022 0204 	bic.w	r2, r2, #4
 800390c:	60da      	str	r2, [r3, #12]
 800390e:	4770      	bx	lr
 8003910:	40000c00 	.word	0x40000c00
 8003914:	200028a8 	.word	0x200028a8

08003918 <HAL_ResumeTick>:
 8003918:	4b03      	ldr	r3, [pc, #12]	; (8003928 <HAL_ResumeTick+0x10>)
 800391a:	4a04      	ldr	r2, [pc, #16]	; (800392c <HAL_ResumeTick+0x14>)
 800391c:	6013      	str	r3, [r2, #0]
 800391e:	68da      	ldr	r2, [r3, #12]
 8003920:	f042 0204 	orr.w	r2, r2, #4
 8003924:	60da      	str	r2, [r3, #12]
 8003926:	4770      	bx	lr
 8003928:	40000c00 	.word	0x40000c00
 800392c:	200028a8 	.word	0x200028a8

08003930 <Set_GPIO_Clock>:
 8003930:	b500      	push	{lr}
 8003932:	2300      	movs	r3, #0
 8003934:	b089      	sub	sp, #36	; 0x24
 8003936:	2807      	cmp	r0, #7
 8003938:	d86f      	bhi.n	8003a1a <Set_GPIO_Clock+0xea>
 800393a:	e8df f000 	tbb	[pc, r0]
 800393e:	1304      	.short	0x1304
 8003940:	473a2d20 	.word	0x473a2d20
 8003944:	6154      	.short	0x6154
 8003946:	9300      	str	r3, [sp, #0]
 8003948:	4b36      	ldr	r3, [pc, #216]	; (8003a24 <Set_GPIO_Clock+0xf4>)
 800394a:	4837      	ldr	r0, [pc, #220]	; (8003a28 <Set_GPIO_Clock+0xf8>)
 800394c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800394e:	f042 0201 	orr.w	r2, r2, #1
 8003952:	631a      	str	r2, [r3, #48]	; 0x30
 8003954:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003956:	f003 0301 	and.w	r3, r3, #1
 800395a:	9300      	str	r3, [sp, #0]
 800395c:	9b00      	ldr	r3, [sp, #0]
 800395e:	b009      	add	sp, #36	; 0x24
 8003960:	f85d fb04 	ldr.w	pc, [sp], #4
 8003964:	9301      	str	r3, [sp, #4]
 8003966:	4b2f      	ldr	r3, [pc, #188]	; (8003a24 <Set_GPIO_Clock+0xf4>)
 8003968:	4830      	ldr	r0, [pc, #192]	; (8003a2c <Set_GPIO_Clock+0xfc>)
 800396a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800396c:	f042 0202 	orr.w	r2, r2, #2
 8003970:	631a      	str	r2, [r3, #48]	; 0x30
 8003972:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003974:	f003 0302 	and.w	r3, r3, #2
 8003978:	9301      	str	r3, [sp, #4]
 800397a:	9b01      	ldr	r3, [sp, #4]
 800397c:	e7ef      	b.n	800395e <Set_GPIO_Clock+0x2e>
 800397e:	9302      	str	r3, [sp, #8]
 8003980:	4b28      	ldr	r3, [pc, #160]	; (8003a24 <Set_GPIO_Clock+0xf4>)
 8003982:	482b      	ldr	r0, [pc, #172]	; (8003a30 <Set_GPIO_Clock+0x100>)
 8003984:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003986:	f042 0204 	orr.w	r2, r2, #4
 800398a:	631a      	str	r2, [r3, #48]	; 0x30
 800398c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800398e:	f003 0304 	and.w	r3, r3, #4
 8003992:	9302      	str	r3, [sp, #8]
 8003994:	9b02      	ldr	r3, [sp, #8]
 8003996:	e7e2      	b.n	800395e <Set_GPIO_Clock+0x2e>
 8003998:	9303      	str	r3, [sp, #12]
 800399a:	4b22      	ldr	r3, [pc, #136]	; (8003a24 <Set_GPIO_Clock+0xf4>)
 800399c:	4825      	ldr	r0, [pc, #148]	; (8003a34 <Set_GPIO_Clock+0x104>)
 800399e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039a0:	f042 0208 	orr.w	r2, r2, #8
 80039a4:	631a      	str	r2, [r3, #48]	; 0x30
 80039a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80039a8:	f003 0308 	and.w	r3, r3, #8
 80039ac:	9303      	str	r3, [sp, #12]
 80039ae:	9b03      	ldr	r3, [sp, #12]
 80039b0:	e7d5      	b.n	800395e <Set_GPIO_Clock+0x2e>
 80039b2:	9304      	str	r3, [sp, #16]
 80039b4:	4b1b      	ldr	r3, [pc, #108]	; (8003a24 <Set_GPIO_Clock+0xf4>)
 80039b6:	4820      	ldr	r0, [pc, #128]	; (8003a38 <Set_GPIO_Clock+0x108>)
 80039b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039ba:	f042 0210 	orr.w	r2, r2, #16
 80039be:	631a      	str	r2, [r3, #48]	; 0x30
 80039c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80039c2:	f003 0310 	and.w	r3, r3, #16
 80039c6:	9304      	str	r3, [sp, #16]
 80039c8:	9b04      	ldr	r3, [sp, #16]
 80039ca:	e7c8      	b.n	800395e <Set_GPIO_Clock+0x2e>
 80039cc:	9305      	str	r3, [sp, #20]
 80039ce:	4b15      	ldr	r3, [pc, #84]	; (8003a24 <Set_GPIO_Clock+0xf4>)
 80039d0:	481a      	ldr	r0, [pc, #104]	; (8003a3c <Set_GPIO_Clock+0x10c>)
 80039d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039d4:	f042 0220 	orr.w	r2, r2, #32
 80039d8:	631a      	str	r2, [r3, #48]	; 0x30
 80039da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80039dc:	f003 0320 	and.w	r3, r3, #32
 80039e0:	9305      	str	r3, [sp, #20]
 80039e2:	9b05      	ldr	r3, [sp, #20]
 80039e4:	e7bb      	b.n	800395e <Set_GPIO_Clock+0x2e>
 80039e6:	9306      	str	r3, [sp, #24]
 80039e8:	4b0e      	ldr	r3, [pc, #56]	; (8003a24 <Set_GPIO_Clock+0xf4>)
 80039ea:	4815      	ldr	r0, [pc, #84]	; (8003a40 <Set_GPIO_Clock+0x110>)
 80039ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039ee:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80039f2:	631a      	str	r2, [r3, #48]	; 0x30
 80039f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80039f6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80039fa:	9306      	str	r3, [sp, #24]
 80039fc:	9b06      	ldr	r3, [sp, #24]
 80039fe:	e7ae      	b.n	800395e <Set_GPIO_Clock+0x2e>
 8003a00:	9307      	str	r3, [sp, #28]
 8003a02:	4b08      	ldr	r3, [pc, #32]	; (8003a24 <Set_GPIO_Clock+0xf4>)
 8003a04:	480f      	ldr	r0, [pc, #60]	; (8003a44 <Set_GPIO_Clock+0x114>)
 8003a06:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a08:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003a0c:	631a      	str	r2, [r3, #48]	; 0x30
 8003a0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a10:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003a14:	9307      	str	r3, [sp, #28]
 8003a16:	9b07      	ldr	r3, [sp, #28]
 8003a18:	e7a1      	b.n	800395e <Set_GPIO_Clock+0x2e>
 8003a1a:	480b      	ldr	r0, [pc, #44]	; (8003a48 <Set_GPIO_Clock+0x118>)
 8003a1c:	f7fe fc64 	bl	80022e8 <error>
 8003a20:	2000      	movs	r0, #0
 8003a22:	e79c      	b.n	800395e <Set_GPIO_Clock+0x2e>
 8003a24:	40023800 	.word	0x40023800
 8003a28:	40020000 	.word	0x40020000
 8003a2c:	40020400 	.word	0x40020400
 8003a30:	40020800 	.word	0x40020800
 8003a34:	40020c00 	.word	0x40020c00
 8003a38:	40021000 	.word	0x40021000
 8003a3c:	40021400 	.word	0x40021400
 8003a40:	40021800 	.word	0x40021800
 8003a44:	40021c00 	.word	0x40021c00
 8003a48:	080075d0 	.word	0x080075d0

08003a4c <gpio_set>:
 8003a4c:	b510      	push	{r4, lr}
 8003a4e:	2100      	movs	r1, #0
 8003a50:	4604      	mov	r4, r0
 8003a52:	f004 040f 	and.w	r4, r4, #15
 8003a56:	f000 f957 	bl	8003d08 <pin_function>
 8003a5a:	2001      	movs	r0, #1
 8003a5c:	40a0      	lsls	r0, r4
 8003a5e:	bd10      	pop	{r4, pc}

08003a60 <gpio_init>:
 8003a60:	b570      	push	{r4, r5, r6, lr}
 8003a62:	4604      	mov	r4, r0
 8003a64:	1c4b      	adds	r3, r1, #1
 8003a66:	460e      	mov	r6, r1
 8003a68:	8221      	strh	r1, [r4, #16]
 8003a6a:	d016      	beq.n	8003a9a <gpio_init+0x3a>
 8003a6c:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8003a70:	f7ff ff5e 	bl	8003930 <Set_GPIO_Clock>
 8003a74:	4605      	mov	r5, r0
 8003a76:	4630      	mov	r0, r6
 8003a78:	f7ff ffe8 	bl	8003a4c <gpio_set>
 8003a7c:	8a23      	ldrh	r3, [r4, #16]
 8003a7e:	4a07      	ldr	r2, [pc, #28]	; (8003a9c <gpio_init+0x3c>)
 8003a80:	6165      	str	r5, [r4, #20]
 8003a82:	f003 030f 	and.w	r3, r3, #15
 8003a86:	6020      	str	r0, [r4, #0]
 8003a88:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003a8c:	61a3      	str	r3, [r4, #24]
 8003a8e:	f105 0310 	add.w	r3, r5, #16
 8003a92:	3518      	adds	r5, #24
 8003a94:	6063      	str	r3, [r4, #4]
 8003a96:	60a5      	str	r5, [r4, #8]
 8003a98:	60e5      	str	r5, [r4, #12]
 8003a9a:	bd70      	pop	{r4, r5, r6, pc}
 8003a9c:	080075f4 	.word	0x080075f4

08003aa0 <gpio_mode>:
 8003aa0:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8003aa4:	f000 b9b4 	b.w	8003e10 <pin_mode>

08003aa8 <gpio_dir>:
 8003aa8:	b510      	push	{r4, lr}
 8003aaa:	6983      	ldr	r3, [r0, #24]
 8003aac:	6944      	ldr	r4, [r0, #20]
 8003aae:	b971      	cbnz	r1, 8003ace <gpio_dir+0x26>
 8003ab0:	6821      	ldr	r1, [r4, #0]
 8003ab2:	fa93 f2a3 	rbit	r2, r3
 8003ab6:	fab2 f282 	clz	r2, r2
 8003aba:	2003      	movs	r0, #3
 8003abc:	0052      	lsls	r2, r2, #1
 8003abe:	fa00 f202 	lsl.w	r2, r0, r2
 8003ac2:	ea21 0202 	bic.w	r2, r1, r2
 8003ac6:	fa93 f3a3 	rbit	r3, r3
 8003aca:	6022      	str	r2, [r4, #0]
 8003acc:	bd10      	pop	{r4, pc}
 8003ace:	6822      	ldr	r2, [r4, #0]
 8003ad0:	fa93 f1a3 	rbit	r1, r3
 8003ad4:	fab1 f181 	clz	r1, r1
 8003ad8:	fa93 f3a3 	rbit	r3, r3
 8003adc:	2003      	movs	r0, #3
 8003ade:	0049      	lsls	r1, r1, #1
 8003ae0:	fa00 f101 	lsl.w	r1, r0, r1
 8003ae4:	fab3 f383 	clz	r3, r3
 8003ae8:	ea22 0201 	bic.w	r2, r2, r1
 8003aec:	005b      	lsls	r3, r3, #1
 8003aee:	2101      	movs	r1, #1
 8003af0:	fa01 f303 	lsl.w	r3, r1, r3
 8003af4:	4313      	orrs	r3, r2
 8003af6:	6023      	str	r3, [r4, #0]
 8003af8:	bd10      	pop	{r4, pc}

08003afa <hal_sleep>:
 8003afa:	b508      	push	{r3, lr}
 8003afc:	f7ff ff00 	bl	8003900 <HAL_SuspendTick>
 8003b00:	2101      	movs	r1, #1
 8003b02:	2000      	movs	r0, #0
 8003b04:	f001 fcea 	bl	80054dc <HAL_PWR_EnterSLEEPMode>
 8003b08:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003b0c:	f7ff bf04 	b.w	8003918 <HAL_ResumeTick>

08003b10 <can_irq>:
 8003b10:	6943      	ldr	r3, [r0, #20]
 8003b12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003b16:	4c3a      	ldr	r4, [pc, #232]	; (8003c00 <can_irq+0xf0>)
 8003b18:	460d      	mov	r5, r1
 8003b1a:	07d9      	lsls	r1, r3, #31
 8003b1c:	6020      	str	r0, [r4, #0]
 8003b1e:	d52c      	bpl.n	8003b7a <can_irq+0x6a>
 8003b20:	6881      	ldr	r1, [r0, #8]
 8003b22:	f8df e0e8 	ldr.w	lr, [pc, #232]	; 8003c0c <can_irq+0xfc>
 8003b26:	6882      	ldr	r2, [r0, #8]
 8003b28:	4f36      	ldr	r7, [pc, #216]	; (8003c04 <can_irq+0xf4>)
 8003b2a:	6883      	ldr	r3, [r0, #8]
 8003b2c:	4e36      	ldr	r6, [pc, #216]	; (8003c08 <can_irq+0xf8>)
 8003b2e:	ea01 010e 	and.w	r1, r1, lr
 8003b32:	4571      	cmp	r1, lr
 8003b34:	ea02 0207 	and.w	r2, r2, r7
 8003b38:	bf04      	itt	eq
 8003b3a:	f04f 0e01 	moveq.w	lr, #1
 8003b3e:	f8c0 e008 	streq.w	lr, [r0, #8]
 8003b42:	42ba      	cmp	r2, r7
 8003b44:	ea03 0306 	and.w	r3, r3, r6
 8003b48:	bf04      	itt	eq
 8003b4a:	f44f 7780 	moveq.w	r7, #256	; 0x100
 8003b4e:	6087      	streq	r7, [r0, #8]
 8003b50:	42b3      	cmp	r3, r6
 8003b52:	bf04      	itt	eq
 8003b54:	f44f 3680 	moveq.w	r6, #65536	; 0x10000
 8003b58:	6086      	streq	r6, [r0, #8]
 8003b5a:	482c      	ldr	r0, [pc, #176]	; (8003c0c <can_irq+0xfc>)
 8003b5c:	4281      	cmp	r1, r0
 8003b5e:	d005      	beq.n	8003b6c <can_irq+0x5c>
 8003b60:	4928      	ldr	r1, [pc, #160]	; (8003c04 <can_irq+0xf4>)
 8003b62:	428a      	cmp	r2, r1
 8003b64:	d002      	beq.n	8003b6c <can_irq+0x5c>
 8003b66:	4a28      	ldr	r2, [pc, #160]	; (8003c08 <can_irq+0xf8>)
 8003b68:	4293      	cmp	r3, r2
 8003b6a:	d106      	bne.n	8003b7a <can_irq+0x6a>
 8003b6c:	4b28      	ldr	r3, [pc, #160]	; (8003c10 <can_irq+0x100>)
 8003b6e:	4a29      	ldr	r2, [pc, #164]	; (8003c14 <can_irq+0x104>)
 8003b70:	681b      	ldr	r3, [r3, #0]
 8003b72:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8003b76:	2101      	movs	r1, #1
 8003b78:	4798      	blx	r3
 8003b7a:	6823      	ldr	r3, [r4, #0]
 8003b7c:	68da      	ldr	r2, [r3, #12]
 8003b7e:	695b      	ldr	r3, [r3, #20]
 8003b80:	0792      	lsls	r2, r2, #30
 8003b82:	d008      	beq.n	8003b96 <can_irq+0x86>
 8003b84:	079f      	lsls	r7, r3, #30
 8003b86:	d506      	bpl.n	8003b96 <can_irq+0x86>
 8003b88:	4b21      	ldr	r3, [pc, #132]	; (8003c10 <can_irq+0x100>)
 8003b8a:	4a22      	ldr	r2, [pc, #136]	; (8003c14 <can_irq+0x104>)
 8003b8c:	681b      	ldr	r3, [r3, #0]
 8003b8e:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8003b92:	2100      	movs	r1, #0
 8003b94:	4798      	blx	r3
 8003b96:	6823      	ldr	r3, [r4, #0]
 8003b98:	6999      	ldr	r1, [r3, #24]
 8003b9a:	695a      	ldr	r2, [r3, #20]
 8003b9c:	695b      	ldr	r3, [r3, #20]
 8003b9e:	078e      	lsls	r6, r1, #30
 8003ba0:	d50a      	bpl.n	8003bb8 <can_irq+0xa8>
 8003ba2:	0590      	lsls	r0, r2, #22
 8003ba4:	d508      	bpl.n	8003bb8 <can_irq+0xa8>
 8003ba6:	0419      	lsls	r1, r3, #16
 8003ba8:	d506      	bpl.n	8003bb8 <can_irq+0xa8>
 8003baa:	4b19      	ldr	r3, [pc, #100]	; (8003c10 <can_irq+0x100>)
 8003bac:	4a19      	ldr	r2, [pc, #100]	; (8003c14 <can_irq+0x104>)
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8003bb4:	2105      	movs	r1, #5
 8003bb6:	4798      	blx	r3
 8003bb8:	6822      	ldr	r2, [r4, #0]
 8003bba:	6997      	ldr	r7, [r2, #24]
 8003bbc:	6956      	ldr	r6, [r2, #20]
 8003bbe:	6952      	ldr	r2, [r2, #20]
 8003bc0:	f017 0704 	ands.w	r7, r7, #4
 8003bc4:	f406 6680 	and.w	r6, r6, #1024	; 0x400
 8003bc8:	d009      	beq.n	8003bde <can_irq+0xce>
 8003bca:	b146      	cbz	r6, 8003bde <can_irq+0xce>
 8003bcc:	0412      	lsls	r2, r2, #16
 8003bce:	d506      	bpl.n	8003bde <can_irq+0xce>
 8003bd0:	4b0f      	ldr	r3, [pc, #60]	; (8003c10 <can_irq+0x100>)
 8003bd2:	4a10      	ldr	r2, [pc, #64]	; (8003c14 <can_irq+0x104>)
 8003bd4:	681b      	ldr	r3, [r3, #0]
 8003bd6:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8003bda:	2107      	movs	r1, #7
 8003bdc:	4798      	blx	r3
 8003bde:	6823      	ldr	r3, [r4, #0]
 8003be0:	695b      	ldr	r3, [r3, #20]
 8003be2:	b15f      	cbz	r7, 8003bfc <can_irq+0xec>
 8003be4:	b156      	cbz	r6, 8003bfc <can_irq+0xec>
 8003be6:	041b      	lsls	r3, r3, #16
 8003be8:	d508      	bpl.n	8003bfc <can_irq+0xec>
 8003bea:	4b09      	ldr	r3, [pc, #36]	; (8003c10 <can_irq+0x100>)
 8003bec:	4a09      	ldr	r2, [pc, #36]	; (8003c14 <can_irq+0x104>)
 8003bee:	681b      	ldr	r3, [r3, #0]
 8003bf0:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8003bf4:	2102      	movs	r1, #2
 8003bf6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003bfa:	4718      	bx	r3
 8003bfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003c00:	20001a54 	.word	0x20001a54
 8003c04:	08000300 	.word	0x08000300
 8003c08:	10030000 	.word	0x10030000
 8003c0c:	04000003 	.word	0x04000003
 8003c10:	20001a9c 	.word	0x20001a9c
 8003c14:	20001a94 	.word	0x20001a94

08003c18 <CAN1_SCE_IRQHandler>:
 8003c18:	2100      	movs	r1, #0
 8003c1a:	4801      	ldr	r0, [pc, #4]	; (8003c20 <CAN1_SCE_IRQHandler+0x8>)
 8003c1c:	f7ff bf78 	b.w	8003b10 <can_irq>
 8003c20:	40006400 	.word	0x40006400

08003c24 <CAN1_TX_IRQHandler>:
 8003c24:	f7ff bff8 	b.w	8003c18 <CAN1_SCE_IRQHandler>

08003c28 <CAN1_RX0_IRQHandler>:
 8003c28:	f7ff bff6 	b.w	8003c18 <CAN1_SCE_IRQHandler>

08003c2c <CAN2_SCE_IRQHandler>:
 8003c2c:	2101      	movs	r1, #1
 8003c2e:	4801      	ldr	r0, [pc, #4]	; (8003c34 <CAN2_SCE_IRQHandler+0x8>)
 8003c30:	f7ff bf6e 	b.w	8003b10 <can_irq>
 8003c34:	40006800 	.word	0x40006800

08003c38 <CAN2_TX_IRQHandler>:
 8003c38:	f7ff bff8 	b.w	8003c2c <CAN2_SCE_IRQHandler>

08003c3c <CAN2_RX0_IRQHandler>:
 8003c3c:	f7ff bff6 	b.w	8003c2c <CAN2_SCE_IRQHandler>

08003c40 <us_ticker_init>:
 8003c40:	4b05      	ldr	r3, [pc, #20]	; (8003c58 <us_ticker_init+0x18>)
 8003c42:	6818      	ldr	r0, [r3, #0]
 8003c44:	b930      	cbnz	r0, 8003c54 <us_ticker_init+0x14>
 8003c46:	2201      	movs	r2, #1
 8003c48:	601a      	str	r2, [r3, #0]
 8003c4a:	4b04      	ldr	r3, [pc, #16]	; (8003c5c <us_ticker_init+0x1c>)
 8003c4c:	4a04      	ldr	r2, [pc, #16]	; (8003c60 <us_ticker_init+0x20>)
 8003c4e:	601a      	str	r2, [r3, #0]
 8003c50:	f7ff bdf6 	b.w	8003840 <HAL_InitTick>
 8003c54:	4770      	bx	lr
 8003c56:	bf00      	nop
 8003c58:	20001aa0 	.word	0x20001aa0
 8003c5c:	200028a8 	.word	0x200028a8
 8003c60:	40000c00 	.word	0x40000c00

08003c64 <us_ticker_read>:
 8003c64:	b508      	push	{r3, lr}
 8003c66:	4b04      	ldr	r3, [pc, #16]	; (8003c78 <us_ticker_read+0x14>)
 8003c68:	681b      	ldr	r3, [r3, #0]
 8003c6a:	b90b      	cbnz	r3, 8003c70 <us_ticker_read+0xc>
 8003c6c:	f7ff ffe8 	bl	8003c40 <us_ticker_init>
 8003c70:	4b02      	ldr	r3, [pc, #8]	; (8003c7c <us_ticker_read+0x18>)
 8003c72:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8003c74:	bd08      	pop	{r3, pc}
 8003c76:	bf00      	nop
 8003c78:	20001aa0 	.word	0x20001aa0
 8003c7c:	40000c00 	.word	0x40000c00

08003c80 <us_ticker_set_interrupt>:
 8003c80:	4b04      	ldr	r3, [pc, #16]	; (8003c94 <us_ticker_set_interrupt+0x14>)
 8003c82:	4a05      	ldr	r2, [pc, #20]	; (8003c98 <us_ticker_set_interrupt+0x18>)
 8003c84:	6013      	str	r3, [r2, #0]
 8003c86:	6358      	str	r0, [r3, #52]	; 0x34
 8003c88:	68da      	ldr	r2, [r3, #12]
 8003c8a:	f042 0202 	orr.w	r2, r2, #2
 8003c8e:	60da      	str	r2, [r3, #12]
 8003c90:	4770      	bx	lr
 8003c92:	bf00      	nop
 8003c94:	40000c00 	.word	0x40000c00
 8003c98:	200028a8 	.word	0x200028a8

08003c9c <us_ticker_disable_interrupt>:
 8003c9c:	4b03      	ldr	r3, [pc, #12]	; (8003cac <us_ticker_disable_interrupt+0x10>)
 8003c9e:	4a04      	ldr	r2, [pc, #16]	; (8003cb0 <us_ticker_disable_interrupt+0x14>)
 8003ca0:	6013      	str	r3, [r2, #0]
 8003ca2:	68da      	ldr	r2, [r3, #12]
 8003ca4:	f022 0202 	bic.w	r2, r2, #2
 8003ca8:	60da      	str	r2, [r3, #12]
 8003caa:	4770      	bx	lr
 8003cac:	40000c00 	.word	0x40000c00
 8003cb0:	200028a8 	.word	0x200028a8

08003cb4 <us_ticker_clear_interrupt>:
 8003cb4:	4a03      	ldr	r2, [pc, #12]	; (8003cc4 <us_ticker_clear_interrupt+0x10>)
 8003cb6:	4b04      	ldr	r3, [pc, #16]	; (8003cc8 <us_ticker_clear_interrupt+0x14>)
 8003cb8:	6013      	str	r3, [r2, #0]
 8003cba:	f06f 0202 	mvn.w	r2, #2
 8003cbe:	611a      	str	r2, [r3, #16]
 8003cc0:	4770      	bx	lr
 8003cc2:	bf00      	nop
 8003cc4:	200028a8 	.word	0x200028a8
 8003cc8:	40000c00 	.word	0x40000c00

08003ccc <LL_GPIO_SetPinPull>:
 8003ccc:	b530      	push	{r4, r5, lr}
 8003cce:	68c3      	ldr	r3, [r0, #12]
 8003cd0:	fa91 f4a1 	rbit	r4, r1
 8003cd4:	fab4 f484 	clz	r4, r4
 8003cd8:	fa91 f1a1 	rbit	r1, r1
 8003cdc:	2503      	movs	r5, #3
 8003cde:	fab1 f181 	clz	r1, r1
 8003ce2:	0064      	lsls	r4, r4, #1
 8003ce4:	fa05 f404 	lsl.w	r4, r5, r4
 8003ce8:	0049      	lsls	r1, r1, #1
 8003cea:	ea23 0304 	bic.w	r3, r3, r4
 8003cee:	fa02 f101 	lsl.w	r1, r2, r1
 8003cf2:	4319      	orrs	r1, r3
 8003cf4:	60c1      	str	r1, [r0, #12]
 8003cf6:	bd30      	pop	{r4, r5, pc}

08003cf8 <stm_pin_PullConfig>:
 8003cf8:	2a01      	cmp	r2, #1
 8003cfa:	d002      	beq.n	8003d02 <stm_pin_PullConfig+0xa>
 8003cfc:	2a02      	cmp	r2, #2
 8003cfe:	bf18      	it	ne
 8003d00:	2200      	movne	r2, #0
 8003d02:	f7ff bfe3 	b.w	8003ccc <LL_GPIO_SetPinPull>
	...

08003d08 <pin_function>:
 8003d08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d0c:	4b3f      	ldr	r3, [pc, #252]	; (8003e0c <pin_function+0x104>)
 8003d0e:	f000 080f 	and.w	r8, r0, #15
 8003d12:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8003d16:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 8003d1a:	460e      	mov	r6, r1
 8003d1c:	f001 0507 	and.w	r5, r1, #7
 8003d20:	f7ff fe06 	bl	8003930 <Set_GPIO_Clock>
 8003d24:	6883      	ldr	r3, [r0, #8]
 8003d26:	fa94 f1a4 	rbit	r1, r4
 8003d2a:	fab1 f181 	clz	r1, r1
 8003d2e:	fa94 f2a4 	rbit	r2, r4
 8003d32:	2703      	movs	r7, #3
 8003d34:	0049      	lsls	r1, r1, #1
 8003d36:	fa07 f101 	lsl.w	r1, r7, r1
 8003d3a:	fab2 f282 	clz	r2, r2
 8003d3e:	ea23 0301 	bic.w	r3, r3, r1
 8003d42:	0052      	lsls	r2, r2, #1
 8003d44:	2102      	movs	r1, #2
 8003d46:	fa01 f202 	lsl.w	r2, r1, r2
 8003d4a:	4313      	orrs	r3, r2
 8003d4c:	428d      	cmp	r5, r1
 8003d4e:	6083      	str	r3, [r0, #8]
 8003d50:	d028      	beq.n	8003da4 <pin_function+0x9c>
 8003d52:	42bd      	cmp	r5, r7
 8003d54:	d041      	beq.n	8003dda <pin_function+0xd2>
 8003d56:	2d01      	cmp	r5, #1
 8003d58:	d03f      	beq.n	8003dda <pin_function+0xd2>
 8003d5a:	2300      	movs	r3, #0
 8003d5c:	6802      	ldr	r2, [r0, #0]
 8003d5e:	fa94 f7a4 	rbit	r7, r4
 8003d62:	fab7 f787 	clz	r7, r7
 8003d66:	fa94 f1a4 	rbit	r1, r4
 8003d6a:	f04f 0e03 	mov.w	lr, #3
 8003d6e:	fab1 f181 	clz	r1, r1
 8003d72:	007f      	lsls	r7, r7, #1
 8003d74:	fa0e f707 	lsl.w	r7, lr, r7
 8003d78:	0049      	lsls	r1, r1, #1
 8003d7a:	ea22 0207 	bic.w	r2, r2, r7
 8003d7e:	408b      	lsls	r3, r1
 8003d80:	3d01      	subs	r5, #1
 8003d82:	4313      	orrs	r3, r2
 8003d84:	2d01      	cmp	r5, #1
 8003d86:	6003      	str	r3, [r0, #0]
 8003d88:	d805      	bhi.n	8003d96 <pin_function+0x8e>
 8003d8a:	6843      	ldr	r3, [r0, #4]
 8003d8c:	0732      	lsls	r2, r6, #28
 8003d8e:	bf4c      	ite	mi
 8003d90:	4323      	orrmi	r3, r4
 8003d92:	43a3      	bicpl	r3, r4
 8003d94:	6043      	str	r3, [r0, #4]
 8003d96:	f3c6 1201 	ubfx	r2, r6, #4, #2
 8003d9a:	4621      	mov	r1, r4
 8003d9c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003da0:	f7ff bfaa 	b.w	8003cf8 <stm_pin_PullConfig>
 8003da4:	f1b8 0f07 	cmp.w	r8, #7
 8003da8:	f3c6 2703 	ubfx	r7, r6, #8, #4
 8003dac:	d917      	bls.n	8003dde <pin_function+0xd6>
 8003dae:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003db0:	0a23      	lsrs	r3, r4, #8
 8003db2:	fa93 f1a3 	rbit	r1, r3
 8003db6:	fab1 f181 	clz	r1, r1
 8003dba:	fa93 f3a3 	rbit	r3, r3
 8003dbe:	f04f 0e0f 	mov.w	lr, #15
 8003dc2:	fab3 f383 	clz	r3, r3
 8003dc6:	0089      	lsls	r1, r1, #2
 8003dc8:	fa0e f101 	lsl.w	r1, lr, r1
 8003dcc:	009b      	lsls	r3, r3, #2
 8003dce:	ea22 0201 	bic.w	r2, r2, r1
 8003dd2:	fa07 f303 	lsl.w	r3, r7, r3
 8003dd6:	4313      	orrs	r3, r2
 8003dd8:	6243      	str	r3, [r0, #36]	; 0x24
 8003dda:	462b      	mov	r3, r5
 8003ddc:	e7be      	b.n	8003d5c <pin_function+0x54>
 8003dde:	6a02      	ldr	r2, [r0, #32]
 8003de0:	fa94 f3a4 	rbit	r3, r4
 8003de4:	fab3 f383 	clz	r3, r3
 8003de8:	fa94 f1a4 	rbit	r1, r4
 8003dec:	f04f 0e0f 	mov.w	lr, #15
 8003df0:	fab1 f181 	clz	r1, r1
 8003df4:	009b      	lsls	r3, r3, #2
 8003df6:	fa0e f303 	lsl.w	r3, lr, r3
 8003dfa:	0089      	lsls	r1, r1, #2
 8003dfc:	ea22 0203 	bic.w	r2, r2, r3
 8003e00:	fa07 f301 	lsl.w	r3, r7, r1
 8003e04:	4313      	orrs	r3, r2
 8003e06:	6203      	str	r3, [r0, #32]
 8003e08:	e7e7      	b.n	8003dda <pin_function+0xd2>
 8003e0a:	bf00      	nop
 8003e0c:	080075f4 	.word	0x080075f4

08003e10 <pin_mode>:
 8003e10:	b538      	push	{r3, r4, r5, lr}
 8003e12:	f000 020f 	and.w	r2, r0, #15
 8003e16:	4b19      	ldr	r3, [pc, #100]	; (8003e7c <pin_mode+0x6c>)
 8003e18:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8003e1c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8003e20:	460d      	mov	r5, r1
 8003e22:	f7ff fd85 	bl	8003930 <Set_GPIO_Clock>
 8003e26:	fb04 f204 	mul.w	r2, r4, r4
 8003e2a:	6801      	ldr	r1, [r0, #0]
 8003e2c:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8003e30:	400b      	ands	r3, r1
 8003e32:	fbb3 f3f2 	udiv	r3, r3, r2
 8003e36:	3b01      	subs	r3, #1
 8003e38:	2b01      	cmp	r3, #1
 8003e3a:	d805      	bhi.n	8003e48 <pin_mode+0x38>
 8003e3c:	1eeb      	subs	r3, r5, #3
 8003e3e:	2b02      	cmp	r3, #2
 8003e40:	6843      	ldr	r3, [r0, #4]
 8003e42:	d809      	bhi.n	8003e58 <pin_mode+0x48>
 8003e44:	4323      	orrs	r3, r4
 8003e46:	6043      	str	r3, [r0, #4]
 8003e48:	2d03      	cmp	r5, #3
 8003e4a:	d108      	bne.n	8003e5e <pin_mode+0x4e>
 8003e4c:	2201      	movs	r2, #1
 8003e4e:	4621      	mov	r1, r4
 8003e50:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003e54:	f7ff bf50 	b.w	8003cf8 <stm_pin_PullConfig>
 8003e58:	ea23 0304 	bic.w	r3, r3, r4
 8003e5c:	6043      	str	r3, [r0, #4]
 8003e5e:	2d01      	cmp	r5, #1
 8003e60:	d0f4      	beq.n	8003e4c <pin_mode+0x3c>
 8003e62:	2d05      	cmp	r5, #5
 8003e64:	d001      	beq.n	8003e6a <pin_mode+0x5a>
 8003e66:	2d02      	cmp	r5, #2
 8003e68:	d101      	bne.n	8003e6e <pin_mode+0x5e>
 8003e6a:	2202      	movs	r2, #2
 8003e6c:	e7ef      	b.n	8003e4e <pin_mode+0x3e>
 8003e6e:	4621      	mov	r1, r4
 8003e70:	2200      	movs	r2, #0
 8003e72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003e76:	f7ff bf29 	b.w	8003ccc <LL_GPIO_SetPinPull>
 8003e7a:	bf00      	nop
 8003e7c:	080075f4 	.word	0x080075f4

08003e80 <__NVIC_DisableIRQ>:
 8003e80:	0943      	lsrs	r3, r0, #5
 8003e82:	2201      	movs	r2, #1
 8003e84:	f000 001f 	and.w	r0, r0, #31
 8003e88:	fa02 f000 	lsl.w	r0, r2, r0
 8003e8c:	3320      	adds	r3, #32
 8003e8e:	4a04      	ldr	r2, [pc, #16]	; (8003ea0 <__NVIC_DisableIRQ+0x20>)
 8003e90:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8003e94:	f3bf 8f4f 	dsb	sy
 8003e98:	f3bf 8f6f 	isb	sy
 8003e9c:	4770      	bx	lr
 8003e9e:	bf00      	nop
 8003ea0:	e000e100 	.word	0xe000e100

08003ea4 <init_uart>:
 8003ea4:	6842      	ldr	r2, [r0, #4]
 8003ea6:	4916      	ldr	r1, [pc, #88]	; (8003f00 <init_uart+0x5c>)
 8003ea8:	0192      	lsls	r2, r2, #6
 8003eaa:	b510      	push	{r4, lr}
 8003eac:	188b      	adds	r3, r1, r2
 8003eae:	6804      	ldr	r4, [r0, #0]
 8003eb0:	508c      	str	r4, [r1, r2]
 8003eb2:	6882      	ldr	r2, [r0, #8]
 8003eb4:	605a      	str	r2, [r3, #4]
 8003eb6:	68c2      	ldr	r2, [r0, #12]
 8003eb8:	609a      	str	r2, [r3, #8]
 8003eba:	6902      	ldr	r2, [r0, #16]
 8003ebc:	60da      	str	r2, [r3, #12]
 8003ebe:	6942      	ldr	r2, [r0, #20]
 8003ec0:	611a      	str	r2, [r3, #16]
 8003ec2:	6a02      	ldr	r2, [r0, #32]
 8003ec4:	619a      	str	r2, [r3, #24]
 8003ec6:	2200      	movs	r2, #0
 8003ec8:	61da      	str	r2, [r3, #28]
 8003eca:	84da      	strh	r2, [r3, #38]	; 0x26
 8003ecc:	849a      	strh	r2, [r3, #36]	; 0x24
 8003ece:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003ed0:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003ed2:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 8003ed6:	3201      	adds	r2, #1
 8003ed8:	d10a      	bne.n	8003ef0 <init_uart+0x4c>
 8003eda:	2208      	movs	r2, #8
 8003edc:	615a      	str	r2, [r3, #20]
 8003ede:	4618      	mov	r0, r3
 8003ee0:	f001 fa27 	bl	8005332 <HAL_UART_Init>
 8003ee4:	b158      	cbz	r0, 8003efe <init_uart+0x5a>
 8003ee6:	4807      	ldr	r0, [pc, #28]	; (8003f04 <init_uart+0x60>)
 8003ee8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003eec:	f7fe b9fc 	b.w	80022e8 <error>
 8003ef0:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8003ef4:	3201      	adds	r2, #1
 8003ef6:	bf0c      	ite	eq
 8003ef8:	2204      	moveq	r2, #4
 8003efa:	220c      	movne	r2, #12
 8003efc:	e7ee      	b.n	8003edc <init_uart+0x38>
 8003efe:	bd10      	pop	{r4, pc}
 8003f00:	20001acc 	.word	0x20001acc
 8003f04:	08007634 	.word	0x08007634

08003f08 <uart_irq>:
 8003f08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003f0a:	4e19      	ldr	r6, [pc, #100]	; (8003f70 <uart_irq+0x68>)
 8003f0c:	4607      	mov	r7, r0
 8003f0e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8003f12:	2800      	cmp	r0, #0
 8003f14:	d02a      	beq.n	8003f6c <uart_irq+0x64>
 8003f16:	4c17      	ldr	r4, [pc, #92]	; (8003f74 <uart_irq+0x6c>)
 8003f18:	01bd      	lsls	r5, r7, #6
 8003f1a:	5963      	ldr	r3, [r4, r5]
 8003f1c:	681a      	ldr	r2, [r3, #0]
 8003f1e:	0652      	lsls	r2, r2, #25
 8003f20:	d50a      	bpl.n	8003f38 <uart_irq+0x30>
 8003f22:	68db      	ldr	r3, [r3, #12]
 8003f24:	0659      	lsls	r1, r3, #25
 8003f26:	d507      	bpl.n	8003f38 <uart_irq+0x30>
 8003f28:	4b13      	ldr	r3, [pc, #76]	; (8003f78 <uart_irq+0x70>)
 8003f2a:	2101      	movs	r1, #1
 8003f2c:	681b      	ldr	r3, [r3, #0]
 8003f2e:	4798      	blx	r3
 8003f30:	5963      	ldr	r3, [r4, r5]
 8003f32:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8003f36:	601a      	str	r2, [r3, #0]
 8003f38:	5963      	ldr	r3, [r4, r5]
 8003f3a:	681a      	ldr	r2, [r3, #0]
 8003f3c:	0692      	lsls	r2, r2, #26
 8003f3e:	d50c      	bpl.n	8003f5a <uart_irq+0x52>
 8003f40:	68db      	ldr	r3, [r3, #12]
 8003f42:	0698      	lsls	r0, r3, #26
 8003f44:	d509      	bpl.n	8003f5a <uart_irq+0x52>
 8003f46:	4b0c      	ldr	r3, [pc, #48]	; (8003f78 <uart_irq+0x70>)
 8003f48:	f856 0027 	ldr.w	r0, [r6, r7, lsl #2]
 8003f4c:	681b      	ldr	r3, [r3, #0]
 8003f4e:	2100      	movs	r1, #0
 8003f50:	4798      	blx	r3
 8003f52:	5963      	ldr	r3, [r4, r5]
 8003f54:	f06f 0220 	mvn.w	r2, #32
 8003f58:	601a      	str	r2, [r3, #0]
 8003f5a:	5963      	ldr	r3, [r4, r5]
 8003f5c:	681a      	ldr	r2, [r3, #0]
 8003f5e:	0711      	lsls	r1, r2, #28
 8003f60:	d504      	bpl.n	8003f6c <uart_irq+0x64>
 8003f62:	695a      	ldr	r2, [r3, #20]
 8003f64:	07d2      	lsls	r2, r2, #31
 8003f66:	bf44      	itt	mi
 8003f68:	685b      	ldrmi	r3, [r3, #4]
 8003f6a:	9301      	strmi	r3, [sp, #4]
 8003f6c:	b003      	add	sp, #12
 8003f6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003f70:	20001aa8 	.word	0x20001aa8
 8003f74:	20001acc 	.word	0x20001acc
 8003f78:	20001aa4 	.word	0x20001aa4

08003f7c <uart1_irq>:
 8003f7c:	2000      	movs	r0, #0
 8003f7e:	f7ff bfc3 	b.w	8003f08 <uart_irq>

08003f82 <uart2_irq>:
 8003f82:	2001      	movs	r0, #1
 8003f84:	f7ff bfc0 	b.w	8003f08 <uart_irq>

08003f88 <uart3_irq>:
 8003f88:	2002      	movs	r0, #2
 8003f8a:	f7ff bfbd 	b.w	8003f08 <uart_irq>

08003f8e <uart4_irq>:
 8003f8e:	2003      	movs	r0, #3
 8003f90:	f7ff bfba 	b.w	8003f08 <uart_irq>

08003f94 <uart5_irq>:
 8003f94:	2004      	movs	r0, #4
 8003f96:	f7ff bfb7 	b.w	8003f08 <uart_irq>

08003f9a <uart6_irq>:
 8003f9a:	2005      	movs	r0, #5
 8003f9c:	f7ff bfb4 	b.w	8003f08 <uart_irq>

08003fa0 <serial_init>:
 8003fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003fa2:	460e      	mov	r6, r1
 8003fa4:	b087      	sub	sp, #28
 8003fa6:	4604      	mov	r4, r0
 8003fa8:	496d      	ldr	r1, [pc, #436]	; (8004160 <serial_init+0x1c0>)
 8003faa:	4630      	mov	r0, r6
 8003fac:	4615      	mov	r5, r2
 8003fae:	f7fe f945 	bl	800223c <pinmap_peripheral>
 8003fb2:	496c      	ldr	r1, [pc, #432]	; (8004164 <serial_init+0x1c4>)
 8003fb4:	4607      	mov	r7, r0
 8003fb6:	4628      	mov	r0, r5
 8003fb8:	f7fe f940 	bl	800223c <pinmap_peripheral>
 8003fbc:	4601      	mov	r1, r0
 8003fbe:	4638      	mov	r0, r7
 8003fc0:	f7fe f91e 	bl	8002200 <pinmap_merge>
 8003fc4:	4b68      	ldr	r3, [pc, #416]	; (8004168 <serial_init+0x1c8>)
 8003fc6:	6020      	str	r0, [r4, #0]
 8003fc8:	4298      	cmp	r0, r3
 8003fca:	f000 809c 	beq.w	8004106 <serial_init+0x166>
 8003fce:	d836      	bhi.n	800403e <serial_init+0x9e>
 8003fd0:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8003fd4:	4298      	cmp	r0, r3
 8003fd6:	d069      	beq.n	80040ac <serial_init+0x10c>
 8003fd8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003fdc:	4298      	cmp	r0, r3
 8003fde:	d07c      	beq.n	80040da <serial_init+0x13a>
 8003fe0:	495f      	ldr	r1, [pc, #380]	; (8004160 <serial_init+0x1c0>)
 8003fe2:	4630      	mov	r0, r6
 8003fe4:	f7fe f8ee 	bl	80021c4 <pinmap_pinout>
 8003fe8:	495e      	ldr	r1, [pc, #376]	; (8004164 <serial_init+0x1c4>)
 8003fea:	4628      	mov	r0, r5
 8003fec:	f7fe f8ea 	bl	80021c4 <pinmap_pinout>
 8003ff0:	1c72      	adds	r2, r6, #1
 8003ff2:	d003      	beq.n	8003ffc <serial_init+0x5c>
 8003ff4:	2101      	movs	r1, #1
 8003ff6:	4630      	mov	r0, r6
 8003ff8:	f7ff ff0a 	bl	8003e10 <pin_mode>
 8003ffc:	1c6b      	adds	r3, r5, #1
 8003ffe:	d003      	beq.n	8004008 <serial_init+0x68>
 8004000:	2101      	movs	r1, #1
 8004002:	4628      	mov	r0, r5
 8004004:	f7ff ff04 	bl	8003e10 <pin_mode>
 8004008:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 800400c:	60a3      	str	r3, [r4, #8]
 800400e:	2300      	movs	r3, #0
 8004010:	60e3      	str	r3, [r4, #12]
 8004012:	6123      	str	r3, [r4, #16]
 8004014:	6163      	str	r3, [r4, #20]
 8004016:	6223      	str	r3, [r4, #32]
 8004018:	8326      	strh	r6, [r4, #24]
 800401a:	8365      	strh	r5, [r4, #26]
 800401c:	4620      	mov	r0, r4
 800401e:	f7ff ff41 	bl	8003ea4 <init_uart>
 8004022:	6822      	ldr	r2, [r4, #0]
 8004024:	4b51      	ldr	r3, [pc, #324]	; (800416c <serial_init+0x1cc>)
 8004026:	429a      	cmp	r2, r3
 8004028:	d107      	bne.n	800403a <serial_init+0x9a>
 800402a:	4b51      	ldr	r3, [pc, #324]	; (8004170 <serial_init+0x1d0>)
 800402c:	4851      	ldr	r0, [pc, #324]	; (8004174 <serial_init+0x1d4>)
 800402e:	2201      	movs	r2, #1
 8004030:	601a      	str	r2, [r3, #0]
 8004032:	4621      	mov	r1, r4
 8004034:	224c      	movs	r2, #76	; 0x4c
 8004036:	f002 fbbb 	bl	80067b0 <memcpy>
 800403a:	b007      	add	sp, #28
 800403c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800403e:	4b4e      	ldr	r3, [pc, #312]	; (8004178 <serial_init+0x1d8>)
 8004040:	4298      	cmp	r0, r3
 8004042:	d01d      	beq.n	8004080 <serial_init+0xe0>
 8004044:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004048:	4298      	cmp	r0, r3
 800404a:	d072      	beq.n	8004132 <serial_init+0x192>
 800404c:	f5a3 4344 	sub.w	r3, r3, #50176	; 0xc400
 8004050:	4298      	cmp	r0, r3
 8004052:	d1c5      	bne.n	8003fe0 <serial_init+0x40>
 8004054:	4b49      	ldr	r3, [pc, #292]	; (800417c <serial_init+0x1dc>)
 8004056:	6a1a      	ldr	r2, [r3, #32]
 8004058:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800405c:	621a      	str	r2, [r3, #32]
 800405e:	6a1a      	ldr	r2, [r3, #32]
 8004060:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8004064:	621a      	str	r2, [r3, #32]
 8004066:	2200      	movs	r2, #0
 8004068:	9204      	str	r2, [sp, #16]
 800406a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800406c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8004070:	641a      	str	r2, [r3, #64]	; 0x40
 8004072:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004074:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004078:	9304      	str	r3, [sp, #16]
 800407a:	9b04      	ldr	r3, [sp, #16]
 800407c:	2304      	movs	r3, #4
 800407e:	e02a      	b.n	80040d6 <serial_init+0x136>
 8004080:	4b3e      	ldr	r3, [pc, #248]	; (800417c <serial_init+0x1dc>)
 8004082:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004084:	f042 0210 	orr.w	r2, r2, #16
 8004088:	625a      	str	r2, [r3, #36]	; 0x24
 800408a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800408c:	2100      	movs	r1, #0
 800408e:	f022 0210 	bic.w	r2, r2, #16
 8004092:	625a      	str	r2, [r3, #36]	; 0x24
 8004094:	9100      	str	r1, [sp, #0]
 8004096:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004098:	f042 0210 	orr.w	r2, r2, #16
 800409c:	645a      	str	r2, [r3, #68]	; 0x44
 800409e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80040a0:	6061      	str	r1, [r4, #4]
 80040a2:	f003 0310 	and.w	r3, r3, #16
 80040a6:	9300      	str	r3, [sp, #0]
 80040a8:	9b00      	ldr	r3, [sp, #0]
 80040aa:	e799      	b.n	8003fe0 <serial_init+0x40>
 80040ac:	4b33      	ldr	r3, [pc, #204]	; (800417c <serial_init+0x1dc>)
 80040ae:	6a1a      	ldr	r2, [r3, #32]
 80040b0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80040b4:	621a      	str	r2, [r3, #32]
 80040b6:	6a1a      	ldr	r2, [r3, #32]
 80040b8:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 80040bc:	621a      	str	r2, [r3, #32]
 80040be:	2200      	movs	r2, #0
 80040c0:	9201      	str	r2, [sp, #4]
 80040c2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80040c4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80040c8:	641a      	str	r2, [r3, #64]	; 0x40
 80040ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80040cc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80040d0:	9301      	str	r3, [sp, #4]
 80040d2:	9b01      	ldr	r3, [sp, #4]
 80040d4:	2301      	movs	r3, #1
 80040d6:	6063      	str	r3, [r4, #4]
 80040d8:	e782      	b.n	8003fe0 <serial_init+0x40>
 80040da:	4b28      	ldr	r3, [pc, #160]	; (800417c <serial_init+0x1dc>)
 80040dc:	6a1a      	ldr	r2, [r3, #32]
 80040de:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80040e2:	621a      	str	r2, [r3, #32]
 80040e4:	6a1a      	ldr	r2, [r3, #32]
 80040e6:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80040ea:	621a      	str	r2, [r3, #32]
 80040ec:	2200      	movs	r2, #0
 80040ee:	9202      	str	r2, [sp, #8]
 80040f0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80040f2:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80040f6:	641a      	str	r2, [r3, #64]	; 0x40
 80040f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80040fa:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80040fe:	9302      	str	r3, [sp, #8]
 8004100:	9b02      	ldr	r3, [sp, #8]
 8004102:	2302      	movs	r3, #2
 8004104:	e7e7      	b.n	80040d6 <serial_init+0x136>
 8004106:	4b1d      	ldr	r3, [pc, #116]	; (800417c <serial_init+0x1dc>)
 8004108:	6a1a      	ldr	r2, [r3, #32]
 800410a:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 800410e:	621a      	str	r2, [r3, #32]
 8004110:	6a1a      	ldr	r2, [r3, #32]
 8004112:	f422 2200 	bic.w	r2, r2, #524288	; 0x80000
 8004116:	621a      	str	r2, [r3, #32]
 8004118:	2200      	movs	r2, #0
 800411a:	9203      	str	r2, [sp, #12]
 800411c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800411e:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8004122:	641a      	str	r2, [r3, #64]	; 0x40
 8004124:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004126:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800412a:	9303      	str	r3, [sp, #12]
 800412c:	9b03      	ldr	r3, [sp, #12]
 800412e:	2303      	movs	r3, #3
 8004130:	e7d1      	b.n	80040d6 <serial_init+0x136>
 8004132:	4b12      	ldr	r3, [pc, #72]	; (800417c <serial_init+0x1dc>)
 8004134:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004136:	f042 0220 	orr.w	r2, r2, #32
 800413a:	625a      	str	r2, [r3, #36]	; 0x24
 800413c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800413e:	f022 0220 	bic.w	r2, r2, #32
 8004142:	625a      	str	r2, [r3, #36]	; 0x24
 8004144:	2200      	movs	r2, #0
 8004146:	9205      	str	r2, [sp, #20]
 8004148:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800414a:	f042 0220 	orr.w	r2, r2, #32
 800414e:	645a      	str	r2, [r3, #68]	; 0x44
 8004150:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004152:	f003 0320 	and.w	r3, r3, #32
 8004156:	9305      	str	r3, [sp, #20]
 8004158:	9b05      	ldr	r3, [sp, #20]
 800415a:	2305      	movs	r3, #5
 800415c:	e7bb      	b.n	80040d6 <serial_init+0x136>
 800415e:	bf00      	nop
 8004160:	080076b8 	.word	0x080076b8
 8004164:	0800764c 	.word	0x0800764c
 8004168:	40004c00 	.word	0x40004c00
 800416c:	40004400 	.word	0x40004400
 8004170:	20001ac8 	.word	0x20001ac8
 8004174:	200028e4 	.word	0x200028e4
 8004178:	40011000 	.word	0x40011000
 800417c:	40023800 	.word	0x40023800

08004180 <serial_baud>:
 8004180:	6081      	str	r1, [r0, #8]
 8004182:	f7ff be8f 	b.w	8003ea4 <init_uart>
	...

08004188 <serial_irq_handler>:
 8004188:	4b03      	ldr	r3, [pc, #12]	; (8004198 <serial_irq_handler+0x10>)
 800418a:	6019      	str	r1, [r3, #0]
 800418c:	6841      	ldr	r1, [r0, #4]
 800418e:	4b03      	ldr	r3, [pc, #12]	; (800419c <serial_irq_handler+0x14>)
 8004190:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8004194:	4770      	bx	lr
 8004196:	bf00      	nop
 8004198:	20001aa4 	.word	0x20001aa4
 800419c:	20001aa8 	.word	0x20001aa8

080041a0 <serial_irq_set>:
 80041a0:	b538      	push	{r3, r4, r5, lr}
 80041a2:	6843      	ldr	r3, [r0, #4]
 80041a4:	460d      	mov	r5, r1
 80041a6:	2b05      	cmp	r3, #5
 80041a8:	d82b      	bhi.n	8004202 <serial_irq_set+0x62>
 80041aa:	e8df f003 	tbb	[pc, r3]
 80041ae:	1b03      	.short	0x1b03
 80041b0:	2724211e 	.word	0x2724211e
 80041b4:	4921      	ldr	r1, [pc, #132]	; (800423c <serial_irq_set+0x9c>)
 80041b6:	2425      	movs	r4, #37	; 0x25
 80041b8:	4821      	ldr	r0, [pc, #132]	; (8004240 <serial_irq_set+0xa0>)
 80041ba:	019b      	lsls	r3, r3, #6
 80041bc:	b33a      	cbz	r2, 800420e <serial_irq_set+0x6e>
 80041be:	58c2      	ldr	r2, [r0, r3]
 80041c0:	68d3      	ldr	r3, [r2, #12]
 80041c2:	bb0d      	cbnz	r5, 8004208 <serial_irq_set+0x68>
 80041c4:	f043 0320 	orr.w	r3, r3, #32
 80041c8:	60d3      	str	r3, [r2, #12]
 80041ca:	4620      	mov	r0, r4
 80041cc:	f000 f9c2 	bl	8004554 <__NVIC_SetVector>
 80041d0:	0962      	lsrs	r2, r4, #5
 80041d2:	2301      	movs	r3, #1
 80041d4:	f004 0417 	and.w	r4, r4, #23
 80041d8:	fa03 f404 	lsl.w	r4, r3, r4
 80041dc:	4b19      	ldr	r3, [pc, #100]	; (8004244 <serial_irq_set+0xa4>)
 80041de:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80041e2:	bd38      	pop	{r3, r4, r5, pc}
 80041e4:	4918      	ldr	r1, [pc, #96]	; (8004248 <serial_irq_set+0xa8>)
 80041e6:	2426      	movs	r4, #38	; 0x26
 80041e8:	e7e6      	b.n	80041b8 <serial_irq_set+0x18>
 80041ea:	4918      	ldr	r1, [pc, #96]	; (800424c <serial_irq_set+0xac>)
 80041ec:	2427      	movs	r4, #39	; 0x27
 80041ee:	e7e3      	b.n	80041b8 <serial_irq_set+0x18>
 80041f0:	4917      	ldr	r1, [pc, #92]	; (8004250 <serial_irq_set+0xb0>)
 80041f2:	2434      	movs	r4, #52	; 0x34
 80041f4:	e7e0      	b.n	80041b8 <serial_irq_set+0x18>
 80041f6:	4917      	ldr	r1, [pc, #92]	; (8004254 <serial_irq_set+0xb4>)
 80041f8:	2435      	movs	r4, #53	; 0x35
 80041fa:	e7dd      	b.n	80041b8 <serial_irq_set+0x18>
 80041fc:	4916      	ldr	r1, [pc, #88]	; (8004258 <serial_irq_set+0xb8>)
 80041fe:	2447      	movs	r4, #71	; 0x47
 8004200:	e7da      	b.n	80041b8 <serial_irq_set+0x18>
 8004202:	2100      	movs	r1, #0
 8004204:	460c      	mov	r4, r1
 8004206:	e7d7      	b.n	80041b8 <serial_irq_set+0x18>
 8004208:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800420c:	e7dc      	b.n	80041c8 <serial_irq_set+0x28>
 800420e:	58c3      	ldr	r3, [r0, r3]
 8004210:	68da      	ldr	r2, [r3, #12]
 8004212:	b935      	cbnz	r5, 8004222 <serial_irq_set+0x82>
 8004214:	f022 0220 	bic.w	r2, r2, #32
 8004218:	60da      	str	r2, [r3, #12]
 800421a:	68db      	ldr	r3, [r3, #12]
 800421c:	061a      	lsls	r2, r3, #24
 800421e:	d506      	bpl.n	800422e <serial_irq_set+0x8e>
 8004220:	bd38      	pop	{r3, r4, r5, pc}
 8004222:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004226:	60da      	str	r2, [r3, #12]
 8004228:	68db      	ldr	r3, [r3, #12]
 800422a:	069b      	lsls	r3, r3, #26
 800422c:	d404      	bmi.n	8004238 <serial_irq_set+0x98>
 800422e:	4620      	mov	r0, r4
 8004230:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004234:	f7ff be24 	b.w	8003e80 <__NVIC_DisableIRQ>
 8004238:	bd38      	pop	{r3, r4, r5, pc}
 800423a:	bf00      	nop
 800423c:	08003f7d 	.word	0x08003f7d
 8004240:	20001acc 	.word	0x20001acc
 8004244:	e000e100 	.word	0xe000e100
 8004248:	08003f83 	.word	0x08003f83
 800424c:	08003f89 	.word	0x08003f89
 8004250:	08003f8f 	.word	0x08003f8f
 8004254:	08003f95 	.word	0x08003f95
 8004258:	08003f9b 	.word	0x08003f9b

0800425c <serial_readable>:
 800425c:	6843      	ldr	r3, [r0, #4]
 800425e:	4a03      	ldr	r2, [pc, #12]	; (800426c <serial_readable+0x10>)
 8004260:	019b      	lsls	r3, r3, #6
 8004262:	58d3      	ldr	r3, [r2, r3]
 8004264:	6818      	ldr	r0, [r3, #0]
 8004266:	f3c0 1040 	ubfx	r0, r0, #5, #1
 800426a:	4770      	bx	lr
 800426c:	20001acc 	.word	0x20001acc

08004270 <serial_getc>:
 8004270:	6841      	ldr	r1, [r0, #4]
 8004272:	b510      	push	{r4, lr}
 8004274:	4604      	mov	r4, r0
 8004276:	4620      	mov	r0, r4
 8004278:	f7ff fff0 	bl	800425c <serial_readable>
 800427c:	2800      	cmp	r0, #0
 800427e:	d0fa      	beq.n	8004276 <serial_getc+0x6>
 8004280:	0189      	lsls	r1, r1, #6
 8004282:	4b03      	ldr	r3, [pc, #12]	; (8004290 <serial_getc+0x20>)
 8004284:	585b      	ldr	r3, [r3, r1]
 8004286:	6858      	ldr	r0, [r3, #4]
 8004288:	f3c0 0008 	ubfx	r0, r0, #0, #9
 800428c:	bd10      	pop	{r4, pc}
 800428e:	bf00      	nop
 8004290:	20001acc 	.word	0x20001acc

08004294 <serial_writable>:
 8004294:	6843      	ldr	r3, [r0, #4]
 8004296:	4a03      	ldr	r2, [pc, #12]	; (80042a4 <serial_writable+0x10>)
 8004298:	019b      	lsls	r3, r3, #6
 800429a:	58d3      	ldr	r3, [r2, r3]
 800429c:	6818      	ldr	r0, [r3, #0]
 800429e:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 80042a2:	4770      	bx	lr
 80042a4:	20001acc 	.word	0x20001acc

080042a8 <serial_putc>:
 80042a8:	b538      	push	{r3, r4, r5, lr}
 80042aa:	6844      	ldr	r4, [r0, #4]
 80042ac:	4605      	mov	r5, r0
 80042ae:	4628      	mov	r0, r5
 80042b0:	f7ff fff0 	bl	8004294 <serial_writable>
 80042b4:	2800      	cmp	r0, #0
 80042b6:	d0fa      	beq.n	80042ae <serial_putc+0x6>
 80042b8:	01a4      	lsls	r4, r4, #6
 80042ba:	4b03      	ldr	r3, [pc, #12]	; (80042c8 <serial_putc+0x20>)
 80042bc:	591b      	ldr	r3, [r3, r4]
 80042be:	f3c1 0108 	ubfx	r1, r1, #0, #9
 80042c2:	6059      	str	r1, [r3, #4]
 80042c4:	bd38      	pop	{r3, r4, r5, pc}
 80042c6:	bf00      	nop
 80042c8:	20001acc 	.word	0x20001acc

080042cc <mbed_sdk_init>:
 80042cc:	b508      	push	{r3, lr}
 80042ce:	f000 f805 	bl	80042dc <SystemCoreClockUpdate>
 80042d2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80042d6:	f001 baaf 	b.w	8005838 <HAL_Init>
	...

080042dc <SystemCoreClockUpdate>:
 80042dc:	4a17      	ldr	r2, [pc, #92]	; (800433c <SystemCoreClockUpdate+0x60>)
 80042de:	4918      	ldr	r1, [pc, #96]	; (8004340 <SystemCoreClockUpdate+0x64>)
 80042e0:	6893      	ldr	r3, [r2, #8]
 80042e2:	f003 030c 	and.w	r3, r3, #12
 80042e6:	2b04      	cmp	r3, #4
 80042e8:	b510      	push	{r4, lr}
 80042ea:	d00d      	beq.n	8004308 <SystemCoreClockUpdate+0x2c>
 80042ec:	2b08      	cmp	r3, #8
 80042ee:	d00d      	beq.n	800430c <SystemCoreClockUpdate+0x30>
 80042f0:	4b14      	ldr	r3, [pc, #80]	; (8004344 <SystemCoreClockUpdate+0x68>)
 80042f2:	600b      	str	r3, [r1, #0]
 80042f4:	4b11      	ldr	r3, [pc, #68]	; (800433c <SystemCoreClockUpdate+0x60>)
 80042f6:	4a14      	ldr	r2, [pc, #80]	; (8004348 <SystemCoreClockUpdate+0x6c>)
 80042f8:	689b      	ldr	r3, [r3, #8]
 80042fa:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80042fe:	5cd2      	ldrb	r2, [r2, r3]
 8004300:	680b      	ldr	r3, [r1, #0]
 8004302:	40d3      	lsrs	r3, r2
 8004304:	600b      	str	r3, [r1, #0]
 8004306:	bd10      	pop	{r4, pc}
 8004308:	4b10      	ldr	r3, [pc, #64]	; (800434c <SystemCoreClockUpdate+0x70>)
 800430a:	e7f2      	b.n	80042f2 <SystemCoreClockUpdate+0x16>
 800430c:	6854      	ldr	r4, [r2, #4]
 800430e:	6850      	ldr	r0, [r2, #4]
 8004310:	6852      	ldr	r2, [r2, #4]
 8004312:	0263      	lsls	r3, r4, #9
 8004314:	f3c2 1288 	ubfx	r2, r2, #6, #9
 8004318:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 800431c:	bf4c      	ite	mi
 800431e:	4b0b      	ldrmi	r3, [pc, #44]	; (800434c <SystemCoreClockUpdate+0x70>)
 8004320:	4b08      	ldrpl	r3, [pc, #32]	; (8004344 <SystemCoreClockUpdate+0x68>)
 8004322:	fbb3 f3f0 	udiv	r3, r3, r0
 8004326:	4353      	muls	r3, r2
 8004328:	4a04      	ldr	r2, [pc, #16]	; (800433c <SystemCoreClockUpdate+0x60>)
 800432a:	6852      	ldr	r2, [r2, #4]
 800432c:	f3c2 4201 	ubfx	r2, r2, #16, #2
 8004330:	3201      	adds	r2, #1
 8004332:	0052      	lsls	r2, r2, #1
 8004334:	fbb3 f3f2 	udiv	r3, r3, r2
 8004338:	e7db      	b.n	80042f2 <SystemCoreClockUpdate+0x16>
 800433a:	bf00      	nop
 800433c:	40023800 	.word	0x40023800
 8004340:	200001e0 	.word	0x200001e0
 8004344:	00f42400 	.word	0x00f42400
 8004348:	08007724 	.word	0x08007724
 800434c:	007a1200 	.word	0x007a1200

08004350 <SetSysClock_PLL_HSE>:
 8004350:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004354:	b0ac      	sub	sp, #176	; 0xb0
 8004356:	4b30      	ldr	r3, [pc, #192]	; (8004418 <SetSysClock_PLL_HSE+0xc8>)
 8004358:	2100      	movs	r1, #0
 800435a:	9101      	str	r1, [sp, #4]
 800435c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800435e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004362:	641a      	str	r2, [r3, #64]	; 0x40
 8004364:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004366:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800436a:	9301      	str	r3, [sp, #4]
 800436c:	9b01      	ldr	r3, [sp, #4]
 800436e:	4b2b      	ldr	r3, [pc, #172]	; (800441c <SetSysClock_PLL_HSE+0xcc>)
 8004370:	9102      	str	r1, [sp, #8]
 8004372:	681a      	ldr	r2, [r3, #0]
 8004374:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8004378:	601a      	str	r2, [r3, #0]
 800437a:	681b      	ldr	r3, [r3, #0]
 800437c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8004380:	9302      	str	r3, [sp, #8]
 8004382:	9b02      	ldr	r3, [sp, #8]
 8004384:	2301      	movs	r3, #1
 8004386:	9308      	str	r3, [sp, #32]
 8004388:	4607      	mov	r7, r0
 800438a:	b9c0      	cbnz	r0, 80043be <SetSysClock_PLL_HSE+0x6e>
 800438c:	9309      	str	r3, [sp, #36]	; 0x24
 800438e:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8004392:	2402      	movs	r4, #2
 8004394:	f44f 0580 	mov.w	r5, #4194304	; 0x400000
 8004398:	2608      	movs	r6, #8
 800439a:	9311      	str	r3, [sp, #68]	; 0x44
 800439c:	a808      	add	r0, sp, #32
 800439e:	2307      	movs	r3, #7
 80043a0:	940e      	str	r4, [sp, #56]	; 0x38
 80043a2:	950f      	str	r5, [sp, #60]	; 0x3c
 80043a4:	9610      	str	r6, [sp, #64]	; 0x40
 80043a6:	9412      	str	r4, [sp, #72]	; 0x48
 80043a8:	9313      	str	r3, [sp, #76]	; 0x4c
 80043aa:	9414      	str	r4, [sp, #80]	; 0x50
 80043ac:	f000 fbe2 	bl	8004b74 <HAL_RCC_OscConfig>
 80043b0:	b918      	cbnz	r0, 80043ba <SetSysClock_PLL_HSE+0x6a>
 80043b2:	f001 f9f5 	bl	80057a0 <HAL_PWREx_EnableOverDrive>
 80043b6:	4680      	mov	r8, r0
 80043b8:	b118      	cbz	r0, 80043c2 <SetSysClock_PLL_HSE+0x72>
 80043ba:	2000      	movs	r0, #0
 80043bc:	e028      	b.n	8004410 <SetSysClock_PLL_HSE+0xc0>
 80043be:	2305      	movs	r3, #5
 80043c0:	e7e4      	b.n	800438c <SetSysClock_PLL_HSE+0x3c>
 80043c2:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80043c6:	931c      	str	r3, [sp, #112]	; 0x70
 80043c8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80043cc:	9315      	str	r3, [sp, #84]	; 0x54
 80043ce:	a815      	add	r0, sp, #84	; 0x54
 80043d0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80043d4:	932a      	str	r3, [sp, #168]	; 0xa8
 80043d6:	961b      	str	r6, [sp, #108]	; 0x6c
 80043d8:	961d      	str	r6, [sp, #116]	; 0x74
 80043da:	f000 f8db 	bl	8004594 <HAL_RCCEx_PeriphCLKConfig>
 80043de:	230f      	movs	r3, #15
 80043e0:	9303      	str	r3, [sp, #12]
 80043e2:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80043e6:	9306      	str	r3, [sp, #24]
 80043e8:	2105      	movs	r1, #5
 80043ea:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80043ee:	a803      	add	r0, sp, #12
 80043f0:	9404      	str	r4, [sp, #16]
 80043f2:	f8cd 8014 	str.w	r8, [sp, #20]
 80043f6:	9307      	str	r3, [sp, #28]
 80043f8:	f001 f8cc 	bl	8005594 <HAL_RCC_ClockConfig>
 80043fc:	4602      	mov	r2, r0
 80043fe:	2800      	cmp	r0, #0
 8004400:	d1db      	bne.n	80043ba <SetSysClock_PLL_HSE+0x6a>
 8004402:	b90f      	cbnz	r7, 8004408 <SetSysClock_PLL_HSE+0xb8>
 8004404:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8004408:	4629      	mov	r1, r5
 800440a:	f001 f877 	bl	80054fc <HAL_RCC_MCOConfig>
 800440e:	2001      	movs	r0, #1
 8004410:	b02c      	add	sp, #176	; 0xb0
 8004412:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004416:	bf00      	nop
 8004418:	40023800 	.word	0x40023800
 800441c:	40007000 	.word	0x40007000

08004420 <SetSysClock_PLL_HSI>:
 8004420:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004422:	b095      	sub	sp, #84	; 0x54
 8004424:	2400      	movs	r4, #0
 8004426:	4b23      	ldr	r3, [pc, #140]	; (80044b4 <SetSysClock_PLL_HSI+0x94>)
 8004428:	9400      	str	r4, [sp, #0]
 800442a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800442c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004430:	641a      	str	r2, [r3, #64]	; 0x40
 8004432:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004434:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004438:	9300      	str	r3, [sp, #0]
 800443a:	9b00      	ldr	r3, [sp, #0]
 800443c:	4b1e      	ldr	r3, [pc, #120]	; (80044b8 <SetSysClock_PLL_HSI+0x98>)
 800443e:	9401      	str	r4, [sp, #4]
 8004440:	681a      	ldr	r2, [r3, #0]
 8004442:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8004446:	601a      	str	r2, [r3, #0]
 8004448:	681b      	ldr	r3, [r3, #0]
 800444a:	9408      	str	r4, [sp, #32]
 800444c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8004450:	9301      	str	r3, [sp, #4]
 8004452:	9b01      	ldr	r3, [sp, #4]
 8004454:	940e      	str	r4, [sp, #56]	; 0x38
 8004456:	2303      	movs	r3, #3
 8004458:	9307      	str	r3, [sp, #28]
 800445a:	2310      	movs	r3, #16
 800445c:	930b      	str	r3, [sp, #44]	; 0x2c
 800445e:	930f      	str	r3, [sp, #60]	; 0x3c
 8004460:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8004464:	2602      	movs	r6, #2
 8004466:	9310      	str	r3, [sp, #64]	; 0x40
 8004468:	2701      	movs	r7, #1
 800446a:	2306      	movs	r3, #6
 800446c:	a807      	add	r0, sp, #28
 800446e:	970a      	str	r7, [sp, #40]	; 0x28
 8004470:	960d      	str	r6, [sp, #52]	; 0x34
 8004472:	9611      	str	r6, [sp, #68]	; 0x44
 8004474:	9312      	str	r3, [sp, #72]	; 0x48
 8004476:	f000 fb7d 	bl	8004b74 <HAL_RCC_OscConfig>
 800447a:	4605      	mov	r5, r0
 800447c:	b9b8      	cbnz	r0, 80044ae <SetSysClock_PLL_HSI+0x8e>
 800447e:	230f      	movs	r3, #15
 8004480:	9302      	str	r3, [sp, #8]
 8004482:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8004486:	9004      	str	r0, [sp, #16]
 8004488:	9305      	str	r3, [sp, #20]
 800448a:	2105      	movs	r1, #5
 800448c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004490:	a802      	add	r0, sp, #8
 8004492:	9603      	str	r6, [sp, #12]
 8004494:	9306      	str	r3, [sp, #24]
 8004496:	f001 f87d 	bl	8005594 <HAL_RCC_ClockConfig>
 800449a:	4602      	mov	r2, r0
 800449c:	b928      	cbnz	r0, 80044aa <SetSysClock_PLL_HSI+0x8a>
 800449e:	4601      	mov	r1, r0
 80044a0:	f001 f82c 	bl	80054fc <HAL_RCC_MCOConfig>
 80044a4:	4638      	mov	r0, r7
 80044a6:	b015      	add	sp, #84	; 0x54
 80044a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80044aa:	4628      	mov	r0, r5
 80044ac:	e7fb      	b.n	80044a6 <SetSysClock_PLL_HSI+0x86>
 80044ae:	4620      	mov	r0, r4
 80044b0:	e7f9      	b.n	80044a6 <SetSysClock_PLL_HSI+0x86>
 80044b2:	bf00      	nop
 80044b4:	40023800 	.word	0x40023800
 80044b8:	40007000 	.word	0x40007000

080044bc <SetSysClock>:
 80044bc:	b508      	push	{r3, lr}
 80044be:	2001      	movs	r0, #1
 80044c0:	f7ff ff46 	bl	8004350 <SetSysClock_PLL_HSE>
 80044c4:	b918      	cbnz	r0, 80044ce <SetSysClock+0x12>
 80044c6:	f7ff ffab 	bl	8004420 <SetSysClock_PLL_HSI>
 80044ca:	b900      	cbnz	r0, 80044ce <SetSysClock+0x12>
 80044cc:	e7fe      	b.n	80044cc <SetSysClock+0x10>
 80044ce:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 80044d2:	2100      	movs	r1, #0
 80044d4:	2001      	movs	r0, #1
 80044d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80044da:	f001 b80f 	b.w	80054fc <HAL_RCC_MCOConfig>
	...

080044e0 <SystemInit>:
 80044e0:	4a17      	ldr	r2, [pc, #92]	; (8004540 <SystemInit+0x60>)
 80044e2:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80044e6:	b510      	push	{r4, lr}
 80044e8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80044ec:	4c15      	ldr	r4, [pc, #84]	; (8004544 <SystemInit+0x64>)
 80044ee:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80044f2:	6823      	ldr	r3, [r4, #0]
 80044f4:	2100      	movs	r1, #0
 80044f6:	f043 0301 	orr.w	r3, r3, #1
 80044fa:	6023      	str	r3, [r4, #0]
 80044fc:	60a1      	str	r1, [r4, #8]
 80044fe:	6823      	ldr	r3, [r4, #0]
 8004500:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8004504:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004508:	6023      	str	r3, [r4, #0]
 800450a:	4b0f      	ldr	r3, [pc, #60]	; (8004548 <SystemInit+0x68>)
 800450c:	6063      	str	r3, [r4, #4]
 800450e:	6823      	ldr	r3, [r4, #0]
 8004510:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004514:	6023      	str	r3, [r4, #0]
 8004516:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800451a:	60e1      	str	r1, [r4, #12]
 800451c:	6093      	str	r3, [r2, #8]
 800451e:	4b0b      	ldr	r3, [pc, #44]	; (800454c <SystemInit+0x6c>)
 8004520:	4a0b      	ldr	r2, [pc, #44]	; (8004550 <SystemInit+0x70>)
 8004522:	601a      	str	r2, [r3, #0]
 8004524:	f001 f988 	bl	8005838 <HAL_Init>
 8004528:	f7ff ffc8 	bl	80044bc <SetSysClock>
 800452c:	6a23      	ldr	r3, [r4, #32]
 800452e:	f043 0308 	orr.w	r3, r3, #8
 8004532:	6223      	str	r3, [r4, #32]
 8004534:	6a23      	ldr	r3, [r4, #32]
 8004536:	f023 0308 	bic.w	r3, r3, #8
 800453a:	6223      	str	r3, [r4, #32]
 800453c:	bd10      	pop	{r4, pc}
 800453e:	bf00      	nop
 8004540:	e000ed00 	.word	0xe000ed00
 8004544:	40023800 	.word	0x40023800
 8004548:	24003010 	.word	0x24003010
 800454c:	200001e0 	.word	0x200001e0
 8004550:	0112a880 	.word	0x0112a880

08004554 <__NVIC_SetVector>:
 8004554:	b530      	push	{r4, r5, lr}
 8004556:	4c0c      	ldr	r4, [pc, #48]	; (8004588 <__NVIC_SetVector+0x34>)
 8004558:	68a2      	ldr	r2, [r4, #8]
 800455a:	68a4      	ldr	r4, [r4, #8]
 800455c:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 8004560:	4613      	mov	r3, r2
 8004562:	d10c      	bne.n	800457e <__NVIC_SetVector+0x2a>
 8004564:	1f13      	subs	r3, r2, #4
 8004566:	4c09      	ldr	r4, [pc, #36]	; (800458c <__NVIC_SetVector+0x38>)
 8004568:	4a09      	ldr	r2, [pc, #36]	; (8004590 <__NVIC_SetVector+0x3c>)
 800456a:	f853 5f04 	ldr.w	r5, [r3, #4]!
 800456e:	f842 5f04 	str.w	r5, [r2, #4]!
 8004572:	42a2      	cmp	r2, r4
 8004574:	d1f9      	bne.n	800456a <__NVIC_SetVector+0x16>
 8004576:	4a04      	ldr	r2, [pc, #16]	; (8004588 <__NVIC_SetVector+0x34>)
 8004578:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800457c:	6093      	str	r3, [r2, #8]
 800457e:	3010      	adds	r0, #16
 8004580:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 8004584:	bd30      	pop	{r4, r5, pc}
 8004586:	bf00      	nop
 8004588:	e000ed00 	.word	0xe000ed00
 800458c:	200001c0 	.word	0x200001c0
 8004590:	1ffffffc 	.word	0x1ffffffc

08004594 <HAL_RCCEx_PeriphCLKConfig>:
 8004594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8004598:	6803      	ldr	r3, [r0, #0]
 800459a:	f013 0601 	ands.w	r6, r3, #1
 800459e:	b085      	sub	sp, #20
 80045a0:	4604      	mov	r4, r0
 80045a2:	d00b      	beq.n	80045bc <HAL_RCCEx_PeriphCLKConfig+0x28>
 80045a4:	49c8      	ldr	r1, [pc, #800]	; (80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80045a6:	6b86      	ldr	r6, [r0, #56]	; 0x38
 80045a8:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 80045ac:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 80045b0:	4332      	orrs	r2, r6
 80045b2:	fab6 f686 	clz	r6, r6
 80045b6:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
 80045ba:	0976      	lsrs	r6, r6, #5
 80045bc:	0799      	lsls	r1, r3, #30
 80045be:	d50b      	bpl.n	80045d8 <HAL_RCCEx_PeriphCLKConfig+0x44>
 80045c0:	48c1      	ldr	r0, [pc, #772]	; (80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80045c2:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80045c4:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
 80045c8:	f022 52c0 	bic.w	r2, r2, #402653184	; 0x18000000
 80045cc:	430a      	orrs	r2, r1
 80045ce:	2900      	cmp	r1, #0
 80045d0:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
 80045d4:	bf08      	it	eq
 80045d6:	2601      	moveq	r6, #1
 80045d8:	f013 0504 	ands.w	r5, r3, #4
 80045dc:	d012      	beq.n	8004604 <HAL_RCCEx_PeriphCLKConfig+0x70>
 80045de:	49ba      	ldr	r1, [pc, #744]	; (80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80045e0:	6b25      	ldr	r5, [r4, #48]	; 0x30
 80045e2:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 80045e6:	f5b5 1f80 	cmp.w	r5, #1048576	; 0x100000
 80045ea:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 80045ee:	ea42 0205 	orr.w	r2, r2, r5
 80045f2:	bf18      	it	ne
 80045f4:	fab5 f585 	clzne	r5, r5
 80045f8:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
 80045fc:	bf12      	itee	ne
 80045fe:	096d      	lsrne	r5, r5, #5
 8004600:	2500      	moveq	r5, #0
 8004602:	2601      	moveq	r6, #1
 8004604:	071a      	lsls	r2, r3, #28
 8004606:	d50f      	bpl.n	8004628 <HAL_RCCEx_PeriphCLKConfig+0x94>
 8004608:	48af      	ldr	r0, [pc, #700]	; (80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 800460a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800460c:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
 8004610:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8004614:	430a      	orrs	r2, r1
 8004616:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
 800461a:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
 800461e:	f000 81bf 	beq.w	80049a0 <HAL_RCCEx_PeriphCLKConfig+0x40c>
 8004622:	2900      	cmp	r1, #0
 8004624:	bf08      	it	eq
 8004626:	2501      	moveq	r5, #1
 8004628:	069f      	lsls	r7, r3, #26
 800462a:	d533      	bpl.n	8004694 <HAL_RCCEx_PeriphCLKConfig+0x100>
 800462c:	2300      	movs	r3, #0
 800462e:	9303      	str	r3, [sp, #12]
 8004630:	4ba5      	ldr	r3, [pc, #660]	; (80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004632:	4fa6      	ldr	r7, [pc, #664]	; (80048cc <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8004634:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004636:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800463a:	641a      	str	r2, [r3, #64]	; 0x40
 800463c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800463e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004642:	9303      	str	r3, [sp, #12]
 8004644:	9b03      	ldr	r3, [sp, #12]
 8004646:	683b      	ldr	r3, [r7, #0]
 8004648:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800464c:	603b      	str	r3, [r7, #0]
 800464e:	f001 f913 	bl	8005878 <HAL_GetTick>
 8004652:	4680      	mov	r8, r0
 8004654:	683b      	ldr	r3, [r7, #0]
 8004656:	05d8      	lsls	r0, r3, #23
 8004658:	f140 81a4 	bpl.w	80049a4 <HAL_RCCEx_PeriphCLKConfig+0x410>
 800465c:	4f9a      	ldr	r7, [pc, #616]	; (80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 800465e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8004660:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8004664:	f040 81a9 	bne.w	80049ba <HAL_RCCEx_PeriphCLKConfig+0x426>
 8004668:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800466a:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800466e:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8004672:	4a95      	ldr	r2, [pc, #596]	; (80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004674:	f040 81c4 	bne.w	8004a00 <HAL_RCCEx_PeriphCLKConfig+0x46c>
 8004678:	6891      	ldr	r1, [r2, #8]
 800467a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800467e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8004682:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8004686:	4301      	orrs	r1, r0
 8004688:	6091      	str	r1, [r2, #8]
 800468a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800468c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004690:	430b      	orrs	r3, r1
 8004692:	6713      	str	r3, [r2, #112]	; 0x70
 8004694:	6823      	ldr	r3, [r4, #0]
 8004696:	06db      	lsls	r3, r3, #27
 8004698:	bf42      	ittt	mi
 800469a:	4b8d      	ldrmi	r3, [pc, #564]	; (80048d0 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 800469c:	f894 2058 	ldrbmi.w	r2, [r4, #88]	; 0x58
 80046a0:	601a      	strmi	r2, [r3, #0]
 80046a2:	6823      	ldr	r3, [r4, #0]
 80046a4:	061f      	lsls	r7, r3, #24
 80046a6:	d508      	bpl.n	80046ba <HAL_RCCEx_PeriphCLKConfig+0x126>
 80046a8:	4987      	ldr	r1, [pc, #540]	; (80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80046aa:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80046ac:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 80046b0:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80046b4:	4302      	orrs	r2, r0
 80046b6:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 80046ba:	0658      	lsls	r0, r3, #25
 80046bc:	d508      	bpl.n	80046d0 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 80046be:	4982      	ldr	r1, [pc, #520]	; (80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80046c0:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80046c2:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 80046c6:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 80046ca:	4302      	orrs	r2, r0
 80046cc:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 80046d0:	05d9      	lsls	r1, r3, #23
 80046d2:	d50c      	bpl.n	80046ee <HAL_RCCEx_PeriphCLKConfig+0x15a>
 80046d4:	487c      	ldr	r0, [pc, #496]	; (80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80046d6:	6d61      	ldr	r1, [r4, #84]	; 0x54
 80046d8:	f8d0 2094 	ldr.w	r2, [r0, #148]	; 0x94
 80046dc:	f022 6200 	bic.w	r2, r2, #134217728	; 0x8000000
 80046e0:	430a      	orrs	r2, r1
 80046e2:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
 80046e6:	f8c0 2094 	str.w	r2, [r0, #148]	; 0x94
 80046ea:	bf08      	it	eq
 80046ec:	2501      	moveq	r5, #1
 80046ee:	059a      	lsls	r2, r3, #22
 80046f0:	d508      	bpl.n	8004704 <HAL_RCCEx_PeriphCLKConfig+0x170>
 80046f2:	4975      	ldr	r1, [pc, #468]	; (80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80046f4:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80046f6:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 80046fa:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 80046fe:	4302      	orrs	r2, r0
 8004700:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 8004704:	055f      	lsls	r7, r3, #21
 8004706:	f100 817f 	bmi.w	8004a08 <HAL_RCCEx_PeriphCLKConfig+0x474>
 800470a:	2e01      	cmp	r6, #1
 800470c:	f040 818a 	bne.w	8004a24 <HAL_RCCEx_PeriphCLKConfig+0x490>
 8004710:	4e70      	ldr	r6, [pc, #448]	; (80048d4 <HAL_RCCEx_PeriphCLKConfig+0x340>)
 8004712:	4f6d      	ldr	r7, [pc, #436]	; (80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8004714:	2300      	movs	r3, #0
 8004716:	6033      	str	r3, [r6, #0]
 8004718:	f001 f8ae 	bl	8005878 <HAL_GetTick>
 800471c:	9601      	str	r6, [sp, #4]
 800471e:	4680      	mov	r8, r0
 8004720:	683b      	ldr	r3, [r7, #0]
 8004722:	0118      	lsls	r0, r3, #4
 8004724:	f100 820b 	bmi.w	8004b3e <HAL_RCCEx_PeriphCLKConfig+0x5aa>
 8004728:	6820      	ldr	r0, [r4, #0]
 800472a:	07c1      	lsls	r1, r0, #31
 800472c:	d501      	bpl.n	8004732 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 800472e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004730:	b123      	cbz	r3, 800473c <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8004732:	0782      	lsls	r2, r0, #30
 8004734:	d546      	bpl.n	80047c4 <HAL_RCCEx_PeriphCLKConfig+0x230>
 8004736:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004738:	2b00      	cmp	r3, #0
 800473a:	d143      	bne.n	80047c4 <HAL_RCCEx_PeriphCLKConfig+0x230>
 800473c:	4f62      	ldr	r7, [pc, #392]	; (80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 800473e:	f44f 3140 	mov.w	r1, #196608	; 0x30000
 8004742:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 8004746:	fa91 fea1 	rbit	lr, r1
 800474a:	f04f 6c70 	mov.w	r12, #251658240	; 0xf000000
 800474e:	fabe fe8e 	clz	lr, lr
 8004752:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8004756:	fa9c f8ac 	rbit	r8, r12
 800475a:	f647 7bc0 	movw	r11, #32704	; 0x7fc0
 800475e:	fab8 f888 	clz	r8, r8
 8004762:	fa9b fbab 	rbit	r11, r11
 8004766:	fabb fb8b 	clz	r11, r11
 800476a:	fa91 f1a1 	rbit	r1, r1
 800476e:	fab1 f181 	clz	r1, r1
 8004772:	fa9c fcac 	rbit	r12, r12
 8004776:	f04f 4ae0 	mov.w	r10, #1879048192	; 0x70000000
 800477a:	fabc fc8c 	clz	r12, r12
 800477e:	fa9a faaa 	rbit	r10, r10
 8004782:	68a6      	ldr	r6, [r4, #8]
 8004784:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8004788:	fa06 f90b 	lsl.w	r9, r6, r11
 800478c:	6966      	ldr	r6, [r4, #20]
 800478e:	faba fa8a 	clz	r10, r10
 8004792:	fa22 f20e 	lsr.w	r2, r2, lr
 8004796:	fa06 fa0a 	lsl.w	r10, r6, r10
 800479a:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 800479e:	6866      	ldr	r6, [r4, #4]
 80047a0:	3201      	adds	r2, #1
 80047a2:	ea49 090a 	orr.w	r9, r9, r10
 80047a6:	fa23 f308 	lsr.w	r3, r3, r8
 80047aa:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 80047ae:	ea49 0906 	orr.w	r9, r9, r6
 80047b2:	fa03 f30c 	lsl.w	r3, r3, r12
 80047b6:	3a01      	subs	r2, #1
 80047b8:	ea49 0303 	orr.w	r3, r9, r3
 80047bc:	408a      	lsls	r2, r1
 80047be:	4313      	orrs	r3, r2
 80047c0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80047c4:	0743      	lsls	r3, r0, #29
 80047c6:	d503      	bpl.n	80047d0 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 80047c8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80047ca:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80047ce:	d005      	beq.n	80047dc <HAL_RCCEx_PeriphCLKConfig+0x248>
 80047d0:	0707      	lsls	r7, r0, #28
 80047d2:	d550      	bpl.n	8004876 <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 80047d4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80047d6:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80047da:	d14c      	bne.n	8004876 <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 80047dc:	4f3a      	ldr	r7, [pc, #232]	; (80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80047de:	f44f 3140 	mov.w	r1, #196608	; 0x30000
 80047e2:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 80047e6:	fa91 fea1 	rbit	lr, r1
 80047ea:	f04f 4ce0 	mov.w	r12, #1879048192	; 0x70000000
 80047ee:	fabe fe8e 	clz	lr, lr
 80047f2:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80047f6:	fa9c f8ac 	rbit	r8, r12
 80047fa:	f647 7bc0 	movw	r11, #32704	; 0x7fc0
 80047fe:	fab8 f888 	clz	r8, r8
 8004802:	fa9b fbab 	rbit	r11, r11
 8004806:	fabb fb8b 	clz	r11, r11
 800480a:	fa91 f1a1 	rbit	r1, r1
 800480e:	f04f 6a70 	mov.w	r10, #251658240	; 0xf000000
 8004812:	fab1 f181 	clz	r1, r1
 8004816:	fa9a faaa 	rbit	r10, r10
 800481a:	faba fa8a 	clz	r10, r10
 800481e:	fa9c fcac 	rbit	r12, r12
 8004822:	68a6      	ldr	r6, [r4, #8]
 8004824:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8004828:	fa06 f90b 	lsl.w	r9, r6, r11
 800482c:	6926      	ldr	r6, [r4, #16]
 800482e:	fa22 f20e 	lsr.w	r2, r2, lr
 8004832:	fa06 fa0a 	lsl.w	r10, r6, r10
 8004836:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 800483a:	6866      	ldr	r6, [r4, #4]
 800483c:	3201      	adds	r2, #1
 800483e:	fabc fc8c 	clz	r12, r12
 8004842:	ea49 090a 	orr.w	r9, r9, r10
 8004846:	fa23 f308 	lsr.w	r3, r3, r8
 800484a:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 800484e:	ea49 0906 	orr.w	r9, r9, r6
 8004852:	fa03 f30c 	lsl.w	r3, r3, r12
 8004856:	3a01      	subs	r2, #1
 8004858:	408a      	lsls	r2, r1
 800485a:	ea49 0303 	orr.w	r3, r9, r3
 800485e:	4313      	orrs	r3, r2
 8004860:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8004864:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 8004868:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800486a:	f022 021f 	bic.w	r2, r2, #31
 800486e:	3b01      	subs	r3, #1
 8004870:	4313      	orrs	r3, r2
 8004872:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8004876:	0546      	lsls	r6, r0, #21
 8004878:	d553      	bpl.n	8004922 <HAL_RCCEx_PeriphCLKConfig+0x38e>
 800487a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800487c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8004880:	d14f      	bne.n	8004922 <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8004882:	f8df c044 	ldr.w	r12, [pc, #68]	; 80048c8 <HAL_RCCEx_PeriphCLKConfig+0x334>
 8004886:	f44f 3b40 	mov.w	r11, #196608	; 0x30000
 800488a:	f8dc 2084 	ldr.w	r2, [r12, #132]	; 0x84
 800488e:	fa9b f8ab 	rbit	r8, r11
 8004892:	f04f 47e0 	mov.w	r7, #1879048192	; 0x70000000
 8004896:	fab8 f888 	clz	r8, r8
 800489a:	f8dc 1084 	ldr.w	r1, [r12, #132]	; 0x84
 800489e:	fa97 f9a7 	rbit	r9, r7
 80048a2:	f647 7ac0 	movw	r10, #32704	; 0x7fc0
 80048a6:	fab9 f989 	clz	r9, r9
 80048aa:	fa9a faaa 	rbit	r10, r10
 80048ae:	faba fa8a 	clz	r10, r10
 80048b2:	fa9b fbab 	rbit	r11, r11
 80048b6:	f04f 6e70 	mov.w	lr, #251658240	; 0xf000000
 80048ba:	fabb fb8b 	clz	r11, r11
 80048be:	fa9e feae 	rbit	lr, lr
 80048c2:	fabe fe8e 	clz	lr, lr
 80048c6:	e007      	b.n	80048d8 <HAL_RCCEx_PeriphCLKConfig+0x344>
 80048c8:	40023800 	.word	0x40023800
 80048cc:	40007000 	.word	0x40007000
 80048d0:	424711e0 	.word	0x424711e0
 80048d4:	42470068 	.word	0x42470068
 80048d8:	fa97 f7a7 	rbit	r7, r7
 80048dc:	68e3      	ldr	r3, [r4, #12]
 80048de:	68a6      	ldr	r6, [r4, #8]
 80048e0:	085b      	lsrs	r3, r3, #1
 80048e2:	3b01      	subs	r3, #1
 80048e4:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 80048e8:	fa06 fa0a 	lsl.w	r10, r6, r10
 80048ec:	fa03 f30b 	lsl.w	r3, r3, r11
 80048f0:	6866      	ldr	r6, [r4, #4]
 80048f2:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 80048f6:	fa22 f808 	lsr.w	r8, r2, r8
 80048fa:	fab7 f787 	clz	r7, r7
 80048fe:	ea43 030a 	orr.w	r3, r3, r10
 8004902:	fa21 f909 	lsr.w	r9, r1, r9
 8004906:	f108 0801 	add.w	r8, r8, #1
 800490a:	4333      	orrs	r3, r6
 800490c:	fa09 f707 	lsl.w	r7, r9, r7
 8004910:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8004914:	431f      	orrs	r7, r3
 8004916:	fa08 fe0e 	lsl.w	lr, r8, lr
 800491a:	ea47 070e 	orr.w	r7, r7, lr
 800491e:	f8cc 7084 	str.w	r7, [r12, #132]	; 0x84
 8004922:	0501      	lsls	r1, r0, #20
 8004924:	d52c      	bpl.n	8004980 <HAL_RCCEx_PeriphCLKConfig+0x3ec>
 8004926:	f647 77c0 	movw	r7, #32704	; 0x7fc0
 800492a:	fa97 f7a7 	rbit	r7, r7
 800492e:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8004932:	fab7 f787 	clz	r7, r7
 8004936:	fa93 f3a3 	rbit	r3, r3
 800493a:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 800493e:	fab3 f283 	clz	r2, r3
 8004942:	fa90 f0a0 	rbit	r0, r0
 8004946:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
 800494a:	fab0 f080 	clz	r0, r0
 800494e:	fa91 f1a1 	rbit	r1, r1
 8004952:	68e3      	ldr	r3, [r4, #12]
 8004954:	085b      	lsrs	r3, r3, #1
 8004956:	3b01      	subs	r3, #1
 8004958:	4093      	lsls	r3, r2
 800495a:	68a2      	ldr	r2, [r4, #8]
 800495c:	fa02 f707 	lsl.w	r7, r2, r7
 8004960:	6862      	ldr	r2, [r4, #4]
 8004962:	433b      	orrs	r3, r7
 8004964:	4313      	orrs	r3, r2
 8004966:	6922      	ldr	r2, [r4, #16]
 8004968:	fa02 f000 	lsl.w	r0, r2, r0
 800496c:	6962      	ldr	r2, [r4, #20]
 800496e:	fab1 f181 	clz	r1, r1
 8004972:	fa02 f101 	lsl.w	r1, r2, r1
 8004976:	4303      	orrs	r3, r0
 8004978:	4a7b      	ldr	r2, [pc, #492]	; (8004b68 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 800497a:	430b      	orrs	r3, r1
 800497c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8004980:	9a01      	ldr	r2, [sp, #4]
 8004982:	4e79      	ldr	r6, [pc, #484]	; (8004b68 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8004984:	2301      	movs	r3, #1
 8004986:	6013      	str	r3, [r2, #0]
 8004988:	f000 ff76 	bl	8005878 <HAL_GetTick>
 800498c:	4607      	mov	r7, r0
 800498e:	6833      	ldr	r3, [r6, #0]
 8004990:	011a      	lsls	r2, r3, #4
 8004992:	d44b      	bmi.n	8004a2c <HAL_RCCEx_PeriphCLKConfig+0x498>
 8004994:	f000 ff70 	bl	8005878 <HAL_GetTick>
 8004998:	1bc0      	subs	r0, r0, r7
 800499a:	2802      	cmp	r0, #2
 800499c:	d9f7      	bls.n	800498e <HAL_RCCEx_PeriphCLKConfig+0x3fa>
 800499e:	e008      	b.n	80049b2 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 80049a0:	2601      	movs	r6, #1
 80049a2:	e641      	b.n	8004628 <HAL_RCCEx_PeriphCLKConfig+0x94>
 80049a4:	f000 ff68 	bl	8005878 <HAL_GetTick>
 80049a8:	eba0 0008 	sub.w	r0, r0, r8
 80049ac:	2802      	cmp	r0, #2
 80049ae:	f67f ae51 	bls.w	8004654 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 80049b2:	2003      	movs	r0, #3
 80049b4:	b005      	add	sp, #20
 80049b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80049ba:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80049bc:	f402 7240 	and.w	r2, r2, #768	; 0x300
 80049c0:	4293      	cmp	r3, r2
 80049c2:	f43f ae51 	beq.w	8004668 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80049c6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80049c8:	4a68      	ldr	r2, [pc, #416]	; (8004b6c <HAL_RCCEx_PeriphCLKConfig+0x5d8>)
 80049ca:	2101      	movs	r1, #1
 80049cc:	6011      	str	r1, [r2, #0]
 80049ce:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80049d2:	2100      	movs	r1, #0
 80049d4:	6011      	str	r1, [r2, #0]
 80049d6:	673b      	str	r3, [r7, #112]	; 0x70
 80049d8:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80049da:	07d9      	lsls	r1, r3, #31
 80049dc:	f57f ae44 	bpl.w	8004668 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80049e0:	f000 ff4a 	bl	8005878 <HAL_GetTick>
 80049e4:	f241 3988 	movw	r9, #5000	; 0x1388
 80049e8:	4680      	mov	r8, r0
 80049ea:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80049ec:	079a      	lsls	r2, r3, #30
 80049ee:	f53f ae3b 	bmi.w	8004668 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 80049f2:	f000 ff41 	bl	8005878 <HAL_GetTick>
 80049f6:	eba0 0008 	sub.w	r0, r0, r8
 80049fa:	4548      	cmp	r0, r9
 80049fc:	d9f5      	bls.n	80049ea <HAL_RCCEx_PeriphCLKConfig+0x456>
 80049fe:	e7d8      	b.n	80049b2 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8004a00:	6891      	ldr	r1, [r2, #8]
 8004a02:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8004a06:	e63f      	b.n	8004688 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8004a08:	4857      	ldr	r0, [pc, #348]	; (8004b68 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8004a0a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8004a0c:	f8d0 2094 	ldr.w	r2, [r0, #148]	; 0x94
 8004a10:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8004a14:	430a      	orrs	r2, r1
 8004a16:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
 8004a1a:	f8c0 2094 	str.w	r2, [r0, #148]	; 0x94
 8004a1e:	f47f ae74 	bne.w	800470a <HAL_RCCEx_PeriphCLKConfig+0x176>
 8004a22:	e675      	b.n	8004710 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8004a24:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004a28:	f43f ae72 	beq.w	8004710 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8004a2c:	2d01      	cmp	r5, #1
 8004a2e:	f040 8084 	bne.w	8004b3a <HAL_RCCEx_PeriphCLKConfig+0x5a6>
 8004a32:	4d4f      	ldr	r5, [pc, #316]	; (8004b70 <HAL_RCCEx_PeriphCLKConfig+0x5dc>)
 8004a34:	4e4c      	ldr	r6, [pc, #304]	; (8004b68 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8004a36:	2300      	movs	r3, #0
 8004a38:	602b      	str	r3, [r5, #0]
 8004a3a:	f000 ff1d 	bl	8005878 <HAL_GetTick>
 8004a3e:	4607      	mov	r7, r0
 8004a40:	6833      	ldr	r3, [r6, #0]
 8004a42:	009b      	lsls	r3, r3, #2
 8004a44:	f100 8083 	bmi.w	8004b4e <HAL_RCCEx_PeriphCLKConfig+0x5ba>
 8004a48:	6820      	ldr	r0, [r4, #0]
 8004a4a:	0746      	lsls	r6, r0, #29
 8004a4c:	d501      	bpl.n	8004a52 <HAL_RCCEx_PeriphCLKConfig+0x4be>
 8004a4e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004a50:	b11b      	cbz	r3, 8004a5a <HAL_RCCEx_PeriphCLKConfig+0x4c6>
 8004a52:	0701      	lsls	r1, r0, #28
 8004a54:	d538      	bpl.n	8004ac8 <HAL_RCCEx_PeriphCLKConfig+0x534>
 8004a56:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004a58:	bbb3      	cbnz	r3, 8004ac8 <HAL_RCCEx_PeriphCLKConfig+0x534>
 8004a5a:	4943      	ldr	r1, [pc, #268]	; (8004b68 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8004a5c:	f44f 3640 	mov.w	r6, #196608	; 0x30000
 8004a60:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8004a64:	fa96 fea6 	rbit	lr, r6
 8004a68:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8004a6c:	fabe fe8e 	clz	lr, lr
 8004a70:	fa92 f2a2 	rbit	r2, r2
 8004a74:	fab2 f782 	clz	r7, r2
 8004a78:	fa96 f6a6 	rbit	r6, r6
 8004a7c:	f04f 6c70 	mov.w	r12, #251658240	; 0xf000000
 8004a80:	fab6 f686 	clz	r6, r6
 8004a84:	fa9c fcac 	rbit	r12, r12
 8004a88:	69e2      	ldr	r2, [r4, #28]
 8004a8a:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004a8e:	40ba      	lsls	r2, r7
 8004a90:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8004a92:	fabc fc8c 	clz	r12, r12
 8004a96:	fa23 f30e 	lsr.w	r3, r3, lr
 8004a9a:	fa07 f70c 	lsl.w	r7, r7, r12
 8004a9e:	3301      	adds	r3, #1
 8004aa0:	433a      	orrs	r2, r7
 8004aa2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004aa6:	69a7      	ldr	r7, [r4, #24]
 8004aa8:	3b01      	subs	r3, #1
 8004aaa:	433a      	orrs	r2, r7
 8004aac:	40b3      	lsls	r3, r6
 8004aae:	4313      	orrs	r3, r2
 8004ab0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004ab4:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8004ab8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8004aba:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8004abe:	3a01      	subs	r2, #1
 8004ac0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8004ac4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8004ac8:	05c2      	lsls	r2, r0, #23
 8004aca:	d52d      	bpl.n	8004b28 <HAL_RCCEx_PeriphCLKConfig+0x594>
 8004acc:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8004ace:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8004ad2:	d129      	bne.n	8004b28 <HAL_RCCEx_PeriphCLKConfig+0x594>
 8004ad4:	4924      	ldr	r1, [pc, #144]	; (8004b68 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8004ad6:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 8004ada:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8004ade:	fa90 f6a0 	rbit	r6, r0
 8004ae2:	f647 7ec0 	movw	lr, #32704	; 0x7fc0
 8004ae6:	fab6 f686 	clz	r6, r6
 8004aea:	fa9e feae 	rbit	lr, lr
 8004aee:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8004af2:	fabe fe8e 	clz	lr, lr
 8004af6:	fa93 f3a3 	rbit	r3, r3
 8004afa:	fab3 f783 	clz	r7, r3
 8004afe:	fa90 f0a0 	rbit	r0, r0
 8004b02:	6a23      	ldr	r3, [r4, #32]
 8004b04:	085b      	lsrs	r3, r3, #1
 8004b06:	3b01      	subs	r3, #1
 8004b08:	40bb      	lsls	r3, r7
 8004b0a:	69e7      	ldr	r7, [r4, #28]
 8004b0c:	69a4      	ldr	r4, [r4, #24]
 8004b0e:	fa07 f70e 	lsl.w	r7, r7, lr
 8004b12:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 8004b16:	fab0 f080 	clz	r0, r0
 8004b1a:	433b      	orrs	r3, r7
 8004b1c:	40f2      	lsrs	r2, r6
 8004b1e:	4323      	orrs	r3, r4
 8004b20:	4082      	lsls	r2, r0
 8004b22:	4313      	orrs	r3, r2
 8004b24:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004b28:	2301      	movs	r3, #1
 8004b2a:	602b      	str	r3, [r5, #0]
 8004b2c:	f000 fea4 	bl	8005878 <HAL_GetTick>
 8004b30:	4c0d      	ldr	r4, [pc, #52]	; (8004b68 <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8004b32:	4605      	mov	r5, r0
 8004b34:	6823      	ldr	r3, [r4, #0]
 8004b36:	009b      	lsls	r3, r3, #2
 8004b38:	d510      	bpl.n	8004b5c <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 8004b3a:	2000      	movs	r0, #0
 8004b3c:	e73a      	b.n	80049b4 <HAL_RCCEx_PeriphCLKConfig+0x420>
 8004b3e:	f000 fe9b 	bl	8005878 <HAL_GetTick>
 8004b42:	eba0 0008 	sub.w	r0, r0, r8
 8004b46:	2802      	cmp	r0, #2
 8004b48:	f67f adea 	bls.w	8004720 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 8004b4c:	e731      	b.n	80049b2 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8004b4e:	f000 fe93 	bl	8005878 <HAL_GetTick>
 8004b52:	1bc0      	subs	r0, r0, r7
 8004b54:	2802      	cmp	r0, #2
 8004b56:	f67f af73 	bls.w	8004a40 <HAL_RCCEx_PeriphCLKConfig+0x4ac>
 8004b5a:	e72a      	b.n	80049b2 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8004b5c:	f000 fe8c 	bl	8005878 <HAL_GetTick>
 8004b60:	1b40      	subs	r0, r0, r5
 8004b62:	2802      	cmp	r0, #2
 8004b64:	d9e6      	bls.n	8004b34 <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8004b66:	e724      	b.n	80049b2 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8004b68:	40023800 	.word	0x40023800
 8004b6c:	42470e40 	.word	0x42470e40
 8004b70:	42470070 	.word	0x42470070

08004b74 <HAL_RCC_OscConfig>:
 8004b74:	6803      	ldr	r3, [r0, #0]
 8004b76:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004b78:	07df      	lsls	r7, r3, #31
 8004b7a:	4604      	mov	r4, r0
 8004b7c:	d438      	bmi.n	8004bf0 <HAL_RCC_OscConfig+0x7c>
 8004b7e:	6823      	ldr	r3, [r4, #0]
 8004b80:	079e      	lsls	r6, r3, #30
 8004b82:	d47a      	bmi.n	8004c7a <HAL_RCC_OscConfig+0x106>
 8004b84:	6823      	ldr	r3, [r4, #0]
 8004b86:	071e      	lsls	r6, r3, #28
 8004b88:	f100 80cf 	bmi.w	8004d2a <HAL_RCC_OscConfig+0x1b6>
 8004b8c:	6823      	ldr	r3, [r4, #0]
 8004b8e:	075d      	lsls	r5, r3, #29
 8004b90:	d528      	bpl.n	8004be4 <HAL_RCC_OscConfig+0x70>
 8004b92:	2300      	movs	r3, #0
 8004b94:	9301      	str	r3, [sp, #4]
 8004b96:	4baf      	ldr	r3, [pc, #700]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004b98:	4daf      	ldr	r5, [pc, #700]	; (8004e58 <HAL_RCC_OscConfig+0x2e4>)
 8004b9a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004b9c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004ba0:	641a      	str	r2, [r3, #64]	; 0x40
 8004ba2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ba4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004ba8:	9301      	str	r3, [sp, #4]
 8004baa:	9b01      	ldr	r3, [sp, #4]
 8004bac:	682b      	ldr	r3, [r5, #0]
 8004bae:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004bb2:	602b      	str	r3, [r5, #0]
 8004bb4:	f000 fe60 	bl	8005878 <HAL_GetTick>
 8004bb8:	4606      	mov	r6, r0
 8004bba:	682b      	ldr	r3, [r5, #0]
 8004bbc:	05da      	lsls	r2, r3, #23
 8004bbe:	f140 80d6 	bpl.w	8004d6e <HAL_RCC_OscConfig+0x1fa>
 8004bc2:	4ba6      	ldr	r3, [pc, #664]	; (8004e5c <HAL_RCC_OscConfig+0x2e8>)
 8004bc4:	7a22      	ldrb	r2, [r4, #8]
 8004bc6:	701a      	strb	r2, [r3, #0]
 8004bc8:	68a3      	ldr	r3, [r4, #8]
 8004bca:	2b00      	cmp	r3, #0
 8004bcc:	f000 80dd 	beq.w	8004d8a <HAL_RCC_OscConfig+0x216>
 8004bd0:	f000 fe52 	bl	8005878 <HAL_GetTick>
 8004bd4:	4d9f      	ldr	r5, [pc, #636]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004bd6:	4606      	mov	r6, r0
 8004bd8:	f241 3788 	movw	r7, #5000	; 0x1388
 8004bdc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004bde:	079b      	lsls	r3, r3, #30
 8004be0:	f140 80cc 	bpl.w	8004d7c <HAL_RCC_OscConfig+0x208>
 8004be4:	69a2      	ldr	r2, [r4, #24]
 8004be6:	2a00      	cmp	r2, #0
 8004be8:	f040 80df 	bne.w	8004daa <HAL_RCC_OscConfig+0x236>
 8004bec:	2000      	movs	r0, #0
 8004bee:	e01e      	b.n	8004c2e <HAL_RCC_OscConfig+0xba>
 8004bf0:	4b98      	ldr	r3, [pc, #608]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004bf2:	689a      	ldr	r2, [r3, #8]
 8004bf4:	f002 020c 	and.w	r2, r2, #12
 8004bf8:	2a04      	cmp	r2, #4
 8004bfa:	d010      	beq.n	8004c1e <HAL_RCC_OscConfig+0xaa>
 8004bfc:	689a      	ldr	r2, [r3, #8]
 8004bfe:	f002 020c 	and.w	r2, r2, #12
 8004c02:	2a08      	cmp	r2, #8
 8004c04:	d102      	bne.n	8004c0c <HAL_RCC_OscConfig+0x98>
 8004c06:	685b      	ldr	r3, [r3, #4]
 8004c08:	025d      	lsls	r5, r3, #9
 8004c0a:	d408      	bmi.n	8004c1e <HAL_RCC_OscConfig+0xaa>
 8004c0c:	4a91      	ldr	r2, [pc, #580]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004c0e:	6893      	ldr	r3, [r2, #8]
 8004c10:	f003 030c 	and.w	r3, r3, #12
 8004c14:	2b0c      	cmp	r3, #12
 8004c16:	d10c      	bne.n	8004c32 <HAL_RCC_OscConfig+0xbe>
 8004c18:	6853      	ldr	r3, [r2, #4]
 8004c1a:	0258      	lsls	r0, r3, #9
 8004c1c:	d509      	bpl.n	8004c32 <HAL_RCC_OscConfig+0xbe>
 8004c1e:	4b8d      	ldr	r3, [pc, #564]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004c20:	681b      	ldr	r3, [r3, #0]
 8004c22:	0399      	lsls	r1, r3, #14
 8004c24:	d5ab      	bpl.n	8004b7e <HAL_RCC_OscConfig+0xa>
 8004c26:	6863      	ldr	r3, [r4, #4]
 8004c28:	2b00      	cmp	r3, #0
 8004c2a:	d1a8      	bne.n	8004b7e <HAL_RCC_OscConfig+0xa>
 8004c2c:	2001      	movs	r0, #1
 8004c2e:	b003      	add	sp, #12
 8004c30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004c32:	4b8b      	ldr	r3, [pc, #556]	; (8004e60 <HAL_RCC_OscConfig+0x2ec>)
 8004c34:	7922      	ldrb	r2, [r4, #4]
 8004c36:	701a      	strb	r2, [r3, #0]
 8004c38:	6863      	ldr	r3, [r4, #4]
 8004c3a:	b17b      	cbz	r3, 8004c5c <HAL_RCC_OscConfig+0xe8>
 8004c3c:	f000 fe1c 	bl	8005878 <HAL_GetTick>
 8004c40:	4d84      	ldr	r5, [pc, #528]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004c42:	4606      	mov	r6, r0
 8004c44:	f241 3788 	movw	r7, #5000	; 0x1388
 8004c48:	682b      	ldr	r3, [r5, #0]
 8004c4a:	039a      	lsls	r2, r3, #14
 8004c4c:	d497      	bmi.n	8004b7e <HAL_RCC_OscConfig+0xa>
 8004c4e:	f000 fe13 	bl	8005878 <HAL_GetTick>
 8004c52:	1b80      	subs	r0, r0, r6
 8004c54:	42b8      	cmp	r0, r7
 8004c56:	d9f7      	bls.n	8004c48 <HAL_RCC_OscConfig+0xd4>
 8004c58:	2003      	movs	r0, #3
 8004c5a:	e7e8      	b.n	8004c2e <HAL_RCC_OscConfig+0xba>
 8004c5c:	f000 fe0c 	bl	8005878 <HAL_GetTick>
 8004c60:	4d7c      	ldr	r5, [pc, #496]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004c62:	4606      	mov	r6, r0
 8004c64:	f241 3788 	movw	r7, #5000	; 0x1388
 8004c68:	682b      	ldr	r3, [r5, #0]
 8004c6a:	039b      	lsls	r3, r3, #14
 8004c6c:	d587      	bpl.n	8004b7e <HAL_RCC_OscConfig+0xa>
 8004c6e:	f000 fe03 	bl	8005878 <HAL_GetTick>
 8004c72:	1b80      	subs	r0, r0, r6
 8004c74:	42b8      	cmp	r0, r7
 8004c76:	d9f7      	bls.n	8004c68 <HAL_RCC_OscConfig+0xf4>
 8004c78:	e7ee      	b.n	8004c58 <HAL_RCC_OscConfig+0xe4>
 8004c7a:	4b76      	ldr	r3, [pc, #472]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004c7c:	689a      	ldr	r2, [r3, #8]
 8004c7e:	f012 0f0c 	tst.w	r2, #12
 8004c82:	d010      	beq.n	8004ca6 <HAL_RCC_OscConfig+0x132>
 8004c84:	689a      	ldr	r2, [r3, #8]
 8004c86:	f002 020c 	and.w	r2, r2, #12
 8004c8a:	2a08      	cmp	r2, #8
 8004c8c:	d102      	bne.n	8004c94 <HAL_RCC_OscConfig+0x120>
 8004c8e:	685b      	ldr	r3, [r3, #4]
 8004c90:	0258      	lsls	r0, r3, #9
 8004c92:	d508      	bpl.n	8004ca6 <HAL_RCC_OscConfig+0x132>
 8004c94:	4a6f      	ldr	r2, [pc, #444]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004c96:	6893      	ldr	r3, [r2, #8]
 8004c98:	f003 030c 	and.w	r3, r3, #12
 8004c9c:	2b0c      	cmp	r3, #12
 8004c9e:	d116      	bne.n	8004cce <HAL_RCC_OscConfig+0x15a>
 8004ca0:	6853      	ldr	r3, [r2, #4]
 8004ca2:	0259      	lsls	r1, r3, #9
 8004ca4:	d413      	bmi.n	8004cce <HAL_RCC_OscConfig+0x15a>
 8004ca6:	4b6b      	ldr	r3, [pc, #428]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004ca8:	681a      	ldr	r2, [r3, #0]
 8004caa:	0792      	lsls	r2, r2, #30
 8004cac:	d502      	bpl.n	8004cb4 <HAL_RCC_OscConfig+0x140>
 8004cae:	68e2      	ldr	r2, [r4, #12]
 8004cb0:	2a01      	cmp	r2, #1
 8004cb2:	d1bb      	bne.n	8004c2c <HAL_RCC_OscConfig+0xb8>
 8004cb4:	6818      	ldr	r0, [r3, #0]
 8004cb6:	22f8      	movs	r2, #248	; 0xf8
 8004cb8:	fa92 f2a2 	rbit	r2, r2
 8004cbc:	fab2 f182 	clz	r1, r2
 8004cc0:	6922      	ldr	r2, [r4, #16]
 8004cc2:	408a      	lsls	r2, r1
 8004cc4:	f020 01f8 	bic.w	r1, r0, #248	; 0xf8
 8004cc8:	430a      	orrs	r2, r1
 8004cca:	601a      	str	r2, [r3, #0]
 8004ccc:	e75a      	b.n	8004b84 <HAL_RCC_OscConfig+0x10>
 8004cce:	68e2      	ldr	r2, [r4, #12]
 8004cd0:	4b64      	ldr	r3, [pc, #400]	; (8004e64 <HAL_RCC_OscConfig+0x2f0>)
 8004cd2:	b1da      	cbz	r2, 8004d0c <HAL_RCC_OscConfig+0x198>
 8004cd4:	2201      	movs	r2, #1
 8004cd6:	601a      	str	r2, [r3, #0]
 8004cd8:	f000 fdce 	bl	8005878 <HAL_GetTick>
 8004cdc:	4d5d      	ldr	r5, [pc, #372]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004cde:	4606      	mov	r6, r0
 8004ce0:	682b      	ldr	r3, [r5, #0]
 8004ce2:	079b      	lsls	r3, r3, #30
 8004ce4:	d50c      	bpl.n	8004d00 <HAL_RCC_OscConfig+0x18c>
 8004ce6:	6829      	ldr	r1, [r5, #0]
 8004ce8:	23f8      	movs	r3, #248	; 0xf8
 8004cea:	fa93 f3a3 	rbit	r3, r3
 8004cee:	fab3 f283 	clz	r2, r3
 8004cf2:	6923      	ldr	r3, [r4, #16]
 8004cf4:	4093      	lsls	r3, r2
 8004cf6:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 8004cfa:	4313      	orrs	r3, r2
 8004cfc:	602b      	str	r3, [r5, #0]
 8004cfe:	e741      	b.n	8004b84 <HAL_RCC_OscConfig+0x10>
 8004d00:	f000 fdba 	bl	8005878 <HAL_GetTick>
 8004d04:	1b80      	subs	r0, r0, r6
 8004d06:	2802      	cmp	r0, #2
 8004d08:	d9ea      	bls.n	8004ce0 <HAL_RCC_OscConfig+0x16c>
 8004d0a:	e7a5      	b.n	8004c58 <HAL_RCC_OscConfig+0xe4>
 8004d0c:	601a      	str	r2, [r3, #0]
 8004d0e:	f000 fdb3 	bl	8005878 <HAL_GetTick>
 8004d12:	4d50      	ldr	r5, [pc, #320]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004d14:	4606      	mov	r6, r0
 8004d16:	682b      	ldr	r3, [r5, #0]
 8004d18:	079f      	lsls	r7, r3, #30
 8004d1a:	f57f af33 	bpl.w	8004b84 <HAL_RCC_OscConfig+0x10>
 8004d1e:	f000 fdab 	bl	8005878 <HAL_GetTick>
 8004d22:	1b80      	subs	r0, r0, r6
 8004d24:	2802      	cmp	r0, #2
 8004d26:	d9f6      	bls.n	8004d16 <HAL_RCC_OscConfig+0x1a2>
 8004d28:	e796      	b.n	8004c58 <HAL_RCC_OscConfig+0xe4>
 8004d2a:	6962      	ldr	r2, [r4, #20]
 8004d2c:	4b4e      	ldr	r3, [pc, #312]	; (8004e68 <HAL_RCC_OscConfig+0x2f4>)
 8004d2e:	b17a      	cbz	r2, 8004d50 <HAL_RCC_OscConfig+0x1dc>
 8004d30:	2201      	movs	r2, #1
 8004d32:	601a      	str	r2, [r3, #0]
 8004d34:	f000 fda0 	bl	8005878 <HAL_GetTick>
 8004d38:	4d46      	ldr	r5, [pc, #280]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004d3a:	4606      	mov	r6, r0
 8004d3c:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8004d3e:	0798      	lsls	r0, r3, #30
 8004d40:	f53f af24 	bmi.w	8004b8c <HAL_RCC_OscConfig+0x18>
 8004d44:	f000 fd98 	bl	8005878 <HAL_GetTick>
 8004d48:	1b80      	subs	r0, r0, r6
 8004d4a:	2802      	cmp	r0, #2
 8004d4c:	d9f6      	bls.n	8004d3c <HAL_RCC_OscConfig+0x1c8>
 8004d4e:	e783      	b.n	8004c58 <HAL_RCC_OscConfig+0xe4>
 8004d50:	601a      	str	r2, [r3, #0]
 8004d52:	f000 fd91 	bl	8005878 <HAL_GetTick>
 8004d56:	4d3f      	ldr	r5, [pc, #252]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004d58:	4606      	mov	r6, r0
 8004d5a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8004d5c:	0799      	lsls	r1, r3, #30
 8004d5e:	f57f af15 	bpl.w	8004b8c <HAL_RCC_OscConfig+0x18>
 8004d62:	f000 fd89 	bl	8005878 <HAL_GetTick>
 8004d66:	1b80      	subs	r0, r0, r6
 8004d68:	2802      	cmp	r0, #2
 8004d6a:	d9f6      	bls.n	8004d5a <HAL_RCC_OscConfig+0x1e6>
 8004d6c:	e774      	b.n	8004c58 <HAL_RCC_OscConfig+0xe4>
 8004d6e:	f000 fd83 	bl	8005878 <HAL_GetTick>
 8004d72:	1b80      	subs	r0, r0, r6
 8004d74:	2802      	cmp	r0, #2
 8004d76:	f67f af20 	bls.w	8004bba <HAL_RCC_OscConfig+0x46>
 8004d7a:	e76d      	b.n	8004c58 <HAL_RCC_OscConfig+0xe4>
 8004d7c:	f000 fd7c 	bl	8005878 <HAL_GetTick>
 8004d80:	1b80      	subs	r0, r0, r6
 8004d82:	42b8      	cmp	r0, r7
 8004d84:	f67f af2a 	bls.w	8004bdc <HAL_RCC_OscConfig+0x68>
 8004d88:	e766      	b.n	8004c58 <HAL_RCC_OscConfig+0xe4>
 8004d8a:	f000 fd75 	bl	8005878 <HAL_GetTick>
 8004d8e:	4d31      	ldr	r5, [pc, #196]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004d90:	4606      	mov	r6, r0
 8004d92:	f241 3788 	movw	r7, #5000	; 0x1388
 8004d96:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004d98:	0798      	lsls	r0, r3, #30
 8004d9a:	f57f af23 	bpl.w	8004be4 <HAL_RCC_OscConfig+0x70>
 8004d9e:	f000 fd6b 	bl	8005878 <HAL_GetTick>
 8004da2:	1b80      	subs	r0, r0, r6
 8004da4:	42b8      	cmp	r0, r7
 8004da6:	d9f6      	bls.n	8004d96 <HAL_RCC_OscConfig+0x222>
 8004da8:	e756      	b.n	8004c58 <HAL_RCC_OscConfig+0xe4>
 8004daa:	4d2a      	ldr	r5, [pc, #168]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004dac:	68ab      	ldr	r3, [r5, #8]
 8004dae:	f003 030c 	and.w	r3, r3, #12
 8004db2:	2b08      	cmp	r3, #8
 8004db4:	f43f af3a 	beq.w	8004c2c <HAL_RCC_OscConfig+0xb8>
 8004db8:	4e2c      	ldr	r6, [pc, #176]	; (8004e6c <HAL_RCC_OscConfig+0x2f8>)
 8004dba:	2300      	movs	r3, #0
 8004dbc:	2a02      	cmp	r2, #2
 8004dbe:	6033      	str	r3, [r6, #0]
 8004dc0:	d156      	bne.n	8004e70 <HAL_RCC_OscConfig+0x2fc>
 8004dc2:	f000 fd59 	bl	8005878 <HAL_GetTick>
 8004dc6:	4607      	mov	r7, r0
 8004dc8:	682b      	ldr	r3, [r5, #0]
 8004dca:	0199      	lsls	r1, r3, #6
 8004dcc:	d43c      	bmi.n	8004e48 <HAL_RCC_OscConfig+0x2d4>
 8004dce:	f647 7ec0 	movw	lr, #32704	; 0x7fc0
 8004dd2:	fa9e feae 	rbit	lr, lr
 8004dd6:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8004dda:	fabe fe8e 	clz	lr, lr
 8004dde:	fa92 f2a2 	rbit	r2, r2
 8004de2:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 8004de6:	fab2 f782 	clz	r7, r2
 8004dea:	fa90 f0a0 	rbit	r0, r0
 8004dee:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
 8004df2:	fab0 f080 	clz	r0, r0
 8004df6:	fa91 f1a1 	rbit	r1, r1
 8004dfa:	6a22      	ldr	r2, [r4, #32]
 8004dfc:	69e3      	ldr	r3, [r4, #28]
 8004dfe:	4313      	orrs	r3, r2
 8004e00:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004e02:	fa02 f20e 	lsl.w	r2, r2, lr
 8004e06:	4313      	orrs	r3, r2
 8004e08:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8004e0a:	0852      	lsrs	r2, r2, #1
 8004e0c:	3a01      	subs	r2, #1
 8004e0e:	40ba      	lsls	r2, r7
 8004e10:	4313      	orrs	r3, r2
 8004e12:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8004e14:	fa02 f000 	lsl.w	r0, r2, r0
 8004e18:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8004e1a:	4c0e      	ldr	r4, [pc, #56]	; (8004e54 <HAL_RCC_OscConfig+0x2e0>)
 8004e1c:	fab1 f181 	clz	r1, r1
 8004e20:	4303      	orrs	r3, r0
 8004e22:	fa02 f101 	lsl.w	r1, r2, r1
 8004e26:	430b      	orrs	r3, r1
 8004e28:	606b      	str	r3, [r5, #4]
 8004e2a:	2301      	movs	r3, #1
 8004e2c:	6033      	str	r3, [r6, #0]
 8004e2e:	f000 fd23 	bl	8005878 <HAL_GetTick>
 8004e32:	4605      	mov	r5, r0
 8004e34:	6823      	ldr	r3, [r4, #0]
 8004e36:	019a      	lsls	r2, r3, #6
 8004e38:	f53f aed8 	bmi.w	8004bec <HAL_RCC_OscConfig+0x78>
 8004e3c:	f000 fd1c 	bl	8005878 <HAL_GetTick>
 8004e40:	1b40      	subs	r0, r0, r5
 8004e42:	2802      	cmp	r0, #2
 8004e44:	d9f6      	bls.n	8004e34 <HAL_RCC_OscConfig+0x2c0>
 8004e46:	e707      	b.n	8004c58 <HAL_RCC_OscConfig+0xe4>
 8004e48:	f000 fd16 	bl	8005878 <HAL_GetTick>
 8004e4c:	1bc0      	subs	r0, r0, r7
 8004e4e:	2802      	cmp	r0, #2
 8004e50:	d9ba      	bls.n	8004dc8 <HAL_RCC_OscConfig+0x254>
 8004e52:	e701      	b.n	8004c58 <HAL_RCC_OscConfig+0xe4>
 8004e54:	40023800 	.word	0x40023800
 8004e58:	40007000 	.word	0x40007000
 8004e5c:	40023870 	.word	0x40023870
 8004e60:	40023802 	.word	0x40023802
 8004e64:	42470000 	.word	0x42470000
 8004e68:	42470e80 	.word	0x42470e80
 8004e6c:	42470060 	.word	0x42470060
 8004e70:	f000 fd02 	bl	8005878 <HAL_GetTick>
 8004e74:	4604      	mov	r4, r0
 8004e76:	682b      	ldr	r3, [r5, #0]
 8004e78:	019b      	lsls	r3, r3, #6
 8004e7a:	f57f aeb7 	bpl.w	8004bec <HAL_RCC_OscConfig+0x78>
 8004e7e:	f000 fcfb 	bl	8005878 <HAL_GetTick>
 8004e82:	1b00      	subs	r0, r0, r4
 8004e84:	2802      	cmp	r0, #2
 8004e86:	d9f6      	bls.n	8004e76 <HAL_RCC_OscConfig+0x302>
 8004e88:	e6e6      	b.n	8004c58 <HAL_RCC_OscConfig+0xe4>
 8004e8a:	bf00      	nop

08004e8c <HAL_RCC_GetSysClockFreq>:
 8004e8c:	4b2b      	ldr	r3, [pc, #172]	; (8004f3c <HAL_RCC_GetSysClockFreq+0xb0>)
 8004e8e:	689a      	ldr	r2, [r3, #8]
 8004e90:	f002 020c 	and.w	r2, r2, #12
 8004e94:	2a08      	cmp	r2, #8
 8004e96:	d007      	beq.n	8004ea8 <HAL_RCC_GetSysClockFreq+0x1c>
 8004e98:	2a0c      	cmp	r2, #12
 8004e9a:	d02c      	beq.n	8004ef6 <HAL_RCC_GetSysClockFreq+0x6a>
 8004e9c:	4b28      	ldr	r3, [pc, #160]	; (8004f40 <HAL_RCC_GetSysClockFreq+0xb4>)
 8004e9e:	4829      	ldr	r0, [pc, #164]	; (8004f44 <HAL_RCC_GetSysClockFreq+0xb8>)
 8004ea0:	2a04      	cmp	r2, #4
 8004ea2:	bf18      	it	ne
 8004ea4:	4618      	movne	r0, r3
 8004ea6:	4770      	bx	lr
 8004ea8:	685a      	ldr	r2, [r3, #4]
 8004eaa:	6859      	ldr	r1, [r3, #4]
 8004eac:	685b      	ldr	r3, [r3, #4]
 8004eae:	f411 0f80 	tst.w	r1, #4194304	; 0x400000
 8004eb2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8004eb6:	f647 71c0 	movw	r1, #32704	; 0x7fc0
 8004eba:	fa91 f0a1 	rbit	r0, r1
 8004ebe:	fab0 f080 	clz	r0, r0
 8004ec2:	ea03 0301 	and.w	r3, r3, r1
 8004ec6:	fa23 f300 	lsr.w	r3, r3, r0
 8004eca:	bf14      	ite	ne
 8004ecc:	481d      	ldrne	r0, [pc, #116]	; (8004f44 <HAL_RCC_GetSysClockFreq+0xb8>)
 8004ece:	481c      	ldreq	r0, [pc, #112]	; (8004f40 <HAL_RCC_GetSysClockFreq+0xb4>)
 8004ed0:	fbb0 f0f2 	udiv	r0, r0, r2
 8004ed4:	4358      	muls	r0, r3
 8004ed6:	4b19      	ldr	r3, [pc, #100]	; (8004f3c <HAL_RCC_GetSysClockFreq+0xb0>)
 8004ed8:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8004edc:	685b      	ldr	r3, [r3, #4]
 8004ede:	fa92 f2a2 	rbit	r2, r2
 8004ee2:	fab2 f282 	clz	r2, r2
 8004ee6:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004eea:	40d3      	lsrs	r3, r2
 8004eec:	3301      	adds	r3, #1
 8004eee:	005b      	lsls	r3, r3, #1
 8004ef0:	fbb0 f0f3 	udiv	r0, r0, r3
 8004ef4:	4770      	bx	lr
 8004ef6:	685a      	ldr	r2, [r3, #4]
 8004ef8:	6859      	ldr	r1, [r3, #4]
 8004efa:	685b      	ldr	r3, [r3, #4]
 8004efc:	f411 0f80 	tst.w	r1, #4194304	; 0x400000
 8004f00:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8004f04:	f647 71c0 	movw	r1, #32704	; 0x7fc0
 8004f08:	fa91 f0a1 	rbit	r0, r1
 8004f0c:	fab0 f080 	clz	r0, r0
 8004f10:	ea03 0301 	and.w	r3, r3, r1
 8004f14:	fa23 f300 	lsr.w	r3, r3, r0
 8004f18:	bf14      	ite	ne
 8004f1a:	480a      	ldrne	r0, [pc, #40]	; (8004f44 <HAL_RCC_GetSysClockFreq+0xb8>)
 8004f1c:	4808      	ldreq	r0, [pc, #32]	; (8004f40 <HAL_RCC_GetSysClockFreq+0xb4>)
 8004f1e:	fbb0 f0f2 	udiv	r0, r0, r2
 8004f22:	4358      	muls	r0, r3
 8004f24:	4b05      	ldr	r3, [pc, #20]	; (8004f3c <HAL_RCC_GetSysClockFreq+0xb0>)
 8004f26:	f04f 42e0 	mov.w	r2, #1879048192	; 0x70000000
 8004f2a:	685b      	ldr	r3, [r3, #4]
 8004f2c:	fa92 f2a2 	rbit	r2, r2
 8004f30:	fab2 f282 	clz	r2, r2
 8004f34:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8004f38:	40d3      	lsrs	r3, r2
 8004f3a:	e7d9      	b.n	8004ef0 <HAL_RCC_GetSysClockFreq+0x64>
 8004f3c:	40023800 	.word	0x40023800
 8004f40:	00f42400 	.word	0x00f42400
 8004f44:	007a1200 	.word	0x007a1200

08004f48 <HAL_GPIO_Init>:
 8004f48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8004f4c:	b085      	sub	sp, #20
 8004f4e:	680b      	ldr	r3, [r1, #0]
 8004f50:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 80050f4 <HAL_GPIO_Init+0x1ac>
 8004f54:	4a65      	ldr	r2, [pc, #404]	; (80050ec <HAL_GPIO_Init+0x1a4>)
 8004f56:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 80050f8 <HAL_GPIO_Init+0x1b0>
 8004f5a:	9301      	str	r3, [sp, #4]
 8004f5c:	2300      	movs	r3, #0
 8004f5e:	f04f 0e01 	mov.w	lr, #1
 8004f62:	9c01      	ldr	r4, [sp, #4]
 8004f64:	fa0e fe03 	lsl.w	lr, lr, r3
 8004f68:	ea0e 0604 	and.w	r6, lr, r4
 8004f6c:	45b6      	cmp	lr, r6
 8004f6e:	f040 80aa 	bne.w	80050c6 <HAL_GPIO_Init+0x17e>
 8004f72:	684c      	ldr	r4, [r1, #4]
 8004f74:	f024 0710 	bic.w	r7, r4, #16
 8004f78:	2f02      	cmp	r7, #2
 8004f7a:	d116      	bne.n	8004faa <HAL_GPIO_Init+0x62>
 8004f7c:	ea4f 0ad3 	mov.w	r10, r3, lsr #3
 8004f80:	eb00 0a8a 	add.w	r10, r0, r10, lsl #2
 8004f84:	f003 0b07 	and.w	r11, r3, #7
 8004f88:	f8da 5020 	ldr.w	r5, [r10, #32]
 8004f8c:	ea4f 0b8b 	mov.w	r11, r11, lsl #2
 8004f90:	f04f 0c0f 	mov.w	r12, #15
 8004f94:	fa0c fc0b 	lsl.w	r12, r12, r11
 8004f98:	ea25 0c0c 	bic.w	r12, r5, r12
 8004f9c:	690d      	ldr	r5, [r1, #16]
 8004f9e:	fa05 f50b 	lsl.w	r5, r5, r11
 8004fa2:	ea45 050c 	orr.w	r5, r5, r12
 8004fa6:	f8ca 5020 	str.w	r5, [r10, #32]
 8004faa:	ea4f 0a43 	mov.w	r10, r3, lsl #1
 8004fae:	2503      	movs	r5, #3
 8004fb0:	f8d0 b000 	ldr.w	r11, [r0]
 8004fb4:	fa05 f50a 	lsl.w	r5, r5, r10
 8004fb8:	43ed      	mvns	r5, r5
 8004fba:	f004 0c03 	and.w	r12, r4, #3
 8004fbe:	ea0b 0b05 	and.w	r11, r11, r5
 8004fc2:	fa0c fc0a 	lsl.w	r12, r12, r10
 8004fc6:	3f01      	subs	r7, #1
 8004fc8:	ea4c 0c0b 	orr.w	r12, r12, r11
 8004fcc:	2f01      	cmp	r7, #1
 8004fce:	f8c0 c000 	str.w	r12, [r0]
 8004fd2:	d811      	bhi.n	8004ff8 <HAL_GPIO_Init+0xb0>
 8004fd4:	6887      	ldr	r7, [r0, #8]
 8004fd6:	ea07 0b05 	and.w	r11, r7, r5
 8004fda:	68cf      	ldr	r7, [r1, #12]
 8004fdc:	fa07 fc0a 	lsl.w	r12, r7, r10
 8004fe0:	ea4c 070b 	orr.w	r7, r12, r11
 8004fe4:	6087      	str	r7, [r0, #8]
 8004fe6:	6847      	ldr	r7, [r0, #4]
 8004fe8:	ea27 0e0e 	bic.w	lr, r7, lr
 8004fec:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8004ff0:	409f      	lsls	r7, r3
 8004ff2:	ea47 070e 	orr.w	r7, r7, lr
 8004ff6:	6047      	str	r7, [r0, #4]
 8004ff8:	68c7      	ldr	r7, [r0, #12]
 8004ffa:	403d      	ands	r5, r7
 8004ffc:	688f      	ldr	r7, [r1, #8]
 8004ffe:	fa07 f70a 	lsl.w	r7, r7, r10
 8005002:	433d      	orrs	r5, r7
 8005004:	60c5      	str	r5, [r0, #12]
 8005006:	00e5      	lsls	r5, r4, #3
 8005008:	d55d      	bpl.n	80050c6 <HAL_GPIO_Init+0x17e>
 800500a:	f04f 0b00 	mov.w	r11, #0
 800500e:	f8cd b00c 	str.w	r11, [sp, #12]
 8005012:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8005016:	4d36      	ldr	r5, [pc, #216]	; (80050f0 <HAL_GPIO_Init+0x1a8>)
 8005018:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 800501c:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8005020:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8005024:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8005028:	9703      	str	r7, [sp, #12]
 800502a:	9f03      	ldr	r7, [sp, #12]
 800502c:	f023 0703 	bic.w	r7, r3, #3
 8005030:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8005034:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
 8005038:	f003 0c03 	and.w	r12, r3, #3
 800503c:	f8d7 a008 	ldr.w	r10, [r7, #8]
 8005040:	ea4f 0c8c 	mov.w	r12, r12, lsl #2
 8005044:	f04f 0e0f 	mov.w	lr, #15
 8005048:	fa0e fe0c 	lsl.w	lr, lr, r12
 800504c:	42a8      	cmp	r0, r5
 800504e:	ea2a 0e0e 	bic.w	lr, r10, lr
 8005052:	d03f      	beq.n	80050d4 <HAL_GPIO_Init+0x18c>
 8005054:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005058:	42a8      	cmp	r0, r5
 800505a:	d03d      	beq.n	80050d8 <HAL_GPIO_Init+0x190>
 800505c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005060:	42a8      	cmp	r0, r5
 8005062:	d03b      	beq.n	80050dc <HAL_GPIO_Init+0x194>
 8005064:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005068:	42a8      	cmp	r0, r5
 800506a:	d039      	beq.n	80050e0 <HAL_GPIO_Init+0x198>
 800506c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005070:	42a8      	cmp	r0, r5
 8005072:	d037      	beq.n	80050e4 <HAL_GPIO_Init+0x19c>
 8005074:	4548      	cmp	r0, r9
 8005076:	d037      	beq.n	80050e8 <HAL_GPIO_Init+0x1a0>
 8005078:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 800507c:	42a8      	cmp	r0, r5
 800507e:	bf14      	ite	ne
 8005080:	2508      	movne	r5, #8
 8005082:	2506      	moveq	r5, #6
 8005084:	fa05 f50c 	lsl.w	r5, r5, r12
 8005088:	ea45 050e 	orr.w	r5, r5, lr
 800508c:	60bd      	str	r5, [r7, #8]
 800508e:	6815      	ldr	r5, [r2, #0]
 8005090:	43f7      	mvns	r7, r6
 8005092:	f414 3f80 	tst.w	r4, #65536	; 0x10000
 8005096:	bf0c      	ite	eq
 8005098:	403d      	andeq	r5, r7
 800509a:	4335      	orrne	r5, r6
 800509c:	6015      	str	r5, [r2, #0]
 800509e:	6855      	ldr	r5, [r2, #4]
 80050a0:	f414 3f00 	tst.w	r4, #131072	; 0x20000
 80050a4:	bf0c      	ite	eq
 80050a6:	403d      	andeq	r5, r7
 80050a8:	4335      	orrne	r5, r6
 80050aa:	6055      	str	r5, [r2, #4]
 80050ac:	6895      	ldr	r5, [r2, #8]
 80050ae:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
 80050b2:	bf0c      	ite	eq
 80050b4:	403d      	andeq	r5, r7
 80050b6:	4335      	orrne	r5, r6
 80050b8:	6095      	str	r5, [r2, #8]
 80050ba:	68d5      	ldr	r5, [r2, #12]
 80050bc:	02a4      	lsls	r4, r4, #10
 80050be:	bf54      	ite	pl
 80050c0:	403d      	andpl	r5, r7
 80050c2:	4335      	orrmi	r5, r6
 80050c4:	60d5      	str	r5, [r2, #12]
 80050c6:	3301      	adds	r3, #1
 80050c8:	2b10      	cmp	r3, #16
 80050ca:	f47f af48 	bne.w	8004f5e <HAL_GPIO_Init+0x16>
 80050ce:	b005      	add	sp, #20
 80050d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80050d4:	465d      	mov	r5, r11
 80050d6:	e7d5      	b.n	8005084 <HAL_GPIO_Init+0x13c>
 80050d8:	2501      	movs	r5, #1
 80050da:	e7d3      	b.n	8005084 <HAL_GPIO_Init+0x13c>
 80050dc:	2502      	movs	r5, #2
 80050de:	e7d1      	b.n	8005084 <HAL_GPIO_Init+0x13c>
 80050e0:	2503      	movs	r5, #3
 80050e2:	e7cf      	b.n	8005084 <HAL_GPIO_Init+0x13c>
 80050e4:	2504      	movs	r5, #4
 80050e6:	e7cd      	b.n	8005084 <HAL_GPIO_Init+0x13c>
 80050e8:	2505      	movs	r5, #5
 80050ea:	e7cb      	b.n	8005084 <HAL_GPIO_Init+0x13c>
 80050ec:	40013c00 	.word	0x40013c00
 80050f0:	40020000 	.word	0x40020000
 80050f4:	40023800 	.word	0x40023800
 80050f8:	40021400 	.word	0x40021400

080050fc <UART_SetConfig>:
 80050fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8005100:	6806      	ldr	r6, [r0, #0]
 8005102:	68c2      	ldr	r2, [r0, #12]
 8005104:	6933      	ldr	r3, [r6, #16]
 8005106:	69c1      	ldr	r1, [r0, #28]
 8005108:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800510c:	4313      	orrs	r3, r2
 800510e:	6133      	str	r3, [r6, #16]
 8005110:	4604      	mov	r4, r0
 8005112:	6883      	ldr	r3, [r0, #8]
 8005114:	6900      	ldr	r0, [r0, #16]
 8005116:	68f2      	ldr	r2, [r6, #12]
 8005118:	4303      	orrs	r3, r0
 800511a:	6960      	ldr	r0, [r4, #20]
 800511c:	f422 4216 	bic.w	r2, r2, #38400	; 0x9600
 8005120:	4303      	orrs	r3, r0
 8005122:	f022 020c 	bic.w	r2, r2, #12
 8005126:	430b      	orrs	r3, r1
 8005128:	4313      	orrs	r3, r2
 800512a:	60f3      	str	r3, [r6, #12]
 800512c:	6973      	ldr	r3, [r6, #20]
 800512e:	69a2      	ldr	r2, [r4, #24]
 8005130:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005134:	4313      	orrs	r3, r2
 8005136:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 800513a:	6173      	str	r3, [r6, #20]
 800513c:	4b7a      	ldr	r3, [pc, #488]	; (8005328 <UART_SetConfig+0x22c>)
 800513e:	d17c      	bne.n	800523a <UART_SetConfig+0x13e>
 8005140:	429e      	cmp	r6, r3
 8005142:	d003      	beq.n	800514c <UART_SetConfig+0x50>
 8005144:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005148:	429e      	cmp	r6, r3
 800514a:	d144      	bne.n	80051d6 <UART_SetConfig+0xda>
 800514c:	f000 faf0 	bl	8005730 <HAL_RCC_GetPCLK2Freq>
 8005150:	2519      	movs	r5, #25
 8005152:	fb05 f300 	mul.w	r3, r5, r0
 8005156:	6860      	ldr	r0, [r4, #4]
 8005158:	f04f 0964 	mov.w	r9, #100	; 0x64
 800515c:	0040      	lsls	r0, r0, #1
 800515e:	fbb3 f3f0 	udiv	r3, r3, r0
 8005162:	fbb3 f3f9 	udiv	r3, r3, r9
 8005166:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800516a:	f000 fae1 	bl	8005730 <HAL_RCC_GetPCLK2Freq>
 800516e:	6863      	ldr	r3, [r4, #4]
 8005170:	4368      	muls	r0, r5
 8005172:	005b      	lsls	r3, r3, #1
 8005174:	fbb0 f7f3 	udiv	r7, r0, r3
 8005178:	f000 fada 	bl	8005730 <HAL_RCC_GetPCLK2Freq>
 800517c:	6863      	ldr	r3, [r4, #4]
 800517e:	4368      	muls	r0, r5
 8005180:	005b      	lsls	r3, r3, #1
 8005182:	fbb0 f3f3 	udiv	r3, r0, r3
 8005186:	fbb3 f3f9 	udiv	r3, r3, r9
 800518a:	fb09 7313 	mls	r3, r9, r3, r7
 800518e:	00db      	lsls	r3, r3, #3
 8005190:	3332      	adds	r3, #50	; 0x32
 8005192:	fbb3 f3f9 	udiv	r3, r3, r9
 8005196:	005b      	lsls	r3, r3, #1
 8005198:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 800519c:	f000 fac8 	bl	8005730 <HAL_RCC_GetPCLK2Freq>
 80051a0:	6862      	ldr	r2, [r4, #4]
 80051a2:	4368      	muls	r0, r5
 80051a4:	0052      	lsls	r2, r2, #1
 80051a6:	fbb0 faf2 	udiv	r10, r0, r2
 80051aa:	f000 fac1 	bl	8005730 <HAL_RCC_GetPCLK2Freq>
 80051ae:	6863      	ldr	r3, [r4, #4]
 80051b0:	4368      	muls	r0, r5
 80051b2:	005b      	lsls	r3, r3, #1
 80051b4:	fbb0 f3f3 	udiv	r3, r0, r3
 80051b8:	fbb3 f3f9 	udiv	r3, r3, r9
 80051bc:	fb09 a313 	mls	r3, r9, r3, r10
 80051c0:	00db      	lsls	r3, r3, #3
 80051c2:	3332      	adds	r3, #50	; 0x32
 80051c4:	fbb3 f3f9 	udiv	r3, r3, r9
 80051c8:	f003 0307 	and.w	r3, r3, #7
 80051cc:	4443      	add	r3, r8
 80051ce:	443b      	add	r3, r7
 80051d0:	60b3      	str	r3, [r6, #8]
 80051d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80051d6:	f000 fa93 	bl	8005700 <HAL_RCC_GetPCLK1Freq>
 80051da:	2519      	movs	r5, #25
 80051dc:	fb05 f300 	mul.w	r3, r5, r0
 80051e0:	6860      	ldr	r0, [r4, #4]
 80051e2:	f04f 0964 	mov.w	r9, #100	; 0x64
 80051e6:	0040      	lsls	r0, r0, #1
 80051e8:	fbb3 f3f0 	udiv	r3, r3, r0
 80051ec:	fbb3 f3f9 	udiv	r3, r3, r9
 80051f0:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80051f4:	f000 fa84 	bl	8005700 <HAL_RCC_GetPCLK1Freq>
 80051f8:	6863      	ldr	r3, [r4, #4]
 80051fa:	4368      	muls	r0, r5
 80051fc:	005b      	lsls	r3, r3, #1
 80051fe:	fbb0 f7f3 	udiv	r7, r0, r3
 8005202:	f000 fa7d 	bl	8005700 <HAL_RCC_GetPCLK1Freq>
 8005206:	6863      	ldr	r3, [r4, #4]
 8005208:	4368      	muls	r0, r5
 800520a:	005b      	lsls	r3, r3, #1
 800520c:	fbb0 f3f3 	udiv	r3, r0, r3
 8005210:	fbb3 f3f9 	udiv	r3, r3, r9
 8005214:	fb09 7313 	mls	r3, r9, r3, r7
 8005218:	00db      	lsls	r3, r3, #3
 800521a:	3332      	adds	r3, #50	; 0x32
 800521c:	fbb3 f3f9 	udiv	r3, r3, r9
 8005220:	005b      	lsls	r3, r3, #1
 8005222:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 8005226:	f000 fa6b 	bl	8005700 <HAL_RCC_GetPCLK1Freq>
 800522a:	6862      	ldr	r2, [r4, #4]
 800522c:	4368      	muls	r0, r5
 800522e:	0052      	lsls	r2, r2, #1
 8005230:	fbb0 faf2 	udiv	r10, r0, r2
 8005234:	f000 fa64 	bl	8005700 <HAL_RCC_GetPCLK1Freq>
 8005238:	e7b9      	b.n	80051ae <UART_SetConfig+0xb2>
 800523a:	429e      	cmp	r6, r3
 800523c:	d002      	beq.n	8005244 <UART_SetConfig+0x148>
 800523e:	4b3b      	ldr	r3, [pc, #236]	; (800532c <UART_SetConfig+0x230>)
 8005240:	429e      	cmp	r6, r3
 8005242:	d140      	bne.n	80052c6 <UART_SetConfig+0x1ca>
 8005244:	f000 fa74 	bl	8005730 <HAL_RCC_GetPCLK2Freq>
 8005248:	6867      	ldr	r7, [r4, #4]
 800524a:	2519      	movs	r5, #25
 800524c:	f04f 0964 	mov.w	r9, #100	; 0x64
 8005250:	fb05 f300 	mul.w	r3, r5, r0
 8005254:	00bf      	lsls	r7, r7, #2
 8005256:	fbb3 f3f7 	udiv	r3, r3, r7
 800525a:	fbb3 f3f9 	udiv	r3, r3, r9
 800525e:	011f      	lsls	r7, r3, #4
 8005260:	f000 fa66 	bl	8005730 <HAL_RCC_GetPCLK2Freq>
 8005264:	6863      	ldr	r3, [r4, #4]
 8005266:	4368      	muls	r0, r5
 8005268:	009b      	lsls	r3, r3, #2
 800526a:	fbb0 f8f3 	udiv	r8, r0, r3
 800526e:	f000 fa5f 	bl	8005730 <HAL_RCC_GetPCLK2Freq>
 8005272:	6863      	ldr	r3, [r4, #4]
 8005274:	4368      	muls	r0, r5
 8005276:	009b      	lsls	r3, r3, #2
 8005278:	fbb0 f3f3 	udiv	r3, r0, r3
 800527c:	fbb3 f3f9 	udiv	r3, r3, r9
 8005280:	fb09 8313 	mls	r3, r9, r3, r8
 8005284:	011b      	lsls	r3, r3, #4
 8005286:	3332      	adds	r3, #50	; 0x32
 8005288:	fbb3 f3f9 	udiv	r3, r3, r9
 800528c:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8005290:	f000 fa4e 	bl	8005730 <HAL_RCC_GetPCLK2Freq>
 8005294:	6862      	ldr	r2, [r4, #4]
 8005296:	4368      	muls	r0, r5
 8005298:	0092      	lsls	r2, r2, #2
 800529a:	fbb0 faf2 	udiv	r10, r0, r2
 800529e:	f000 fa47 	bl	8005730 <HAL_RCC_GetPCLK2Freq>
 80052a2:	6863      	ldr	r3, [r4, #4]
 80052a4:	4368      	muls	r0, r5
 80052a6:	009b      	lsls	r3, r3, #2
 80052a8:	fbb0 f3f3 	udiv	r3, r0, r3
 80052ac:	fbb3 f3f9 	udiv	r3, r3, r9
 80052b0:	fb09 a313 	mls	r3, r9, r3, r10
 80052b4:	011b      	lsls	r3, r3, #4
 80052b6:	3332      	adds	r3, #50	; 0x32
 80052b8:	fbb3 f3f9 	udiv	r3, r3, r9
 80052bc:	f003 030f 	and.w	r3, r3, #15
 80052c0:	ea43 0308 	orr.w	r3, r3, r8
 80052c4:	e783      	b.n	80051ce <UART_SetConfig+0xd2>
 80052c6:	f000 fa1b 	bl	8005700 <HAL_RCC_GetPCLK1Freq>
 80052ca:	6867      	ldr	r7, [r4, #4]
 80052cc:	2519      	movs	r5, #25
 80052ce:	f04f 0964 	mov.w	r9, #100	; 0x64
 80052d2:	fb05 f300 	mul.w	r3, r5, r0
 80052d6:	00bf      	lsls	r7, r7, #2
 80052d8:	fbb3 f3f7 	udiv	r3, r3, r7
 80052dc:	fbb3 f3f9 	udiv	r3, r3, r9
 80052e0:	011f      	lsls	r7, r3, #4
 80052e2:	f000 fa0d 	bl	8005700 <HAL_RCC_GetPCLK1Freq>
 80052e6:	6863      	ldr	r3, [r4, #4]
 80052e8:	4368      	muls	r0, r5
 80052ea:	009b      	lsls	r3, r3, #2
 80052ec:	fbb0 f8f3 	udiv	r8, r0, r3
 80052f0:	f000 fa06 	bl	8005700 <HAL_RCC_GetPCLK1Freq>
 80052f4:	6863      	ldr	r3, [r4, #4]
 80052f6:	4368      	muls	r0, r5
 80052f8:	009b      	lsls	r3, r3, #2
 80052fa:	fbb0 f3f3 	udiv	r3, r0, r3
 80052fe:	fbb3 f3f9 	udiv	r3, r3, r9
 8005302:	fb09 8313 	mls	r3, r9, r3, r8
 8005306:	011b      	lsls	r3, r3, #4
 8005308:	3332      	adds	r3, #50	; 0x32
 800530a:	fbb3 f3f9 	udiv	r3, r3, r9
 800530e:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8005312:	f000 f9f5 	bl	8005700 <HAL_RCC_GetPCLK1Freq>
 8005316:	6862      	ldr	r2, [r4, #4]
 8005318:	4368      	muls	r0, r5
 800531a:	0092      	lsls	r2, r2, #2
 800531c:	fbb0 faf2 	udiv	r10, r0, r2
 8005320:	f000 f9ee 	bl	8005700 <HAL_RCC_GetPCLK1Freq>
 8005324:	e7bd      	b.n	80052a2 <UART_SetConfig+0x1a6>
 8005326:	bf00      	nop
 8005328:	40011000 	.word	0x40011000
 800532c:	40011400 	.word	0x40011400

08005330 <HAL_UART_MspInit>:
 8005330:	4770      	bx	lr

08005332 <HAL_UART_Init>:
 8005332:	b510      	push	{r4, lr}
 8005334:	4604      	mov	r4, r0
 8005336:	b340      	cbz	r0, 800538a <HAL_UART_Init+0x58>
 8005338:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800533c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005340:	b91b      	cbnz	r3, 800534a <HAL_UART_Init+0x18>
 8005342:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8005346:	f7ff fff3 	bl	8005330 <HAL_UART_MspInit>
 800534a:	6822      	ldr	r2, [r4, #0]
 800534c:	2324      	movs	r3, #36	; 0x24
 800534e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8005352:	68d3      	ldr	r3, [r2, #12]
 8005354:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8005358:	60d3      	str	r3, [r2, #12]
 800535a:	4620      	mov	r0, r4
 800535c:	f7ff fece 	bl	80050fc <UART_SetConfig>
 8005360:	6823      	ldr	r3, [r4, #0]
 8005362:	691a      	ldr	r2, [r3, #16]
 8005364:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8005368:	611a      	str	r2, [r3, #16]
 800536a:	695a      	ldr	r2, [r3, #20]
 800536c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8005370:	615a      	str	r2, [r3, #20]
 8005372:	68da      	ldr	r2, [r3, #12]
 8005374:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005378:	60da      	str	r2, [r3, #12]
 800537a:	2000      	movs	r0, #0
 800537c:	2320      	movs	r3, #32
 800537e:	63e0      	str	r0, [r4, #60]	; 0x3c
 8005380:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8005384:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 8005388:	bd10      	pop	{r4, pc}
 800538a:	2001      	movs	r0, #1
 800538c:	bd10      	pop	{r4, pc}

0800538e <HAL_TIM_OC_MspInit>:
 800538e:	4770      	bx	lr

08005390 <TIM_Base_SetConfig>:
 8005390:	4a2e      	ldr	r2, [pc, #184]	; (800544c <TIM_Base_SetConfig+0xbc>)
 8005392:	6803      	ldr	r3, [r0, #0]
 8005394:	4290      	cmp	r0, r2
 8005396:	d012      	beq.n	80053be <TIM_Base_SetConfig+0x2e>
 8005398:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800539c:	d00f      	beq.n	80053be <TIM_Base_SetConfig+0x2e>
 800539e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80053a2:	4290      	cmp	r0, r2
 80053a4:	d00b      	beq.n	80053be <TIM_Base_SetConfig+0x2e>
 80053a6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80053aa:	4290      	cmp	r0, r2
 80053ac:	d007      	beq.n	80053be <TIM_Base_SetConfig+0x2e>
 80053ae:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80053b2:	4290      	cmp	r0, r2
 80053b4:	d003      	beq.n	80053be <TIM_Base_SetConfig+0x2e>
 80053b6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80053ba:	4290      	cmp	r0, r2
 80053bc:	d11d      	bne.n	80053fa <TIM_Base_SetConfig+0x6a>
 80053be:	684a      	ldr	r2, [r1, #4]
 80053c0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80053c4:	4313      	orrs	r3, r2
 80053c6:	4a21      	ldr	r2, [pc, #132]	; (800544c <TIM_Base_SetConfig+0xbc>)
 80053c8:	4290      	cmp	r0, r2
 80053ca:	d104      	bne.n	80053d6 <TIM_Base_SetConfig+0x46>
 80053cc:	68ca      	ldr	r2, [r1, #12]
 80053ce:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80053d2:	4313      	orrs	r3, r2
 80053d4:	e028      	b.n	8005428 <TIM_Base_SetConfig+0x98>
 80053d6:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80053da:	d0f7      	beq.n	80053cc <TIM_Base_SetConfig+0x3c>
 80053dc:	4a1c      	ldr	r2, [pc, #112]	; (8005450 <TIM_Base_SetConfig+0xc0>)
 80053de:	4290      	cmp	r0, r2
 80053e0:	d0f4      	beq.n	80053cc <TIM_Base_SetConfig+0x3c>
 80053e2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80053e6:	4290      	cmp	r0, r2
 80053e8:	d0f0      	beq.n	80053cc <TIM_Base_SetConfig+0x3c>
 80053ea:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80053ee:	4290      	cmp	r0, r2
 80053f0:	d0ec      	beq.n	80053cc <TIM_Base_SetConfig+0x3c>
 80053f2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80053f6:	4290      	cmp	r0, r2
 80053f8:	d0e8      	beq.n	80053cc <TIM_Base_SetConfig+0x3c>
 80053fa:	4a16      	ldr	r2, [pc, #88]	; (8005454 <TIM_Base_SetConfig+0xc4>)
 80053fc:	4290      	cmp	r0, r2
 80053fe:	d0e5      	beq.n	80053cc <TIM_Base_SetConfig+0x3c>
 8005400:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005404:	4290      	cmp	r0, r2
 8005406:	d0e1      	beq.n	80053cc <TIM_Base_SetConfig+0x3c>
 8005408:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800540c:	4290      	cmp	r0, r2
 800540e:	d0dd      	beq.n	80053cc <TIM_Base_SetConfig+0x3c>
 8005410:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8005414:	4290      	cmp	r0, r2
 8005416:	d0d9      	beq.n	80053cc <TIM_Base_SetConfig+0x3c>
 8005418:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800541c:	4290      	cmp	r0, r2
 800541e:	d0d5      	beq.n	80053cc <TIM_Base_SetConfig+0x3c>
 8005420:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005424:	4290      	cmp	r0, r2
 8005426:	d0d1      	beq.n	80053cc <TIM_Base_SetConfig+0x3c>
 8005428:	6003      	str	r3, [r0, #0]
 800542a:	688b      	ldr	r3, [r1, #8]
 800542c:	62c3      	str	r3, [r0, #44]	; 0x2c
 800542e:	680b      	ldr	r3, [r1, #0]
 8005430:	6283      	str	r3, [r0, #40]	; 0x28
 8005432:	4b06      	ldr	r3, [pc, #24]	; (800544c <TIM_Base_SetConfig+0xbc>)
 8005434:	4298      	cmp	r0, r3
 8005436:	d006      	beq.n	8005446 <TIM_Base_SetConfig+0xb6>
 8005438:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800543c:	4298      	cmp	r0, r3
 800543e:	d002      	beq.n	8005446 <TIM_Base_SetConfig+0xb6>
 8005440:	2301      	movs	r3, #1
 8005442:	6143      	str	r3, [r0, #20]
 8005444:	4770      	bx	lr
 8005446:	690b      	ldr	r3, [r1, #16]
 8005448:	6303      	str	r3, [r0, #48]	; 0x30
 800544a:	e7f9      	b.n	8005440 <TIM_Base_SetConfig+0xb0>
 800544c:	40010000 	.word	0x40010000
 8005450:	40000400 	.word	0x40000400
 8005454:	40014000 	.word	0x40014000

08005458 <HAL_TIM_OC_Init>:
 8005458:	b510      	push	{r4, lr}
 800545a:	4604      	mov	r4, r0
 800545c:	b1a0      	cbz	r0, 8005488 <HAL_TIM_OC_Init+0x30>
 800545e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8005462:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005466:	b91b      	cbnz	r3, 8005470 <HAL_TIM_OC_Init+0x18>
 8005468:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 800546c:	f7ff ff8f 	bl	800538e <HAL_TIM_OC_MspInit>
 8005470:	2302      	movs	r3, #2
 8005472:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8005476:	6820      	ldr	r0, [r4, #0]
 8005478:	1d21      	adds	r1, r4, #4
 800547a:	f7ff ff89 	bl	8005390 <TIM_Base_SetConfig>
 800547e:	2301      	movs	r3, #1
 8005480:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8005484:	2000      	movs	r0, #0
 8005486:	bd10      	pop	{r4, pc}
 8005488:	2001      	movs	r0, #1
 800548a:	bd10      	pop	{r4, pc}

0800548c <TIM_CCxChannelCmd>:
 800548c:	6a03      	ldr	r3, [r0, #32]
 800548e:	b510      	push	{r4, lr}
 8005490:	2401      	movs	r4, #1
 8005492:	408c      	lsls	r4, r1
 8005494:	ea23 0304 	bic.w	r3, r3, r4
 8005498:	6203      	str	r3, [r0, #32]
 800549a:	6a03      	ldr	r3, [r0, #32]
 800549c:	408a      	lsls	r2, r1
 800549e:	431a      	orrs	r2, r3
 80054a0:	6202      	str	r2, [r0, #32]
 80054a2:	bd10      	pop	{r4, pc}

080054a4 <HAL_TIM_PWM_Start>:
 80054a4:	b510      	push	{r4, lr}
 80054a6:	4604      	mov	r4, r0
 80054a8:	2201      	movs	r2, #1
 80054aa:	6800      	ldr	r0, [r0, #0]
 80054ac:	f7ff ffee 	bl	800548c <TIM_CCxChannelCmd>
 80054b0:	6823      	ldr	r3, [r4, #0]
 80054b2:	4a08      	ldr	r2, [pc, #32]	; (80054d4 <HAL_TIM_PWM_Start+0x30>)
 80054b4:	4293      	cmp	r3, r2
 80054b6:	d003      	beq.n	80054c0 <HAL_TIM_PWM_Start+0x1c>
 80054b8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80054bc:	4293      	cmp	r3, r2
 80054be:	d103      	bne.n	80054c8 <HAL_TIM_PWM_Start+0x24>
 80054c0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80054c2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80054c6:	645a      	str	r2, [r3, #68]	; 0x44
 80054c8:	681a      	ldr	r2, [r3, #0]
 80054ca:	f042 0201 	orr.w	r2, r2, #1
 80054ce:	601a      	str	r2, [r3, #0]
 80054d0:	2000      	movs	r0, #0
 80054d2:	bd10      	pop	{r4, pc}
 80054d4:	40010000 	.word	0x40010000

080054d8 <HAL_TIM_OC_Start>:
 80054d8:	f7ff bfe4 	b.w	80054a4 <HAL_TIM_PWM_Start>

080054dc <HAL_PWR_EnterSLEEPMode>:
 80054dc:	4a06      	ldr	r2, [pc, #24]	; (80054f8 <HAL_PWR_EnterSLEEPMode+0x1c>)
 80054de:	6913      	ldr	r3, [r2, #16]
 80054e0:	2901      	cmp	r1, #1
 80054e2:	f023 0304 	bic.w	r3, r3, #4
 80054e6:	6113      	str	r3, [r2, #16]
 80054e8:	d101      	bne.n	80054ee <HAL_PWR_EnterSLEEPMode+0x12>
 80054ea:	bf30      	wfi
 80054ec:	4770      	bx	lr
 80054ee:	bf40      	sev
 80054f0:	bf20      	wfe
 80054f2:	bf20      	wfe
 80054f4:	4770      	bx	lr
 80054f6:	bf00      	nop
 80054f8:	e000ed00 	.word	0xe000ed00

080054fc <HAL_RCC_MCOConfig>:
 80054fc:	b570      	push	{r4, r5, r6, lr}
 80054fe:	460d      	mov	r5, r1
 8005500:	b088      	sub	sp, #32
 8005502:	4616      	mov	r6, r2
 8005504:	4c20      	ldr	r4, [pc, #128]	; (8005588 <HAL_RCC_MCOConfig+0x8c>)
 8005506:	b9f0      	cbnz	r0, 8005546 <HAL_RCC_MCOConfig+0x4a>
 8005508:	9001      	str	r0, [sp, #4]
 800550a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800550c:	f043 0301 	orr.w	r3, r3, #1
 8005510:	6323      	str	r3, [r4, #48]	; 0x30
 8005512:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005514:	9005      	str	r0, [sp, #20]
 8005516:	f003 0301 	and.w	r3, r3, #1
 800551a:	9301      	str	r3, [sp, #4]
 800551c:	9b01      	ldr	r3, [sp, #4]
 800551e:	9007      	str	r0, [sp, #28]
 8005520:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005524:	9303      	str	r3, [sp, #12]
 8005526:	2302      	movs	r3, #2
 8005528:	9304      	str	r3, [sp, #16]
 800552a:	a903      	add	r1, sp, #12
 800552c:	2303      	movs	r3, #3
 800552e:	4817      	ldr	r0, [pc, #92]	; (800558c <HAL_RCC_MCOConfig+0x90>)
 8005530:	9306      	str	r3, [sp, #24]
 8005532:	f7ff fd09 	bl	8004f48 <HAL_GPIO_Init>
 8005536:	68a1      	ldr	r1, [r4, #8]
 8005538:	f021 61ec 	bic.w	r1, r1, #123731968	; 0x7600000
 800553c:	4331      	orrs	r1, r6
 800553e:	4329      	orrs	r1, r5
 8005540:	60a1      	str	r1, [r4, #8]
 8005542:	b008      	add	sp, #32
 8005544:	bd70      	pop	{r4, r5, r6, pc}
 8005546:	2300      	movs	r3, #0
 8005548:	9302      	str	r3, [sp, #8]
 800554a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800554c:	4810      	ldr	r0, [pc, #64]	; (8005590 <HAL_RCC_MCOConfig+0x94>)
 800554e:	f042 0204 	orr.w	r2, r2, #4
 8005552:	6322      	str	r2, [r4, #48]	; 0x30
 8005554:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8005556:	9305      	str	r3, [sp, #20]
 8005558:	f002 0204 	and.w	r2, r2, #4
 800555c:	9202      	str	r2, [sp, #8]
 800555e:	9a02      	ldr	r2, [sp, #8]
 8005560:	9307      	str	r3, [sp, #28]
 8005562:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005566:	9203      	str	r2, [sp, #12]
 8005568:	2202      	movs	r2, #2
 800556a:	9204      	str	r2, [sp, #16]
 800556c:	a903      	add	r1, sp, #12
 800556e:	2203      	movs	r2, #3
 8005570:	9206      	str	r2, [sp, #24]
 8005572:	f7ff fce9 	bl	8004f48 <HAL_GPIO_Init>
 8005576:	68a3      	ldr	r3, [r4, #8]
 8005578:	ea45 01c6 	orr.w	r1, r5, r6, lsl #3
 800557c:	f023 4578 	bic.w	r5, r3, #4160749568	; 0xf8000000
 8005580:	430d      	orrs	r5, r1
 8005582:	60a5      	str	r5, [r4, #8]
 8005584:	e7dd      	b.n	8005542 <HAL_RCC_MCOConfig+0x46>
 8005586:	bf00      	nop
 8005588:	40023800 	.word	0x40023800
 800558c:	40020000 	.word	0x40020000
 8005590:	40020800 	.word	0x40020800

08005594 <HAL_RCC_ClockConfig>:
 8005594:	4b56      	ldr	r3, [pc, #344]	; (80056f0 <HAL_RCC_ClockConfig+0x15c>)
 8005596:	681a      	ldr	r2, [r3, #0]
 8005598:	f002 020f 	and.w	r2, r2, #15
 800559c:	428a      	cmp	r2, r1
 800559e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80055a2:	4605      	mov	r5, r0
 80055a4:	460e      	mov	r6, r1
 80055a6:	d330      	bcc.n	800560a <HAL_RCC_ClockConfig+0x76>
 80055a8:	682a      	ldr	r2, [r5, #0]
 80055aa:	0794      	lsls	r4, r2, #30
 80055ac:	d437      	bmi.n	800561e <HAL_RCC_ClockConfig+0x8a>
 80055ae:	07d0      	lsls	r0, r2, #31
 80055b0:	d43d      	bmi.n	800562e <HAL_RCC_ClockConfig+0x9a>
 80055b2:	4b4f      	ldr	r3, [pc, #316]	; (80056f0 <HAL_RCC_ClockConfig+0x15c>)
 80055b4:	681a      	ldr	r2, [r3, #0]
 80055b6:	f002 020f 	and.w	r2, r2, #15
 80055ba:	4296      	cmp	r6, r2
 80055bc:	f0c0 8088 	bcc.w	80056d0 <HAL_RCC_ClockConfig+0x13c>
 80055c0:	682a      	ldr	r2, [r5, #0]
 80055c2:	0751      	lsls	r1, r2, #29
 80055c4:	f100 808c 	bmi.w	80056e0 <HAL_RCC_ClockConfig+0x14c>
 80055c8:	0713      	lsls	r3, r2, #28
 80055ca:	d507      	bpl.n	80055dc <HAL_RCC_ClockConfig+0x48>
 80055cc:	4a49      	ldr	r2, [pc, #292]	; (80056f4 <HAL_RCC_ClockConfig+0x160>)
 80055ce:	6929      	ldr	r1, [r5, #16]
 80055d0:	6893      	ldr	r3, [r2, #8]
 80055d2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80055d6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80055da:	6093      	str	r3, [r2, #8]
 80055dc:	f7ff fc56 	bl	8004e8c <HAL_RCC_GetSysClockFreq>
 80055e0:	4b44      	ldr	r3, [pc, #272]	; (80056f4 <HAL_RCC_ClockConfig+0x160>)
 80055e2:	22f0      	movs	r2, #240	; 0xf0
 80055e4:	689b      	ldr	r3, [r3, #8]
 80055e6:	fa92 f2a2 	rbit	r2, r2
 80055ea:	fab2 f282 	clz	r2, r2
 80055ee:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80055f2:	40d3      	lsrs	r3, r2
 80055f4:	4a40      	ldr	r2, [pc, #256]	; (80056f8 <HAL_RCC_ClockConfig+0x164>)
 80055f6:	5cd3      	ldrb	r3, [r2, r3]
 80055f8:	40d8      	lsrs	r0, r3
 80055fa:	4b40      	ldr	r3, [pc, #256]	; (80056fc <HAL_RCC_ClockConfig+0x168>)
 80055fc:	6018      	str	r0, [r3, #0]
 80055fe:	200f      	movs	r0, #15
 8005600:	f7fe f91e 	bl	8003840 <HAL_InitTick>
 8005604:	2000      	movs	r0, #0
 8005606:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800560a:	b2ca      	uxtb	r2, r1
 800560c:	701a      	strb	r2, [r3, #0]
 800560e:	681b      	ldr	r3, [r3, #0]
 8005610:	f003 030f 	and.w	r3, r3, #15
 8005614:	4299      	cmp	r1, r3
 8005616:	d0c7      	beq.n	80055a8 <HAL_RCC_ClockConfig+0x14>
 8005618:	2001      	movs	r0, #1
 800561a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800561e:	4935      	ldr	r1, [pc, #212]	; (80056f4 <HAL_RCC_ClockConfig+0x160>)
 8005620:	68a8      	ldr	r0, [r5, #8]
 8005622:	688b      	ldr	r3, [r1, #8]
 8005624:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005628:	4303      	orrs	r3, r0
 800562a:	608b      	str	r3, [r1, #8]
 800562c:	e7bf      	b.n	80055ae <HAL_RCC_ClockConfig+0x1a>
 800562e:	686a      	ldr	r2, [r5, #4]
 8005630:	4b30      	ldr	r3, [pc, #192]	; (80056f4 <HAL_RCC_ClockConfig+0x160>)
 8005632:	2a01      	cmp	r2, #1
 8005634:	d11e      	bne.n	8005674 <HAL_RCC_ClockConfig+0xe0>
 8005636:	681b      	ldr	r3, [r3, #0]
 8005638:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 800563c:	d0ec      	beq.n	8005618 <HAL_RCC_ClockConfig+0x84>
 800563e:	4c2d      	ldr	r4, [pc, #180]	; (80056f4 <HAL_RCC_ClockConfig+0x160>)
 8005640:	68a3      	ldr	r3, [r4, #8]
 8005642:	f023 0303 	bic.w	r3, r3, #3
 8005646:	4313      	orrs	r3, r2
 8005648:	60a3      	str	r3, [r4, #8]
 800564a:	f000 f915 	bl	8005878 <HAL_GetTick>
 800564e:	686b      	ldr	r3, [r5, #4]
 8005650:	2b01      	cmp	r3, #1
 8005652:	4607      	mov	r7, r0
 8005654:	f241 3888 	movw	r8, #5000	; 0x1388
 8005658:	d116      	bne.n	8005688 <HAL_RCC_ClockConfig+0xf4>
 800565a:	68a3      	ldr	r3, [r4, #8]
 800565c:	f003 030c 	and.w	r3, r3, #12
 8005660:	2b04      	cmp	r3, #4
 8005662:	d0a6      	beq.n	80055b2 <HAL_RCC_ClockConfig+0x1e>
 8005664:	f000 f908 	bl	8005878 <HAL_GetTick>
 8005668:	1bc0      	subs	r0, r0, r7
 800566a:	4540      	cmp	r0, r8
 800566c:	d9f5      	bls.n	800565a <HAL_RCC_ClockConfig+0xc6>
 800566e:	2003      	movs	r0, #3
 8005670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005674:	1e91      	subs	r1, r2, #2
 8005676:	2901      	cmp	r1, #1
 8005678:	681b      	ldr	r3, [r3, #0]
 800567a:	d802      	bhi.n	8005682 <HAL_RCC_ClockConfig+0xee>
 800567c:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8005680:	e7dc      	b.n	800563c <HAL_RCC_ClockConfig+0xa8>
 8005682:	f013 0f02 	tst.w	r3, #2
 8005686:	e7d9      	b.n	800563c <HAL_RCC_ClockConfig+0xa8>
 8005688:	2b02      	cmp	r3, #2
 800568a:	d10a      	bne.n	80056a2 <HAL_RCC_ClockConfig+0x10e>
 800568c:	68a3      	ldr	r3, [r4, #8]
 800568e:	f003 030c 	and.w	r3, r3, #12
 8005692:	2b08      	cmp	r3, #8
 8005694:	d08d      	beq.n	80055b2 <HAL_RCC_ClockConfig+0x1e>
 8005696:	f000 f8ef 	bl	8005878 <HAL_GetTick>
 800569a:	1bc0      	subs	r0, r0, r7
 800569c:	4540      	cmp	r0, r8
 800569e:	d9f5      	bls.n	800568c <HAL_RCC_ClockConfig+0xf8>
 80056a0:	e7e5      	b.n	800566e <HAL_RCC_ClockConfig+0xda>
 80056a2:	2b03      	cmp	r3, #3
 80056a4:	d10f      	bne.n	80056c6 <HAL_RCC_ClockConfig+0x132>
 80056a6:	68a3      	ldr	r3, [r4, #8]
 80056a8:	f003 030c 	and.w	r3, r3, #12
 80056ac:	2b0c      	cmp	r3, #12
 80056ae:	d080      	beq.n	80055b2 <HAL_RCC_ClockConfig+0x1e>
 80056b0:	f000 f8e2 	bl	8005878 <HAL_GetTick>
 80056b4:	1bc0      	subs	r0, r0, r7
 80056b6:	4540      	cmp	r0, r8
 80056b8:	d9f5      	bls.n	80056a6 <HAL_RCC_ClockConfig+0x112>
 80056ba:	e7d8      	b.n	800566e <HAL_RCC_ClockConfig+0xda>
 80056bc:	f000 f8dc 	bl	8005878 <HAL_GetTick>
 80056c0:	1bc0      	subs	r0, r0, r7
 80056c2:	4540      	cmp	r0, r8
 80056c4:	d8d3      	bhi.n	800566e <HAL_RCC_ClockConfig+0xda>
 80056c6:	68a3      	ldr	r3, [r4, #8]
 80056c8:	f013 0f0c 	tst.w	r3, #12
 80056cc:	d1f6      	bne.n	80056bc <HAL_RCC_ClockConfig+0x128>
 80056ce:	e770      	b.n	80055b2 <HAL_RCC_ClockConfig+0x1e>
 80056d0:	b2f2      	uxtb	r2, r6
 80056d2:	701a      	strb	r2, [r3, #0]
 80056d4:	681b      	ldr	r3, [r3, #0]
 80056d6:	f003 030f 	and.w	r3, r3, #15
 80056da:	429e      	cmp	r6, r3
 80056dc:	d19c      	bne.n	8005618 <HAL_RCC_ClockConfig+0x84>
 80056de:	e76f      	b.n	80055c0 <HAL_RCC_ClockConfig+0x2c>
 80056e0:	4904      	ldr	r1, [pc, #16]	; (80056f4 <HAL_RCC_ClockConfig+0x160>)
 80056e2:	68e8      	ldr	r0, [r5, #12]
 80056e4:	688b      	ldr	r3, [r1, #8]
 80056e6:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80056ea:	4303      	orrs	r3, r0
 80056ec:	608b      	str	r3, [r1, #8]
 80056ee:	e76b      	b.n	80055c8 <HAL_RCC_ClockConfig+0x34>
 80056f0:	40023c00 	.word	0x40023c00
 80056f4:	40023800 	.word	0x40023800
 80056f8:	08007734 	.word	0x08007734
 80056fc:	200001e0 	.word	0x200001e0

08005700 <HAL_RCC_GetPCLK1Freq>:
 8005700:	4b08      	ldr	r3, [pc, #32]	; (8005724 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005702:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
 8005706:	689b      	ldr	r3, [r3, #8]
 8005708:	fa92 f2a2 	rbit	r2, r2
 800570c:	fab2 f282 	clz	r2, r2
 8005710:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8005714:	40d3      	lsrs	r3, r2
 8005716:	4a04      	ldr	r2, [pc, #16]	; (8005728 <HAL_RCC_GetPCLK1Freq+0x28>)
 8005718:	5cd3      	ldrb	r3, [r2, r3]
 800571a:	4a04      	ldr	r2, [pc, #16]	; (800572c <HAL_RCC_GetPCLK1Freq+0x2c>)
 800571c:	6810      	ldr	r0, [r2, #0]
 800571e:	40d8      	lsrs	r0, r3
 8005720:	4770      	bx	lr
 8005722:	bf00      	nop
 8005724:	40023800 	.word	0x40023800
 8005728:	08007734 	.word	0x08007734
 800572c:	200001e0 	.word	0x200001e0

08005730 <HAL_RCC_GetPCLK2Freq>:
 8005730:	4b08      	ldr	r3, [pc, #32]	; (8005754 <HAL_RCC_GetPCLK2Freq+0x24>)
 8005732:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 8005736:	689b      	ldr	r3, [r3, #8]
 8005738:	fa92 f2a2 	rbit	r2, r2
 800573c:	fab2 f282 	clz	r2, r2
 8005740:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8005744:	40d3      	lsrs	r3, r2
 8005746:	4a04      	ldr	r2, [pc, #16]	; (8005758 <HAL_RCC_GetPCLK2Freq+0x28>)
 8005748:	5cd3      	ldrb	r3, [r2, r3]
 800574a:	4a04      	ldr	r2, [pc, #16]	; (800575c <HAL_RCC_GetPCLK2Freq+0x2c>)
 800574c:	6810      	ldr	r0, [r2, #0]
 800574e:	40d8      	lsrs	r0, r3
 8005750:	4770      	bx	lr
 8005752:	bf00      	nop
 8005754:	40023800 	.word	0x40023800
 8005758:	08007734 	.word	0x08007734
 800575c:	200001e0 	.word	0x200001e0

08005760 <HAL_RCC_GetClockConfig>:
 8005760:	230f      	movs	r3, #15
 8005762:	6003      	str	r3, [r0, #0]
 8005764:	4b0b      	ldr	r3, [pc, #44]	; (8005794 <HAL_RCC_GetClockConfig+0x34>)
 8005766:	689a      	ldr	r2, [r3, #8]
 8005768:	f002 0203 	and.w	r2, r2, #3
 800576c:	6042      	str	r2, [r0, #4]
 800576e:	689a      	ldr	r2, [r3, #8]
 8005770:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8005774:	6082      	str	r2, [r0, #8]
 8005776:	689a      	ldr	r2, [r3, #8]
 8005778:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800577c:	60c2      	str	r2, [r0, #12]
 800577e:	689b      	ldr	r3, [r3, #8]
 8005780:	08db      	lsrs	r3, r3, #3
 8005782:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8005786:	6103      	str	r3, [r0, #16]
 8005788:	4b03      	ldr	r3, [pc, #12]	; (8005798 <HAL_RCC_GetClockConfig+0x38>)
 800578a:	681b      	ldr	r3, [r3, #0]
 800578c:	f003 030f 	and.w	r3, r3, #15
 8005790:	600b      	str	r3, [r1, #0]
 8005792:	4770      	bx	lr
 8005794:	40023800 	.word	0x40023800
 8005798:	40023c00 	.word	0x40023c00

0800579c <HAL_MspInit>:
 800579c:	4770      	bx	lr
	...

080057a0 <HAL_PWREx_EnableOverDrive>:
 80057a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80057a2:	2300      	movs	r3, #0
 80057a4:	9301      	str	r3, [sp, #4]
 80057a6:	4b22      	ldr	r3, [pc, #136]	; (8005830 <HAL_PWREx_EnableOverDrive+0x90>)
 80057a8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80057aa:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80057ae:	641a      	str	r2, [r3, #64]	; 0x40
 80057b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80057b2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80057b6:	9301      	str	r3, [sp, #4]
 80057b8:	9b01      	ldr	r3, [sp, #4]
 80057ba:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80057be:	fa93 f3a3 	rbit	r3, r3
 80057c2:	fab3 f383 	clz	r3, r3
 80057c6:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80057ca:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 80057ce:	009b      	lsls	r3, r3, #2
 80057d0:	2201      	movs	r2, #1
 80057d2:	601a      	str	r2, [r3, #0]
 80057d4:	f000 f850 	bl	8005878 <HAL_GetTick>
 80057d8:	4c16      	ldr	r4, [pc, #88]	; (8005834 <HAL_PWREx_EnableOverDrive+0x94>)
 80057da:	4605      	mov	r5, r0
 80057dc:	6863      	ldr	r3, [r4, #4]
 80057de:	03da      	lsls	r2, r3, #15
 80057e0:	d515      	bpl.n	800580e <HAL_PWREx_EnableOverDrive+0x6e>
 80057e2:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80057e6:	fa93 f3a3 	rbit	r3, r3
 80057ea:	fab3 f383 	clz	r3, r3
 80057ee:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80057f2:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 80057f6:	009b      	lsls	r3, r3, #2
 80057f8:	2201      	movs	r2, #1
 80057fa:	601a      	str	r2, [r3, #0]
 80057fc:	f000 f83c 	bl	8005878 <HAL_GetTick>
 8005800:	4c0c      	ldr	r4, [pc, #48]	; (8005834 <HAL_PWREx_EnableOverDrive+0x94>)
 8005802:	4605      	mov	r5, r0
 8005804:	6863      	ldr	r3, [r4, #4]
 8005806:	039b      	lsls	r3, r3, #14
 8005808:	d50a      	bpl.n	8005820 <HAL_PWREx_EnableOverDrive+0x80>
 800580a:	2000      	movs	r0, #0
 800580c:	e006      	b.n	800581c <HAL_PWREx_EnableOverDrive+0x7c>
 800580e:	f000 f833 	bl	8005878 <HAL_GetTick>
 8005812:	1b40      	subs	r0, r0, r5
 8005814:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005818:	d9e0      	bls.n	80057dc <HAL_PWREx_EnableOverDrive+0x3c>
 800581a:	2003      	movs	r0, #3
 800581c:	b003      	add	sp, #12
 800581e:	bd30      	pop	{r4, r5, pc}
 8005820:	f000 f82a 	bl	8005878 <HAL_GetTick>
 8005824:	1b40      	subs	r0, r0, r5
 8005826:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800582a:	d9eb      	bls.n	8005804 <HAL_PWREx_EnableOverDrive+0x64>
 800582c:	e7f5      	b.n	800581a <HAL_PWREx_EnableOverDrive+0x7a>
 800582e:	bf00      	nop
 8005830:	40023800 	.word	0x40023800
 8005834:	40007000 	.word	0x40007000

08005838 <HAL_Init>:
 8005838:	b508      	push	{r3, lr}
 800583a:	4b0a      	ldr	r3, [pc, #40]	; (8005864 <HAL_Init+0x2c>)
 800583c:	681a      	ldr	r2, [r3, #0]
 800583e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005842:	601a      	str	r2, [r3, #0]
 8005844:	681a      	ldr	r2, [r3, #0]
 8005846:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800584a:	601a      	str	r2, [r3, #0]
 800584c:	681a      	ldr	r2, [r3, #0]
 800584e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005852:	601a      	str	r2, [r3, #0]
 8005854:	200f      	movs	r0, #15
 8005856:	f7fd fff3 	bl	8003840 <HAL_InitTick>
 800585a:	f7ff ff9f 	bl	800579c <HAL_MspInit>
 800585e:	2000      	movs	r0, #0
 8005860:	bd08      	pop	{r3, pc}
 8005862:	bf00      	nop
 8005864:	40023c00 	.word	0x40023c00

08005868 <HAL_IncTick>:
 8005868:	4a02      	ldr	r2, [pc, #8]	; (8005874 <HAL_IncTick+0xc>)
 800586a:	6813      	ldr	r3, [r2, #0]
 800586c:	3301      	adds	r3, #1
 800586e:	6013      	str	r3, [r2, #0]
 8005870:	4770      	bx	lr
 8005872:	bf00      	nop
 8005874:	20002930 	.word	0x20002930

08005878 <HAL_GetTick>:
 8005878:	4b01      	ldr	r3, [pc, #4]	; (8005880 <HAL_GetTick+0x8>)
 800587a:	6818      	ldr	r0, [r3, #0]
 800587c:	4770      	bx	lr
 800587e:	bf00      	nop
 8005880:	20002930 	.word	0x20002930

08005884 <mbed::donothing()>:
 8005884:	4770      	bx	lr

08005886 <mbed::SerialBase::lock()>:
 8005886:	4770      	bx	lr

08005888 <mbed::SerialBase::unlock()>:
 8005888:	4770      	bx	lr

0800588a <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 800588a:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 800588e:	f102 0098 	add.w	r0, r2, #152	; 0x98
 8005892:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 8005896:	681b      	ldr	r3, [r3, #0]
 8005898:	4718      	bx	r3

0800589a <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))>:
 800589a:	b410      	push	{r4}
 800589c:	b180      	cbz	r0, 80058c0 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 800589e:	6814      	ldr	r4, [r2, #0]
 80058a0:	6853      	ldr	r3, [r2, #4]
 80058a2:	b90c      	cbnz	r4, 80058a8 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0xe>
 80058a4:	07da      	lsls	r2, r3, #31
 80058a6:	d50b      	bpl.n	80058c0 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 80058a8:	f013 0f01 	tst.w	r3, #1
 80058ac:	ea4f 0363 	mov.w	r3, r3, asr #1
 80058b0:	bf1c      	itt	ne
 80058b2:	58c2      	ldrne	r2, [r0, r3]
 80058b4:	5914      	ldrne	r4, [r2, r4]
 80058b6:	4418      	add	r0, r3
 80058b8:	4623      	mov	r3, r4
 80058ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 80058be:	4718      	bx	r3
 80058c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80058c4:	4770      	bx	lr

080058c6 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 80058c6:	6803      	ldr	r3, [r0, #0]
 80058c8:	4718      	bx	r3

080058ca <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 80058ca:	b108      	cbz	r0, 80058d0 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 80058cc:	680b      	ldr	r3, [r1, #0]
 80058ce:	6003      	str	r3, [r0, #0]
 80058d0:	4770      	bx	lr

080058d2 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 80058d2:	4770      	bx	lr

080058d4 <mbed::SerialBase::baud(int)>:
 80058d4:	b570      	push	{r4, r5, r6, lr}
 80058d6:	4605      	mov	r5, r0
 80058d8:	4604      	mov	r4, r0
 80058da:	f855 3b4c 	ldr.w	r3, [r5], #76
 80058de:	460e      	mov	r6, r1
 80058e0:	681b      	ldr	r3, [r3, #0]
 80058e2:	4798      	blx	r3
 80058e4:	4628      	mov	r0, r5
 80058e6:	4631      	mov	r1, r6
 80058e8:	f7fe fc4a 	bl	8004180 <serial_baud>
 80058ec:	6823      	ldr	r3, [r4, #0]
 80058ee:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 80058f2:	4620      	mov	r0, r4
 80058f4:	685b      	ldr	r3, [r3, #4]
 80058f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80058fa:	4718      	bx	r3

080058fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 80058fc:	4288      	cmp	r0, r1
 80058fe:	b538      	push	{r3, r4, r5, lr}
 8005900:	4604      	mov	r4, r0
 8005902:	460d      	mov	r5, r1
 8005904:	d00a      	beq.n	800591c <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8005906:	f7fc fa42 	bl	8001d8e <mbed::Callback<void ()>::~Callback()>
 800590a:	b13c      	cbz	r4, 800591c <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 800590c:	68eb      	ldr	r3, [r5, #12]
 800590e:	b11b      	cbz	r3, 8005918 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8005910:	685b      	ldr	r3, [r3, #4]
 8005912:	4629      	mov	r1, r5
 8005914:	4620      	mov	r0, r4
 8005916:	4798      	blx	r3
 8005918:	68eb      	ldr	r3, [r5, #12]
 800591a:	60e3      	str	r3, [r4, #12]
 800591c:	4620      	mov	r0, r4
 800591e:	bd38      	pop	{r3, r4, r5, pc}

08005920 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 8005920:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005924:	b087      	sub	sp, #28
 8005926:	2500      	movs	r5, #0
 8005928:	4691      	mov	r9, r2
 800592a:	9500      	str	r5, [sp, #0]
 800592c:	4602      	mov	r2, r0
 800592e:	9501      	str	r5, [sp, #4]
 8005930:	4604      	mov	r4, r0
 8005932:	4688      	mov	r8, r1
 8005934:	461f      	mov	r7, r3
 8005936:	e89d 0003 	ldmia.w	sp, {r0, r1}
 800593a:	4b27      	ldr	r3, [pc, #156]	; (80059d8 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xb8>)
 800593c:	f842 3b08 	str.w	r3, [r2], #8
 8005940:	4b26      	ldr	r3, [pc, #152]	; (80059dc <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xbc>)
 8005942:	e882 0003 	stmia.w	r2, {r0, r1}
 8005946:	6123      	str	r3, [r4, #16]
 8005948:	f248 0307 	movw	r3, #32775	; 0x8007
 800594c:	6163      	str	r3, [r4, #20]
 800594e:	4b24      	ldr	r3, [pc, #144]	; (80059e0 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc0>)
 8005950:	61e5      	str	r5, [r4, #28]
 8005952:	61a4      	str	r4, [r4, #24]
 8005954:	6222      	str	r2, [r4, #32]
 8005956:	6263      	str	r3, [r4, #36]	; 0x24
 8005958:	f3bf 8f6f 	isb	sy
 800595c:	f3bf 8f4f 	dsb	sy
 8005960:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8005964:	224c      	movs	r2, #76	; 0x4c
 8005966:	6365      	str	r5, [r4, #52]	; 0x34
 8005968:	6465      	str	r5, [r4, #68]	; 0x44
 800596a:	f884 5048 	strb.w	r5, [r4, #72]	; 0x48
 800596e:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 8005972:	4630      	mov	r0, r6
 8005974:	f000 ff41 	bl	80067fa <memset>
 8005978:	a902      	add	r1, sp, #8
 800597a:	f8c4 50a4 	str.w	r5, [r4, #164]	; 0xa4
 800597e:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 8005982:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 8005986:	4d17      	ldr	r5, [pc, #92]	; (80059e4 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc4>)
 8005988:	4f17      	ldr	r7, [pc, #92]	; (80059e8 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc8>)
 800598a:	9702      	str	r7, [sp, #8]
 800598c:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8005990:	9505      	str	r5, [sp, #20]
 8005992:	f7ff ffb3 	bl	80058fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005996:	a802      	add	r0, sp, #8
 8005998:	f7fc f9f9 	bl	8001d8e <mbed::Callback<void ()>::~Callback()>
 800599c:	a902      	add	r1, sp, #8
 800599e:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 80059a2:	9702      	str	r7, [sp, #8]
 80059a4:	9505      	str	r5, [sp, #20]
 80059a6:	f7ff ffa9 	bl	80058fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80059aa:	a802      	add	r0, sp, #8
 80059ac:	f7fc f9ef 	bl	8001d8e <mbed::Callback<void ()>::~Callback()>
 80059b0:	464a      	mov	r2, r9
 80059b2:	4641      	mov	r1, r8
 80059b4:	4630      	mov	r0, r6
 80059b6:	f7fe faf3 	bl	8003fa0 <serial_init>
 80059ba:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 80059be:	4630      	mov	r0, r6
 80059c0:	f7fe fbde 	bl	8004180 <serial_baud>
 80059c4:	4630      	mov	r0, r6
 80059c6:	4622      	mov	r2, r4
 80059c8:	4908      	ldr	r1, [pc, #32]	; (80059ec <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xcc>)
 80059ca:	f7fe fbdd 	bl	8004188 <serial_irq_handler>
 80059ce:	4620      	mov	r0, r4
 80059d0:	b007      	add	sp, #28
 80059d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80059d6:	bf00      	nop
 80059d8:	08007758 	.word	0x08007758
 80059dc:	e890a001 	.word	0xe890a001
 80059e0:	0800589b 	.word	0x0800589b
 80059e4:	08007744 	.word	0x08007744
 80059e8:	08005885 	.word	0x08005885
 80059ec:	0800588b 	.word	0x0800588b

080059f0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 80059f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80059f4:	4605      	mov	r5, r0
 80059f6:	4688      	mov	r8, r1
 80059f8:	f855 3b4c 	ldr.w	r3, [r5], #76
 80059fc:	681b      	ldr	r3, [r3, #0]
 80059fe:	4604      	mov	r4, r0
 8005a00:	4616      	mov	r6, r2
 8005a02:	4798      	blx	r3
 8005a04:	f7fc fc46 	bl	8002294 <core_util_critical_section_enter>
 8005a08:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8005a0c:	0130      	lsls	r0, r6, #4
 8005a0e:	b197      	cbz	r7, 8005a36 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8005a10:	3098      	adds	r0, #152	; 0x98
 8005a12:	4641      	mov	r1, r8
 8005a14:	4420      	add	r0, r4
 8005a16:	f7ff ff71 	bl	80058fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005a1a:	2201      	movs	r2, #1
 8005a1c:	4631      	mov	r1, r6
 8005a1e:	4628      	mov	r0, r5
 8005a20:	f7fe fbbe 	bl	80041a0 <serial_irq_set>
 8005a24:	f7fc fc4c 	bl	80022c0 <core_util_critical_section_exit>
 8005a28:	6823      	ldr	r3, [r4, #0]
 8005a2a:	4620      	mov	r0, r4
 8005a2c:	685b      	ldr	r3, [r3, #4]
 8005a2e:	4798      	blx	r3
 8005a30:	b004      	add	sp, #16
 8005a32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005a36:	4b07      	ldr	r3, [pc, #28]	; (8005a54 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 8005a38:	9300      	str	r3, [sp, #0]
 8005a3a:	3098      	adds	r0, #152	; 0x98
 8005a3c:	4b06      	ldr	r3, [pc, #24]	; (8005a58 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 8005a3e:	9303      	str	r3, [sp, #12]
 8005a40:	4669      	mov	r1, sp
 8005a42:	4420      	add	r0, r4
 8005a44:	f7ff ff5a 	bl	80058fc <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005a48:	4668      	mov	r0, sp
 8005a4a:	f7fc f9a0 	bl	8001d8e <mbed::Callback<void ()>::~Callback()>
 8005a4e:	463a      	mov	r2, r7
 8005a50:	e7e4      	b.n	8005a1c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 8005a52:	bf00      	nop
 8005a54:	08005885 	.word	0x08005885
 8005a58:	08007744 	.word	0x08007744

08005a5c <mbed::RawSerial::lock()>:
 8005a5c:	4770      	bx	lr
	...

08005a60 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8005a60:	b510      	push	{r4, lr}
 8005a62:	4604      	mov	r4, r0
 8005a64:	f7ff ff5c 	bl	8005920 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8005a68:	4b01      	ldr	r3, [pc, #4]	; (8005a70 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8005a6a:	6023      	str	r3, [r4, #0]
 8005a6c:	4620      	mov	r0, r4
 8005a6e:	bd10      	pop	{r4, pc}
 8005a70:	08007770 	.word	0x08007770

08005a74 <mbed::RawSerial::~RawSerial()>:
 8005a74:	b510      	push	{r4, lr}
 8005a76:	4b03      	ldr	r3, [pc, #12]	; (8005a84 <mbed::RawSerial::~RawSerial()+0x10>)
 8005a78:	6003      	str	r3, [r0, #0]
 8005a7a:	4604      	mov	r4, r0
 8005a7c:	f7fc f9ca 	bl	8001e14 <mbed::SerialBase::~SerialBase()>
 8005a80:	4620      	mov	r0, r4
 8005a82:	bd10      	pop	{r4, pc}
 8005a84:	08007770 	.word	0x08007770

08005a88 <mbed::RawSerial::~RawSerial()>:
 8005a88:	b510      	push	{r4, lr}
 8005a8a:	4604      	mov	r4, r0
 8005a8c:	f7ff fff2 	bl	8005a74 <mbed::RawSerial::~RawSerial()>
 8005a90:	4620      	mov	r0, r4
 8005a92:	f000 f9c3 	bl	8005e1c <operator delete(void*)>
 8005a96:	4620      	mov	r0, r4
 8005a98:	bd10      	pop	{r4, pc}

08005a9a <mbed::Timer::start()>:
 8005a9a:	b510      	push	{r4, lr}
 8005a9c:	4604      	mov	r4, r0
 8005a9e:	f7fc fbf9 	bl	8002294 <core_util_critical_section_enter>
 8005aa2:	6823      	ldr	r3, [r4, #0]
 8005aa4:	b92b      	cbnz	r3, 8005ab2 <mbed::Timer::start()+0x18>
 8005aa6:	68e0      	ldr	r0, [r4, #12]
 8005aa8:	f7fc fb89 	bl	80021be <ticker_read>
 8005aac:	2301      	movs	r3, #1
 8005aae:	6060      	str	r0, [r4, #4]
 8005ab0:	6023      	str	r3, [r4, #0]
 8005ab2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005ab6:	f7fc bc03 	b.w	80022c0 <core_util_critical_section_exit>

08005aba <mbed::Timer::slicetime()>:
 8005aba:	b538      	push	{r3, r4, r5, lr}
 8005abc:	4605      	mov	r5, r0
 8005abe:	f7fc fbe9 	bl	8002294 <core_util_critical_section_enter>
 8005ac2:	682c      	ldr	r4, [r5, #0]
 8005ac4:	b124      	cbz	r4, 8005ad0 <mbed::Timer::slicetime()+0x16>
 8005ac6:	68e8      	ldr	r0, [r5, #12]
 8005ac8:	f7fc fb79 	bl	80021be <ticker_read>
 8005acc:	686c      	ldr	r4, [r5, #4]
 8005ace:	1b04      	subs	r4, r0, r4
 8005ad0:	f7fc fbf6 	bl	80022c0 <core_util_critical_section_exit>
 8005ad4:	4620      	mov	r0, r4
 8005ad6:	bd38      	pop	{r3, r4, r5, pc}

08005ad8 <mbed::Timer::read_us()>:
 8005ad8:	b538      	push	{r3, r4, r5, lr}
 8005ada:	4605      	mov	r5, r0
 8005adc:	f7fc fbda 	bl	8002294 <core_util_critical_section_enter>
 8005ae0:	4628      	mov	r0, r5
 8005ae2:	68ac      	ldr	r4, [r5, #8]
 8005ae4:	f7ff ffe9 	bl	8005aba <mbed::Timer::slicetime()>
 8005ae8:	4404      	add	r4, r0
 8005aea:	f7fc fbe9 	bl	80022c0 <core_util_critical_section_exit>
 8005aee:	4620      	mov	r0, r4
 8005af0:	bd38      	pop	{r3, r4, r5, pc}

08005af2 <mbed::Timer::read_ms()>:
 8005af2:	b508      	push	{r3, lr}
 8005af4:	f7ff fff0 	bl	8005ad8 <mbed::Timer::read_us()>
 8005af8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005afc:	fb90 f0f3 	sdiv	r0, r0, r3
 8005b00:	bd08      	pop	{r3, pc}

08005b02 <mbed::Timer::reset()>:
 8005b02:	b510      	push	{r4, lr}
 8005b04:	4604      	mov	r4, r0
 8005b06:	f7fc fbc5 	bl	8002294 <core_util_critical_section_enter>
 8005b0a:	68e0      	ldr	r0, [r4, #12]
 8005b0c:	f7fc fb57 	bl	80021be <ticker_read>
 8005b10:	2300      	movs	r3, #0
 8005b12:	6060      	str	r0, [r4, #4]
 8005b14:	60a3      	str	r3, [r4, #8]
 8005b16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005b1a:	f7fc bbd1 	b.w	80022c0 <core_util_critical_section_exit>

08005b1e <mbed::Timer::Timer()>:
 8005b1e:	2300      	movs	r3, #0
 8005b20:	b510      	push	{r4, lr}
 8005b22:	6003      	str	r3, [r0, #0]
 8005b24:	6043      	str	r3, [r0, #4]
 8005b26:	6083      	str	r3, [r0, #8]
 8005b28:	4604      	mov	r4, r0
 8005b2a:	f7fc fb1b 	bl	8002164 <get_us_ticker_data>
 8005b2e:	60e0      	str	r0, [r4, #12]
 8005b30:	4620      	mov	r0, r4
 8005b32:	f7ff ffe6 	bl	8005b02 <mbed::Timer::reset()>
 8005b36:	4620      	mov	r0, r4
 8005b38:	bd10      	pop	{r4, pc}

08005b3a <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 8005b3a:	b538      	push	{r3, r4, r5, lr}
 8005b3c:	4604      	mov	r4, r0
 8005b3e:	b148      	cbz	r0, 8005b54 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8005b40:	3058      	adds	r0, #88	; 0x58
 8005b42:	42a0      	cmp	r0, r4
 8005b44:	d006      	beq.n	8005b54 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8005b46:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 8005b4a:	3814      	subs	r0, #20
 8005b4c:	f7fc f959 	bl	8001e02 <mbed::Callback<void (int)>::~Callback()>
 8005b50:	4628      	mov	r0, r5
 8005b52:	e7f6      	b.n	8005b42 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 8005b54:	4620      	mov	r0, r4
 8005b56:	bd38      	pop	{r3, r4, r5, pc}

08005b58 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 8005b58:	b570      	push	{r4, r5, r6, lr}
 8005b5a:	4c0e      	ldr	r4, [pc, #56]	; (8005b94 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 8005b5c:	4620      	mov	r0, r4
 8005b5e:	2500      	movs	r5, #0
 8005b60:	2628      	movs	r6, #40	; 0x28
 8005b62:	4632      	mov	r2, r6
 8005b64:	4629      	mov	r1, r5
 8005b66:	f840 5b04 	str.w	r5, [r0], #4
 8005b6a:	f000 fe46 	bl	80067fa <memset>
 8005b6e:	4632      	mov	r2, r6
 8005b70:	4629      	mov	r1, r5
 8005b72:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8005b76:	62e5      	str	r5, [r4, #44]	; 0x2c
 8005b78:	f000 fe3f 	bl	80067fa <memset>
 8005b7c:	65a5      	str	r5, [r4, #88]	; 0x58
 8005b7e:	4620      	mov	r0, r4
 8005b80:	65e5      	str	r5, [r4, #92]	; 0x5c
 8005b82:	4a05      	ldr	r2, [pc, #20]	; (8005b98 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 8005b84:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 8005b88:	4904      	ldr	r1, [pc, #16]	; (8005b9c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 8005b8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005b8e:	f000 b927 	b.w	8005de0 <__aeabi_atexit>
 8005b92:	bf00      	nop
 8005b94:	20001ccc 	.word	0x20001ccc
 8005b98:	200001c4 	.word	0x200001c4
 8005b9c:	08005b3b 	.word	0x08005b3b

08005ba0 <__wrap__malloc_r>:
 8005ba0:	f000 be82 	b.w	80068a8 <_malloc_r>

08005ba4 <__wrap__realloc_r>:
 8005ba4:	f000 bede 	b.w	8006964 <_realloc_r>

08005ba8 <__wrap__free_r>:
 8005ba8:	f000 be30 	b.w	800680c <_free_r>

08005bac <wait_us>:
 8005bac:	b570      	push	{r4, r5, r6, lr}
 8005bae:	4605      	mov	r5, r0
 8005bb0:	f7fe f858 	bl	8003c64 <us_ticker_read>
 8005bb4:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8005bb8:	fb95 f4f4 	sdiv	r4, r5, r4
 8005bbc:	2c00      	cmp	r4, #0
 8005bbe:	4606      	mov	r6, r0
 8005bc0:	dd02      	ble.n	8005bc8 <wait_us+0x1c>
 8005bc2:	f7fc fb61 	bl	8002288 <core_util_are_interrupts_enabled>
 8005bc6:	b928      	cbnz	r0, 8005bd4 <wait_us+0x28>
 8005bc8:	f7fe f84c 	bl	8003c64 <us_ticker_read>
 8005bcc:	1b80      	subs	r0, r0, r6
 8005bce:	42a8      	cmp	r0, r5
 8005bd0:	d3fa      	bcc.n	8005bc8 <wait_us+0x1c>
 8005bd2:	bd70      	pop	{r4, r5, r6, pc}
 8005bd4:	4620      	mov	r0, r4
 8005bd6:	f000 f92b 	bl	8005e30 <rtos::Thread::wait(unsigned long)>
 8005bda:	e7f5      	b.n	8005bc8 <wait_us+0x1c>

08005bdc <wait_ms>:
 8005bdc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005be0:	4358      	muls	r0, r3
 8005be2:	f7ff bfe3 	b.w	8005bac <wait_us>
	...

08005be8 <init_serial()>:
 8005be8:	b508      	push	{r3, lr}
 8005bea:	4b08      	ldr	r3, [pc, #32]	; (8005c0c <init_serial()+0x24>)
 8005bec:	681b      	ldr	r3, [r3, #0]
 8005bee:	b95b      	cbnz	r3, 8005c08 <init_serial()+0x20>
 8005bf0:	2102      	movs	r1, #2
 8005bf2:	4807      	ldr	r0, [pc, #28]	; (8005c10 <init_serial()+0x28>)
 8005bf4:	2203      	movs	r2, #3
 8005bf6:	f7fe f9d3 	bl	8003fa0 <serial_init>
 8005bfa:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 8005bfe:	4804      	ldr	r0, [pc, #16]	; (8005c10 <init_serial()+0x28>)
 8005c00:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005c04:	f7fe babc 	b.w	8004180 <serial_baud>
 8005c08:	bd08      	pop	{r3, pc}
 8005c0a:	bf00      	nop
 8005c0c:	20001ac8 	.word	0x20001ac8
 8005c10:	200028e4 	.word	0x200028e4

08005c14 <_close>:
 8005c14:	2802      	cmp	r0, #2
 8005c16:	b510      	push	{r4, lr}
 8005c18:	4604      	mov	r4, r0
 8005c1a:	dc01      	bgt.n	8005c20 <_close+0xc>
 8005c1c:	2000      	movs	r0, #0
 8005c1e:	bd10      	pop	{r4, pc}
 8005c20:	f000 fba8 	bl	8006374 <__errno>
 8005c24:	2309      	movs	r3, #9
 8005c26:	6003      	str	r3, [r0, #0]
 8005c28:	3c03      	subs	r4, #3
 8005c2a:	4b09      	ldr	r3, [pc, #36]	; (8005c50 <_close+0x3c>)
 8005c2c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005c30:	2200      	movs	r2, #0
 8005c32:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8005c36:	b140      	cbz	r0, 8005c4a <_close+0x36>
 8005c38:	6803      	ldr	r3, [r0, #0]
 8005c3a:	691b      	ldr	r3, [r3, #16]
 8005c3c:	4798      	blx	r3
 8005c3e:	1e04      	subs	r4, r0, #0
 8005c40:	daec      	bge.n	8005c1c <_close+0x8>
 8005c42:	f000 fb97 	bl	8006374 <__errno>
 8005c46:	4264      	negs	r4, r4
 8005c48:	6004      	str	r4, [r0, #0]
 8005c4a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005c4e:	bd10      	pop	{r4, pc}
 8005c50:	20001d30 	.word	0x20001d30

08005c54 <_write>:
 8005c54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005c56:	4605      	mov	r5, r0
 8005c58:	460e      	mov	r6, r1
 8005c5a:	4614      	mov	r4, r2
 8005c5c:	f000 fb8a 	bl	8006374 <__errno>
 8005c60:	2309      	movs	r3, #9
 8005c62:	2d02      	cmp	r5, #2
 8005c64:	6003      	str	r3, [r0, #0]
 8005c66:	dc0f      	bgt.n	8005c88 <_write+0x34>
 8005c68:	4b12      	ldr	r3, [pc, #72]	; (8005cb4 <_write+0x60>)
 8005c6a:	681b      	ldr	r3, [r3, #0]
 8005c6c:	b90b      	cbnz	r3, 8005c72 <_write+0x1e>
 8005c6e:	f7ff ffbb 	bl	8005be8 <init_serial()>
 8005c72:	4635      	mov	r5, r6
 8005c74:	1937      	adds	r7, r6, r4
 8005c76:	4e10      	ldr	r6, [pc, #64]	; (8005cb8 <_write+0x64>)
 8005c78:	42bd      	cmp	r5, r7
 8005c7a:	d015      	beq.n	8005ca8 <_write+0x54>
 8005c7c:	f815 1b01 	ldrb.w	r1, [r5], #1
 8005c80:	4630      	mov	r0, r6
 8005c82:	f7fe fb11 	bl	80042a8 <serial_putc>
 8005c86:	e7f7      	b.n	8005c78 <_write+0x24>
 8005c88:	3d03      	subs	r5, #3
 8005c8a:	4b0c      	ldr	r3, [pc, #48]	; (8005cbc <_write+0x68>)
 8005c8c:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005c90:	b160      	cbz	r0, 8005cac <_write+0x58>
 8005c92:	6803      	ldr	r3, [r0, #0]
 8005c94:	4622      	mov	r2, r4
 8005c96:	68db      	ldr	r3, [r3, #12]
 8005c98:	4631      	mov	r1, r6
 8005c9a:	4798      	blx	r3
 8005c9c:	1e04      	subs	r4, r0, #0
 8005c9e:	da03      	bge.n	8005ca8 <_write+0x54>
 8005ca0:	f000 fb68 	bl	8006374 <__errno>
 8005ca4:	4263      	negs	r3, r4
 8005ca6:	6003      	str	r3, [r0, #0]
 8005ca8:	4620      	mov	r0, r4
 8005caa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005cac:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8005cb0:	e7fa      	b.n	8005ca8 <_write+0x54>
 8005cb2:	bf00      	nop
 8005cb4:	20001ac8 	.word	0x20001ac8
 8005cb8:	200028e4 	.word	0x200028e4
 8005cbc:	20001d30 	.word	0x20001d30

08005cc0 <_read>:
 8005cc0:	b570      	push	{r4, r5, r6, lr}
 8005cc2:	4604      	mov	r4, r0
 8005cc4:	460d      	mov	r5, r1
 8005cc6:	4616      	mov	r6, r2
 8005cc8:	f000 fb54 	bl	8006374 <__errno>
 8005ccc:	2309      	movs	r3, #9
 8005cce:	2c02      	cmp	r4, #2
 8005cd0:	6003      	str	r3, [r0, #0]
 8005cd2:	dc0b      	bgt.n	8005cec <_read+0x2c>
 8005cd4:	4b0f      	ldr	r3, [pc, #60]	; (8005d14 <_read+0x54>)
 8005cd6:	681b      	ldr	r3, [r3, #0]
 8005cd8:	b90b      	cbnz	r3, 8005cde <_read+0x1e>
 8005cda:	f7ff ff85 	bl	8005be8 <init_serial()>
 8005cde:	480e      	ldr	r0, [pc, #56]	; (8005d18 <_read+0x58>)
 8005ce0:	f7fe fac6 	bl	8004270 <serial_getc>
 8005ce4:	2401      	movs	r4, #1
 8005ce6:	7028      	strb	r0, [r5, #0]
 8005ce8:	4620      	mov	r0, r4
 8005cea:	bd70      	pop	{r4, r5, r6, pc}
 8005cec:	3c03      	subs	r4, #3
 8005cee:	4b0b      	ldr	r3, [pc, #44]	; (8005d1c <_read+0x5c>)
 8005cf0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005cf4:	b158      	cbz	r0, 8005d0e <_read+0x4e>
 8005cf6:	6803      	ldr	r3, [r0, #0]
 8005cf8:	4632      	mov	r2, r6
 8005cfa:	689b      	ldr	r3, [r3, #8]
 8005cfc:	4629      	mov	r1, r5
 8005cfe:	4798      	blx	r3
 8005d00:	1e04      	subs	r4, r0, #0
 8005d02:	daf1      	bge.n	8005ce8 <_read+0x28>
 8005d04:	f000 fb36 	bl	8006374 <__errno>
 8005d08:	4263      	negs	r3, r4
 8005d0a:	6003      	str	r3, [r0, #0]
 8005d0c:	e7ec      	b.n	8005ce8 <_read+0x28>
 8005d0e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8005d12:	e7e9      	b.n	8005ce8 <_read+0x28>
 8005d14:	20001ac8 	.word	0x20001ac8
 8005d18:	200028e4 	.word	0x200028e4
 8005d1c:	20001d30 	.word	0x20001d30

08005d20 <_lseek>:
 8005d20:	b570      	push	{r4, r5, r6, lr}
 8005d22:	4604      	mov	r4, r0
 8005d24:	460d      	mov	r5, r1
 8005d26:	4616      	mov	r6, r2
 8005d28:	f000 fb24 	bl	8006374 <__errno>
 8005d2c:	2309      	movs	r3, #9
 8005d2e:	2c02      	cmp	r4, #2
 8005d30:	6003      	str	r3, [r0, #0]
 8005d32:	dd0b      	ble.n	8005d4c <_lseek+0x2c>
 8005d34:	3c03      	subs	r4, #3
 8005d36:	4b08      	ldr	r3, [pc, #32]	; (8005d58 <_lseek+0x38>)
 8005d38:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005d3c:	b140      	cbz	r0, 8005d50 <_lseek+0x30>
 8005d3e:	6803      	ldr	r3, [r0, #0]
 8005d40:	4632      	mov	r2, r6
 8005d42:	4629      	mov	r1, r5
 8005d44:	69db      	ldr	r3, [r3, #28]
 8005d46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005d4a:	4718      	bx	r3
 8005d4c:	2000      	movs	r0, #0
 8005d4e:	bd70      	pop	{r4, r5, r6, pc}
 8005d50:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005d54:	bd70      	pop	{r4, r5, r6, pc}
 8005d56:	bf00      	nop
 8005d58:	20001d30 	.word	0x20001d30

08005d5c <software_init_hook>:
 8005d5c:	b508      	push	{r3, lr}
 8005d5e:	f7fe fab5 	bl	80042cc <mbed_sdk_init>
 8005d62:	f7fc fc21 	bl	80025a8 <software_init_hook_rtos>
 8005d66:	bd08      	pop	{r3, pc}

08005d68 <mbed_main>:
 8005d68:	4770      	bx	lr

08005d6a <__wrap_main>:
 8005d6a:	b508      	push	{r3, lr}
 8005d6c:	f7ff fffc 	bl	8005d68 <mbed_main>
 8005d70:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8005d74:	f7fb bf2e 	b.w	8001bd4 <main>

08005d78 <_sbrk>:
 8005d78:	4a0c      	ldr	r2, [pc, #48]	; (8005dac <_sbrk+0x34>)
 8005d7a:	6813      	ldr	r3, [r2, #0]
 8005d7c:	b510      	push	{r4, lr}
 8005d7e:	4418      	add	r0, r3
 8005d80:	f3ef 8108 	mrs	r1, MSP
 8005d84:	4288      	cmp	r0, r1
 8005d86:	d305      	bcc.n	8005d94 <_sbrk+0x1c>
 8005d88:	4b09      	ldr	r3, [pc, #36]	; (8005db0 <_sbrk+0x38>)
 8005d8a:	220c      	movs	r2, #12
 8005d8c:	601a      	str	r2, [r3, #0]
 8005d8e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005d92:	bd10      	pop	{r4, pc}
 8005d94:	4907      	ldr	r1, [pc, #28]	; (8005db4 <_sbrk+0x3c>)
 8005d96:	680c      	ldr	r4, [r1, #0]
 8005d98:	b124      	cbz	r4, 8005da4 <_sbrk+0x2c>
 8005d9a:	4907      	ldr	r1, [pc, #28]	; (8005db8 <_sbrk+0x40>)
 8005d9c:	6809      	ldr	r1, [r1, #0]
 8005d9e:	4421      	add	r1, r4
 8005da0:	4288      	cmp	r0, r1
 8005da2:	d2f1      	bcs.n	8005d88 <_sbrk+0x10>
 8005da4:	6010      	str	r0, [r2, #0]
 8005da6:	4618      	mov	r0, r3
 8005da8:	bd10      	pop	{r4, pc}
 8005daa:	bf00      	nop
 8005dac:	200001e4 	.word	0x200001e4
 8005db0:	20002934 	.word	0x20002934
 8005db4:	20001e30 	.word	0x20001e30
 8005db8:	20001e34 	.word	0x20001e34

08005dbc <_exit>:
 8005dbc:	4c07      	ldr	r4, [pc, #28]	; (8005ddc <_exit+0x20>)
 8005dbe:	b508      	push	{r3, lr}
 8005dc0:	6823      	ldr	r3, [r4, #0]
 8005dc2:	4605      	mov	r5, r0
 8005dc4:	6898      	ldr	r0, [r3, #8]
 8005dc6:	f000 fb8d 	bl	80064e4 <fflush>
 8005dca:	6823      	ldr	r3, [r4, #0]
 8005dcc:	68d8      	ldr	r0, [r3, #12]
 8005dce:	f000 fb89 	bl	80064e4 <fflush>
 8005dd2:	b10d      	cbz	r5, 8005dd8 <_exit+0x1c>
 8005dd4:	f7fc fa42 	bl	800225c <mbed_die>
 8005dd8:	e7fe      	b.n	8005dd8 <_exit+0x1c>
 8005dda:	bf00      	nop
 8005ddc:	200001e8 	.word	0x200001e8

08005de0 <__aeabi_atexit>:
 8005de0:	2001      	movs	r0, #1
 8005de2:	4770      	bx	lr

08005de4 <__wrap_exit>:
 8005de4:	b508      	push	{r3, lr}
 8005de6:	f7ff ffe9 	bl	8005dbc <_exit>

08005dea <__malloc_lock>:
 8005dea:	b508      	push	{r3, lr}
 8005dec:	f7fc fbea 	bl	80025c4 <__rtos_malloc_lock>
 8005df0:	bd08      	pop	{r3, pc}

08005df2 <__malloc_unlock>:
 8005df2:	b508      	push	{r3, lr}
 8005df4:	f7fc fbee 	bl	80025d4 <__rtos_malloc_unlock>
 8005df8:	bd08      	pop	{r3, pc}
	...

08005dfc <operator new[](unsigned int)>:
 8005dfc:	b510      	push	{r4, lr}
 8005dfe:	f000 fc71 	bl	80066e4 <malloc>
 8005e02:	4604      	mov	r4, r0
 8005e04:	b910      	cbnz	r0, 8005e0c <operator new[](unsigned int)+0x10>
 8005e06:	4802      	ldr	r0, [pc, #8]	; (8005e10 <operator new[](unsigned int)+0x14>)
 8005e08:	f7fc fa6e 	bl	80022e8 <error>
 8005e0c:	4620      	mov	r0, r4
 8005e0e:	bd10      	pop	{r4, pc}
 8005e10:	08007780 	.word	0x08007780

08005e14 <operator delete[](void*)>:
 8005e14:	b108      	cbz	r0, 8005e1a <operator delete[](void*)+0x6>
 8005e16:	f000 bc6d 	b.w	80066f4 <free>
 8005e1a:	4770      	bx	lr

08005e1c <operator delete(void*)>:
 8005e1c:	f7ff bffa 	b.w	8005e14 <operator delete[](void*)>

08005e20 <thread_terminate_hook>:
 8005e20:	4b02      	ldr	r3, [pc, #8]	; (8005e2c <thread_terminate_hook+0xc>)
 8005e22:	681b      	ldr	r3, [r3, #0]
 8005e24:	b103      	cbz	r3, 8005e28 <thread_terminate_hook+0x8>
 8005e26:	4718      	bx	r3
 8005e28:	4770      	bx	lr
 8005e2a:	bf00      	nop
 8005e2c:	20001e38 	.word	0x20001e38

08005e30 <rtos::Thread::wait(unsigned long)>:
 8005e30:	f7fc bfa6 	b.w	8002d80 <osDelay>

08005e34 <rt_set_PSP>:
 8005e34:	f380 8809 	msr	PSP, r0
 8005e38:	4770      	bx	lr

08005e3a <rt_get_PSP>:
 8005e3a:	f3ef 8009 	mrs	r0, PSP
 8005e3e:	4770      	bx	lr

08005e40 <os_set_env>:
 8005e40:	4668      	mov	r0, sp
 8005e42:	f380 8809 	msr	PSP, r0
 8005e46:	485a      	ldr	r0, [pc, #360]	; (8005fb0 <OS_Tick_Handler+0x10>)
 8005e48:	7800      	ldrb	r0, [r0, #0]
 8005e4a:	07c0      	lsls	r0, r0, #31
 8005e4c:	bf14      	ite	ne
 8005e4e:	2002      	movne	r0, #2
 8005e50:	2003      	moveq	r0, #3
 8005e52:	f380 8814 	msr	CONTROL, r0
 8005e56:	4770      	bx	lr

08005e58 <_alloc_box>:
 8005e58:	f8df c158 	ldr.w	r12, [pc, #344]	; 8005fb4 <OS_Tick_Handler+0x14>
 8005e5c:	f3ef 8305 	mrs	r3, IPSR
 8005e60:	061b      	lsls	r3, r3, #24
 8005e62:	bf18      	it	ne
 8005e64:	4760      	bxne	r12
 8005e66:	f3ef 8314 	mrs	r3, CONTROL
 8005e6a:	07db      	lsls	r3, r3, #31
 8005e6c:	bf08      	it	eq
 8005e6e:	4760      	bxeq	r12
 8005e70:	df00      	svc	0
 8005e72:	4770      	bx	lr

08005e74 <_free_box>:
 8005e74:	f8df c140 	ldr.w	r12, [pc, #320]	; 8005fb8 <OS_Tick_Handler+0x18>
 8005e78:	f3ef 8305 	mrs	r3, IPSR
 8005e7c:	061b      	lsls	r3, r3, #24
 8005e7e:	bf18      	it	ne
 8005e80:	4760      	bxne	r12
 8005e82:	f3ef 8314 	mrs	r3, CONTROL
 8005e86:	07db      	lsls	r3, r3, #31
 8005e88:	bf08      	it	eq
 8005e8a:	4760      	bxeq	r12
 8005e8c:	df00      	svc	0
 8005e8e:	4770      	bx	lr

08005e90 <SVC_Handler>:
 8005e90:	f3ef 8009 	mrs	r0, PSP
 8005e94:	6981      	ldr	r1, [r0, #24]
 8005e96:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 8005e9a:	bbe1      	cbnz	r1, 8005f16 <SVC_User>
 8005e9c:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8005ea0:	b510      	push	{r4, lr}
 8005ea2:	47e0      	blx	r12
 8005ea4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005ea8:	f3ef 8c09 	mrs	r12, PSP
 8005eac:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 8005eb0:	4b42      	ldr	r3, [pc, #264]	; (8005fbc <OS_Tick_Handler+0x1c>)
 8005eb2:	e893 0006 	ldmia.w	r3, {r1, r2}
 8005eb6:	4291      	cmp	r1, r2
 8005eb8:	bf08      	it	eq
 8005eba:	4770      	bxeq	lr
 8005ebc:	b941      	cbnz	r1, 8005ed0 <SVC_ContextSave>
 8005ebe:	f01e 0f10 	tst.w	lr, #16
 8005ec2:	d116      	bne.n	8005ef2 <SVC_ContextRestore>
 8005ec4:	493e      	ldr	r1, [pc, #248]	; (8005fc0 <OS_Tick_Handler+0x20>)
 8005ec6:	6808      	ldr	r0, [r1, #0]
 8005ec8:	f020 0001 	bic.w	r0, r0, #1
 8005ecc:	6008      	str	r0, [r1, #0]
 8005ece:	e010      	b.n	8005ef2 <SVC_ContextRestore>

08005ed0 <SVC_ContextSave>:
 8005ed0:	f01e 0f10 	tst.w	lr, #16
 8005ed4:	bf06      	itte	eq
 8005ed6:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8005eda:	2001      	moveq	r0, #1
 8005edc:	2000      	movne	r0, #0
 8005ede:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8005ee2:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005ee6:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8005eea:	b40c      	push	{r2, r3}
 8005eec:	f7fc fc5e 	bl	80027ac <rt_stk_check>
 8005ef0:	bc0c      	pop	{r2, r3}

08005ef2 <SVC_ContextRestore>:
 8005ef2:	601a      	str	r2, [r3, #0]
 8005ef4:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8005ef8:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005efc:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005f00:	2800      	cmp	r0, #0
 8005f02:	bf0e      	itee	eq
 8005f04:	f06f 0e02 	mvneq.w	lr, #2
 8005f08:	f06f 0e12 	mvnne.w	lr, #18
 8005f0c:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005f10:	f38c 8809 	msr	PSP, r12

08005f14 <SVC_Exit>:
 8005f14:	4770      	bx	lr

08005f16 <SVC_User>:
 8005f16:	b510      	push	{r4, lr}
 8005f18:	4a2a      	ldr	r2, [pc, #168]	; (8005fc4 <OS_Tick_Handler+0x24>)
 8005f1a:	6812      	ldr	r2, [r2, #0]
 8005f1c:	4291      	cmp	r1, r2
 8005f1e:	d809      	bhi.n	8005f34 <SVC_Done>
 8005f20:	4c29      	ldr	r4, [pc, #164]	; (8005fc8 <OS_Tick_Handler+0x28>)
 8005f22:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 8005f26:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8005f2a:	47a0      	blx	r4
 8005f2c:	f3ef 8c09 	mrs	r12, PSP
 8005f30:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

08005f34 <SVC_Done>:
 8005f34:	bd10      	pop	{r4, pc}

08005f36 <PendSV_Handler>:
 8005f36:	b510      	push	{r4, lr}
 8005f38:	f7fc fbc4 	bl	80026c4 <rt_pop_req>

08005f3c <Sys_Switch>:
 8005f3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005f40:	4b1e      	ldr	r3, [pc, #120]	; (8005fbc <OS_Tick_Handler+0x1c>)
 8005f42:	e893 0006 	ldmia.w	r3, {r1, r2}
 8005f46:	4291      	cmp	r1, r2
 8005f48:	bf08      	it	eq
 8005f4a:	4770      	bxeq	lr
 8005f4c:	f3ef 8c09 	mrs	r12, PSP
 8005f50:	f01e 0f10 	tst.w	lr, #16
 8005f54:	bf06      	itte	eq
 8005f56:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8005f5a:	2001      	moveq	r0, #1
 8005f5c:	2000      	movne	r0, #0
 8005f5e:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8005f62:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005f66:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8005f6a:	b40c      	push	{r2, r3}
 8005f6c:	f7fc fc1e 	bl	80027ac <rt_stk_check>
 8005f70:	bc0c      	pop	{r2, r3}
 8005f72:	601a      	str	r2, [r3, #0]
 8005f74:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8005f78:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005f7c:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005f80:	2800      	cmp	r0, #0
 8005f82:	bf0e      	itee	eq
 8005f84:	f06f 0e02 	mvneq.w	lr, #2
 8005f88:	f06f 0e12 	mvnne.w	lr, #18
 8005f8c:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005f90:	f38c 8809 	msr	PSP, r12

08005f94 <Sys_Exit>:
 8005f94:	4770      	bx	lr

08005f96 <SysTick_Handler>:
 8005f96:	b510      	push	{r4, lr}
 8005f98:	f7fc fbea 	bl	8002770 <rt_systick>
 8005f9c:	f7ff bfce 	b.w	8005f3c <Sys_Switch>

08005fa0 <OS_Tick_Handler>:
 8005fa0:	b510      	push	{r4, lr}
 8005fa2:	f7fc fbe3 	bl	800276c <os_tick_irqack>
 8005fa6:	f7fc fbe3 	bl	8002770 <rt_systick>
 8005faa:	f7ff bfc7 	b.w	8005f3c <Sys_Switch>
 8005fae:	0000      	.short	0x0000
 8005fb0:	08007592 	.word	0x08007592
 8005fb4:	0800281b 	.word	0x0800281b
 8005fb8:	08002835 	.word	0x08002835
 8005fbc:	2000285c 	.word	0x2000285c
 8005fc0:	e000ef34 	.word	0xe000ef34
 8005fc4:	00000000 	.word	0x00000000
 8005fc8:	fffffffc 	.word	0xfffffffc

08005fcc <Reset_Handler>:
 8005fcc:	f8df d020 	ldr.w	sp, [pc, #32]	; 8005ff0 <LoopCopyDataInit+0x14>
 8005fd0:	2100      	movs	r1, #0
 8005fd2:	e003      	b.n	8005fdc <LoopCopyDataInit>

08005fd4 <CopyDataInit>:
 8005fd4:	4b07      	ldr	r3, [pc, #28]	; (8005ff4 <LoopCopyDataInit+0x18>)
 8005fd6:	585b      	ldr	r3, [r3, r1]
 8005fd8:	5043      	str	r3, [r0, r1]
 8005fda:	3104      	adds	r1, #4

08005fdc <LoopCopyDataInit>:
 8005fdc:	4806      	ldr	r0, [pc, #24]	; (8005ff8 <LoopCopyDataInit+0x1c>)
 8005fde:	4b07      	ldr	r3, [pc, #28]	; (8005ffc <LoopCopyDataInit+0x20>)
 8005fe0:	1842      	adds	r2, r0, r1
 8005fe2:	429a      	cmp	r2, r3
 8005fe4:	d3f6      	bcc.n	8005fd4 <CopyDataInit>
 8005fe6:	f7fe fa7b 	bl	80044e0 <SystemInit>
 8005fea:	f7fb fe7b 	bl	8001ce4 <_start>
 8005fee:	4770      	bx	lr
 8005ff0:	20020000 	.word	0x20020000
 8005ff4:	08007844 	.word	0x08007844
 8005ff8:	200001c4 	.word	0x200001c4
 8005ffc:	20000260 	.word	0x20000260

08006000 <ADC_IRQHandler>:
 8006000:	e7fe      	b.n	8006000 <ADC_IRQHandler>
	...

08006004 <__aeabi_drsub>:
 8006004:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8006008:	e002      	b.n	8006010 <__adddf3>
 800600a:	bf00      	nop

0800600c <__aeabi_dsub>:
 800600c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08006010 <__adddf3>:
 8006010:	b530      	push	{r4, r5, lr}
 8006012:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8006016:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800601a:	ea94 0f05 	teq	r4, r5
 800601e:	bf08      	it	eq
 8006020:	ea90 0f02 	teqeq	r0, r2
 8006024:	bf1f      	itttt	ne
 8006026:	ea54 0c00 	orrsne.w	r12, r4, r0
 800602a:	ea55 0c02 	orrsne.w	r12, r5, r2
 800602e:	ea7f 5c64 	mvnsne.w	r12, r4, asr #21
 8006032:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 8006036:	f000 80e2 	beq.w	80061fe <__adddf3+0x1ee>
 800603a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800603e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8006042:	bfb8      	it	lt
 8006044:	426d      	neglt	r5, r5
 8006046:	dd0c      	ble.n	8006062 <__adddf3+0x52>
 8006048:	442c      	add	r4, r5
 800604a:	ea80 0202 	eor.w	r2, r0, r2
 800604e:	ea81 0303 	eor.w	r3, r1, r3
 8006052:	ea82 0000 	eor.w	r0, r2, r0
 8006056:	ea83 0101 	eor.w	r1, r3, r1
 800605a:	ea80 0202 	eor.w	r2, r0, r2
 800605e:	ea81 0303 	eor.w	r3, r1, r3
 8006062:	2d36      	cmp	r5, #54	; 0x36
 8006064:	bf88      	it	hi
 8006066:	bd30      	pophi	{r4, r5, pc}
 8006068:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800606c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8006070:	f44f 1c80 	mov.w	r12, #1048576	; 0x100000
 8006074:	ea4c 3111 	orr.w	r1, r12, r1, lsr #12
 8006078:	d002      	beq.n	8006080 <__adddf3+0x70>
 800607a:	4240      	negs	r0, r0
 800607c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8006080:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8006084:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8006088:	ea4c 3313 	orr.w	r3, r12, r3, lsr #12
 800608c:	d002      	beq.n	8006094 <__adddf3+0x84>
 800608e:	4252      	negs	r2, r2
 8006090:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8006094:	ea94 0f05 	teq	r4, r5
 8006098:	f000 80a7 	beq.w	80061ea <__adddf3+0x1da>
 800609c:	f1a4 0401 	sub.w	r4, r4, #1
 80060a0:	f1d5 0e20 	rsbs	lr, r5, #32
 80060a4:	db0d      	blt.n	80060c2 <__adddf3+0xb2>
 80060a6:	fa02 fc0e 	lsl.w	r12, r2, lr
 80060aa:	fa22 f205 	lsr.w	r2, r2, r5
 80060ae:	1880      	adds	r0, r0, r2
 80060b0:	f141 0100 	adc.w	r1, r1, #0
 80060b4:	fa03 f20e 	lsl.w	r2, r3, lr
 80060b8:	1880      	adds	r0, r0, r2
 80060ba:	fa43 f305 	asr.w	r3, r3, r5
 80060be:	4159      	adcs	r1, r3
 80060c0:	e00e      	b.n	80060e0 <__adddf3+0xd0>
 80060c2:	f1a5 0520 	sub.w	r5, r5, #32
 80060c6:	f10e 0e20 	add.w	lr, lr, #32
 80060ca:	2a01      	cmp	r2, #1
 80060cc:	fa03 fc0e 	lsl.w	r12, r3, lr
 80060d0:	bf28      	it	cs
 80060d2:	f04c 0c02 	orrcs.w	r12, r12, #2
 80060d6:	fa43 f305 	asr.w	r3, r3, r5
 80060da:	18c0      	adds	r0, r0, r3
 80060dc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80060e0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80060e4:	d507      	bpl.n	80060f6 <__adddf3+0xe6>
 80060e6:	f04f 0e00 	mov.w	lr, #0
 80060ea:	f1dc 0c00 	rsbs	r12, r12, #0
 80060ee:	eb7e 0000 	sbcs.w	r0, lr, r0
 80060f2:	eb6e 0101 	sbc.w	r1, lr, r1
 80060f6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80060fa:	d31b      	bcc.n	8006134 <__adddf3+0x124>
 80060fc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8006100:	d30c      	bcc.n	800611c <__adddf3+0x10c>
 8006102:	0849      	lsrs	r1, r1, #1
 8006104:	ea5f 0030 	movs.w	r0, r0, rrx
 8006108:	ea4f 0c3c 	mov.w	r12, r12, rrx
 800610c:	f104 0401 	add.w	r4, r4, #1
 8006110:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8006114:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8006118:	f080 809a 	bcs.w	8006250 <__adddf3+0x240>
 800611c:	f1bc 4f00 	cmp.w	r12, #2147483648	; 0x80000000
 8006120:	bf08      	it	eq
 8006122:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
 8006126:	f150 0000 	adcs.w	r0, r0, #0
 800612a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800612e:	ea41 0105 	orr.w	r1, r1, r5
 8006132:	bd30      	pop	{r4, r5, pc}
 8006134:	ea5f 0c4c 	movs.w	r12, r12, lsl #1
 8006138:	4140      	adcs	r0, r0
 800613a:	eb41 0101 	adc.w	r1, r1, r1
 800613e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006142:	f1a4 0401 	sub.w	r4, r4, #1
 8006146:	d1e9      	bne.n	800611c <__adddf3+0x10c>
 8006148:	f091 0f00 	teq	r1, #0
 800614c:	bf04      	itt	eq
 800614e:	4601      	moveq	r1, r0
 8006150:	2000      	moveq	r0, #0
 8006152:	fab1 f381 	clz	r3, r1
 8006156:	bf08      	it	eq
 8006158:	3320      	addeq	r3, #32
 800615a:	f1a3 030b 	sub.w	r3, r3, #11
 800615e:	f1b3 0220 	subs.w	r2, r3, #32
 8006162:	da0c      	bge.n	800617e <__adddf3+0x16e>
 8006164:	320c      	adds	r2, #12
 8006166:	dd08      	ble.n	800617a <__adddf3+0x16a>
 8006168:	f102 0c14 	add.w	r12, r2, #20
 800616c:	f1c2 020c 	rsb	r2, r2, #12
 8006170:	fa01 f00c 	lsl.w	r0, r1, r12
 8006174:	fa21 f102 	lsr.w	r1, r1, r2
 8006178:	e00c      	b.n	8006194 <__adddf3+0x184>
 800617a:	f102 0214 	add.w	r2, r2, #20
 800617e:	bfd8      	it	le
 8006180:	f1c2 0c20 	rsble	r12, r2, #32
 8006184:	fa01 f102 	lsl.w	r1, r1, r2
 8006188:	fa20 fc0c 	lsr.w	r12, r0, r12
 800618c:	bfdc      	itt	le
 800618e:	ea41 010c 	orrle.w	r1, r1, r12
 8006192:	4090      	lslle	r0, r2
 8006194:	1ae4      	subs	r4, r4, r3
 8006196:	bfa2      	ittt	ge
 8006198:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800619c:	4329      	orrge	r1, r5
 800619e:	bd30      	popge	{r4, r5, pc}
 80061a0:	ea6f 0404 	mvn.w	r4, r4
 80061a4:	3c1f      	subs	r4, #31
 80061a6:	da1c      	bge.n	80061e2 <__adddf3+0x1d2>
 80061a8:	340c      	adds	r4, #12
 80061aa:	dc0e      	bgt.n	80061ca <__adddf3+0x1ba>
 80061ac:	f104 0414 	add.w	r4, r4, #20
 80061b0:	f1c4 0220 	rsb	r2, r4, #32
 80061b4:	fa20 f004 	lsr.w	r0, r0, r4
 80061b8:	fa01 f302 	lsl.w	r3, r1, r2
 80061bc:	ea40 0003 	orr.w	r0, r0, r3
 80061c0:	fa21 f304 	lsr.w	r3, r1, r4
 80061c4:	ea45 0103 	orr.w	r1, r5, r3
 80061c8:	bd30      	pop	{r4, r5, pc}
 80061ca:	f1c4 040c 	rsb	r4, r4, #12
 80061ce:	f1c4 0220 	rsb	r2, r4, #32
 80061d2:	fa20 f002 	lsr.w	r0, r0, r2
 80061d6:	fa01 f304 	lsl.w	r3, r1, r4
 80061da:	ea40 0003 	orr.w	r0, r0, r3
 80061de:	4629      	mov	r1, r5
 80061e0:	bd30      	pop	{r4, r5, pc}
 80061e2:	fa21 f004 	lsr.w	r0, r1, r4
 80061e6:	4629      	mov	r1, r5
 80061e8:	bd30      	pop	{r4, r5, pc}
 80061ea:	f094 0f00 	teq	r4, #0
 80061ee:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80061f2:	bf06      	itte	eq
 80061f4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80061f8:	3401      	addeq	r4, #1
 80061fa:	3d01      	subne	r5, #1
 80061fc:	e74e      	b.n	800609c <__adddf3+0x8c>
 80061fe:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 8006202:	bf18      	it	ne
 8006204:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 8006208:	d029      	beq.n	800625e <__adddf3+0x24e>
 800620a:	ea94 0f05 	teq	r4, r5
 800620e:	bf08      	it	eq
 8006210:	ea90 0f02 	teqeq	r0, r2
 8006214:	d005      	beq.n	8006222 <__adddf3+0x212>
 8006216:	ea54 0c00 	orrs.w	r12, r4, r0
 800621a:	bf04      	itt	eq
 800621c:	4619      	moveq	r1, r3
 800621e:	4610      	moveq	r0, r2
 8006220:	bd30      	pop	{r4, r5, pc}
 8006222:	ea91 0f03 	teq	r1, r3
 8006226:	bf1e      	ittt	ne
 8006228:	2100      	movne	r1, #0
 800622a:	2000      	movne	r0, #0
 800622c:	bd30      	popne	{r4, r5, pc}
 800622e:	ea5f 5c54 	movs.w	r12, r4, lsr #21
 8006232:	d105      	bne.n	8006240 <__adddf3+0x230>
 8006234:	0040      	lsls	r0, r0, #1
 8006236:	4149      	adcs	r1, r1
 8006238:	bf28      	it	cs
 800623a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800623e:	bd30      	pop	{r4, r5, pc}
 8006240:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8006244:	bf3c      	itt	cc
 8006246:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800624a:	bd30      	popcc	{r4, r5, pc}
 800624c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8006250:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8006254:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006258:	f04f 0000 	mov.w	r0, #0
 800625c:	bd30      	pop	{r4, r5, pc}
 800625e:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 8006262:	bf1a      	itte	ne
 8006264:	4619      	movne	r1, r3
 8006266:	4610      	movne	r0, r2
 8006268:	ea7f 5c65 	mvnseq.w	r12, r5, asr #21
 800626c:	bf1c      	itt	ne
 800626e:	460b      	movne	r3, r1
 8006270:	4602      	movne	r2, r0
 8006272:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8006276:	bf06      	itte	eq
 8006278:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800627c:	ea91 0f03 	teqeq	r1, r3
 8006280:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8006284:	bd30      	pop	{r4, r5, pc}
 8006286:	bf00      	nop

08006288 <__aeabi_ui2d>:
 8006288:	f090 0f00 	teq	r0, #0
 800628c:	bf04      	itt	eq
 800628e:	2100      	moveq	r1, #0
 8006290:	4770      	bxeq	lr
 8006292:	b530      	push	{r4, r5, lr}
 8006294:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8006298:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800629c:	f04f 0500 	mov.w	r5, #0
 80062a0:	f04f 0100 	mov.w	r1, #0
 80062a4:	e750      	b.n	8006148 <__adddf3+0x138>
 80062a6:	bf00      	nop

080062a8 <__aeabi_i2d>:
 80062a8:	f090 0f00 	teq	r0, #0
 80062ac:	bf04      	itt	eq
 80062ae:	2100      	moveq	r1, #0
 80062b0:	4770      	bxeq	lr
 80062b2:	b530      	push	{r4, r5, lr}
 80062b4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80062b8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80062bc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80062c0:	bf48      	it	mi
 80062c2:	4240      	negmi	r0, r0
 80062c4:	f04f 0100 	mov.w	r1, #0
 80062c8:	e73e      	b.n	8006148 <__adddf3+0x138>
 80062ca:	bf00      	nop

080062cc <__aeabi_f2d>:
 80062cc:	0042      	lsls	r2, r0, #1
 80062ce:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80062d2:	ea4f 0131 	mov.w	r1, r1, rrx
 80062d6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80062da:	bf1f      	itttt	ne
 80062dc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80062e0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80062e4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80062e8:	4770      	bxne	lr
 80062ea:	f092 0f00 	teq	r2, #0
 80062ee:	bf14      	ite	ne
 80062f0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80062f4:	4770      	bxeq	lr
 80062f6:	b530      	push	{r4, r5, lr}
 80062f8:	f44f 7460 	mov.w	r4, #896	; 0x380
 80062fc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8006300:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8006304:	e720      	b.n	8006148 <__adddf3+0x138>
 8006306:	bf00      	nop

08006308 <__aeabi_ul2d>:
 8006308:	ea50 0201 	orrs.w	r2, r0, r1
 800630c:	bf08      	it	eq
 800630e:	4770      	bxeq	lr
 8006310:	b530      	push	{r4, r5, lr}
 8006312:	f04f 0500 	mov.w	r5, #0
 8006316:	e00a      	b.n	800632e <__aeabi_l2d+0x16>

08006318 <__aeabi_l2d>:
 8006318:	ea50 0201 	orrs.w	r2, r0, r1
 800631c:	bf08      	it	eq
 800631e:	4770      	bxeq	lr
 8006320:	b530      	push	{r4, r5, lr}
 8006322:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8006326:	d502      	bpl.n	800632e <__aeabi_l2d+0x16>
 8006328:	4240      	negs	r0, r0
 800632a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800632e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8006332:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8006336:	ea5f 5c91 	movs.w	r12, r1, lsr #22
 800633a:	f43f aedc 	beq.w	80060f6 <__adddf3+0xe6>
 800633e:	f04f 0203 	mov.w	r2, #3
 8006342:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 8006346:	bf18      	it	ne
 8006348:	3203      	addne	r2, #3
 800634a:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 800634e:	bf18      	it	ne
 8006350:	3203      	addne	r2, #3
 8006352:	eb02 02dc 	add.w	r2, r2, r12, lsr #3
 8006356:	f1c2 0320 	rsb	r3, r2, #32
 800635a:	fa00 fc03 	lsl.w	r12, r0, r3
 800635e:	fa20 f002 	lsr.w	r0, r0, r2
 8006362:	fa01 fe03 	lsl.w	lr, r1, r3
 8006366:	ea40 000e 	orr.w	r0, r0, lr
 800636a:	fa21 f102 	lsr.w	r1, r1, r2
 800636e:	4414      	add	r4, r2
 8006370:	e6c1      	b.n	80060f6 <__adddf3+0xe6>
 8006372:	bf00      	nop

08006374 <__errno>:
 8006374:	4b01      	ldr	r3, [pc, #4]	; (800637c <__errno+0x8>)
 8006376:	6818      	ldr	r0, [r3, #0]
 8006378:	4770      	bx	lr
 800637a:	bf00      	nop
 800637c:	200001e8 	.word	0x200001e8

08006380 <__sflush_r>:
 8006380:	898a      	ldrh	r2, [r1, #12]
 8006382:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006386:	4605      	mov	r5, r0
 8006388:	0710      	lsls	r0, r2, #28
 800638a:	460c      	mov	r4, r1
 800638c:	d45a      	bmi.n	8006444 <__sflush_r+0xc4>
 800638e:	684b      	ldr	r3, [r1, #4]
 8006390:	2b00      	cmp	r3, #0
 8006392:	dc05      	bgt.n	80063a0 <__sflush_r+0x20>
 8006394:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8006396:	2b00      	cmp	r3, #0
 8006398:	dc02      	bgt.n	80063a0 <__sflush_r+0x20>
 800639a:	2000      	movs	r0, #0
 800639c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80063a0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80063a2:	2e00      	cmp	r6, #0
 80063a4:	d0f9      	beq.n	800639a <__sflush_r+0x1a>
 80063a6:	2300      	movs	r3, #0
 80063a8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80063ac:	682f      	ldr	r7, [r5, #0]
 80063ae:	602b      	str	r3, [r5, #0]
 80063b0:	d033      	beq.n	800641a <__sflush_r+0x9a>
 80063b2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80063b4:	89a3      	ldrh	r3, [r4, #12]
 80063b6:	075a      	lsls	r2, r3, #29
 80063b8:	d505      	bpl.n	80063c6 <__sflush_r+0x46>
 80063ba:	6863      	ldr	r3, [r4, #4]
 80063bc:	1ac0      	subs	r0, r0, r3
 80063be:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80063c0:	b10b      	cbz	r3, 80063c6 <__sflush_r+0x46>
 80063c2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80063c4:	1ac0      	subs	r0, r0, r3
 80063c6:	2300      	movs	r3, #0
 80063c8:	4602      	mov	r2, r0
 80063ca:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80063cc:	6a21      	ldr	r1, [r4, #32]
 80063ce:	4628      	mov	r0, r5
 80063d0:	47b0      	blx	r6
 80063d2:	1c43      	adds	r3, r0, #1
 80063d4:	89a3      	ldrh	r3, [r4, #12]
 80063d6:	d106      	bne.n	80063e6 <__sflush_r+0x66>
 80063d8:	6829      	ldr	r1, [r5, #0]
 80063da:	291d      	cmp	r1, #29
 80063dc:	d84b      	bhi.n	8006476 <__sflush_r+0xf6>
 80063de:	4a2b      	ldr	r2, [pc, #172]	; (800648c <__sflush_r+0x10c>)
 80063e0:	40ca      	lsrs	r2, r1
 80063e2:	07d6      	lsls	r6, r2, #31
 80063e4:	d547      	bpl.n	8006476 <__sflush_r+0xf6>
 80063e6:	2200      	movs	r2, #0
 80063e8:	6062      	str	r2, [r4, #4]
 80063ea:	04d9      	lsls	r1, r3, #19
 80063ec:	6922      	ldr	r2, [r4, #16]
 80063ee:	6022      	str	r2, [r4, #0]
 80063f0:	d504      	bpl.n	80063fc <__sflush_r+0x7c>
 80063f2:	1c42      	adds	r2, r0, #1
 80063f4:	d101      	bne.n	80063fa <__sflush_r+0x7a>
 80063f6:	682b      	ldr	r3, [r5, #0]
 80063f8:	b903      	cbnz	r3, 80063fc <__sflush_r+0x7c>
 80063fa:	6560      	str	r0, [r4, #84]	; 0x54
 80063fc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80063fe:	602f      	str	r7, [r5, #0]
 8006400:	2900      	cmp	r1, #0
 8006402:	d0ca      	beq.n	800639a <__sflush_r+0x1a>
 8006404:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006408:	4299      	cmp	r1, r3
 800640a:	d002      	beq.n	8006412 <__sflush_r+0x92>
 800640c:	4628      	mov	r0, r5
 800640e:	f7ff fbcb 	bl	8005ba8 <__wrap__free_r>
 8006412:	2000      	movs	r0, #0
 8006414:	6360      	str	r0, [r4, #52]	; 0x34
 8006416:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800641a:	6a21      	ldr	r1, [r4, #32]
 800641c:	2301      	movs	r3, #1
 800641e:	4628      	mov	r0, r5
 8006420:	47b0      	blx	r6
 8006422:	1c41      	adds	r1, r0, #1
 8006424:	d1c6      	bne.n	80063b4 <__sflush_r+0x34>
 8006426:	682b      	ldr	r3, [r5, #0]
 8006428:	2b00      	cmp	r3, #0
 800642a:	d0c3      	beq.n	80063b4 <__sflush_r+0x34>
 800642c:	2b1d      	cmp	r3, #29
 800642e:	d001      	beq.n	8006434 <__sflush_r+0xb4>
 8006430:	2b16      	cmp	r3, #22
 8006432:	d101      	bne.n	8006438 <__sflush_r+0xb8>
 8006434:	602f      	str	r7, [r5, #0]
 8006436:	e7b0      	b.n	800639a <__sflush_r+0x1a>
 8006438:	89a3      	ldrh	r3, [r4, #12]
 800643a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800643e:	81a3      	strh	r3, [r4, #12]
 8006440:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006444:	690f      	ldr	r7, [r1, #16]
 8006446:	2f00      	cmp	r7, #0
 8006448:	d0a7      	beq.n	800639a <__sflush_r+0x1a>
 800644a:	0793      	lsls	r3, r2, #30
 800644c:	680e      	ldr	r6, [r1, #0]
 800644e:	bf08      	it	eq
 8006450:	694b      	ldreq	r3, [r1, #20]
 8006452:	600f      	str	r7, [r1, #0]
 8006454:	bf18      	it	ne
 8006456:	2300      	movne	r3, #0
 8006458:	eba6 0807 	sub.w	r8, r6, r7
 800645c:	608b      	str	r3, [r1, #8]
 800645e:	f1b8 0f00 	cmp.w	r8, #0
 8006462:	dd9a      	ble.n	800639a <__sflush_r+0x1a>
 8006464:	4643      	mov	r3, r8
 8006466:	463a      	mov	r2, r7
 8006468:	6a21      	ldr	r1, [r4, #32]
 800646a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800646c:	4628      	mov	r0, r5
 800646e:	47b0      	blx	r6
 8006470:	2800      	cmp	r0, #0
 8006472:	dc07      	bgt.n	8006484 <__sflush_r+0x104>
 8006474:	89a3      	ldrh	r3, [r4, #12]
 8006476:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800647a:	81a3      	strh	r3, [r4, #12]
 800647c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006480:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006484:	4407      	add	r7, r0
 8006486:	eba8 0800 	sub.w	r8, r8, r0
 800648a:	e7e8      	b.n	800645e <__sflush_r+0xde>
 800648c:	20400001 	.word	0x20400001

08006490 <_fflush_r>:
 8006490:	b538      	push	{r3, r4, r5, lr}
 8006492:	690b      	ldr	r3, [r1, #16]
 8006494:	4605      	mov	r5, r0
 8006496:	460c      	mov	r4, r1
 8006498:	b1db      	cbz	r3, 80064d2 <_fflush_r+0x42>
 800649a:	b118      	cbz	r0, 80064a4 <_fflush_r+0x14>
 800649c:	6983      	ldr	r3, [r0, #24]
 800649e:	b90b      	cbnz	r3, 80064a4 <_fflush_r+0x14>
 80064a0:	f000 f872 	bl	8006588 <__sinit>
 80064a4:	4b0c      	ldr	r3, [pc, #48]	; (80064d8 <_fflush_r+0x48>)
 80064a6:	429c      	cmp	r4, r3
 80064a8:	d109      	bne.n	80064be <_fflush_r+0x2e>
 80064aa:	686c      	ldr	r4, [r5, #4]
 80064ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80064b0:	b17b      	cbz	r3, 80064d2 <_fflush_r+0x42>
 80064b2:	4621      	mov	r1, r4
 80064b4:	4628      	mov	r0, r5
 80064b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80064ba:	f7ff bf61 	b.w	8006380 <__sflush_r>
 80064be:	4b07      	ldr	r3, [pc, #28]	; (80064dc <_fflush_r+0x4c>)
 80064c0:	429c      	cmp	r4, r3
 80064c2:	d101      	bne.n	80064c8 <_fflush_r+0x38>
 80064c4:	68ac      	ldr	r4, [r5, #8]
 80064c6:	e7f1      	b.n	80064ac <_fflush_r+0x1c>
 80064c8:	4b05      	ldr	r3, [pc, #20]	; (80064e0 <_fflush_r+0x50>)
 80064ca:	429c      	cmp	r4, r3
 80064cc:	bf08      	it	eq
 80064ce:	68ec      	ldreq	r4, [r5, #12]
 80064d0:	e7ec      	b.n	80064ac <_fflush_r+0x1c>
 80064d2:	2000      	movs	r0, #0
 80064d4:	bd38      	pop	{r3, r4, r5, pc}
 80064d6:	bf00      	nop
 80064d8:	080077c0 	.word	0x080077c0
 80064dc:	080077e0 	.word	0x080077e0
 80064e0:	080077a0 	.word	0x080077a0

080064e4 <fflush>:
 80064e4:	4601      	mov	r1, r0
 80064e6:	b920      	cbnz	r0, 80064f2 <fflush+0xe>
 80064e8:	4b04      	ldr	r3, [pc, #16]	; (80064fc <fflush+0x18>)
 80064ea:	4905      	ldr	r1, [pc, #20]	; (8006500 <fflush+0x1c>)
 80064ec:	6818      	ldr	r0, [r3, #0]
 80064ee:	f000 b8b7 	b.w	8006660 <_fwalk_reent>
 80064f2:	4b04      	ldr	r3, [pc, #16]	; (8006504 <fflush+0x20>)
 80064f4:	6818      	ldr	r0, [r3, #0]
 80064f6:	f7ff bfcb 	b.w	8006490 <_fflush_r>
 80064fa:	bf00      	nop
 80064fc:	08007800 	.word	0x08007800
 8006500:	08006491 	.word	0x08006491
 8006504:	200001e8 	.word	0x200001e8

08006508 <_cleanup_r>:
 8006508:	4901      	ldr	r1, [pc, #4]	; (8006510 <_cleanup_r+0x8>)
 800650a:	f000 b8a9 	b.w	8006660 <_fwalk_reent>
 800650e:	bf00      	nop
 8006510:	08006491 	.word	0x08006491

08006514 <std.isra.0>:
 8006514:	2300      	movs	r3, #0
 8006516:	b510      	push	{r4, lr}
 8006518:	4604      	mov	r4, r0
 800651a:	6003      	str	r3, [r0, #0]
 800651c:	6043      	str	r3, [r0, #4]
 800651e:	6083      	str	r3, [r0, #8]
 8006520:	8181      	strh	r1, [r0, #12]
 8006522:	6643      	str	r3, [r0, #100]	; 0x64
 8006524:	81c2      	strh	r2, [r0, #14]
 8006526:	6103      	str	r3, [r0, #16]
 8006528:	6143      	str	r3, [r0, #20]
 800652a:	6183      	str	r3, [r0, #24]
 800652c:	4619      	mov	r1, r3
 800652e:	2208      	movs	r2, #8
 8006530:	305c      	adds	r0, #92	; 0x5c
 8006532:	f000 f962 	bl	80067fa <memset>
 8006536:	4b05      	ldr	r3, [pc, #20]	; (800654c <std.isra.0+0x38>)
 8006538:	6263      	str	r3, [r4, #36]	; 0x24
 800653a:	4b05      	ldr	r3, [pc, #20]	; (8006550 <std.isra.0+0x3c>)
 800653c:	62a3      	str	r3, [r4, #40]	; 0x28
 800653e:	4b05      	ldr	r3, [pc, #20]	; (8006554 <std.isra.0+0x40>)
 8006540:	62e3      	str	r3, [r4, #44]	; 0x2c
 8006542:	4b05      	ldr	r3, [pc, #20]	; (8006558 <std.isra.0+0x44>)
 8006544:	6224      	str	r4, [r4, #32]
 8006546:	6323      	str	r3, [r4, #48]	; 0x30
 8006548:	bd10      	pop	{r4, pc}
 800654a:	bf00      	nop
 800654c:	08006d0d 	.word	0x08006d0d
 8006550:	08006d2f 	.word	0x08006d2f
 8006554:	08006d67 	.word	0x08006d67
 8006558:	08006d8b 	.word	0x08006d8b

0800655c <__sfmoreglue>:
 800655c:	b570      	push	{r4, r5, r6, lr}
 800655e:	1e4a      	subs	r2, r1, #1
 8006560:	2568      	movs	r5, #104	; 0x68
 8006562:	4355      	muls	r5, r2
 8006564:	460e      	mov	r6, r1
 8006566:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800656a:	f7ff fb19 	bl	8005ba0 <__wrap__malloc_r>
 800656e:	4604      	mov	r4, r0
 8006570:	b140      	cbz	r0, 8006584 <__sfmoreglue+0x28>
 8006572:	2100      	movs	r1, #0
 8006574:	e880 0042 	stmia.w	r0, {r1, r6}
 8006578:	300c      	adds	r0, #12
 800657a:	60a0      	str	r0, [r4, #8]
 800657c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8006580:	f000 f93b 	bl	80067fa <memset>
 8006584:	4620      	mov	r0, r4
 8006586:	bd70      	pop	{r4, r5, r6, pc}

08006588 <__sinit>:
 8006588:	6983      	ldr	r3, [r0, #24]
 800658a:	b510      	push	{r4, lr}
 800658c:	4604      	mov	r4, r0
 800658e:	bb33      	cbnz	r3, 80065de <__sinit+0x56>
 8006590:	6483      	str	r3, [r0, #72]	; 0x48
 8006592:	64c3      	str	r3, [r0, #76]	; 0x4c
 8006594:	6503      	str	r3, [r0, #80]	; 0x50
 8006596:	4b12      	ldr	r3, [pc, #72]	; (80065e0 <__sinit+0x58>)
 8006598:	4a12      	ldr	r2, [pc, #72]	; (80065e4 <__sinit+0x5c>)
 800659a:	681b      	ldr	r3, [r3, #0]
 800659c:	6282      	str	r2, [r0, #40]	; 0x28
 800659e:	4298      	cmp	r0, r3
 80065a0:	bf04      	itt	eq
 80065a2:	2301      	moveq	r3, #1
 80065a4:	6183      	streq	r3, [r0, #24]
 80065a6:	f000 f81f 	bl	80065e8 <__sfp>
 80065aa:	6060      	str	r0, [r4, #4]
 80065ac:	4620      	mov	r0, r4
 80065ae:	f000 f81b 	bl	80065e8 <__sfp>
 80065b2:	60a0      	str	r0, [r4, #8]
 80065b4:	4620      	mov	r0, r4
 80065b6:	f000 f817 	bl	80065e8 <__sfp>
 80065ba:	2200      	movs	r2, #0
 80065bc:	60e0      	str	r0, [r4, #12]
 80065be:	2104      	movs	r1, #4
 80065c0:	6860      	ldr	r0, [r4, #4]
 80065c2:	f7ff ffa7 	bl	8006514 <std.isra.0>
 80065c6:	2201      	movs	r2, #1
 80065c8:	2109      	movs	r1, #9
 80065ca:	68a0      	ldr	r0, [r4, #8]
 80065cc:	f7ff ffa2 	bl	8006514 <std.isra.0>
 80065d0:	2202      	movs	r2, #2
 80065d2:	2112      	movs	r1, #18
 80065d4:	68e0      	ldr	r0, [r4, #12]
 80065d6:	f7ff ff9d 	bl	8006514 <std.isra.0>
 80065da:	2301      	movs	r3, #1
 80065dc:	61a3      	str	r3, [r4, #24]
 80065de:	bd10      	pop	{r4, pc}
 80065e0:	08007800 	.word	0x08007800
 80065e4:	08006509 	.word	0x08006509

080065e8 <__sfp>:
 80065e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80065ea:	4b1c      	ldr	r3, [pc, #112]	; (800665c <__sfp+0x74>)
 80065ec:	681e      	ldr	r6, [r3, #0]
 80065ee:	69b3      	ldr	r3, [r6, #24]
 80065f0:	4607      	mov	r7, r0
 80065f2:	b913      	cbnz	r3, 80065fa <__sfp+0x12>
 80065f4:	4630      	mov	r0, r6
 80065f6:	f7ff ffc7 	bl	8006588 <__sinit>
 80065fa:	3648      	adds	r6, #72	; 0x48
 80065fc:	68b4      	ldr	r4, [r6, #8]
 80065fe:	6873      	ldr	r3, [r6, #4]
 8006600:	3b01      	subs	r3, #1
 8006602:	d503      	bpl.n	800660c <__sfp+0x24>
 8006604:	6833      	ldr	r3, [r6, #0]
 8006606:	b133      	cbz	r3, 8006616 <__sfp+0x2e>
 8006608:	6836      	ldr	r6, [r6, #0]
 800660a:	e7f7      	b.n	80065fc <__sfp+0x14>
 800660c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8006610:	b16d      	cbz	r5, 800662e <__sfp+0x46>
 8006612:	3468      	adds	r4, #104	; 0x68
 8006614:	e7f4      	b.n	8006600 <__sfp+0x18>
 8006616:	2104      	movs	r1, #4
 8006618:	4638      	mov	r0, r7
 800661a:	f7ff ff9f 	bl	800655c <__sfmoreglue>
 800661e:	6030      	str	r0, [r6, #0]
 8006620:	2800      	cmp	r0, #0
 8006622:	d1f1      	bne.n	8006608 <__sfp+0x20>
 8006624:	230c      	movs	r3, #12
 8006626:	603b      	str	r3, [r7, #0]
 8006628:	4604      	mov	r4, r0
 800662a:	4620      	mov	r0, r4
 800662c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800662e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006632:	81e3      	strh	r3, [r4, #14]
 8006634:	2301      	movs	r3, #1
 8006636:	81a3      	strh	r3, [r4, #12]
 8006638:	6665      	str	r5, [r4, #100]	; 0x64
 800663a:	6025      	str	r5, [r4, #0]
 800663c:	60a5      	str	r5, [r4, #8]
 800663e:	6065      	str	r5, [r4, #4]
 8006640:	6125      	str	r5, [r4, #16]
 8006642:	6165      	str	r5, [r4, #20]
 8006644:	61a5      	str	r5, [r4, #24]
 8006646:	2208      	movs	r2, #8
 8006648:	4629      	mov	r1, r5
 800664a:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800664e:	f000 f8d4 	bl	80067fa <memset>
 8006652:	6365      	str	r5, [r4, #52]	; 0x34
 8006654:	63a5      	str	r5, [r4, #56]	; 0x38
 8006656:	64a5      	str	r5, [r4, #72]	; 0x48
 8006658:	64e5      	str	r5, [r4, #76]	; 0x4c
 800665a:	e7e6      	b.n	800662a <__sfp+0x42>
 800665c:	08007800 	.word	0x08007800

08006660 <_fwalk_reent>:
 8006660:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006664:	4680      	mov	r8, r0
 8006666:	4689      	mov	r9, r1
 8006668:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800666c:	2600      	movs	r6, #0
 800666e:	b914      	cbnz	r4, 8006676 <_fwalk_reent+0x16>
 8006670:	4630      	mov	r0, r6
 8006672:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006676:	68a5      	ldr	r5, [r4, #8]
 8006678:	6867      	ldr	r7, [r4, #4]
 800667a:	3f01      	subs	r7, #1
 800667c:	d501      	bpl.n	8006682 <_fwalk_reent+0x22>
 800667e:	6824      	ldr	r4, [r4, #0]
 8006680:	e7f5      	b.n	800666e <_fwalk_reent+0xe>
 8006682:	89ab      	ldrh	r3, [r5, #12]
 8006684:	2b01      	cmp	r3, #1
 8006686:	d907      	bls.n	8006698 <_fwalk_reent+0x38>
 8006688:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800668c:	3301      	adds	r3, #1
 800668e:	d003      	beq.n	8006698 <_fwalk_reent+0x38>
 8006690:	4629      	mov	r1, r5
 8006692:	4640      	mov	r0, r8
 8006694:	47c8      	blx	r9
 8006696:	4306      	orrs	r6, r0
 8006698:	3568      	adds	r5, #104	; 0x68
 800669a:	e7ee      	b.n	800667a <_fwalk_reent+0x1a>

0800669c <__libc_init_array>:
 800669c:	b570      	push	{r4, r5, r6, lr}
 800669e:	4e0d      	ldr	r6, [pc, #52]	; (80066d4 <__libc_init_array+0x38>)
 80066a0:	4c0d      	ldr	r4, [pc, #52]	; (80066d8 <__libc_init_array+0x3c>)
 80066a2:	1ba4      	subs	r4, r4, r6
 80066a4:	10a4      	asrs	r4, r4, #2
 80066a6:	2500      	movs	r5, #0
 80066a8:	42a5      	cmp	r5, r4
 80066aa:	d109      	bne.n	80066c0 <__libc_init_array+0x24>
 80066ac:	4e0b      	ldr	r6, [pc, #44]	; (80066dc <__libc_init_array+0x40>)
 80066ae:	4c0c      	ldr	r4, [pc, #48]	; (80066e0 <__libc_init_array+0x44>)
 80066b0:	f000 fd38 	bl	8007124 <_init>
 80066b4:	1ba4      	subs	r4, r4, r6
 80066b6:	10a4      	asrs	r4, r4, #2
 80066b8:	2500      	movs	r5, #0
 80066ba:	42a5      	cmp	r5, r4
 80066bc:	d105      	bne.n	80066ca <__libc_init_array+0x2e>
 80066be:	bd70      	pop	{r4, r5, r6, pc}
 80066c0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80066c4:	4798      	blx	r3
 80066c6:	3501      	adds	r5, #1
 80066c8:	e7ee      	b.n	80066a8 <__libc_init_array+0xc>
 80066ca:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80066ce:	4798      	blx	r3
 80066d0:	3501      	adds	r5, #1
 80066d2:	e7f2      	b.n	80066ba <__libc_init_array+0x1e>
 80066d4:	2000024c 	.word	0x2000024c
 80066d8:	2000024c 	.word	0x2000024c
 80066dc:	2000024c 	.word	0x2000024c
 80066e0:	20000258 	.word	0x20000258

080066e4 <malloc>:
 80066e4:	4b02      	ldr	r3, [pc, #8]	; (80066f0 <malloc+0xc>)
 80066e6:	4601      	mov	r1, r0
 80066e8:	6818      	ldr	r0, [r3, #0]
 80066ea:	f7ff ba59 	b.w	8005ba0 <__wrap__malloc_r>
 80066ee:	bf00      	nop
 80066f0:	200001e8 	.word	0x200001e8

080066f4 <free>:
 80066f4:	4b02      	ldr	r3, [pc, #8]	; (8006700 <free+0xc>)
 80066f6:	4601      	mov	r1, r0
 80066f8:	6818      	ldr	r0, [r3, #0]
 80066fa:	f7ff ba55 	b.w	8005ba8 <__wrap__free_r>
 80066fe:	bf00      	nop
 8006700:	200001e8 	.word	0x200001e8
	...

08006710 <memchr>:
 8006710:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8006714:	2a10      	cmp	r2, #16
 8006716:	db2b      	blt.n	8006770 <memchr+0x60>
 8006718:	f010 0f07 	tst.w	r0, #7
 800671c:	d008      	beq.n	8006730 <memchr+0x20>
 800671e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006722:	3a01      	subs	r2, #1
 8006724:	428b      	cmp	r3, r1
 8006726:	d02d      	beq.n	8006784 <memchr+0x74>
 8006728:	f010 0f07 	tst.w	r0, #7
 800672c:	b342      	cbz	r2, 8006780 <memchr+0x70>
 800672e:	d1f6      	bne.n	800671e <memchr+0xe>
 8006730:	b4f0      	push	{r4, r5, r6, r7}
 8006732:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8006736:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800673a:	f022 0407 	bic.w	r4, r2, #7
 800673e:	f07f 0700 	mvns.w	r7, #0
 8006742:	2300      	movs	r3, #0
 8006744:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8006748:	3c08      	subs	r4, #8
 800674a:	ea85 0501 	eor.w	r5, r5, r1
 800674e:	ea86 0601 	eor.w	r6, r6, r1
 8006752:	fa85 f547 	uadd8	r5, r5, r7
 8006756:	faa3 f587 	sel	r5, r3, r7
 800675a:	fa86 f647 	uadd8	r6, r6, r7
 800675e:	faa5 f687 	sel	r6, r5, r7
 8006762:	b98e      	cbnz	r6, 8006788 <memchr+0x78>
 8006764:	d1ee      	bne.n	8006744 <memchr+0x34>
 8006766:	bcf0      	pop	{r4, r5, r6, r7}
 8006768:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800676c:	f002 0207 	and.w	r2, r2, #7
 8006770:	b132      	cbz	r2, 8006780 <memchr+0x70>
 8006772:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006776:	3a01      	subs	r2, #1
 8006778:	ea83 0301 	eor.w	r3, r3, r1
 800677c:	b113      	cbz	r3, 8006784 <memchr+0x74>
 800677e:	d1f8      	bne.n	8006772 <memchr+0x62>
 8006780:	2000      	movs	r0, #0
 8006782:	4770      	bx	lr
 8006784:	3801      	subs	r0, #1
 8006786:	4770      	bx	lr
 8006788:	2d00      	cmp	r5, #0
 800678a:	bf06      	itte	eq
 800678c:	4635      	moveq	r5, r6
 800678e:	3803      	subeq	r0, #3
 8006790:	3807      	subne	r0, #7
 8006792:	f015 0f01 	tst.w	r5, #1
 8006796:	d107      	bne.n	80067a8 <memchr+0x98>
 8006798:	3001      	adds	r0, #1
 800679a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800679e:	bf02      	ittt	eq
 80067a0:	3001      	addeq	r0, #1
 80067a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80067a6:	3001      	addeq	r0, #1
 80067a8:	bcf0      	pop	{r4, r5, r6, r7}
 80067aa:	3801      	subs	r0, #1
 80067ac:	4770      	bx	lr
 80067ae:	bf00      	nop

080067b0 <memcpy>:
 80067b0:	b510      	push	{r4, lr}
 80067b2:	1e43      	subs	r3, r0, #1
 80067b4:	440a      	add	r2, r1
 80067b6:	4291      	cmp	r1, r2
 80067b8:	d100      	bne.n	80067bc <memcpy+0xc>
 80067ba:	bd10      	pop	{r4, pc}
 80067bc:	f811 4b01 	ldrb.w	r4, [r1], #1
 80067c0:	f803 4f01 	strb.w	r4, [r3, #1]!
 80067c4:	e7f7      	b.n	80067b6 <memcpy+0x6>

080067c6 <memmove>:
 80067c6:	4288      	cmp	r0, r1
 80067c8:	b510      	push	{r4, lr}
 80067ca:	eb01 0302 	add.w	r3, r1, r2
 80067ce:	d803      	bhi.n	80067d8 <memmove+0x12>
 80067d0:	1e42      	subs	r2, r0, #1
 80067d2:	4299      	cmp	r1, r3
 80067d4:	d10c      	bne.n	80067f0 <memmove+0x2a>
 80067d6:	bd10      	pop	{r4, pc}
 80067d8:	4298      	cmp	r0, r3
 80067da:	d2f9      	bcs.n	80067d0 <memmove+0xa>
 80067dc:	1881      	adds	r1, r0, r2
 80067de:	1ad2      	subs	r2, r2, r3
 80067e0:	42d3      	cmn	r3, r2
 80067e2:	d100      	bne.n	80067e6 <memmove+0x20>
 80067e4:	bd10      	pop	{r4, pc}
 80067e6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80067ea:	f801 4d01 	strb.w	r4, [r1, #-1]!
 80067ee:	e7f7      	b.n	80067e0 <memmove+0x1a>
 80067f0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80067f4:	f802 4f01 	strb.w	r4, [r2, #1]!
 80067f8:	e7eb      	b.n	80067d2 <memmove+0xc>

080067fa <memset>:
 80067fa:	4402      	add	r2, r0
 80067fc:	4603      	mov	r3, r0
 80067fe:	4293      	cmp	r3, r2
 8006800:	d100      	bne.n	8006804 <memset+0xa>
 8006802:	4770      	bx	lr
 8006804:	f803 1b01 	strb.w	r1, [r3], #1
 8006808:	e7f9      	b.n	80067fe <memset+0x4>
	...

0800680c <_free_r>:
 800680c:	b538      	push	{r3, r4, r5, lr}
 800680e:	4605      	mov	r5, r0
 8006810:	2900      	cmp	r1, #0
 8006812:	d045      	beq.n	80068a0 <_free_r+0x94>
 8006814:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006818:	1f0c      	subs	r4, r1, #4
 800681a:	2b00      	cmp	r3, #0
 800681c:	bfb8      	it	lt
 800681e:	18e4      	addlt	r4, r4, r3
 8006820:	f7ff fae3 	bl	8005dea <__malloc_lock>
 8006824:	4a1f      	ldr	r2, [pc, #124]	; (80068a4 <_free_r+0x98>)
 8006826:	6813      	ldr	r3, [r2, #0]
 8006828:	4610      	mov	r0, r2
 800682a:	b933      	cbnz	r3, 800683a <_free_r+0x2e>
 800682c:	6063      	str	r3, [r4, #4]
 800682e:	6014      	str	r4, [r2, #0]
 8006830:	4628      	mov	r0, r5
 8006832:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006836:	f7ff badc 	b.w	8005df2 <__malloc_unlock>
 800683a:	42a3      	cmp	r3, r4
 800683c:	d90c      	bls.n	8006858 <_free_r+0x4c>
 800683e:	6821      	ldr	r1, [r4, #0]
 8006840:	1862      	adds	r2, r4, r1
 8006842:	4293      	cmp	r3, r2
 8006844:	bf04      	itt	eq
 8006846:	681a      	ldreq	r2, [r3, #0]
 8006848:	685b      	ldreq	r3, [r3, #4]
 800684a:	6063      	str	r3, [r4, #4]
 800684c:	bf04      	itt	eq
 800684e:	1852      	addeq	r2, r2, r1
 8006850:	6022      	streq	r2, [r4, #0]
 8006852:	6004      	str	r4, [r0, #0]
 8006854:	e7ec      	b.n	8006830 <_free_r+0x24>
 8006856:	4613      	mov	r3, r2
 8006858:	685a      	ldr	r2, [r3, #4]
 800685a:	b10a      	cbz	r2, 8006860 <_free_r+0x54>
 800685c:	42a2      	cmp	r2, r4
 800685e:	d9fa      	bls.n	8006856 <_free_r+0x4a>
 8006860:	6819      	ldr	r1, [r3, #0]
 8006862:	1858      	adds	r0, r3, r1
 8006864:	42a0      	cmp	r0, r4
 8006866:	d10b      	bne.n	8006880 <_free_r+0x74>
 8006868:	6820      	ldr	r0, [r4, #0]
 800686a:	4401      	add	r1, r0
 800686c:	1858      	adds	r0, r3, r1
 800686e:	4282      	cmp	r2, r0
 8006870:	6019      	str	r1, [r3, #0]
 8006872:	d1dd      	bne.n	8006830 <_free_r+0x24>
 8006874:	6810      	ldr	r0, [r2, #0]
 8006876:	6852      	ldr	r2, [r2, #4]
 8006878:	605a      	str	r2, [r3, #4]
 800687a:	4401      	add	r1, r0
 800687c:	6019      	str	r1, [r3, #0]
 800687e:	e7d7      	b.n	8006830 <_free_r+0x24>
 8006880:	d902      	bls.n	8006888 <_free_r+0x7c>
 8006882:	230c      	movs	r3, #12
 8006884:	602b      	str	r3, [r5, #0]
 8006886:	e7d3      	b.n	8006830 <_free_r+0x24>
 8006888:	6820      	ldr	r0, [r4, #0]
 800688a:	1821      	adds	r1, r4, r0
 800688c:	428a      	cmp	r2, r1
 800688e:	bf04      	itt	eq
 8006890:	6811      	ldreq	r1, [r2, #0]
 8006892:	6852      	ldreq	r2, [r2, #4]
 8006894:	6062      	str	r2, [r4, #4]
 8006896:	bf04      	itt	eq
 8006898:	1809      	addeq	r1, r1, r0
 800689a:	6021      	streq	r1, [r4, #0]
 800689c:	605c      	str	r4, [r3, #4]
 800689e:	e7c7      	b.n	8006830 <_free_r+0x24>
 80068a0:	bd38      	pop	{r3, r4, r5, pc}
 80068a2:	bf00      	nop
 80068a4:	20001e3c 	.word	0x20001e3c

080068a8 <_malloc_r>:
 80068a8:	b570      	push	{r4, r5, r6, lr}
 80068aa:	1ccd      	adds	r5, r1, #3
 80068ac:	f025 0503 	bic.w	r5, r5, #3
 80068b0:	3508      	adds	r5, #8
 80068b2:	2d0c      	cmp	r5, #12
 80068b4:	bf38      	it	cc
 80068b6:	250c      	movcc	r5, #12
 80068b8:	2d00      	cmp	r5, #0
 80068ba:	4606      	mov	r6, r0
 80068bc:	db01      	blt.n	80068c2 <_malloc_r+0x1a>
 80068be:	42a9      	cmp	r1, r5
 80068c0:	d903      	bls.n	80068ca <_malloc_r+0x22>
 80068c2:	230c      	movs	r3, #12
 80068c4:	6033      	str	r3, [r6, #0]
 80068c6:	2000      	movs	r0, #0
 80068c8:	bd70      	pop	{r4, r5, r6, pc}
 80068ca:	f7ff fa8e 	bl	8005dea <__malloc_lock>
 80068ce:	4a23      	ldr	r2, [pc, #140]	; (800695c <_malloc_r+0xb4>)
 80068d0:	6814      	ldr	r4, [r2, #0]
 80068d2:	4621      	mov	r1, r4
 80068d4:	b991      	cbnz	r1, 80068fc <_malloc_r+0x54>
 80068d6:	4c22      	ldr	r4, [pc, #136]	; (8006960 <_malloc_r+0xb8>)
 80068d8:	6823      	ldr	r3, [r4, #0]
 80068da:	b91b      	cbnz	r3, 80068e4 <_malloc_r+0x3c>
 80068dc:	4630      	mov	r0, r6
 80068de:	f000 fa05 	bl	8006cec <_sbrk_r>
 80068e2:	6020      	str	r0, [r4, #0]
 80068e4:	4629      	mov	r1, r5
 80068e6:	4630      	mov	r0, r6
 80068e8:	f000 fa00 	bl	8006cec <_sbrk_r>
 80068ec:	1c43      	adds	r3, r0, #1
 80068ee:	d126      	bne.n	800693e <_malloc_r+0x96>
 80068f0:	230c      	movs	r3, #12
 80068f2:	6033      	str	r3, [r6, #0]
 80068f4:	4630      	mov	r0, r6
 80068f6:	f7ff fa7c 	bl	8005df2 <__malloc_unlock>
 80068fa:	e7e4      	b.n	80068c6 <_malloc_r+0x1e>
 80068fc:	680b      	ldr	r3, [r1, #0]
 80068fe:	1b5b      	subs	r3, r3, r5
 8006900:	d41a      	bmi.n	8006938 <_malloc_r+0x90>
 8006902:	2b0b      	cmp	r3, #11
 8006904:	d90f      	bls.n	8006926 <_malloc_r+0x7e>
 8006906:	600b      	str	r3, [r1, #0]
 8006908:	50cd      	str	r5, [r1, r3]
 800690a:	18cc      	adds	r4, r1, r3
 800690c:	4630      	mov	r0, r6
 800690e:	f7ff fa70 	bl	8005df2 <__malloc_unlock>
 8006912:	f104 000b 	add.w	r0, r4, #11
 8006916:	1d23      	adds	r3, r4, #4
 8006918:	f020 0007 	bic.w	r0, r0, #7
 800691c:	1ac3      	subs	r3, r0, r3
 800691e:	d01b      	beq.n	8006958 <_malloc_r+0xb0>
 8006920:	425a      	negs	r2, r3
 8006922:	50e2      	str	r2, [r4, r3]
 8006924:	bd70      	pop	{r4, r5, r6, pc}
 8006926:	428c      	cmp	r4, r1
 8006928:	bf0d      	iteet	eq
 800692a:	6863      	ldreq	r3, [r4, #4]
 800692c:	684b      	ldrne	r3, [r1, #4]
 800692e:	6063      	strne	r3, [r4, #4]
 8006930:	6013      	streq	r3, [r2, #0]
 8006932:	bf18      	it	ne
 8006934:	460c      	movne	r4, r1
 8006936:	e7e9      	b.n	800690c <_malloc_r+0x64>
 8006938:	460c      	mov	r4, r1
 800693a:	6849      	ldr	r1, [r1, #4]
 800693c:	e7ca      	b.n	80068d4 <_malloc_r+0x2c>
 800693e:	1cc4      	adds	r4, r0, #3
 8006940:	f024 0403 	bic.w	r4, r4, #3
 8006944:	42a0      	cmp	r0, r4
 8006946:	d005      	beq.n	8006954 <_malloc_r+0xac>
 8006948:	1a21      	subs	r1, r4, r0
 800694a:	4630      	mov	r0, r6
 800694c:	f000 f9ce 	bl	8006cec <_sbrk_r>
 8006950:	3001      	adds	r0, #1
 8006952:	d0cd      	beq.n	80068f0 <_malloc_r+0x48>
 8006954:	6025      	str	r5, [r4, #0]
 8006956:	e7d9      	b.n	800690c <_malloc_r+0x64>
 8006958:	bd70      	pop	{r4, r5, r6, pc}
 800695a:	bf00      	nop
 800695c:	20001e3c 	.word	0x20001e3c
 8006960:	20001e40 	.word	0x20001e40

08006964 <_realloc_r>:
 8006964:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006966:	4607      	mov	r7, r0
 8006968:	4614      	mov	r4, r2
 800696a:	460e      	mov	r6, r1
 800696c:	b921      	cbnz	r1, 8006978 <_realloc_r+0x14>
 800696e:	4611      	mov	r1, r2
 8006970:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8006974:	f7ff b914 	b.w	8005ba0 <__wrap__malloc_r>
 8006978:	b922      	cbnz	r2, 8006984 <_realloc_r+0x20>
 800697a:	f7ff f915 	bl	8005ba8 <__wrap__free_r>
 800697e:	4625      	mov	r5, r4
 8006980:	4628      	mov	r0, r5
 8006982:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006984:	f000 fa64 	bl	8006e50 <_malloc_usable_size_r>
 8006988:	4284      	cmp	r4, r0
 800698a:	d90f      	bls.n	80069ac <_realloc_r+0x48>
 800698c:	4621      	mov	r1, r4
 800698e:	4638      	mov	r0, r7
 8006990:	f7ff f906 	bl	8005ba0 <__wrap__malloc_r>
 8006994:	4605      	mov	r5, r0
 8006996:	2800      	cmp	r0, #0
 8006998:	d0f2      	beq.n	8006980 <_realloc_r+0x1c>
 800699a:	4631      	mov	r1, r6
 800699c:	4622      	mov	r2, r4
 800699e:	f7ff ff07 	bl	80067b0 <memcpy>
 80069a2:	4631      	mov	r1, r6
 80069a4:	4638      	mov	r0, r7
 80069a6:	f7ff f8ff 	bl	8005ba8 <__wrap__free_r>
 80069aa:	e7e9      	b.n	8006980 <_realloc_r+0x1c>
 80069ac:	4635      	mov	r5, r6
 80069ae:	e7e7      	b.n	8006980 <_realloc_r+0x1c>

080069b0 <_printf_common>:
 80069b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80069b4:	4691      	mov	r9, r2
 80069b6:	461f      	mov	r7, r3
 80069b8:	688a      	ldr	r2, [r1, #8]
 80069ba:	690b      	ldr	r3, [r1, #16]
 80069bc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80069c0:	4293      	cmp	r3, r2
 80069c2:	bfb8      	it	lt
 80069c4:	4613      	movlt	r3, r2
 80069c6:	f8c9 3000 	str.w	r3, [r9]
 80069ca:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80069ce:	4606      	mov	r6, r0
 80069d0:	460c      	mov	r4, r1
 80069d2:	b112      	cbz	r2, 80069da <_printf_common+0x2a>
 80069d4:	3301      	adds	r3, #1
 80069d6:	f8c9 3000 	str.w	r3, [r9]
 80069da:	6823      	ldr	r3, [r4, #0]
 80069dc:	0699      	lsls	r1, r3, #26
 80069de:	bf42      	ittt	mi
 80069e0:	f8d9 3000 	ldrmi.w	r3, [r9]
 80069e4:	3302      	addmi	r3, #2
 80069e6:	f8c9 3000 	strmi.w	r3, [r9]
 80069ea:	6825      	ldr	r5, [r4, #0]
 80069ec:	f015 0506 	ands.w	r5, r5, #6
 80069f0:	d107      	bne.n	8006a02 <_printf_common+0x52>
 80069f2:	f104 0a19 	add.w	r10, r4, #25
 80069f6:	68e3      	ldr	r3, [r4, #12]
 80069f8:	f8d9 2000 	ldr.w	r2, [r9]
 80069fc:	1a9b      	subs	r3, r3, r2
 80069fe:	429d      	cmp	r5, r3
 8006a00:	db29      	blt.n	8006a56 <_printf_common+0xa6>
 8006a02:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8006a06:	6822      	ldr	r2, [r4, #0]
 8006a08:	3300      	adds	r3, #0
 8006a0a:	bf18      	it	ne
 8006a0c:	2301      	movne	r3, #1
 8006a0e:	0692      	lsls	r2, r2, #26
 8006a10:	d42e      	bmi.n	8006a70 <_printf_common+0xc0>
 8006a12:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8006a16:	4639      	mov	r1, r7
 8006a18:	4630      	mov	r0, r6
 8006a1a:	47c0      	blx	r8
 8006a1c:	3001      	adds	r0, #1
 8006a1e:	d021      	beq.n	8006a64 <_printf_common+0xb4>
 8006a20:	6823      	ldr	r3, [r4, #0]
 8006a22:	68e5      	ldr	r5, [r4, #12]
 8006a24:	f8d9 2000 	ldr.w	r2, [r9]
 8006a28:	f003 0306 	and.w	r3, r3, #6
 8006a2c:	2b04      	cmp	r3, #4
 8006a2e:	bf08      	it	eq
 8006a30:	1aad      	subeq	r5, r5, r2
 8006a32:	68a3      	ldr	r3, [r4, #8]
 8006a34:	6922      	ldr	r2, [r4, #16]
 8006a36:	bf0c      	ite	eq
 8006a38:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8006a3c:	2500      	movne	r5, #0
 8006a3e:	4293      	cmp	r3, r2
 8006a40:	bfc4      	itt	gt
 8006a42:	1a9b      	subgt	r3, r3, r2
 8006a44:	18ed      	addgt	r5, r5, r3
 8006a46:	f04f 0900 	mov.w	r9, #0
 8006a4a:	341a      	adds	r4, #26
 8006a4c:	454d      	cmp	r5, r9
 8006a4e:	d11b      	bne.n	8006a88 <_printf_common+0xd8>
 8006a50:	2000      	movs	r0, #0
 8006a52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006a56:	2301      	movs	r3, #1
 8006a58:	4652      	mov	r2, r10
 8006a5a:	4639      	mov	r1, r7
 8006a5c:	4630      	mov	r0, r6
 8006a5e:	47c0      	blx	r8
 8006a60:	3001      	adds	r0, #1
 8006a62:	d103      	bne.n	8006a6c <_printf_common+0xbc>
 8006a64:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006a68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006a6c:	3501      	adds	r5, #1
 8006a6e:	e7c2      	b.n	80069f6 <_printf_common+0x46>
 8006a70:	18e1      	adds	r1, r4, r3
 8006a72:	1c5a      	adds	r2, r3, #1
 8006a74:	2030      	movs	r0, #48	; 0x30
 8006a76:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8006a7a:	4422      	add	r2, r4
 8006a7c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8006a80:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8006a84:	3302      	adds	r3, #2
 8006a86:	e7c4      	b.n	8006a12 <_printf_common+0x62>
 8006a88:	2301      	movs	r3, #1
 8006a8a:	4622      	mov	r2, r4
 8006a8c:	4639      	mov	r1, r7
 8006a8e:	4630      	mov	r0, r6
 8006a90:	47c0      	blx	r8
 8006a92:	3001      	adds	r0, #1
 8006a94:	d0e6      	beq.n	8006a64 <_printf_common+0xb4>
 8006a96:	f109 0901 	add.w	r9, r9, #1
 8006a9a:	e7d7      	b.n	8006a4c <_printf_common+0x9c>

08006a9c <_printf_i>:
 8006a9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006aa0:	4617      	mov	r7, r2
 8006aa2:	7e0a      	ldrb	r2, [r1, #24]
 8006aa4:	b085      	sub	sp, #20
 8006aa6:	2a6e      	cmp	r2, #110	; 0x6e
 8006aa8:	4698      	mov	r8, r3
 8006aaa:	4606      	mov	r6, r0
 8006aac:	460c      	mov	r4, r1
 8006aae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006ab0:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8006ab4:	f000 80bc 	beq.w	8006c30 <_printf_i+0x194>
 8006ab8:	d81a      	bhi.n	8006af0 <_printf_i+0x54>
 8006aba:	2a63      	cmp	r2, #99	; 0x63
 8006abc:	d02e      	beq.n	8006b1c <_printf_i+0x80>
 8006abe:	d80a      	bhi.n	8006ad6 <_printf_i+0x3a>
 8006ac0:	2a00      	cmp	r2, #0
 8006ac2:	f000 80c8 	beq.w	8006c56 <_printf_i+0x1ba>
 8006ac6:	2a58      	cmp	r2, #88	; 0x58
 8006ac8:	f000 808a 	beq.w	8006be0 <_printf_i+0x144>
 8006acc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006ad0:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8006ad4:	e02a      	b.n	8006b2c <_printf_i+0x90>
 8006ad6:	2a64      	cmp	r2, #100	; 0x64
 8006ad8:	d001      	beq.n	8006ade <_printf_i+0x42>
 8006ada:	2a69      	cmp	r2, #105	; 0x69
 8006adc:	d1f6      	bne.n	8006acc <_printf_i+0x30>
 8006ade:	6821      	ldr	r1, [r4, #0]
 8006ae0:	681a      	ldr	r2, [r3, #0]
 8006ae2:	f011 0f80 	tst.w	r1, #128	; 0x80
 8006ae6:	d023      	beq.n	8006b30 <_printf_i+0x94>
 8006ae8:	1d11      	adds	r1, r2, #4
 8006aea:	6019      	str	r1, [r3, #0]
 8006aec:	6813      	ldr	r3, [r2, #0]
 8006aee:	e027      	b.n	8006b40 <_printf_i+0xa4>
 8006af0:	2a73      	cmp	r2, #115	; 0x73
 8006af2:	f000 80b4 	beq.w	8006c5e <_printf_i+0x1c2>
 8006af6:	d808      	bhi.n	8006b0a <_printf_i+0x6e>
 8006af8:	2a6f      	cmp	r2, #111	; 0x6f
 8006afa:	d02a      	beq.n	8006b52 <_printf_i+0xb6>
 8006afc:	2a70      	cmp	r2, #112	; 0x70
 8006afe:	d1e5      	bne.n	8006acc <_printf_i+0x30>
 8006b00:	680a      	ldr	r2, [r1, #0]
 8006b02:	f042 0220 	orr.w	r2, r2, #32
 8006b06:	600a      	str	r2, [r1, #0]
 8006b08:	e003      	b.n	8006b12 <_printf_i+0x76>
 8006b0a:	2a75      	cmp	r2, #117	; 0x75
 8006b0c:	d021      	beq.n	8006b52 <_printf_i+0xb6>
 8006b0e:	2a78      	cmp	r2, #120	; 0x78
 8006b10:	d1dc      	bne.n	8006acc <_printf_i+0x30>
 8006b12:	2278      	movs	r2, #120	; 0x78
 8006b14:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8006b18:	496e      	ldr	r1, [pc, #440]	; (8006cd4 <_printf_i+0x238>)
 8006b1a:	e064      	b.n	8006be6 <_printf_i+0x14a>
 8006b1c:	681a      	ldr	r2, [r3, #0]
 8006b1e:	f101 0542 	add.w	r5, r1, #66	; 0x42
 8006b22:	1d11      	adds	r1, r2, #4
 8006b24:	6019      	str	r1, [r3, #0]
 8006b26:	6813      	ldr	r3, [r2, #0]
 8006b28:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006b2c:	2301      	movs	r3, #1
 8006b2e:	e0a3      	b.n	8006c78 <_printf_i+0x1dc>
 8006b30:	f011 0f40 	tst.w	r1, #64	; 0x40
 8006b34:	f102 0104 	add.w	r1, r2, #4
 8006b38:	6019      	str	r1, [r3, #0]
 8006b3a:	d0d7      	beq.n	8006aec <_printf_i+0x50>
 8006b3c:	f9b2 3000 	ldrsh.w	r3, [r2]
 8006b40:	2b00      	cmp	r3, #0
 8006b42:	da03      	bge.n	8006b4c <_printf_i+0xb0>
 8006b44:	222d      	movs	r2, #45	; 0x2d
 8006b46:	425b      	negs	r3, r3
 8006b48:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8006b4c:	4962      	ldr	r1, [pc, #392]	; (8006cd8 <_printf_i+0x23c>)
 8006b4e:	220a      	movs	r2, #10
 8006b50:	e017      	b.n	8006b82 <_printf_i+0xe6>
 8006b52:	6820      	ldr	r0, [r4, #0]
 8006b54:	6819      	ldr	r1, [r3, #0]
 8006b56:	f010 0f80 	tst.w	r0, #128	; 0x80
 8006b5a:	d003      	beq.n	8006b64 <_printf_i+0xc8>
 8006b5c:	1d08      	adds	r0, r1, #4
 8006b5e:	6018      	str	r0, [r3, #0]
 8006b60:	680b      	ldr	r3, [r1, #0]
 8006b62:	e006      	b.n	8006b72 <_printf_i+0xd6>
 8006b64:	f010 0f40 	tst.w	r0, #64	; 0x40
 8006b68:	f101 0004 	add.w	r0, r1, #4
 8006b6c:	6018      	str	r0, [r3, #0]
 8006b6e:	d0f7      	beq.n	8006b60 <_printf_i+0xc4>
 8006b70:	880b      	ldrh	r3, [r1, #0]
 8006b72:	4959      	ldr	r1, [pc, #356]	; (8006cd8 <_printf_i+0x23c>)
 8006b74:	2a6f      	cmp	r2, #111	; 0x6f
 8006b76:	bf14      	ite	ne
 8006b78:	220a      	movne	r2, #10
 8006b7a:	2208      	moveq	r2, #8
 8006b7c:	2000      	movs	r0, #0
 8006b7e:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8006b82:	6865      	ldr	r5, [r4, #4]
 8006b84:	60a5      	str	r5, [r4, #8]
 8006b86:	2d00      	cmp	r5, #0
 8006b88:	f2c0 809c 	blt.w	8006cc4 <_printf_i+0x228>
 8006b8c:	6820      	ldr	r0, [r4, #0]
 8006b8e:	f020 0004 	bic.w	r0, r0, #4
 8006b92:	6020      	str	r0, [r4, #0]
 8006b94:	2b00      	cmp	r3, #0
 8006b96:	d13f      	bne.n	8006c18 <_printf_i+0x17c>
 8006b98:	2d00      	cmp	r5, #0
 8006b9a:	f040 8095 	bne.w	8006cc8 <_printf_i+0x22c>
 8006b9e:	4675      	mov	r5, lr
 8006ba0:	2a08      	cmp	r2, #8
 8006ba2:	d10b      	bne.n	8006bbc <_printf_i+0x120>
 8006ba4:	6823      	ldr	r3, [r4, #0]
 8006ba6:	07da      	lsls	r2, r3, #31
 8006ba8:	d508      	bpl.n	8006bbc <_printf_i+0x120>
 8006baa:	6923      	ldr	r3, [r4, #16]
 8006bac:	6862      	ldr	r2, [r4, #4]
 8006bae:	429a      	cmp	r2, r3
 8006bb0:	bfde      	ittt	le
 8006bb2:	2330      	movle	r3, #48	; 0x30
 8006bb4:	f805 3c01 	strble.w	r3, [r5, #-1]
 8006bb8:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8006bbc:	ebae 0305 	sub.w	r3, lr, r5
 8006bc0:	6123      	str	r3, [r4, #16]
 8006bc2:	f8cd 8000 	str.w	r8, [sp]
 8006bc6:	463b      	mov	r3, r7
 8006bc8:	aa03      	add	r2, sp, #12
 8006bca:	4621      	mov	r1, r4
 8006bcc:	4630      	mov	r0, r6
 8006bce:	f7ff feef 	bl	80069b0 <_printf_common>
 8006bd2:	3001      	adds	r0, #1
 8006bd4:	d155      	bne.n	8006c82 <_printf_i+0x1e6>
 8006bd6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006bda:	b005      	add	sp, #20
 8006bdc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006be0:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8006be4:	493c      	ldr	r1, [pc, #240]	; (8006cd8 <_printf_i+0x23c>)
 8006be6:	6822      	ldr	r2, [r4, #0]
 8006be8:	6818      	ldr	r0, [r3, #0]
 8006bea:	f012 0f80 	tst.w	r2, #128	; 0x80
 8006bee:	f100 0504 	add.w	r5, r0, #4
 8006bf2:	601d      	str	r5, [r3, #0]
 8006bf4:	d001      	beq.n	8006bfa <_printf_i+0x15e>
 8006bf6:	6803      	ldr	r3, [r0, #0]
 8006bf8:	e002      	b.n	8006c00 <_printf_i+0x164>
 8006bfa:	0655      	lsls	r5, r2, #25
 8006bfc:	d5fb      	bpl.n	8006bf6 <_printf_i+0x15a>
 8006bfe:	8803      	ldrh	r3, [r0, #0]
 8006c00:	07d0      	lsls	r0, r2, #31
 8006c02:	bf44      	itt	mi
 8006c04:	f042 0220 	orrmi.w	r2, r2, #32
 8006c08:	6022      	strmi	r2, [r4, #0]
 8006c0a:	b91b      	cbnz	r3, 8006c14 <_printf_i+0x178>
 8006c0c:	6822      	ldr	r2, [r4, #0]
 8006c0e:	f022 0220 	bic.w	r2, r2, #32
 8006c12:	6022      	str	r2, [r4, #0]
 8006c14:	2210      	movs	r2, #16
 8006c16:	e7b1      	b.n	8006b7c <_printf_i+0xe0>
 8006c18:	4675      	mov	r5, lr
 8006c1a:	fbb3 f0f2 	udiv	r0, r3, r2
 8006c1e:	fb02 3310 	mls	r3, r2, r0, r3
 8006c22:	5ccb      	ldrb	r3, [r1, r3]
 8006c24:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8006c28:	4603      	mov	r3, r0
 8006c2a:	2800      	cmp	r0, #0
 8006c2c:	d1f5      	bne.n	8006c1a <_printf_i+0x17e>
 8006c2e:	e7b7      	b.n	8006ba0 <_printf_i+0x104>
 8006c30:	6808      	ldr	r0, [r1, #0]
 8006c32:	681a      	ldr	r2, [r3, #0]
 8006c34:	6949      	ldr	r1, [r1, #20]
 8006c36:	f010 0f80 	tst.w	r0, #128	; 0x80
 8006c3a:	d004      	beq.n	8006c46 <_printf_i+0x1aa>
 8006c3c:	1d10      	adds	r0, r2, #4
 8006c3e:	6018      	str	r0, [r3, #0]
 8006c40:	6813      	ldr	r3, [r2, #0]
 8006c42:	6019      	str	r1, [r3, #0]
 8006c44:	e007      	b.n	8006c56 <_printf_i+0x1ba>
 8006c46:	f010 0f40 	tst.w	r0, #64	; 0x40
 8006c4a:	f102 0004 	add.w	r0, r2, #4
 8006c4e:	6018      	str	r0, [r3, #0]
 8006c50:	6813      	ldr	r3, [r2, #0]
 8006c52:	d0f6      	beq.n	8006c42 <_printf_i+0x1a6>
 8006c54:	8019      	strh	r1, [r3, #0]
 8006c56:	2300      	movs	r3, #0
 8006c58:	6123      	str	r3, [r4, #16]
 8006c5a:	4675      	mov	r5, lr
 8006c5c:	e7b1      	b.n	8006bc2 <_printf_i+0x126>
 8006c5e:	681a      	ldr	r2, [r3, #0]
 8006c60:	1d11      	adds	r1, r2, #4
 8006c62:	6019      	str	r1, [r3, #0]
 8006c64:	6815      	ldr	r5, [r2, #0]
 8006c66:	6862      	ldr	r2, [r4, #4]
 8006c68:	2100      	movs	r1, #0
 8006c6a:	4628      	mov	r0, r5
 8006c6c:	f7ff fd50 	bl	8006710 <memchr>
 8006c70:	b108      	cbz	r0, 8006c76 <_printf_i+0x1da>
 8006c72:	1b40      	subs	r0, r0, r5
 8006c74:	6060      	str	r0, [r4, #4]
 8006c76:	6863      	ldr	r3, [r4, #4]
 8006c78:	6123      	str	r3, [r4, #16]
 8006c7a:	2300      	movs	r3, #0
 8006c7c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006c80:	e79f      	b.n	8006bc2 <_printf_i+0x126>
 8006c82:	6923      	ldr	r3, [r4, #16]
 8006c84:	462a      	mov	r2, r5
 8006c86:	4639      	mov	r1, r7
 8006c88:	4630      	mov	r0, r6
 8006c8a:	47c0      	blx	r8
 8006c8c:	3001      	adds	r0, #1
 8006c8e:	d0a2      	beq.n	8006bd6 <_printf_i+0x13a>
 8006c90:	6823      	ldr	r3, [r4, #0]
 8006c92:	079b      	lsls	r3, r3, #30
 8006c94:	d507      	bpl.n	8006ca6 <_printf_i+0x20a>
 8006c96:	2500      	movs	r5, #0
 8006c98:	f104 0919 	add.w	r9, r4, #25
 8006c9c:	68e3      	ldr	r3, [r4, #12]
 8006c9e:	9a03      	ldr	r2, [sp, #12]
 8006ca0:	1a9b      	subs	r3, r3, r2
 8006ca2:	429d      	cmp	r5, r3
 8006ca4:	db05      	blt.n	8006cb2 <_printf_i+0x216>
 8006ca6:	68e0      	ldr	r0, [r4, #12]
 8006ca8:	9b03      	ldr	r3, [sp, #12]
 8006caa:	4298      	cmp	r0, r3
 8006cac:	bfb8      	it	lt
 8006cae:	4618      	movlt	r0, r3
 8006cb0:	e793      	b.n	8006bda <_printf_i+0x13e>
 8006cb2:	2301      	movs	r3, #1
 8006cb4:	464a      	mov	r2, r9
 8006cb6:	4639      	mov	r1, r7
 8006cb8:	4630      	mov	r0, r6
 8006cba:	47c0      	blx	r8
 8006cbc:	3001      	adds	r0, #1
 8006cbe:	d08a      	beq.n	8006bd6 <_printf_i+0x13a>
 8006cc0:	3501      	adds	r5, #1
 8006cc2:	e7eb      	b.n	8006c9c <_printf_i+0x200>
 8006cc4:	2b00      	cmp	r3, #0
 8006cc6:	d1a7      	bne.n	8006c18 <_printf_i+0x17c>
 8006cc8:	780b      	ldrb	r3, [r1, #0]
 8006cca:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006cce:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006cd2:	e765      	b.n	8006ba0 <_printf_i+0x104>
 8006cd4:	08007815 	.word	0x08007815
 8006cd8:	08007804 	.word	0x08007804

08006cdc <realloc>:
 8006cdc:	4b02      	ldr	r3, [pc, #8]	; (8006ce8 <realloc+0xc>)
 8006cde:	460a      	mov	r2, r1
 8006ce0:	4601      	mov	r1, r0
 8006ce2:	6818      	ldr	r0, [r3, #0]
 8006ce4:	f7fe bf5e 	b.w	8005ba4 <__wrap__realloc_r>
 8006ce8:	200001e8 	.word	0x200001e8

08006cec <_sbrk_r>:
 8006cec:	b538      	push	{r3, r4, r5, lr}
 8006cee:	4c06      	ldr	r4, [pc, #24]	; (8006d08 <_sbrk_r+0x1c>)
 8006cf0:	2300      	movs	r3, #0
 8006cf2:	4605      	mov	r5, r0
 8006cf4:	4608      	mov	r0, r1
 8006cf6:	6023      	str	r3, [r4, #0]
 8006cf8:	f7ff f83e 	bl	8005d78 <_sbrk>
 8006cfc:	1c43      	adds	r3, r0, #1
 8006cfe:	d102      	bne.n	8006d06 <_sbrk_r+0x1a>
 8006d00:	6823      	ldr	r3, [r4, #0]
 8006d02:	b103      	cbz	r3, 8006d06 <_sbrk_r+0x1a>
 8006d04:	602b      	str	r3, [r5, #0]
 8006d06:	bd38      	pop	{r3, r4, r5, pc}
 8006d08:	20002934 	.word	0x20002934

08006d0c <__sread>:
 8006d0c:	b510      	push	{r4, lr}
 8006d0e:	460c      	mov	r4, r1
 8006d10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006d14:	f000 f9f4 	bl	8007100 <_read_r>
 8006d18:	2800      	cmp	r0, #0
 8006d1a:	bfab      	itete	ge
 8006d1c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8006d1e:	89a3      	ldrhlt	r3, [r4, #12]
 8006d20:	181b      	addge	r3, r3, r0
 8006d22:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8006d26:	bfac      	ite	ge
 8006d28:	6563      	strge	r3, [r4, #84]	; 0x54
 8006d2a:	81a3      	strhlt	r3, [r4, #12]
 8006d2c:	bd10      	pop	{r4, pc}

08006d2e <__swrite>:
 8006d2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d32:	461f      	mov	r7, r3
 8006d34:	898b      	ldrh	r3, [r1, #12]
 8006d36:	05db      	lsls	r3, r3, #23
 8006d38:	4605      	mov	r5, r0
 8006d3a:	460c      	mov	r4, r1
 8006d3c:	4616      	mov	r6, r2
 8006d3e:	d505      	bpl.n	8006d4c <__swrite+0x1e>
 8006d40:	2302      	movs	r3, #2
 8006d42:	2200      	movs	r2, #0
 8006d44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006d48:	f000 f870 	bl	8006e2c <_lseek_r>
 8006d4c:	89a3      	ldrh	r3, [r4, #12]
 8006d4e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006d52:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006d56:	81a3      	strh	r3, [r4, #12]
 8006d58:	4632      	mov	r2, r6
 8006d5a:	463b      	mov	r3, r7
 8006d5c:	4628      	mov	r0, r5
 8006d5e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006d62:	f000 b841 	b.w	8006de8 <_write_r>

08006d66 <__sseek>:
 8006d66:	b510      	push	{r4, lr}
 8006d68:	460c      	mov	r4, r1
 8006d6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006d6e:	f000 f85d 	bl	8006e2c <_lseek_r>
 8006d72:	1c43      	adds	r3, r0, #1
 8006d74:	89a3      	ldrh	r3, [r4, #12]
 8006d76:	bf15      	itete	ne
 8006d78:	6560      	strne	r0, [r4, #84]	; 0x54
 8006d7a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8006d7e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8006d82:	81a3      	strheq	r3, [r4, #12]
 8006d84:	bf18      	it	ne
 8006d86:	81a3      	strhne	r3, [r4, #12]
 8006d88:	bd10      	pop	{r4, pc}

08006d8a <__sclose>:
 8006d8a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006d8e:	f000 b83d 	b.w	8006e0c <_close_r>

08006d92 <strlen>:
 8006d92:	4603      	mov	r3, r0
 8006d94:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006d98:	2a00      	cmp	r2, #0
 8006d9a:	d1fb      	bne.n	8006d94 <strlen+0x2>
 8006d9c:	1a18      	subs	r0, r3, r0
 8006d9e:	3801      	subs	r0, #1
 8006da0:	4770      	bx	lr

08006da2 <_vsiprintf_r>:
 8006da2:	b510      	push	{r4, lr}
 8006da4:	b09a      	sub	sp, #104	; 0x68
 8006da6:	f44f 7402 	mov.w	r4, #520	; 0x208
 8006daa:	9100      	str	r1, [sp, #0]
 8006dac:	9104      	str	r1, [sp, #16]
 8006dae:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8006db2:	9102      	str	r1, [sp, #8]
 8006db4:	9105      	str	r1, [sp, #20]
 8006db6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8006dba:	f8ad 100e 	strh.w	r1, [sp, #14]
 8006dbe:	4669      	mov	r1, sp
 8006dc0:	f8ad 400c 	strh.w	r4, [sp, #12]
 8006dc4:	f000 f8a8 	bl	8006f18 <_svfiprintf_r>
 8006dc8:	9b00      	ldr	r3, [sp, #0]
 8006dca:	2200      	movs	r2, #0
 8006dcc:	701a      	strb	r2, [r3, #0]
 8006dce:	b01a      	add	sp, #104	; 0x68
 8006dd0:	bd10      	pop	{r4, pc}
	...

08006dd4 <vsiprintf>:
 8006dd4:	4613      	mov	r3, r2
 8006dd6:	460a      	mov	r2, r1
 8006dd8:	4601      	mov	r1, r0
 8006dda:	4802      	ldr	r0, [pc, #8]	; (8006de4 <vsiprintf+0x10>)
 8006ddc:	6800      	ldr	r0, [r0, #0]
 8006dde:	f7ff bfe0 	b.w	8006da2 <_vsiprintf_r>
 8006de2:	bf00      	nop
 8006de4:	200001e8 	.word	0x200001e8

08006de8 <_write_r>:
 8006de8:	b538      	push	{r3, r4, r5, lr}
 8006dea:	4c07      	ldr	r4, [pc, #28]	; (8006e08 <_write_r+0x20>)
 8006dec:	4605      	mov	r5, r0
 8006dee:	4608      	mov	r0, r1
 8006df0:	4611      	mov	r1, r2
 8006df2:	2200      	movs	r2, #0
 8006df4:	6022      	str	r2, [r4, #0]
 8006df6:	461a      	mov	r2, r3
 8006df8:	f7fe ff2c 	bl	8005c54 <_write>
 8006dfc:	1c43      	adds	r3, r0, #1
 8006dfe:	d102      	bne.n	8006e06 <_write_r+0x1e>
 8006e00:	6823      	ldr	r3, [r4, #0]
 8006e02:	b103      	cbz	r3, 8006e06 <_write_r+0x1e>
 8006e04:	602b      	str	r3, [r5, #0]
 8006e06:	bd38      	pop	{r3, r4, r5, pc}
 8006e08:	20002934 	.word	0x20002934

08006e0c <_close_r>:
 8006e0c:	b538      	push	{r3, r4, r5, lr}
 8006e0e:	4c06      	ldr	r4, [pc, #24]	; (8006e28 <_close_r+0x1c>)
 8006e10:	2300      	movs	r3, #0
 8006e12:	4605      	mov	r5, r0
 8006e14:	4608      	mov	r0, r1
 8006e16:	6023      	str	r3, [r4, #0]
 8006e18:	f7fe fefc 	bl	8005c14 <_close>
 8006e1c:	1c43      	adds	r3, r0, #1
 8006e1e:	d102      	bne.n	8006e26 <_close_r+0x1a>
 8006e20:	6823      	ldr	r3, [r4, #0]
 8006e22:	b103      	cbz	r3, 8006e26 <_close_r+0x1a>
 8006e24:	602b      	str	r3, [r5, #0]
 8006e26:	bd38      	pop	{r3, r4, r5, pc}
 8006e28:	20002934 	.word	0x20002934

08006e2c <_lseek_r>:
 8006e2c:	b538      	push	{r3, r4, r5, lr}
 8006e2e:	4c07      	ldr	r4, [pc, #28]	; (8006e4c <_lseek_r+0x20>)
 8006e30:	4605      	mov	r5, r0
 8006e32:	4608      	mov	r0, r1
 8006e34:	4611      	mov	r1, r2
 8006e36:	2200      	movs	r2, #0
 8006e38:	6022      	str	r2, [r4, #0]
 8006e3a:	461a      	mov	r2, r3
 8006e3c:	f7fe ff70 	bl	8005d20 <_lseek>
 8006e40:	1c43      	adds	r3, r0, #1
 8006e42:	d102      	bne.n	8006e4a <_lseek_r+0x1e>
 8006e44:	6823      	ldr	r3, [r4, #0]
 8006e46:	b103      	cbz	r3, 8006e4a <_lseek_r+0x1e>
 8006e48:	602b      	str	r3, [r5, #0]
 8006e4a:	bd38      	pop	{r3, r4, r5, pc}
 8006e4c:	20002934 	.word	0x20002934

08006e50 <_malloc_usable_size_r>:
 8006e50:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8006e54:	2800      	cmp	r0, #0
 8006e56:	f1a0 0004 	sub.w	r0, r0, #4
 8006e5a:	bfbc      	itt	lt
 8006e5c:	580b      	ldrlt	r3, [r1, r0]
 8006e5e:	18c0      	addlt	r0, r0, r3
 8006e60:	4770      	bx	lr

08006e62 <__ssputs_r>:
 8006e62:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8006e66:	688e      	ldr	r6, [r1, #8]
 8006e68:	429e      	cmp	r6, r3
 8006e6a:	4682      	mov	r10, r0
 8006e6c:	460c      	mov	r4, r1
 8006e6e:	4691      	mov	r9, r2
 8006e70:	4698      	mov	r8, r3
 8006e72:	d835      	bhi.n	8006ee0 <__ssputs_r+0x7e>
 8006e74:	898a      	ldrh	r2, [r1, #12]
 8006e76:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8006e7a:	d031      	beq.n	8006ee0 <__ssputs_r+0x7e>
 8006e7c:	6825      	ldr	r5, [r4, #0]
 8006e7e:	6909      	ldr	r1, [r1, #16]
 8006e80:	1a6f      	subs	r7, r5, r1
 8006e82:	6965      	ldr	r5, [r4, #20]
 8006e84:	2302      	movs	r3, #2
 8006e86:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006e8a:	fb95 f5f3 	sdiv	r5, r5, r3
 8006e8e:	f108 0301 	add.w	r3, r8, #1
 8006e92:	443b      	add	r3, r7
 8006e94:	429d      	cmp	r5, r3
 8006e96:	bf38      	it	cc
 8006e98:	461d      	movcc	r5, r3
 8006e9a:	0553      	lsls	r3, r2, #21
 8006e9c:	d531      	bpl.n	8006f02 <__ssputs_r+0xa0>
 8006e9e:	4629      	mov	r1, r5
 8006ea0:	f7fe fe7e 	bl	8005ba0 <__wrap__malloc_r>
 8006ea4:	4606      	mov	r6, r0
 8006ea6:	b950      	cbnz	r0, 8006ebe <__ssputs_r+0x5c>
 8006ea8:	230c      	movs	r3, #12
 8006eaa:	f8ca 3000 	str.w	r3, [r10]
 8006eae:	89a3      	ldrh	r3, [r4, #12]
 8006eb0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006eb4:	81a3      	strh	r3, [r4, #12]
 8006eb6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006eba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006ebe:	463a      	mov	r2, r7
 8006ec0:	6921      	ldr	r1, [r4, #16]
 8006ec2:	f7ff fc75 	bl	80067b0 <memcpy>
 8006ec6:	89a3      	ldrh	r3, [r4, #12]
 8006ec8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8006ecc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006ed0:	81a3      	strh	r3, [r4, #12]
 8006ed2:	6126      	str	r6, [r4, #16]
 8006ed4:	6165      	str	r5, [r4, #20]
 8006ed6:	443e      	add	r6, r7
 8006ed8:	1bed      	subs	r5, r5, r7
 8006eda:	6026      	str	r6, [r4, #0]
 8006edc:	60a5      	str	r5, [r4, #8]
 8006ede:	4646      	mov	r6, r8
 8006ee0:	4546      	cmp	r6, r8
 8006ee2:	bf28      	it	cs
 8006ee4:	4646      	movcs	r6, r8
 8006ee6:	4632      	mov	r2, r6
 8006ee8:	4649      	mov	r1, r9
 8006eea:	6820      	ldr	r0, [r4, #0]
 8006eec:	f7ff fc6b 	bl	80067c6 <memmove>
 8006ef0:	68a3      	ldr	r3, [r4, #8]
 8006ef2:	1b9b      	subs	r3, r3, r6
 8006ef4:	60a3      	str	r3, [r4, #8]
 8006ef6:	6823      	ldr	r3, [r4, #0]
 8006ef8:	441e      	add	r6, r3
 8006efa:	6026      	str	r6, [r4, #0]
 8006efc:	2000      	movs	r0, #0
 8006efe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006f02:	462a      	mov	r2, r5
 8006f04:	f7fe fe4e 	bl	8005ba4 <__wrap__realloc_r>
 8006f08:	4606      	mov	r6, r0
 8006f0a:	2800      	cmp	r0, #0
 8006f0c:	d1e1      	bne.n	8006ed2 <__ssputs_r+0x70>
 8006f0e:	6921      	ldr	r1, [r4, #16]
 8006f10:	4650      	mov	r0, r10
 8006f12:	f7fe fe49 	bl	8005ba8 <__wrap__free_r>
 8006f16:	e7c7      	b.n	8006ea8 <__ssputs_r+0x46>

08006f18 <_svfiprintf_r>:
 8006f18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8006f1c:	b09d      	sub	sp, #116	; 0x74
 8006f1e:	4680      	mov	r8, r0
 8006f20:	9303      	str	r3, [sp, #12]
 8006f22:	898b      	ldrh	r3, [r1, #12]
 8006f24:	061c      	lsls	r4, r3, #24
 8006f26:	460d      	mov	r5, r1
 8006f28:	4616      	mov	r6, r2
 8006f2a:	d50f      	bpl.n	8006f4c <_svfiprintf_r+0x34>
 8006f2c:	690b      	ldr	r3, [r1, #16]
 8006f2e:	b96b      	cbnz	r3, 8006f4c <_svfiprintf_r+0x34>
 8006f30:	2140      	movs	r1, #64	; 0x40
 8006f32:	f7fe fe35 	bl	8005ba0 <__wrap__malloc_r>
 8006f36:	6028      	str	r0, [r5, #0]
 8006f38:	6128      	str	r0, [r5, #16]
 8006f3a:	b928      	cbnz	r0, 8006f48 <_svfiprintf_r+0x30>
 8006f3c:	230c      	movs	r3, #12
 8006f3e:	f8c8 3000 	str.w	r3, [r8]
 8006f42:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006f46:	e0c5      	b.n	80070d4 <_svfiprintf_r+0x1bc>
 8006f48:	2340      	movs	r3, #64	; 0x40
 8006f4a:	616b      	str	r3, [r5, #20]
 8006f4c:	2300      	movs	r3, #0
 8006f4e:	9309      	str	r3, [sp, #36]	; 0x24
 8006f50:	2320      	movs	r3, #32
 8006f52:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006f56:	2330      	movs	r3, #48	; 0x30
 8006f58:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006f5c:	f04f 0b01 	mov.w	r11, #1
 8006f60:	4637      	mov	r7, r6
 8006f62:	463c      	mov	r4, r7
 8006f64:	f814 3b01 	ldrb.w	r3, [r4], #1
 8006f68:	2b00      	cmp	r3, #0
 8006f6a:	d13c      	bne.n	8006fe6 <_svfiprintf_r+0xce>
 8006f6c:	ebb7 0a06 	subs.w	r10, r7, r6
 8006f70:	d00b      	beq.n	8006f8a <_svfiprintf_r+0x72>
 8006f72:	4653      	mov	r3, r10
 8006f74:	4632      	mov	r2, r6
 8006f76:	4629      	mov	r1, r5
 8006f78:	4640      	mov	r0, r8
 8006f7a:	f7ff ff72 	bl	8006e62 <__ssputs_r>
 8006f7e:	3001      	adds	r0, #1
 8006f80:	f000 80a3 	beq.w	80070ca <_svfiprintf_r+0x1b2>
 8006f84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006f86:	4453      	add	r3, r10
 8006f88:	9309      	str	r3, [sp, #36]	; 0x24
 8006f8a:	783b      	ldrb	r3, [r7, #0]
 8006f8c:	2b00      	cmp	r3, #0
 8006f8e:	f000 809c 	beq.w	80070ca <_svfiprintf_r+0x1b2>
 8006f92:	2300      	movs	r3, #0
 8006f94:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006f98:	9304      	str	r3, [sp, #16]
 8006f9a:	9307      	str	r3, [sp, #28]
 8006f9c:	9205      	str	r2, [sp, #20]
 8006f9e:	9306      	str	r3, [sp, #24]
 8006fa0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006fa4:	931a      	str	r3, [sp, #104]	; 0x68
 8006fa6:	2205      	movs	r2, #5
 8006fa8:	7821      	ldrb	r1, [r4, #0]
 8006faa:	4850      	ldr	r0, [pc, #320]	; (80070ec <_svfiprintf_r+0x1d4>)
 8006fac:	f7ff fbb0 	bl	8006710 <memchr>
 8006fb0:	1c67      	adds	r7, r4, #1
 8006fb2:	9b04      	ldr	r3, [sp, #16]
 8006fb4:	b9d8      	cbnz	r0, 8006fee <_svfiprintf_r+0xd6>
 8006fb6:	06d9      	lsls	r1, r3, #27
 8006fb8:	bf44      	itt	mi
 8006fba:	2220      	movmi	r2, #32
 8006fbc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006fc0:	071a      	lsls	r2, r3, #28
 8006fc2:	bf44      	itt	mi
 8006fc4:	222b      	movmi	r2, #43	; 0x2b
 8006fc6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006fca:	7822      	ldrb	r2, [r4, #0]
 8006fcc:	2a2a      	cmp	r2, #42	; 0x2a
 8006fce:	d016      	beq.n	8006ffe <_svfiprintf_r+0xe6>
 8006fd0:	9a07      	ldr	r2, [sp, #28]
 8006fd2:	2100      	movs	r1, #0
 8006fd4:	200a      	movs	r0, #10
 8006fd6:	4627      	mov	r7, r4
 8006fd8:	3401      	adds	r4, #1
 8006fda:	783b      	ldrb	r3, [r7, #0]
 8006fdc:	3b30      	subs	r3, #48	; 0x30
 8006fde:	2b09      	cmp	r3, #9
 8006fe0:	d951      	bls.n	8007086 <_svfiprintf_r+0x16e>
 8006fe2:	b1c9      	cbz	r1, 8007018 <_svfiprintf_r+0x100>
 8006fe4:	e011      	b.n	800700a <_svfiprintf_r+0xf2>
 8006fe6:	2b25      	cmp	r3, #37	; 0x25
 8006fe8:	d0c0      	beq.n	8006f6c <_svfiprintf_r+0x54>
 8006fea:	4627      	mov	r7, r4
 8006fec:	e7b9      	b.n	8006f62 <_svfiprintf_r+0x4a>
 8006fee:	4a3f      	ldr	r2, [pc, #252]	; (80070ec <_svfiprintf_r+0x1d4>)
 8006ff0:	1a80      	subs	r0, r0, r2
 8006ff2:	fa0b f000 	lsl.w	r0, r11, r0
 8006ff6:	4318      	orrs	r0, r3
 8006ff8:	9004      	str	r0, [sp, #16]
 8006ffa:	463c      	mov	r4, r7
 8006ffc:	e7d3      	b.n	8006fa6 <_svfiprintf_r+0x8e>
 8006ffe:	9a03      	ldr	r2, [sp, #12]
 8007000:	1d11      	adds	r1, r2, #4
 8007002:	6812      	ldr	r2, [r2, #0]
 8007004:	9103      	str	r1, [sp, #12]
 8007006:	2a00      	cmp	r2, #0
 8007008:	db01      	blt.n	800700e <_svfiprintf_r+0xf6>
 800700a:	9207      	str	r2, [sp, #28]
 800700c:	e004      	b.n	8007018 <_svfiprintf_r+0x100>
 800700e:	4252      	negs	r2, r2
 8007010:	f043 0302 	orr.w	r3, r3, #2
 8007014:	9207      	str	r2, [sp, #28]
 8007016:	9304      	str	r3, [sp, #16]
 8007018:	783b      	ldrb	r3, [r7, #0]
 800701a:	2b2e      	cmp	r3, #46	; 0x2e
 800701c:	d10e      	bne.n	800703c <_svfiprintf_r+0x124>
 800701e:	787b      	ldrb	r3, [r7, #1]
 8007020:	2b2a      	cmp	r3, #42	; 0x2a
 8007022:	f107 0101 	add.w	r1, r7, #1
 8007026:	d132      	bne.n	800708e <_svfiprintf_r+0x176>
 8007028:	9b03      	ldr	r3, [sp, #12]
 800702a:	1d1a      	adds	r2, r3, #4
 800702c:	681b      	ldr	r3, [r3, #0]
 800702e:	9203      	str	r2, [sp, #12]
 8007030:	2b00      	cmp	r3, #0
 8007032:	bfb8      	it	lt
 8007034:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8007038:	3702      	adds	r7, #2
 800703a:	9305      	str	r3, [sp, #20]
 800703c:	4c2c      	ldr	r4, [pc, #176]	; (80070f0 <_svfiprintf_r+0x1d8>)
 800703e:	7839      	ldrb	r1, [r7, #0]
 8007040:	2203      	movs	r2, #3
 8007042:	4620      	mov	r0, r4
 8007044:	f7ff fb64 	bl	8006710 <memchr>
 8007048:	b138      	cbz	r0, 800705a <_svfiprintf_r+0x142>
 800704a:	2340      	movs	r3, #64	; 0x40
 800704c:	1b00      	subs	r0, r0, r4
 800704e:	fa03 f000 	lsl.w	r0, r3, r0
 8007052:	9b04      	ldr	r3, [sp, #16]
 8007054:	4303      	orrs	r3, r0
 8007056:	9304      	str	r3, [sp, #16]
 8007058:	3701      	adds	r7, #1
 800705a:	7839      	ldrb	r1, [r7, #0]
 800705c:	4825      	ldr	r0, [pc, #148]	; (80070f4 <_svfiprintf_r+0x1dc>)
 800705e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007062:	2206      	movs	r2, #6
 8007064:	1c7e      	adds	r6, r7, #1
 8007066:	f7ff fb53 	bl	8006710 <memchr>
 800706a:	2800      	cmp	r0, #0
 800706c:	d035      	beq.n	80070da <_svfiprintf_r+0x1c2>
 800706e:	4b22      	ldr	r3, [pc, #136]	; (80070f8 <_svfiprintf_r+0x1e0>)
 8007070:	b9fb      	cbnz	r3, 80070b2 <_svfiprintf_r+0x19a>
 8007072:	9b03      	ldr	r3, [sp, #12]
 8007074:	3307      	adds	r3, #7
 8007076:	f023 0307 	bic.w	r3, r3, #7
 800707a:	3308      	adds	r3, #8
 800707c:	9303      	str	r3, [sp, #12]
 800707e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007080:	444b      	add	r3, r9
 8007082:	9309      	str	r3, [sp, #36]	; 0x24
 8007084:	e76c      	b.n	8006f60 <_svfiprintf_r+0x48>
 8007086:	fb00 3202 	mla	r2, r0, r2, r3
 800708a:	2101      	movs	r1, #1
 800708c:	e7a3      	b.n	8006fd6 <_svfiprintf_r+0xbe>
 800708e:	2300      	movs	r3, #0
 8007090:	9305      	str	r3, [sp, #20]
 8007092:	4618      	mov	r0, r3
 8007094:	240a      	movs	r4, #10
 8007096:	460f      	mov	r7, r1
 8007098:	3101      	adds	r1, #1
 800709a:	783a      	ldrb	r2, [r7, #0]
 800709c:	3a30      	subs	r2, #48	; 0x30
 800709e:	2a09      	cmp	r2, #9
 80070a0:	d903      	bls.n	80070aa <_svfiprintf_r+0x192>
 80070a2:	2b00      	cmp	r3, #0
 80070a4:	d0ca      	beq.n	800703c <_svfiprintf_r+0x124>
 80070a6:	9005      	str	r0, [sp, #20]
 80070a8:	e7c8      	b.n	800703c <_svfiprintf_r+0x124>
 80070aa:	fb04 2000 	mla	r0, r4, r0, r2
 80070ae:	2301      	movs	r3, #1
 80070b0:	e7f1      	b.n	8007096 <_svfiprintf_r+0x17e>
 80070b2:	ab03      	add	r3, sp, #12
 80070b4:	9300      	str	r3, [sp, #0]
 80070b6:	462a      	mov	r2, r5
 80070b8:	4b10      	ldr	r3, [pc, #64]	; (80070fc <_svfiprintf_r+0x1e4>)
 80070ba:	a904      	add	r1, sp, #16
 80070bc:	4640      	mov	r0, r8
 80070be:	f3af 8000 	nop.w
 80070c2:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 80070c6:	4681      	mov	r9, r0
 80070c8:	d1d9      	bne.n	800707e <_svfiprintf_r+0x166>
 80070ca:	89ab      	ldrh	r3, [r5, #12]
 80070cc:	065b      	lsls	r3, r3, #25
 80070ce:	f53f af38 	bmi.w	8006f42 <_svfiprintf_r+0x2a>
 80070d2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80070d4:	b01d      	add	sp, #116	; 0x74
 80070d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80070da:	ab03      	add	r3, sp, #12
 80070dc:	9300      	str	r3, [sp, #0]
 80070de:	462a      	mov	r2, r5
 80070e0:	4b06      	ldr	r3, [pc, #24]	; (80070fc <_svfiprintf_r+0x1e4>)
 80070e2:	a904      	add	r1, sp, #16
 80070e4:	4640      	mov	r0, r8
 80070e6:	f7ff fcd9 	bl	8006a9c <_printf_i>
 80070ea:	e7ea      	b.n	80070c2 <_svfiprintf_r+0x1aa>
 80070ec:	08007826 	.word	0x08007826
 80070f0:	0800782c 	.word	0x0800782c
 80070f4:	08007830 	.word	0x08007830
 80070f8:	00000000 	.word	0x00000000
 80070fc:	08006e63 	.word	0x08006e63

08007100 <_read_r>:
 8007100:	b538      	push	{r3, r4, r5, lr}
 8007102:	4c07      	ldr	r4, [pc, #28]	; (8007120 <_read_r+0x20>)
 8007104:	4605      	mov	r5, r0
 8007106:	4608      	mov	r0, r1
 8007108:	4611      	mov	r1, r2
 800710a:	2200      	movs	r2, #0
 800710c:	6022      	str	r2, [r4, #0]
 800710e:	461a      	mov	r2, r3
 8007110:	f7fe fdd6 	bl	8005cc0 <_read>
 8007114:	1c43      	adds	r3, r0, #1
 8007116:	d102      	bne.n	800711e <_read_r+0x1e>
 8007118:	6823      	ldr	r3, [r4, #0]
 800711a:	b103      	cbz	r3, 800711e <_read_r+0x1e>
 800711c:	602b      	str	r3, [r5, #0]
 800711e:	bd38      	pop	{r3, r4, r5, pc}
 8007120:	20002934 	.word	0x20002934

08007124 <_init>:
 8007124:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007126:	bf00      	nop
 8007128:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800712a:	bc08      	pop	{r3}
 800712c:	469e      	mov	lr, r3
 800712e:	4770      	bx	lr

08007130 <_fini>:
 8007130:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007132:	bf00      	nop
 8007134:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007136:	bc08      	pop	{r3}
 8007138:	469e      	mov	lr, r3
 800713a:	4770      	bx	lr

0800713c <vtable for std_msgs::Time>:
	...
 8007144:	0231 0800 0259 0800 0295 0800 029d 0800     1...Y...........

08007154 <vtable for rosserial_msgs::TopicInfo>:
	...
 800715c:	0dcb 0800 1027 0800 02a5 0800 02ad 0800     ....'...........

0800716c <vtable for rosserial_msgs::Log>:
	...
 8007174:	0d9f 0800 0e6f 0800 02b5 0800 02bd 0800     ....o...........

08007184 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 800718c:	0cbd 0800 10dd 0800 02c5 0800 02cd 0800     ................

0800719c <vtable for std_msgs::Header>:
	...
 80071a4:	0a1d 0800 0ea5 0800 02d5 0800 02dd 0800     ................

080071b4 <vtable for trajectory_msgs::JointTrajectoryPoint>:
	...
 80071bc:	02e5 0800 04fb 0800 04ad 0800 04b5 0800     ................

080071cc <vtable for trajectory_msgs::JointTrajectory>:
	...
 80071d4:	0c19 0800 0f2f 0800 04bd 0800 04c5 0800     ..../...........

080071e4 <vtable for sensor_msgs::JointState>:
	...
 80071ec:	0a7d 0800 120b 0800 04cd 0800 04d5 0800     }...............

080071fc <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 8007204:	18f5 0800 19b5 0800 04f5 0800               ............

08007210 <vtable for ros::Subscriber<trajectory_msgs::JointTrajectory, void>>:
	...
 8007218:	100d 0800 04dd 0800 04e5 0800 04ed 0800     ................
 8007228:	6f6a 6e69 5f74 7473 7461 0065 6a74 635f     joint_state.tj_c
 8007238:	646d 3300 3630 6436 6463 3637 3661 6663     md.3066dcd76a6cf
 8007248:	6561 3566 3937 6462 6630 3433 3731 6533     aef579bd0f34173e
 8007258:	6639 0064 6573 736e 726f 6d5f 6773 2f73     9fd.sensor_msgs/
 8007268:	6f4a 6e69 5374 6174 6574 3900 3066 3965     JointState.9f0e9
 8007278:	6238 6164 3536 3839 3931 3638 6464 3566     8bda65981986ddf5
 8007288:	6133 6166 6137 3034 3465 0039 3131 6261     3afa7a40e49.11ab
 8007298:	3764 3133 3263 3935 3333 3632 6331 3664     d731c25933261cd6
 80072a8:	3831 6233 3164 6432 3236 3539 7200 736f     183bd12d6295.ros
 80072b8:	6573 6972 6c61 6d5f 6773 2f73 6f4c 0067     serial_msgs/Log.
 80072c8:	6130 3564 6631 3838 6366 3434 3938 6632     0ad51f88fc44892f
 80072d8:	6338 3031 3836 3034 3737 3436 3036 3530     8c10684077646005
 80072e8:	7200 736f 6573 6972 6c61 6d5f 6773 2f73     .rosserial_msgs/
 80072f8:	6f54 6970 4963 666e 006f                    TopicInfo.

08007302 <rosserial_msgs::REQUESTPARAM>:
 8007302:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 8007312:	7165 6575 7473 6150 6172 006d 3536 3462     equestParam.65b4
 8007322:	3966 6134 3439 3164 6465 3736 3631 6439     f94a94d1ed67169d
 8007332:	3361 6135 3230 3366 6433 6633 7400 6172     a35a02f33d3f.tra
 8007342:	656a 7463 726f 5f79 736d 7367 4a2f 696f     jectory_msgs/Joi
 8007352:	746e 7254 6a61 6365 6f74 7972 6600 6333     ntTrajectory.f3c
 8007362:	3164 3165 3463 3364 3032 3763 6439 3936     d1e1c4d320c79d69
 8007372:	3538 3963 3430 6561 6435 6463 0033 7274     85c904ae5dcd3.tr
 8007382:	6a61 6365 6f74 7972 6d5f 6773 2f73 6f4a     ajectory_msgs/Jo
 8007392:	6e69 5474 6172 656a 7463 726f 5079 696f     intTrajectoryPoi
 80073a2:	746e 4d00 7365 6173 6567 6620 6f72 206d     nt.Message from 
 80073b2:	6564 6976 6563 6420 6f72 7070 6465 203a     device dropped: 
 80073c2:	656d 7373 6761 2065 616c 6772 7265 7420     message larger t
 80073d2:	6168 206e 7562 6666 7265 002e 6463 3137     han buffer..cd71
 80073e2:	3636 3763 6334 3535 6332 3133 6631 6362     66c74c552c311fbc
 80073f2:	3263 6566 6135 6237 3263 3938 7300 6474     c2fe5a7bc289.std
 8007402:	6d5f 6773 2f73 6954 656d 3200 3731 6436     _msgs/Time.2176d
 8007412:	6365 6561 6263 6563 3837 6261 3363 3962     ecaecbce78abc3b9
 8007422:	6536 3066 3934 6166 6562 0064 7473 5f64     6ef049fabed.std_
 8007432:	736d 7367 482f 6165 6564 0072 0000          msgs/Header...

08007440 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8007440:	1d77 0800 1d69 0800 1d75 0800 682f 6d6f     w...i...u.../hom
 8007450:	2f65 6166 616c 7470 706f 722f 736f 6c2f     e/falaptop/ros/l
 8007460:	6269 722f 736f 6c5f 6269 422f 6675 6566     ib/ros_lib/Buffe
 8007470:	6572 5364 7265 6169 2f6c 7542 6666 7265     redSerial/Buffer
 8007480:	6465 6553 6972 6c61 632e 7070 2500 2073     edSerial.cpp.%s 
 8007490:	6425 6220 6675 6566 2072 766f 7265 7277     %d buffer overwr
 80074a0:	7469 2065 6d28 7861 625f 6675 735f 7a69     ite (max_buf_siz
 80074b0:	3a65 2520 2064 7865 6563 6465 6465 203a     e: %d exceeded: 
 80074c0:	6425 2129 0a0d 0000                         %d)!....

080074c8 <vtable for BufferedSerial>:
	...
 80074d0:	5a5d 0800 5a5d 0800 1e61 0800 1eb9 0800     ]Z..]Z..a.......
 80074e0:	1d29 0800 1d39 0800 1d3d 0800 1fd9 0800     )...9...=.......
 80074f0:	1ff1 0800 206d 0800 202f 0800               ....m ../ ..

080074fc <us_data>:
 80074fc:	7504 0800 09c8 2000                         .u..... 

08007504 <us_interface>:
 8007504:	3c41 0800 3c65 0800 3c9d 0800 3cb5 0800     A<..e<...<...<..
 8007514:	3c81 0800 6970 6d6e 7061 6d20 7369 6d2d     .<..pinmap mis-m
 8007524:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
 8007534:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
 8007544:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
 8007554:	6e69 756f 0074 0000                         inout...

0800755c <mp_stk_size>:
 800755c:	0210 0000                                   ....

08007560 <mp_tcb_size>:
 8007560:	03cc                                        ..

08007562 <mp_tmr_size>:
	...

08007564 <os_clockrate>:
 8007564:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 8007574:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 8007584:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

08007591 <os_fifo_size>:
 8007591:	0110                                             .

08007592 <os_flags>:
 8007592:	0001                                        ..

08007594 <os_maxtaskrun>:
 8007594:	000f 0000                                   ....

08007598 <os_messageQ_def_osTimerMessageQ>:
 8007598:	0004 0000 09ec 2000                         ....... 

080075a0 <os_mutex_def_env_mutex>:
 80075a0:	0a0c 2000                                   ... 

080075a4 <os_mutex_def_malloc_mutex>:
 80075a4:	0a1c 2000                                   ... 

080075a8 <os_mutex_def_singleton_mutex>:
 80075a8:	0a2c 2000                                   ,.. 

080075ac <os_rrobin>:
 80075ac:	0005 0001                                   ....

080075b0 <os_stackinfo>:
 80075b0:	0200 0100                                   ....

080075b4 <os_thread_def_osTimerThread>:
 80075b4:	3175 0800 0002 0000 0001 0000 0320 0000     u1.......... ...
 80075c4:	1f08 2000                                   ... 

080075c8 <os_trv>:
 80075c8:	bf1f 0002                                   ....

080075cc <os_mutex_def_osThreadMutex>:
 80075cc:	1a40 2000 6950 6d6e 7061 6520 7272 726f     @.. Pinmap error
 80075dc:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 80075ec:	6562 2e72 0000 0000                         ber.....

080075f4 <ll_pin_defines>:
 80075f4:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 8007604:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 8007614:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 8007624:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
 8007634:	6143 6e6e 746f 6920 696e 6974 6c61 7a69     Cannot initializ
 8007644:	2065 4155 5452 000a                         e UART..

0800764c <PinMap_UART_RX>:
 800764c:	0001 0000 4c00 4000 0812 0000 0003 0000     .....L.@........
 800765c:	4400 4000 0712 0000 000a 0000 1000 4001     .D.@...........@
 800766c:	0712 0000 0017 0000 1000 4001 0712 0000     ...........@....
 800767c:	0025 0000 4800 4000 0712 0000 0027 0000     %....H.@....'...
 800768c:	1400 4001 0812 0000 002b 0000 4800 4000     ...@....+....H.@
 800769c:	0712 0000 0032 0000 5000 4000 0812 0000     ....2....P.@....
 80076ac:	ffff 0000 ffff ffff 0000 0000               ............

080076b8 <PinMap_UART_TX>:
 80076b8:	0000 0000 4c00 4000 0812 0000 0002 0000     .....L.@........
 80076c8:	4400 4000 0712 0000 0009 0000 1000 4001     .D.@...........@
 80076d8:	0712 0000 0016 0000 1000 4001 0712 0000     ...........@....
 80076e8:	001a 0000 4800 4000 0712 0000 0026 0000     .....H.@....&...
 80076f8:	1400 4001 0812 0000 002a 0000 4800 4000     ...@....*....H.@
 8007708:	0712 0000 002c 0000 5000 4000 0812 0000     ....,....P.@....
 8007718:	ffff 0000 ffff ffff 0000 0000               ............

08007724 <AHBPrescTable>:
	...
 800772c:	0201 0403 0706 0908                         ........

08007734 <APBAHBPrescTable>:
 8007734:	0000 0000 0201 0403 0201 0403 0706 0908     ................

08007744 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 8007744:	58c7 0800 58cb 0800 58d3 0800               .X...X...X..

08007750 <vtable for mbed::SerialBase>:
	...
 8007758:	5887 0800 5889 0800 1e15 0800 1e4d 0800     .X...X......M...

08007768 <vtable for mbed::RawSerial>:
	...
 8007770:	5a5d 0800 5a5d 0800 5a75 0800 5a89 0800     ]Z..]Z..uZ...Z..
 8007780:	704f 7265 7461 726f 6e20 7765 5d5b 6f20     Operator new[] o
 8007790:	7475 6f20 2066 656d 6f6d 7972 0a0d 0000     ut of memory....

080077a0 <__sf_fake_stderr>:
	...

080077c0 <__sf_fake_stdin>:
	...

080077e0 <__sf_fake_stdout>:
	...

08007800 <_global_impure_ptr>:
 8007800:	01ec 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 8007810:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 8007820:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 8007830:	6665 4567 4746 0000                         efgEFG..

08007838 <__EH_FRAME_BEGIN__>:
 8007838:	0000 0000                                   ....
