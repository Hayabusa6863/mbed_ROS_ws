
NUCLEO_F446RE/ROSWithClass.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08005251


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 00 02 20 51 52 00 08 85 52 00 08 85 52 00 08     ... QR...R...R..
 8000010:	85 52 00 08 85 52 00 08 85 52 00 08 00 00 00 00     .R...R...R......
	...
 800002c:	15 51 00 08 85 52 00 08 00 00 00 00 bb 51 00 08     .Q...R.......Q..
 800003c:	1b 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 800004c:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 800005c:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 800006c:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 800007c:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 800008c:	a9 2e 00 08 ad 2e 00 08 85 52 00 08 9d 2e 00 08     .........R......
 800009c:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 80000ac:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 80000bc:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 80000cc:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 80000dc:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 80000ec:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 80000fc:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 800010c:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 800011c:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 800012c:	85 52 00 08 85 52 00 08 00 00 00 00 00 00 00 00     .R...R..........
 800013c:	bd 2e 00 08 c1 2e 00 08 85 52 00 08 b1 2e 00 08     .........R......
 800014c:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 800015c:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 800016c:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
	...
 8000184:	85 52 00 08 00 00 00 00 00 00 00 00 85 52 00 08     .R...........R..
	...
 800019c:	85 52 00 08 00 00 00 00 00 00 00 00 00 00 00 00     .R..............
 80001ac:	85 52 00 08 85 52 00 08 85 52 00 08 85 52 00 08     .R...R...R...R..
 80001bc:	85 52 00 08 85 52 00 08                             .R...R..

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000260 	.word	0x20000260
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08006740 	.word	0x08006740

080001e8 <frame_dummy>:
 80001e8:	4b0c      	ldr	r3, [pc, #48]	; (800021c <frame_dummy+0x34>)
 80001ea:	b143      	cbz	r3, 80001fe <frame_dummy+0x16>
 80001ec:	480c      	ldr	r0, [pc, #48]	; (8000220 <frame_dummy+0x38>)
 80001ee:	490d      	ldr	r1, [pc, #52]	; (8000224 <frame_dummy+0x3c>)
 80001f0:	b510      	push	{r4, lr}
 80001f2:	f3af 8000 	nop.w
 80001f6:	480c      	ldr	r0, [pc, #48]	; (8000228 <frame_dummy+0x40>)
 80001f8:	6803      	ldr	r3, [r0, #0]
 80001fa:	b923      	cbnz	r3, 8000206 <frame_dummy+0x1e>
 80001fc:	bd10      	pop	{r4, pc}
 80001fe:	480a      	ldr	r0, [pc, #40]	; (8000228 <frame_dummy+0x40>)
 8000200:	6803      	ldr	r3, [r0, #0]
 8000202:	b933      	cbnz	r3, 8000212 <frame_dummy+0x2a>
 8000204:	4770      	bx	lr
 8000206:	4b09      	ldr	r3, [pc, #36]	; (800022c <frame_dummy+0x44>)
 8000208:	2b00      	cmp	r3, #0
 800020a:	d0f7      	beq.n	80001fc <frame_dummy+0x14>
 800020c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000210:	4718      	bx	r3
 8000212:	4b06      	ldr	r3, [pc, #24]	; (800022c <frame_dummy+0x44>)
 8000214:	2b00      	cmp	r3, #0
 8000216:	d0f5      	beq.n	8000204 <frame_dummy+0x1c>
 8000218:	4718      	bx	r3
 800021a:	bf00      	nop
 800021c:	00000000 	.word	0x00000000
 8000220:	08006740 	.word	0x08006740
 8000224:	20000264 	.word	0x20000264
 8000228:	20000258 	.word	0x20000258
 800022c:	00000000 	.word	0x00000000

08000230 <std_msgs::Time::serialize(unsigned char*) const>:
 8000230:	6843      	ldr	r3, [r0, #4]
 8000232:	700b      	strb	r3, [r1, #0]
 8000234:	6843      	ldr	r3, [r0, #4]
 8000236:	0a1b      	lsrs	r3, r3, #8
 8000238:	704b      	strb	r3, [r1, #1]
 800023a:	88c3      	ldrh	r3, [r0, #6]
 800023c:	708b      	strb	r3, [r1, #2]
 800023e:	79c3      	ldrb	r3, [r0, #7]
 8000240:	70cb      	strb	r3, [r1, #3]
 8000242:	6883      	ldr	r3, [r0, #8]
 8000244:	710b      	strb	r3, [r1, #4]
 8000246:	6883      	ldr	r3, [r0, #8]
 8000248:	0a1b      	lsrs	r3, r3, #8
 800024a:	714b      	strb	r3, [r1, #5]
 800024c:	8943      	ldrh	r3, [r0, #10]
 800024e:	718b      	strb	r3, [r1, #6]
 8000250:	7ac3      	ldrb	r3, [r0, #11]
 8000252:	71cb      	strb	r3, [r1, #7]
 8000254:	2008      	movs	r0, #8
 8000256:	4770      	bx	lr

08000258 <std_msgs::Time::deserialize(unsigned char*)>:
 8000258:	780b      	ldrb	r3, [r1, #0]
 800025a:	6043      	str	r3, [r0, #4]
 800025c:	784a      	ldrb	r2, [r1, #1]
 800025e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000262:	6043      	str	r3, [r0, #4]
 8000264:	788a      	ldrb	r2, [r1, #2]
 8000266:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800026a:	6043      	str	r3, [r0, #4]
 800026c:	78ca      	ldrb	r2, [r1, #3]
 800026e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000272:	6043      	str	r3, [r0, #4]
 8000274:	790b      	ldrb	r3, [r1, #4]
 8000276:	6083      	str	r3, [r0, #8]
 8000278:	794a      	ldrb	r2, [r1, #5]
 800027a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800027e:	6083      	str	r3, [r0, #8]
 8000280:	798a      	ldrb	r2, [r1, #6]
 8000282:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000286:	6083      	str	r3, [r0, #8]
 8000288:	79ca      	ldrb	r2, [r1, #7]
 800028a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800028e:	6083      	str	r3, [r0, #8]
 8000290:	2008      	movs	r0, #8
 8000292:	4770      	bx	lr

08000294 <std_msgs::Time::getType()>:
 8000294:	4800      	ldr	r0, [pc, #0]	; (8000298 <std_msgs::Time::getType()+0x4>)
 8000296:	4770      	bx	lr
 8000298:	080061c5 	.word	0x080061c5

0800029c <std_msgs::Time::getMD5()>:
 800029c:	4800      	ldr	r0, [pc, #0]	; (80002a0 <std_msgs::Time::getMD5()+0x4>)
 800029e:	4770      	bx	lr
 80002a0:	080061a4 	.word	0x080061a4

080002a4 <rosserial_msgs::TopicInfo::getType()>:
 80002a4:	4800      	ldr	r0, [pc, #0]	; (80002a8 <rosserial_msgs::TopicInfo::getType()+0x4>)
 80002a6:	4770      	bx	lr
 80002a8:	08006136 	.word	0x08006136

080002ac <rosserial_msgs::TopicInfo::getMD5()>:
 80002ac:	4800      	ldr	r0, [pc, #0]	; (80002b0 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 80002ae:	4770      	bx	lr
 80002b0:	08006115 	.word	0x08006115

080002b4 <rosserial_msgs::Log::getType()>:
 80002b4:	4800      	ldr	r0, [pc, #0]	; (80002b8 <rosserial_msgs::Log::getType()+0x4>)
 80002b6:	4770      	bx	lr
 80002b8:	08006102 	.word	0x08006102

080002bc <rosserial_msgs::Log::getMD5()>:
 80002bc:	4800      	ldr	r0, [pc, #0]	; (80002c0 <rosserial_msgs::Log::getMD5()+0x4>)
 80002be:	4770      	bx	lr
 80002c0:	080060e1 	.word	0x080060e1

080002c4 <rosserial_msgs::RequestParamResponse::getType()>:
 80002c4:	4800      	ldr	r0, [pc, #0]	; (80002c8 <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 80002c6:	4770      	bx	lr
 80002c8:	0800614f 	.word	0x0800614f

080002cc <rosserial_msgs::RequestParamResponse::getMD5()>:
 80002cc:	4800      	ldr	r0, [pc, #0]	; (80002d0 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 80002ce:	4770      	bx	lr
 80002d0:	080060c0 	.word	0x080060c0

080002d4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 80002d4:	f890 05e8 	ldrb.w	r0, [r0, #1512]	; 0x5e8
 80002d8:	4770      	bx	lr

080002da <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 80002da:	3801      	subs	r0, #1
 80002dc:	2300      	movs	r3, #0
 80002de:	fa21 f203 	lsr.w	r2, r1, r3
 80002e2:	3308      	adds	r3, #8
 80002e4:	2b20      	cmp	r3, #32
 80002e6:	f800 2f01 	strb.w	r2, [r0, #1]!
 80002ea:	d1f8      	bne.n	80002de <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 80002ec:	4770      	bx	lr

080002ee <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 80002ee:	6843      	ldr	r3, [r0, #4]
 80002f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80002f4:	700b      	strb	r3, [r1, #0]
 80002f6:	6843      	ldr	r3, [r0, #4]
 80002f8:	0a1b      	lsrs	r3, r3, #8
 80002fa:	704b      	strb	r3, [r1, #1]
 80002fc:	88c3      	ldrh	r3, [r0, #6]
 80002fe:	708b      	strb	r3, [r1, #2]
 8000300:	79c3      	ldrb	r3, [r0, #7]
 8000302:	70cb      	strb	r3, [r1, #3]
 8000304:	460d      	mov	r5, r1
 8000306:	1d0a      	adds	r2, r1, #4
 8000308:	4604      	mov	r4, r0
 800030a:	2100      	movs	r1, #0
 800030c:	6860      	ldr	r0, [r4, #4]
 800030e:	4281      	cmp	r1, r0
 8000310:	eba2 0305 	sub.w	r3, r2, r5
 8000314:	f102 0204 	add.w	r2, r2, #4
 8000318:	d20f      	bcs.n	800033a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 800031a:	68e3      	ldr	r3, [r4, #12]
 800031c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8000320:	f802 3c04 	strb.w	r3, [r2, #-4]
 8000324:	0a18      	lsrs	r0, r3, #8
 8000326:	f802 0c03 	strb.w	r0, [r2, #-3]
 800032a:	0c18      	lsrs	r0, r3, #16
 800032c:	0e1b      	lsrs	r3, r3, #24
 800032e:	f802 0c02 	strb.w	r0, [r2, #-2]
 8000332:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000336:	3101      	adds	r1, #1
 8000338:	e7e8      	b.n	800030c <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 800033a:	6922      	ldr	r2, [r4, #16]
 800033c:	54ea      	strb	r2, [r5, r3]
 800033e:	6921      	ldr	r1, [r4, #16]
 8000340:	18ea      	adds	r2, r5, r3
 8000342:	0a09      	lsrs	r1, r1, #8
 8000344:	7051      	strb	r1, [r2, #1]
 8000346:	8a61      	ldrh	r1, [r4, #18]
 8000348:	7091      	strb	r1, [r2, #2]
 800034a:	7ce1      	ldrb	r1, [r4, #19]
 800034c:	70d1      	strb	r1, [r2, #3]
 800034e:	3304      	adds	r3, #4
 8000350:	442b      	add	r3, r5
 8000352:	2100      	movs	r1, #0
 8000354:	6922      	ldr	r2, [r4, #16]
 8000356:	4291      	cmp	r1, r2
 8000358:	eba3 0605 	sub.w	r6, r3, r5
 800035c:	f103 0304 	add.w	r3, r3, #4
 8000360:	d20f      	bcs.n	8000382 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 8000362:	69a2      	ldr	r2, [r4, #24]
 8000364:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8000368:	f803 2c04 	strb.w	r2, [r3, #-4]
 800036c:	0a10      	lsrs	r0, r2, #8
 800036e:	f803 0c03 	strb.w	r0, [r3, #-3]
 8000372:	0c10      	lsrs	r0, r2, #16
 8000374:	0e12      	lsrs	r2, r2, #24
 8000376:	f803 0c02 	strb.w	r0, [r3, #-2]
 800037a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800037e:	3101      	adds	r1, #1
 8000380:	e7e8      	b.n	8000354 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 8000382:	69e3      	ldr	r3, [r4, #28]
 8000384:	55ab      	strb	r3, [r5, r6]
 8000386:	69e2      	ldr	r2, [r4, #28]
 8000388:	19ab      	adds	r3, r5, r6
 800038a:	0a12      	lsrs	r2, r2, #8
 800038c:	705a      	strb	r2, [r3, #1]
 800038e:	8be2      	ldrh	r2, [r4, #30]
 8000390:	709a      	strb	r2, [r3, #2]
 8000392:	7fe2      	ldrb	r2, [r4, #31]
 8000394:	70da      	strb	r2, [r3, #3]
 8000396:	3604      	adds	r6, #4
 8000398:	2700      	movs	r7, #0
 800039a:	69e3      	ldr	r3, [r4, #28]
 800039c:	429f      	cmp	r7, r3
 800039e:	d214      	bcs.n	80003ca <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 80003a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80003a2:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 80003a6:	f005 fc7c 	bl	8005ca2 <strlen>
 80003aa:	4680      	mov	r8, r0
 80003ac:	4601      	mov	r1, r0
 80003ae:	19a8      	adds	r0, r5, r6
 80003b0:	f7ff ff93 	bl	80002da <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80003b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80003b6:	3604      	adds	r6, #4
 80003b8:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 80003bc:	19a8      	adds	r0, r5, r6
 80003be:	4642      	mov	r2, r8
 80003c0:	f005 f97e 	bl	80056c0 <memcpy>
 80003c4:	4446      	add	r6, r8
 80003c6:	3701      	adds	r7, #1
 80003c8:	e7e7      	b.n	800039a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 80003ca:	4630      	mov	r0, r6
 80003cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080003d0 <rosserial_msgs::Log::serialize(unsigned char*) const>:
 80003d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003d2:	460e      	mov	r6, r1
 80003d4:	7903      	ldrb	r3, [r0, #4]
 80003d6:	f806 3b01 	strb.w	r3, [r6], #1
 80003da:	4605      	mov	r5, r0
 80003dc:	6880      	ldr	r0, [r0, #8]
 80003de:	460f      	mov	r7, r1
 80003e0:	f005 fc5f 	bl	8005ca2 <strlen>
 80003e4:	4604      	mov	r4, r0
 80003e6:	4601      	mov	r1, r0
 80003e8:	4630      	mov	r0, r6
 80003ea:	f7ff ff76 	bl	80002da <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80003ee:	4622      	mov	r2, r4
 80003f0:	68a9      	ldr	r1, [r5, #8]
 80003f2:	1d78      	adds	r0, r7, #5
 80003f4:	f005 f964 	bl	80056c0 <memcpy>
 80003f8:	1d60      	adds	r0, r4, #5
 80003fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080003fc <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 80003fc:	8883      	ldrh	r3, [r0, #4]
 80003fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000402:	700b      	strb	r3, [r1, #0]
 8000404:	8883      	ldrh	r3, [r0, #4]
 8000406:	0a1b      	lsrs	r3, r3, #8
 8000408:	704b      	strb	r3, [r1, #1]
 800040a:	4605      	mov	r5, r0
 800040c:	6880      	ldr	r0, [r0, #8]
 800040e:	460c      	mov	r4, r1
 8000410:	f005 fc47 	bl	8005ca2 <strlen>
 8000414:	4607      	mov	r7, r0
 8000416:	4601      	mov	r1, r0
 8000418:	1ca0      	adds	r0, r4, #2
 800041a:	f7ff ff5e 	bl	80002da <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800041e:	463a      	mov	r2, r7
 8000420:	68a9      	ldr	r1, [r5, #8]
 8000422:	1da0      	adds	r0, r4, #6
 8000424:	f005 f94c 	bl	80056c0 <memcpy>
 8000428:	68e8      	ldr	r0, [r5, #12]
 800042a:	f005 fc3a 	bl	8005ca2 <strlen>
 800042e:	f107 0806 	add.w	r8, r7, #6
 8000432:	4606      	mov	r6, r0
 8000434:	4601      	mov	r1, r0
 8000436:	370a      	adds	r7, #10
 8000438:	eb04 0008 	add.w	r0, r4, r8
 800043c:	f7ff ff4d 	bl	80002da <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000440:	4632      	mov	r2, r6
 8000442:	68e9      	ldr	r1, [r5, #12]
 8000444:	19e0      	adds	r0, r4, r7
 8000446:	f005 f93b 	bl	80056c0 <memcpy>
 800044a:	6928      	ldr	r0, [r5, #16]
 800044c:	f005 fc29 	bl	8005ca2 <strlen>
 8000450:	443e      	add	r6, r7
 8000452:	4601      	mov	r1, r0
 8000454:	4607      	mov	r7, r0
 8000456:	19a0      	adds	r0, r4, r6
 8000458:	3604      	adds	r6, #4
 800045a:	f7ff ff3e 	bl	80002da <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 800045e:	463a      	mov	r2, r7
 8000460:	19a0      	adds	r0, r4, r6
 8000462:	6929      	ldr	r1, [r5, #16]
 8000464:	443e      	add	r6, r7
 8000466:	f005 f92b 	bl	80056c0 <memcpy>
 800046a:	696b      	ldr	r3, [r5, #20]
 800046c:	55a3      	strb	r3, [r4, r6]
 800046e:	4434      	add	r4, r6
 8000470:	0a1a      	lsrs	r2, r3, #8
 8000472:	7062      	strb	r2, [r4, #1]
 8000474:	0c1a      	lsrs	r2, r3, #16
 8000476:	0e1b      	lsrs	r3, r3, #24
 8000478:	70a2      	strb	r2, [r4, #2]
 800047a:	70e3      	strb	r3, [r4, #3]
 800047c:	1d30      	adds	r0, r6, #4
 800047e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000482 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 8000482:	b510      	push	{r4, lr}
 8000484:	2300      	movs	r3, #0
 8000486:	6003      	str	r3, [r0, #0]
 8000488:	3901      	subs	r1, #1
 800048a:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800048e:	fa02 f403 	lsl.w	r4, r2, r3
 8000492:	6802      	ldr	r2, [r0, #0]
 8000494:	3308      	adds	r3, #8
 8000496:	4322      	orrs	r2, r4
 8000498:	2b20      	cmp	r3, #32
 800049a:	6002      	str	r2, [r0, #0]
 800049c:	d1f5      	bne.n	800048a <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 800049e:	bd10      	pop	{r4, pc}

080004a0 <rosserial_msgs::Log::deserialize(unsigned char*)>:
 80004a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80004a2:	460c      	mov	r4, r1
 80004a4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80004a8:	7103      	strb	r3, [r0, #4]
 80004aa:	4605      	mov	r5, r0
 80004ac:	a801      	add	r0, sp, #4
 80004ae:	f7ff ffe8 	bl	8000482 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80004b2:	9b01      	ldr	r3, [sp, #4]
 80004b4:	1d62      	adds	r2, r4, #5
 80004b6:	1d58      	adds	r0, r3, #5
 80004b8:	1b11      	subs	r1, r2, r4
 80004ba:	4288      	cmp	r0, r1
 80004bc:	d904      	bls.n	80004c8 <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 80004be:	f812 1b01 	ldrb.w	r1, [r2], #1
 80004c2:	f802 1c02 	strb.w	r1, [r2, #-2]
 80004c6:	e7f7      	b.n	80004b8 <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 80004c8:	4423      	add	r3, r4
 80004ca:	2200      	movs	r2, #0
 80004cc:	3404      	adds	r4, #4
 80004ce:	711a      	strb	r2, [r3, #4]
 80004d0:	60ac      	str	r4, [r5, #8]
 80004d2:	b003      	add	sp, #12
 80004d4:	bd30      	pop	{r4, r5, pc}

080004d6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 80004d6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80004da:	6843      	ldr	r3, [r0, #4]
 80004dc:	680d      	ldr	r5, [r1, #0]
 80004de:	429d      	cmp	r5, r3
 80004e0:	4604      	mov	r4, r0
 80004e2:	460e      	mov	r6, r1
 80004e4:	d904      	bls.n	80004f0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 80004e6:	00a9      	lsls	r1, r5, #2
 80004e8:	68c0      	ldr	r0, [r0, #12]
 80004ea:	f005 fb7f 	bl	8005bec <realloc>
 80004ee:	60e0      	str	r0, [r4, #12]
 80004f0:	6065      	str	r5, [r4, #4]
 80004f2:	1d32      	adds	r2, r6, #4
 80004f4:	2100      	movs	r1, #0
 80004f6:	6860      	ldr	r0, [r4, #4]
 80004f8:	4281      	cmp	r1, r0
 80004fa:	eba2 0306 	sub.w	r3, r2, r6
 80004fe:	f102 0204 	add.w	r2, r2, #4
 8000502:	d213      	bcs.n	800052c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 8000504:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 8000508:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 800050c:	041b      	lsls	r3, r3, #16
 800050e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 8000512:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 8000516:	4303      	orrs	r3, r0
 8000518:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 800051c:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8000520:	68e0      	ldr	r0, [r4, #12]
 8000522:	60a3      	str	r3, [r4, #8]
 8000524:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 8000528:	3101      	adds	r1, #1
 800052a:	e7e4      	b.n	80004f6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 800052c:	18f2      	adds	r2, r6, r3
 800052e:	5cf1      	ldrb	r1, [r6, r3]
 8000530:	7895      	ldrb	r5, [r2, #2]
 8000532:	7850      	ldrb	r0, [r2, #1]
 8000534:	78d2      	ldrb	r2, [r2, #3]
 8000536:	042d      	lsls	r5, r5, #16
 8000538:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 800053c:	430d      	orrs	r5, r1
 800053e:	1d1f      	adds	r7, r3, #4
 8000540:	6923      	ldr	r3, [r4, #16]
 8000542:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000546:	429d      	cmp	r5, r3
 8000548:	d904      	bls.n	8000554 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 800054a:	00a9      	lsls	r1, r5, #2
 800054c:	69a0      	ldr	r0, [r4, #24]
 800054e:	f005 fb4d 	bl	8005bec <realloc>
 8000552:	61a0      	str	r0, [r4, #24]
 8000554:	6125      	str	r5, [r4, #16]
 8000556:	19f3      	adds	r3, r6, r7
 8000558:	2100      	movs	r1, #0
 800055a:	6922      	ldr	r2, [r4, #16]
 800055c:	4291      	cmp	r1, r2
 800055e:	eba3 0506 	sub.w	r5, r3, r6
 8000562:	f103 0304 	add.w	r3, r3, #4
 8000566:	d213      	bcs.n	8000590 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 8000568:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 800056c:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8000570:	0412      	lsls	r2, r2, #16
 8000572:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000576:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 800057a:	4302      	orrs	r2, r0
 800057c:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8000580:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000584:	69a0      	ldr	r0, [r4, #24]
 8000586:	6162      	str	r2, [r4, #20]
 8000588:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 800058c:	3101      	adds	r1, #1
 800058e:	e7e4      	b.n	800055a <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 8000590:	1973      	adds	r3, r6, r5
 8000592:	5d72      	ldrb	r2, [r6, r5]
 8000594:	789f      	ldrb	r7, [r3, #2]
 8000596:	7859      	ldrb	r1, [r3, #1]
 8000598:	78db      	ldrb	r3, [r3, #3]
 800059a:	043f      	lsls	r7, r7, #16
 800059c:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 80005a0:	4317      	orrs	r7, r2
 80005a2:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 80005a6:	69e3      	ldr	r3, [r4, #28]
 80005a8:	429f      	cmp	r7, r3
 80005aa:	f105 0504 	add.w	r5, r5, #4
 80005ae:	d904      	bls.n	80005ba <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 80005b0:	00b9      	lsls	r1, r7, #2
 80005b2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80005b4:	f005 fb1a 	bl	8005bec <realloc>
 80005b8:	6260      	str	r0, [r4, #36]	; 0x24
 80005ba:	61e7      	str	r7, [r4, #28]
 80005bc:	2700      	movs	r7, #0
 80005be:	46b8      	mov	r8, r7
 80005c0:	69e3      	ldr	r3, [r4, #28]
 80005c2:	429f      	cmp	r7, r3
 80005c4:	d21a      	bcs.n	80005fc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 80005c6:	1971      	adds	r1, r6, r5
 80005c8:	a801      	add	r0, sp, #4
 80005ca:	f7ff ff5a 	bl	8000482 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80005ce:	1d2b      	adds	r3, r5, #4
 80005d0:	9d01      	ldr	r5, [sp, #4]
 80005d2:	18f2      	adds	r2, r6, r3
 80005d4:	441d      	add	r5, r3
 80005d6:	1b91      	subs	r1, r2, r6
 80005d8:	42a9      	cmp	r1, r5
 80005da:	d204      	bcs.n	80005e6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 80005dc:	f812 1b01 	ldrb.w	r1, [r2], #1
 80005e0:	f802 1c02 	strb.w	r1, [r2, #-2]
 80005e4:	e7f7      	b.n	80005d6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 80005e6:	1972      	adds	r2, r6, r5
 80005e8:	3b01      	subs	r3, #1
 80005ea:	f802 8c01 	strb.w	r8, [r2, #-1]
 80005ee:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80005f0:	4433      	add	r3, r6
 80005f2:	6223      	str	r3, [r4, #32]
 80005f4:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 80005f8:	3701      	adds	r7, #1
 80005fa:	e7e1      	b.n	80005c0 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 80005fc:	4628      	mov	r0, r5
 80005fe:	b002      	add	sp, #8
 8000600:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000604 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 8000604:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000606:	780b      	ldrb	r3, [r1, #0]
 8000608:	8083      	strh	r3, [r0, #4]
 800060a:	784a      	ldrb	r2, [r1, #1]
 800060c:	b085      	sub	sp, #20
 800060e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000612:	8083      	strh	r3, [r0, #4]
 8000614:	460c      	mov	r4, r1
 8000616:	4606      	mov	r6, r0
 8000618:	3102      	adds	r1, #2
 800061a:	a801      	add	r0, sp, #4
 800061c:	f7ff ff31 	bl	8000482 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000620:	9f01      	ldr	r7, [sp, #4]
 8000622:	1da3      	adds	r3, r4, #6
 8000624:	1dbd      	adds	r5, r7, #6
 8000626:	1b1a      	subs	r2, r3, r4
 8000628:	4295      	cmp	r5, r2
 800062a:	d904      	bls.n	8000636 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 800062c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000630:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000634:	e7f7      	b.n	8000626 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 8000636:	19e3      	adds	r3, r4, r7
 8000638:	2200      	movs	r2, #0
 800063a:	715a      	strb	r2, [r3, #5]
 800063c:	1d63      	adds	r3, r4, #5
 800063e:	60b3      	str	r3, [r6, #8]
 8000640:	1961      	adds	r1, r4, r5
 8000642:	a802      	add	r0, sp, #8
 8000644:	f7ff ff1d 	bl	8000482 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000648:	1d2b      	adds	r3, r5, #4
 800064a:	9d02      	ldr	r5, [sp, #8]
 800064c:	f107 020a 	add.w	r2, r7, #10
 8000650:	441d      	add	r5, r3
 8000652:	4422      	add	r2, r4
 8000654:	1b11      	subs	r1, r2, r4
 8000656:	428d      	cmp	r5, r1
 8000658:	d904      	bls.n	8000664 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 800065a:	f812 1b01 	ldrb.w	r1, [r2], #1
 800065e:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000662:	e7f7      	b.n	8000654 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 8000664:	1961      	adds	r1, r4, r5
 8000666:	3b01      	subs	r3, #1
 8000668:	4423      	add	r3, r4
 800066a:	2200      	movs	r2, #0
 800066c:	f801 2c01 	strb.w	r2, [r1, #-1]
 8000670:	a803      	add	r0, sp, #12
 8000672:	60f3      	str	r3, [r6, #12]
 8000674:	f7ff ff05 	bl	8000482 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000678:	9803      	ldr	r0, [sp, #12]
 800067a:	3504      	adds	r5, #4
 800067c:	4428      	add	r0, r5
 800067e:	1963      	adds	r3, r4, r5
 8000680:	1b1a      	subs	r2, r3, r4
 8000682:	4290      	cmp	r0, r2
 8000684:	d904      	bls.n	8000690 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 8000686:	f813 2b01 	ldrb.w	r2, [r3], #1
 800068a:	f803 2c02 	strb.w	r2, [r3, #-2]
 800068e:	e7f7      	b.n	8000680 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 8000690:	1822      	adds	r2, r4, r0
 8000692:	3d01      	subs	r5, #1
 8000694:	2300      	movs	r3, #0
 8000696:	4425      	add	r5, r4
 8000698:	f802 3c01 	strb.w	r3, [r2, #-1]
 800069c:	6135      	str	r5, [r6, #16]
 800069e:	7893      	ldrb	r3, [r2, #2]
 80006a0:	7851      	ldrb	r1, [r2, #1]
 80006a2:	78d2      	ldrb	r2, [r2, #3]
 80006a4:	041b      	lsls	r3, r3, #16
 80006a6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80006aa:	5c21      	ldrb	r1, [r4, r0]
 80006ac:	430b      	orrs	r3, r1
 80006ae:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80006b2:	3004      	adds	r0, #4
 80006b4:	6173      	str	r3, [r6, #20]
 80006b6:	b005      	add	sp, #20
 80006b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080006bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 80006bc:	b530      	push	{r4, r5, lr}
 80006be:	b085      	sub	sp, #20
 80006c0:	4604      	mov	r4, r0
 80006c2:	4b09      	ldr	r3, [pc, #36]	; (80006e8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 80006c4:	9301      	str	r3, [sp, #4]
 80006c6:	2300      	movs	r3, #0
 80006c8:	9302      	str	r3, [sp, #8]
 80006ca:	9303      	str	r3, [sp, #12]
 80006cc:	f854 3bec 	ldr.w	r3, [r4], #236
 80006d0:	aa01      	add	r2, sp, #4
 80006d2:	681b      	ldr	r3, [r3, #0]
 80006d4:	210a      	movs	r1, #10
 80006d6:	4605      	mov	r5, r0
 80006d8:	4798      	blx	r3
 80006da:	4620      	mov	r0, r4
 80006dc:	f004 fb4b 	bl	8004d76 <mbed::Timer::read_ms()>
 80006e0:	f8c5 00fc 	str.w	r0, [r5, #252]	; 0xfc
 80006e4:	b005      	add	sp, #20
 80006e6:	bd30      	pop	{r4, r5, pc}
 80006e8:	08006054 	.word	0x08006054

080006ec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 80006ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006f0:	b086      	sub	sp, #24
 80006f2:	4b2b      	ldr	r3, [pc, #172]	; (80007a0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 80006f4:	9300      	str	r3, [sp, #0]
 80006f6:	2200      	movs	r2, #0
 80006f8:	4b2a      	ldr	r3, [pc, #168]	; (80007a4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 80006fa:	f8ad 2004 	strh.w	r2, [sp, #4]
 80006fe:	4605      	mov	r5, r0
 8000700:	9302      	str	r3, [sp, #8]
 8000702:	9303      	str	r3, [sp, #12]
 8000704:	9304      	str	r3, [sp, #16]
 8000706:	9205      	str	r2, [sp, #20]
 8000708:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 800070c:	f500 66ae 	add.w	r6, r0, #1392	; 0x570
 8000710:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000714:	6823      	ldr	r3, [r4, #0]
 8000716:	b1bb      	cbz	r3, 8000748 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 8000718:	6858      	ldr	r0, [r3, #4]
 800071a:	689a      	ldr	r2, [r3, #8]
 800071c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000720:	681a      	ldr	r2, [r3, #0]
 8000722:	6803      	ldr	r3, [r0, #0]
 8000724:	9202      	str	r2, [sp, #8]
 8000726:	689b      	ldr	r3, [r3, #8]
 8000728:	4798      	blx	r3
 800072a:	6823      	ldr	r3, [r4, #0]
 800072c:	9003      	str	r0, [sp, #12]
 800072e:	6858      	ldr	r0, [r3, #4]
 8000730:	6803      	ldr	r3, [r0, #0]
 8000732:	68db      	ldr	r3, [r3, #12]
 8000734:	4798      	blx	r3
 8000736:	6821      	ldr	r1, [r4, #0]
 8000738:	682b      	ldr	r3, [r5, #0]
 800073a:	9004      	str	r0, [sp, #16]
 800073c:	9705      	str	r7, [sp, #20]
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	6909      	ldr	r1, [r1, #16]
 8000742:	466a      	mov	r2, sp
 8000744:	4628      	mov	r0, r5
 8000746:	4798      	blx	r3
 8000748:	3404      	adds	r4, #4
 800074a:	42b4      	cmp	r4, r6
 800074c:	d1e2      	bne.n	8000714 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 800074e:	f205 56d4 	addw	r6, r5, #1492	; 0x5d4
 8000752:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000756:	6820      	ldr	r0, [r4, #0]
 8000758:	b1c8      	cbz	r0, 800078e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 800075a:	6843      	ldr	r3, [r0, #4]
 800075c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000760:	6883      	ldr	r3, [r0, #8]
 8000762:	9302      	str	r3, [sp, #8]
 8000764:	6803      	ldr	r3, [r0, #0]
 8000766:	689b      	ldr	r3, [r3, #8]
 8000768:	4798      	blx	r3
 800076a:	9003      	str	r0, [sp, #12]
 800076c:	6820      	ldr	r0, [r4, #0]
 800076e:	6803      	ldr	r3, [r0, #0]
 8000770:	68db      	ldr	r3, [r3, #12]
 8000772:	4798      	blx	r3
 8000774:	682b      	ldr	r3, [r5, #0]
 8000776:	9004      	str	r0, [sp, #16]
 8000778:	6820      	ldr	r0, [r4, #0]
 800077a:	f8d3 8000 	ldr.w	r8, [r3]
 800077e:	6803      	ldr	r3, [r0, #0]
 8000780:	9705      	str	r7, [sp, #20]
 8000782:	685b      	ldr	r3, [r3, #4]
 8000784:	4798      	blx	r3
 8000786:	466a      	mov	r2, sp
 8000788:	4601      	mov	r1, r0
 800078a:	4628      	mov	r0, r5
 800078c:	47c0      	blx	r8
 800078e:	3404      	adds	r4, #4
 8000790:	42a6      	cmp	r6, r4
 8000792:	d1e0      	bne.n	8000756 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 8000794:	2301      	movs	r3, #1
 8000796:	f885 35e8 	strb.w	r3, [r5, #1512]	; 0x5e8
 800079a:	b006      	add	sp, #24
 800079c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80007a0:	0800606c 	.word	0x0800606c
 80007a4:	080063ce 	.word	0x080063ce

080007a8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 80007a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007aa:	b085      	sub	sp, #20
 80007ac:	f100 05ec 	add.w	r5, r0, #236	; 0xec
 80007b0:	4b1f      	ldr	r3, [pc, #124]	; (8000830 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 80007b2:	9301      	str	r3, [sp, #4]
 80007b4:	4604      	mov	r4, r0
 80007b6:	2300      	movs	r3, #0
 80007b8:	4628      	mov	r0, r5
 80007ba:	9302      	str	r3, [sp, #8]
 80007bc:	9303      	str	r3, [sp, #12]
 80007be:	460e      	mov	r6, r1
 80007c0:	f004 fad9 	bl	8004d76 <mbed::Timer::read_ms()>
 80007c4:	f8d4 20fc 	ldr.w	r2, [r4, #252]	; 0xfc
 80007c8:	4631      	mov	r1, r6
 80007ca:	1a87      	subs	r7, r0, r2
 80007cc:	a801      	add	r0, sp, #4
 80007ce:	f7ff fd43 	bl	8000258 <std_msgs::Time::deserialize(unsigned char*)>
 80007d2:	9b02      	ldr	r3, [sp, #8]
 80007d4:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 80007d8:	fbb7 f2f6 	udiv	r2, r7, r6
 80007dc:	4413      	add	r3, r2
 80007de:	9302      	str	r3, [sp, #8]
 80007e0:	fb06 7212 	mls	r2, r6, r2, r7
 80007e4:	9b03      	ldr	r3, [sp, #12]
 80007e6:	4f13      	ldr	r7, [pc, #76]	; (8000834 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 80007e8:	4628      	mov	r0, r5
 80007ea:	fb07 3202 	mla	r2, r7, r2, r3
 80007ee:	9203      	str	r2, [sp, #12]
 80007f0:	f004 fac1 	bl	8004d76 <mbed::Timer::read_ms()>
 80007f4:	9a02      	ldr	r2, [sp, #8]
 80007f6:	fbb0 f3f6 	udiv	r3, r0, r6
 80007fa:	3a01      	subs	r2, #1
 80007fc:	1ad2      	subs	r2, r2, r3
 80007fe:	9903      	ldr	r1, [sp, #12]
 8000800:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000804:	4a0c      	ldr	r2, [pc, #48]	; (8000838 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x90>)
 8000806:	fb06 0313 	mls	r3, r6, r3, r0
 800080a:	440a      	add	r2, r1
 800080c:	fb07 2313 	mls	r3, r7, r3, r2
 8000810:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8000814:	f504 7182 	add.w	r1, r4, #260	; 0x104
 8000818:	f504 7080 	add.w	r0, r4, #256	; 0x100
 800081c:	f000 fbb8 	bl	8000f90 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000820:	4628      	mov	r0, r5
 8000822:	f004 faa8 	bl	8004d76 <mbed::Timer::read_ms()>
 8000826:	f8c4 05f0 	str.w	r0, [r4, #1520]	; 0x5f0
 800082a:	b005      	add	sp, #20
 800082c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800082e:	bf00      	nop
 8000830:	08006054 	.word	0x08006054
 8000834:	000f4240 	.word	0x000f4240
 8000838:	3b9aca00 	.word	0x3b9aca00

0800083c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 800083c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800083e:	2963      	cmp	r1, #99	; 0x63
 8000840:	b085      	sub	sp, #20
 8000842:	4604      	mov	r4, r0
 8000844:	460e      	mov	r6, r1
 8000846:	dd03      	ble.n	8000850 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8000848:	f890 55e8 	ldrb.w	r5, [r0, #1512]	; 0x5e8
 800084c:	2d00      	cmp	r5, #0
 800084e:	d04d      	beq.n	80008ec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000850:	6813      	ldr	r3, [r2, #0]
 8000852:	f204 3113 	addw	r1, r4, #787	; 0x313
 8000856:	681b      	ldr	r3, [r3, #0]
 8000858:	4610      	mov	r0, r2
 800085a:	4798      	blx	r3
 800085c:	23ff      	movs	r3, #255	; 0xff
 800085e:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
 8000862:	23fe      	movs	r3, #254	; 0xfe
 8000864:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8000868:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
 800086c:	b2c3      	uxtb	r3, r0
 800086e:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
 8000872:	4413      	add	r3, r2
 8000874:	43db      	mvns	r3, r3
 8000876:	f884 6311 	strb.w	r6, [r4, #785]	; 0x311
 800087a:	f346 2607 	sbfx	r6, r6, #8, #8
 800087e:	f884 230f 	strb.w	r2, [r4, #783]	; 0x30f
 8000882:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
 8000886:	f884 6312 	strb.w	r6, [r4, #786]	; 0x312
 800088a:	f204 3111 	addw	r1, r4, #785	; 0x311
 800088e:	2205      	movs	r2, #5
 8000890:	2300      	movs	r3, #0
 8000892:	1d86      	adds	r6, r0, #6
 8000894:	42b2      	cmp	r2, r6
 8000896:	dc04      	bgt.n	80008a2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8000898:	f811 5b01 	ldrb.w	r5, [r1], #1
 800089c:	3201      	adds	r2, #1
 800089e:	442b      	add	r3, r5
 80008a0:	e7f8      	b.n	8000894 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 80008a2:	f100 0508 	add.w	r5, r0, #8
 80008a6:	4420      	add	r0, r4
 80008a8:	43db      	mvns	r3, r3
 80008aa:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 80008ae:	f880 3313 	strb.w	r3, [r0, #787]	; 0x313
 80008b2:	dc0c      	bgt.n	80008ce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 80008b4:	f504 7743 	add.w	r7, r4, #780	; 0x30c
 80008b8:	463e      	mov	r6, r7
 80008ba:	3404      	adds	r4, #4
 80008bc:	1bf3      	subs	r3, r6, r7
 80008be:	429d      	cmp	r5, r3
 80008c0:	dd14      	ble.n	80008ec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 80008c2:	f816 1b01 	ldrb.w	r1, [r6], #1
 80008c6:	4620      	mov	r0, r4
 80008c8:	f000 fcc8 	bl	800125c <BufferedSerial::putc(int)>
 80008cc:	e7f6      	b.n	80008bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 80008ce:	4b09      	ldr	r3, [pc, #36]	; (80008f4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 80008d0:	9301      	str	r3, [sp, #4]
 80008d2:	2303      	movs	r3, #3
 80008d4:	f88d 3008 	strb.w	r3, [sp, #8]
 80008d8:	4b07      	ldr	r3, [pc, #28]	; (80008f8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 80008da:	9303      	str	r3, [sp, #12]
 80008dc:	6823      	ldr	r3, [r4, #0]
 80008de:	aa01      	add	r2, sp, #4
 80008e0:	681b      	ldr	r3, [r3, #0]
 80008e2:	2107      	movs	r1, #7
 80008e4:	4620      	mov	r0, r4
 80008e6:	4798      	blx	r3
 80008e8:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80008ec:	4628      	mov	r0, r5
 80008ee:	b005      	add	sp, #20
 80008f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80008f2:	bf00      	nop
 80008f4:	08006084 	.word	0x08006084
 80008f8:	0800616b 	.word	0x0800616b

080008fc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 80008fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8000900:	f100 08ec 	add.w	r8, r0, #236	; 0xec
 8000904:	4604      	mov	r4, r0
 8000906:	4640      	mov	r0, r8
 8000908:	f004 fa35 	bl	8004d76 <mbed::Timer::read_ms()>
 800090c:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	; 0x5f0
 8000910:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000914:	1ac3      	subs	r3, r0, r3
 8000916:	4293      	cmp	r3, r2
 8000918:	bf84      	itt	hi
 800091a:	2300      	movhi	r3, #0
 800091c:	f884 35e8 	strbhi.w	r3, [r4, #1512]	; 0x5e8
 8000920:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	; 0x5d4
 8000924:	4605      	mov	r5, r0
 8000926:	b133      	cbz	r3, 8000936 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 8000928:	f8d4 35f4 	ldr.w	r3, [r4, #1524]	; 0x5f4
 800092c:	4283      	cmp	r3, r0
 800092e:	bf3c      	itt	cc
 8000930:	2300      	movcc	r3, #0
 8000932:	f8c4 35d4 	strcc.w	r3, [r4, #1492]	; 0x5d4
 8000936:	f104 0904 	add.w	r9, r4, #4
 800093a:	2600      	movs	r6, #0
 800093c:	f504 7786 	add.w	r7, r4, #268	; 0x10c
 8000940:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000944:	b9ab      	cbnz	r3, 8000972 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x76>
 8000946:	4648      	mov	r0, r9
 8000948:	f000 fb30 	bl	8000fac <BufferedSerial::readable()>
 800094c:	b9e8      	cbnz	r0, 800098a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x8e>
 800094e:	f894 05e8 	ldrb.w	r0, [r4, #1512]	; 0x5e8
 8000952:	b160      	cbz	r0, 800096e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
 8000954:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	; 0x5ec
 8000958:	f640 12c4 	movw	r2, #2500	; 0x9c4
 800095c:	1aeb      	subs	r3, r5, r3
 800095e:	4293      	cmp	r3, r2
 8000960:	d904      	bls.n	800096c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x70>
 8000962:	4620      	mov	r0, r4
 8000964:	f7ff feaa 	bl	80006bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000968:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 800096c:	2000      	movs	r0, #0
 800096e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000972:	4640      	mov	r0, r8
 8000974:	f004 f9ff 	bl	8004d76 <mbed::Timer::read_ms()>
 8000978:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800097c:	1b40      	subs	r0, r0, r5
 800097e:	4298      	cmp	r0, r3
 8000980:	d9e1      	bls.n	8000946 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4a>
 8000982:	f06f 0001 	mvn.w	r0, #1
 8000986:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800098a:	4648      	mov	r0, r9
 800098c:	f000 fb18 	bl	8000fc0 <BufferedSerial::getc()>
 8000990:	2800      	cmp	r0, #0
 8000992:	dbdc      	blt.n	800094e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x52>
 8000994:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8000998:	f8d4 a5d4 	ldr.w	r10, [r4, #1492]	; 0x5d4
 800099c:	4403      	add	r3, r0
 800099e:	f1ba 0f07 	cmp.w	r10, #7
 80009a2:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 80009a6:	d112      	bne.n	80009ce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd2>
 80009a8:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 80009ac:	1c5a      	adds	r2, r3, #1
 80009ae:	4423      	add	r3, r4
 80009b0:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
 80009b4:	f883 010c 	strb.w	r0, [r3, #268]	; 0x10c
 80009b8:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 80009bc:	3b01      	subs	r3, #1
 80009be:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 80009c2:	2b00      	cmp	r3, #0
 80009c4:	d1bc      	bne.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80009c6:	2308      	movs	r3, #8
 80009c8:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 80009cc:	e7b8      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80009ce:	f1ba 0f00 	cmp.w	r10, #0
 80009d2:	d114      	bne.n	80009fe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x102>
 80009d4:	28ff      	cmp	r0, #255	; 0xff
 80009d6:	d107      	bne.n	80009e8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xec>
 80009d8:	2301      	movs	r3, #1
 80009da:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 80009de:	f105 0314 	add.w	r3, r5, #20
 80009e2:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 80009e6:	e7ab      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80009e8:	4640      	mov	r0, r8
 80009ea:	f004 f9c4 	bl	8004d76 <mbed::Timer::read_ms()>
 80009ee:	f241 3388 	movw	r3, #5000	; 0x1388
 80009f2:	1b40      	subs	r0, r0, r5
 80009f4:	4298      	cmp	r0, r3
 80009f6:	d9a3      	bls.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 80009f8:	f884 a5e8 	strb.w	r10, [r4, #1512]	; 0x5e8
 80009fc:	e7c1      	b.n	8000982 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
 80009fe:	f1ba 0f01 	cmp.w	r10, #1
 8000a02:	d10d      	bne.n	8000a20 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x124>
 8000a04:	28fe      	cmp	r0, #254	; 0xfe
 8000a06:	d101      	bne.n	8000a0c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x110>
 8000a08:	2302      	movs	r3, #2
 8000a0a:	e7dd      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000a0c:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8000a10:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000a14:	2b00      	cmp	r3, #0
 8000a16:	d193      	bne.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a18:	4620      	mov	r0, r4
 8000a1a:	f7ff fe4f 	bl	80006bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000a1e:	e78f      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a20:	f1ba 0f02 	cmp.w	r10, #2
 8000a24:	d109      	bne.n	8000a3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8000a26:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000a2a:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
 8000a2e:	2303      	movs	r3, #3
 8000a30:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000a34:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8000a38:	e782      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a3a:	f1ba 0f03 	cmp.w	r10, #3
 8000a3e:	d107      	bne.n	8000a50 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x154>
 8000a40:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000a44:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000a48:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000a4c:	2304      	movs	r3, #4
 8000a4e:	e7bb      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000a50:	f1ba 0f04 	cmp.w	r10, #4
 8000a54:	d10b      	bne.n	8000a6e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8000a56:	425a      	negs	r2, r3
 8000a58:	b2d2      	uxtb	r2, r2
 8000a5a:	b2db      	uxtb	r3, r3
 8000a5c:	bf58      	it	pl
 8000a5e:	4253      	negpl	r3, r2
 8000a60:	2bff      	cmp	r3, #255	; 0xff
 8000a62:	d101      	bne.n	8000a68 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16c>
 8000a64:	2305      	movs	r3, #5
 8000a66:	e7af      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000a68:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000a6c:	e768      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a6e:	f1ba 0f05 	cmp.w	r10, #5
 8000a72:	d103      	bne.n	8000a7c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
 8000a74:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000a78:	2306      	movs	r3, #6
 8000a7a:	e7d9      	b.n	8000a30 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x134>
 8000a7c:	f1ba 0f06 	cmp.w	r10, #6
 8000a80:	d10b      	bne.n	8000a9a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19e>
 8000a82:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000a86:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000a8a:	2307      	movs	r3, #7
 8000a8c:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000a90:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000a94:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000a98:	e793      	b.n	80009c2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xc6>
 8000a9a:	f1ba 0f08 	cmp.w	r10, #8
 8000a9e:	f47f af4f 	bne.w	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000aa2:	425a      	negs	r2, r3
 8000aa4:	b2d2      	uxtb	r2, r2
 8000aa6:	b2db      	uxtb	r3, r3
 8000aa8:	bf58      	it	pl
 8000aaa:	4253      	negpl	r3, r2
 8000aac:	2bff      	cmp	r3, #255	; 0xff
 8000aae:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000ab2:	f47f af45 	bne.w	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ab6:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000aba:	b96b      	cbnz	r3, 8000ad8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1dc>
 8000abc:	4620      	mov	r0, r4
 8000abe:	f7ff fdfd 	bl	80006bc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000ac2:	4620      	mov	r0, r4
 8000ac4:	f7ff fe12 	bl	80006ec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8000ac8:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000acc:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8000ad0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ad4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000ad8:	2b0a      	cmp	r3, #10
 8000ada:	d104      	bne.n	8000ae6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
 8000adc:	4639      	mov	r1, r7
 8000ade:	4620      	mov	r0, r4
 8000ae0:	f7ff fe62 	bl	80007a8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 8000ae4:	e72c      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ae6:	2b06      	cmp	r3, #6
 8000ae8:	d108      	bne.n	8000afc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
 8000aea:	4639      	mov	r1, r7
 8000aec:	f204 50fc 	addw	r0, r4, #1532	; 0x5fc
 8000af0:	f7ff fcf1 	bl	80004d6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8000af4:	2301      	movs	r3, #1
 8000af6:	f884 35f8 	strb.w	r3, [r4, #1528]	; 0x5f8
 8000afa:	e721      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000afc:	2b0b      	cmp	r3, #11
 8000afe:	d102      	bne.n	8000b06 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20a>
 8000b00:	f884 65e8 	strb.w	r6, [r4, #1512]	; 0x5e8
 8000b04:	e71c      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b06:	33f8      	adds	r3, #248	; 0xf8
 8000b08:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8000b0c:	2800      	cmp	r0, #0
 8000b0e:	f43f af17 	beq.w	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b12:	6803      	ldr	r3, [r0, #0]
 8000b14:	4639      	mov	r1, r7
 8000b16:	681b      	ldr	r3, [r3, #0]
 8000b18:	4798      	blx	r3
 8000b1a:	e711      	b.n	8000940 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>

08000b1c <main>:
 8000b1c:	b500      	push	{lr}
 8000b1e:	f2ad 7d04 	subw	sp, sp, #1796	; 0x704
 8000b22:	4b3c      	ldr	r3, [pc, #240]	; (8000c14 <main+0xf8>)
 8000b24:	9337      	str	r3, [sp, #220]	; 0xdc
 8000b26:	2400      	movs	r4, #0
 8000b28:	2304      	movs	r3, #4
 8000b2a:	2203      	movs	r2, #3
 8000b2c:	2102      	movs	r1, #2
 8000b2e:	e88d 0018 	stmia.w	sp, {r3, r4}
 8000b32:	a838      	add	r0, sp, #224	; 0xe0
 8000b34:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000b38:	f000 fb20 	bl	800117c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8000b3c:	a872      	add	r0, sp, #456	; 0x1c8
 8000b3e:	f004 f930 	bl	8004da2 <mbed::Timer::Timer()>
 8000b42:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000b46:	a872      	add	r0, sp, #456	; 0x1c8
 8000b48:	9371      	str	r3, [sp, #452]	; 0x1c4
 8000b4a:	f004 f8e8 	bl	8004d1e <mbed::Timer::start()>
 8000b4e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000b52:	4621      	mov	r1, r4
 8000b54:	a87a      	add	r0, sp, #488	; 0x1e8
 8000b56:	9476      	str	r4, [sp, #472]	; 0x1d8
 8000b58:	9477      	str	r4, [sp, #476]	; 0x1dc
 8000b5a:	9478      	str	r4, [sp, #480]	; 0x1e0
 8000b5c:	9479      	str	r4, [sp, #484]	; 0x1e4
 8000b5e:	f004 fdd4 	bl	800570a <memset>
 8000b62:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000b66:	4621      	mov	r1, r4
 8000b68:	a8fa      	add	r0, sp, #1000	; 0x3e8
 8000b6a:	f004 fdce 	bl	800570a <memset>
 8000b6e:	2264      	movs	r2, #100	; 0x64
 8000b70:	4621      	mov	r1, r4
 8000b72:	f50d 60bd 	add.w	r0, sp, #1512	; 0x5e8
 8000b76:	f004 fdc8 	bl	800570a <memset>
 8000b7a:	2264      	movs	r2, #100	; 0x64
 8000b7c:	4621      	mov	r1, r4
 8000b7e:	f20d 604c 	addw	r0, sp, #1612	; 0x64c
 8000b82:	f004 fdc2 	bl	800570a <memset>
 8000b86:	4b24      	ldr	r3, [pc, #144]	; (8000c18 <main+0xfc>)
 8000b88:	f8cd 36d8 	str.w	r3, [sp, #1752]	; 0x6d8
 8000b8c:	f20d 62ec 	addw	r2, sp, #1772	; 0x6ec
 8000b90:	2300      	movs	r3, #0
 8000b92:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8000b96:	a838      	add	r0, sp, #224	; 0xe0
 8000b98:	6013      	str	r3, [r2, #0]
 8000b9a:	9171      	str	r1, [sp, #452]	; 0x1c4
 8000b9c:	f8cd 46b0 	str.w	r4, [sp, #1712]	; 0x6b0
 8000ba0:	f8cd 46b4 	str.w	r4, [sp, #1716]	; 0x6b4
 8000ba4:	f8cd 46b8 	str.w	r4, [sp, #1720]	; 0x6b8
 8000ba8:	f8cd 46bc 	str.w	r4, [sp, #1724]	; 0x6bc
 8000bac:	f8cd 46c0 	str.w	r4, [sp, #1728]	; 0x6c0
 8000bb0:	f88d 46c4 	strb.w	r4, [sp, #1732]	; 0x6c4
 8000bb4:	f8cd 46c8 	str.w	r4, [sp, #1736]	; 0x6c8
 8000bb8:	f8cd 46cc 	str.w	r4, [sp, #1740]	; 0x6cc
 8000bbc:	f8cd 46d0 	str.w	r4, [sp, #1744]	; 0x6d0
 8000bc0:	f88d 46d4 	strb.w	r4, [sp, #1748]	; 0x6d4
 8000bc4:	f8cd 46dc 	str.w	r4, [sp, #1756]	; 0x6dc
 8000bc8:	f8cd 46e0 	str.w	r4, [sp, #1760]	; 0x6e0
 8000bcc:	f8cd 46e4 	str.w	r4, [sp, #1764]	; 0x6e4
 8000bd0:	f8cd 46e8 	str.w	r4, [sp, #1768]	; 0x6e8
 8000bd4:	f8cd 46f0 	str.w	r4, [sp, #1776]	; 0x6f0
 8000bd8:	f8cd 46f4 	str.w	r4, [sp, #1780]	; 0x6f4
 8000bdc:	f8cd 46f8 	str.w	r4, [sp, #1784]	; 0x6f8
 8000be0:	f8cd 46fc 	str.w	r4, [sp, #1788]	; 0x6fc
 8000be4:	f003 ffb8 	bl	8004b58 <mbed::SerialBase::baud(int)>
 8000be8:	a937      	add	r1, sp, #220	; 0xdc
 8000bea:	a802      	add	r0, sp, #8
 8000bec:	f8cd 46b0 	str.w	r4, [sp, #1712]	; 0x6b0
 8000bf0:	f8cd 46b4 	str.w	r4, [sp, #1716]	; 0x6b4
 8000bf4:	f8cd 46bc 	str.w	r4, [sp, #1724]	; 0x6bc
 8000bf8:	f8cd 46b8 	str.w	r4, [sp, #1720]	; 0x6b8
 8000bfc:	f000 f914 	bl	8000e28 <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)>
 8000c00:	a802      	add	r0, sp, #8
 8000c02:	f000 f8d7 	bl	8000db4 <testClass::publish_status()>
 8000c06:	a837      	add	r0, sp, #220	; 0xdc
 8000c08:	f7ff fe78 	bl	80008fc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8000c0c:	2014      	movs	r0, #20
 8000c0e:	f004 f927 	bl	8004e60 <wait_ms>
 8000c12:	e7f5      	b.n	8000c00 <main+0xe4>
 8000c14:	080060b4 	.word	0x080060b4
 8000c18:	0800609c 	.word	0x0800609c

08000c1c <std_msgs::Bool::serialize(unsigned char*) const>:
 8000c1c:	7903      	ldrb	r3, [r0, #4]
 8000c1e:	700b      	strb	r3, [r1, #0]
 8000c20:	2001      	movs	r0, #1
 8000c22:	4770      	bx	lr

08000c24 <std_msgs::Bool::deserialize(unsigned char*)>:
 8000c24:	780b      	ldrb	r3, [r1, #0]
 8000c26:	7103      	strb	r3, [r0, #4]
 8000c28:	2001      	movs	r0, #1
 8000c2a:	4770      	bx	lr

08000c2c <std_msgs::Bool::getType()>:
 8000c2c:	4800      	ldr	r0, [pc, #0]	; (8000c30 <std_msgs::Bool::getType()+0x4>)
 8000c2e:	4770      	bx	lr
 8000c30:	0800629d 	.word	0x0800629d

08000c34 <std_msgs::Bool::getMD5()>:
 8000c34:	4800      	ldr	r0, [pc, #0]	; (8000c38 <std_msgs::Bool::getMD5()+0x4>)
 8000c36:	4770      	bx	lr
 8000c38:	0800627c 	.word	0x0800627c

08000c3c <std_msgs::Int32::serialize(unsigned char*) const>:
 8000c3c:	6843      	ldr	r3, [r0, #4]
 8000c3e:	700b      	strb	r3, [r1, #0]
 8000c40:	0a1a      	lsrs	r2, r3, #8
 8000c42:	704a      	strb	r2, [r1, #1]
 8000c44:	0c1a      	lsrs	r2, r3, #16
 8000c46:	0e1b      	lsrs	r3, r3, #24
 8000c48:	708a      	strb	r2, [r1, #2]
 8000c4a:	70cb      	strb	r3, [r1, #3]
 8000c4c:	2004      	movs	r0, #4
 8000c4e:	4770      	bx	lr

08000c50 <std_msgs::Int32::deserialize(unsigned char*)>:
 8000c50:	680b      	ldr	r3, [r1, #0]
 8000c52:	6043      	str	r3, [r0, #4]
 8000c54:	2004      	movs	r0, #4
 8000c56:	4770      	bx	lr

08000c58 <std_msgs::Int32::getType()>:
 8000c58:	4800      	ldr	r0, [pc, #0]	; (8000c5c <std_msgs::Int32::getType()+0x4>)
 8000c5a:	4770      	bx	lr
 8000c5c:	080062cc 	.word	0x080062cc

08000c60 <std_msgs::Int32::getMD5()>:
 8000c60:	4800      	ldr	r0, [pc, #0]	; (8000c64 <std_msgs::Int32::getMD5()+0x4>)
 8000c62:	4770      	bx	lr
 8000c64:	080062ab 	.word	0x080062ab

08000c68 <std_srvs::EmptyRequest::serialize(unsigned char*) const>:
 8000c68:	2000      	movs	r0, #0
 8000c6a:	4770      	bx	lr

08000c6c <std_srvs::EmptyRequest::deserialize(unsigned char*)>:
 8000c6c:	2000      	movs	r0, #0
 8000c6e:	4770      	bx	lr

08000c70 <std_srvs::EmptyRequest::getType()>:
 8000c70:	4800      	ldr	r0, [pc, #0]	; (8000c74 <std_srvs::EmptyRequest::getType()+0x4>)
 8000c72:	4770      	bx	lr
 8000c74:	080062fc 	.word	0x080062fc

08000c78 <std_srvs::EmptyRequest::getMD5()>:
 8000c78:	4800      	ldr	r0, [pc, #0]	; (8000c7c <std_srvs::EmptyRequest::getMD5()+0x4>)
 8000c7a:	4770      	bx	lr
 8000c7c:	080062db 	.word	0x080062db

08000c80 <std_srvs::EmptyResponse::serialize(unsigned char*) const>:
 8000c80:	2000      	movs	r0, #0
 8000c82:	4770      	bx	lr

08000c84 <std_srvs::EmptyResponse::deserialize(unsigned char*)>:
 8000c84:	2000      	movs	r0, #0
 8000c86:	4770      	bx	lr

08000c88 <std_srvs::EmptyResponse::getType()>:
 8000c88:	4800      	ldr	r0, [pc, #0]	; (8000c8c <std_srvs::EmptyResponse::getType()+0x4>)
 8000c8a:	4770      	bx	lr
 8000c8c:	080062fc 	.word	0x080062fc

08000c90 <std_srvs::EmptyResponse::getMD5()>:
 8000c90:	4800      	ldr	r0, [pc, #0]	; (8000c94 <std_srvs::EmptyResponse::getMD5()+0x4>)
 8000c92:	4770      	bx	lr
 8000c94:	080062db 	.word	0x080062db

08000c98 <testClass::value_Cb(std_msgs::Int32 const&)>:
 8000c98:	684b      	ldr	r3, [r1, #4]
 8000c9a:	6283      	str	r3, [r0, #40]	; 0x28
 8000c9c:	4770      	bx	lr

08000c9e <testClass::service_Cb(std_srvs::EmptyRequest const&, std_srvs::EmptyResponse&)>:
 8000c9e:	6843      	ldr	r3, [r0, #4]
 8000ca0:	681a      	ldr	r2, [r3, #0]
 8000ca2:	6803      	ldr	r3, [r0, #0]
 8000ca4:	421a      	tst	r2, r3
 8000ca6:	bf0e      	itee	eq
 8000ca8:	6882      	ldreq	r2, [r0, #8]
 8000caa:	68c2      	ldrne	r2, [r0, #12]
 8000cac:	041b      	lslne	r3, r3, #16
 8000cae:	6013      	str	r3, [r2, #0]
 8000cb0:	f890 3020 	ldrb.w	r3, [r0, #32]
 8000cb4:	f083 0301 	eor.w	r3, r3, #1
 8000cb8:	f880 3020 	strb.w	r3, [r0, #32]
 8000cbc:	4770      	bx	lr

08000cbe <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, testClass>::getEndpointType()>:
 8000cbe:	2003      	movs	r0, #3
 8000cc0:	4770      	bx	lr
	...

08000cc4 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, testClass>::getMsgType()>:
 8000cc4:	4800      	ldr	r0, [pc, #0]	; (8000cc8 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, testClass>::getMsgType()+0x4>)
 8000cc6:	4770      	bx	lr
 8000cc8:	080062fc 	.word	0x080062fc

08000ccc <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, testClass>::getMsgMD5()>:
 8000ccc:	4800      	ldr	r0, [pc, #0]	; (8000cd0 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, testClass>::getMsgMD5()+0x4>)
 8000cce:	4770      	bx	lr
 8000cd0:	080062db 	.word	0x080062db

08000cd4 <ros::Subscriber<std_msgs::Int32, testClass>::callback(unsigned char*)>:
 8000cd4:	b570      	push	{r4, r5, r6, lr}
 8000cd6:	4604      	mov	r4, r0
 8000cd8:	f100 050c 	add.w	r5, r0, #12
 8000cdc:	4628      	mov	r0, r5
 8000cde:	f7ff ffb7 	bl	8000c50 <std_msgs::Int32::deserialize(unsigned char*)>
 8000ce2:	69a2      	ldr	r2, [r4, #24]
 8000ce4:	69e0      	ldr	r0, [r4, #28]
 8000ce6:	6963      	ldr	r3, [r4, #20]
 8000ce8:	f012 0f01 	tst.w	r2, #1
 8000cec:	ea4f 0262 	mov.w	r2, r2, asr #1
 8000cf0:	bf18      	it	ne
 8000cf2:	5881      	ldrne	r1, [r0, r2]
 8000cf4:	4410      	add	r0, r2
 8000cf6:	bf18      	it	ne
 8000cf8:	58cb      	ldrne	r3, [r1, r3]
 8000cfa:	4629      	mov	r1, r5
 8000cfc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000d00:	4718      	bx	r3

08000d02 <ros::Subscriber<std_msgs::Int32, testClass>::getEndpointType()>:
 8000d02:	6a00      	ldr	r0, [r0, #32]
 8000d04:	4770      	bx	lr
	...

08000d08 <ros::Subscriber<std_msgs::Int32, testClass>::getMsgType()>:
 8000d08:	4800      	ldr	r0, [pc, #0]	; (8000d0c <ros::Subscriber<std_msgs::Int32, testClass>::getMsgType()+0x4>)
 8000d0a:	4770      	bx	lr
 8000d0c:	080062cc 	.word	0x080062cc

08000d10 <ros::Subscriber<std_msgs::Int32, testClass>::getMsgMD5()>:
 8000d10:	4800      	ldr	r0, [pc, #0]	; (8000d14 <ros::Subscriber<std_msgs::Int32, testClass>::getMsgMD5()+0x4>)
 8000d12:	4770      	bx	lr
 8000d14:	080062ab 	.word	0x080062ab

08000d18 <ros::Subscriber<std_msgs::Bool, testClass>::callback(unsigned char*)>:
 8000d18:	b410      	push	{r4}
 8000d1a:	6982      	ldr	r2, [r0, #24]
 8000d1c:	69c4      	ldr	r4, [r0, #28]
 8000d1e:	780b      	ldrb	r3, [r1, #0]
 8000d20:	7403      	strb	r3, [r0, #16]
 8000d22:	f012 0f01 	tst.w	r2, #1
 8000d26:	ea4f 0262 	mov.w	r2, r2, asr #1
 8000d2a:	6943      	ldr	r3, [r0, #20]
 8000d2c:	bf1c      	itt	ne
 8000d2e:	58a1      	ldrne	r1, [r4, r2]
 8000d30:	58cb      	ldrne	r3, [r1, r3]
 8000d32:	f100 010c 	add.w	r1, r0, #12
 8000d36:	18a0      	adds	r0, r4, r2
 8000d38:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000d3c:	4718      	bx	r3

08000d3e <ros::Subscriber<std_msgs::Bool, testClass>::getEndpointType()>:
 8000d3e:	6a00      	ldr	r0, [r0, #32]
 8000d40:	4770      	bx	lr
	...

08000d44 <ros::Subscriber<std_msgs::Bool, testClass>::getMsgType()>:
 8000d44:	4800      	ldr	r0, [pc, #0]	; (8000d48 <ros::Subscriber<std_msgs::Bool, testClass>::getMsgType()+0x4>)
 8000d46:	4770      	bx	lr
 8000d48:	0800629d 	.word	0x0800629d

08000d4c <ros::Subscriber<std_msgs::Bool, testClass>::getMsgMD5()>:
 8000d4c:	4800      	ldr	r0, [pc, #0]	; (8000d50 <ros::Subscriber<std_msgs::Bool, testClass>::getMsgMD5()+0x4>)
 8000d4e:	4770      	bx	lr
 8000d50:	0800627c 	.word	0x0800627c

08000d54 <testClass::led_Cb(std_msgs::Bool const&)>:
 8000d54:	790a      	ldrb	r2, [r1, #4]
 8000d56:	6803      	ldr	r3, [r0, #0]
 8000d58:	b122      	cbz	r2, 8000d64 <testClass::led_Cb(std_msgs::Bool const&)+0x10>
 8000d5a:	6881      	ldr	r1, [r0, #8]
 8000d5c:	600b      	str	r3, [r1, #0]
 8000d5e:	f880 2020 	strb.w	r2, [r0, #32]
 8000d62:	4770      	bx	lr
 8000d64:	68c1      	ldr	r1, [r0, #12]
 8000d66:	041b      	lsls	r3, r3, #16
 8000d68:	e7f8      	b.n	8000d5c <testClass::led_Cb(std_msgs::Bool const&)+0x8>

08000d6a <ros::Publisher::publish(ros::Msg const*)>:
 8000d6a:	68c3      	ldr	r3, [r0, #12]
 8000d6c:	681a      	ldr	r2, [r3, #0]
 8000d6e:	b410      	push	{r4}
 8000d70:	6814      	ldr	r4, [r2, #0]
 8000d72:	460a      	mov	r2, r1
 8000d74:	6881      	ldr	r1, [r0, #8]
 8000d76:	4618      	mov	r0, r3
 8000d78:	4623      	mov	r3, r4
 8000d7a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000d7e:	4718      	bx	r3

08000d80 <ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, testClass>::callback(unsigned char*)>:
 8000d80:	b570      	push	{r4, r5, r6, lr}
 8000d82:	f100 010c 	add.w	r1, r0, #12
 8000d86:	4604      	mov	r4, r0
 8000d88:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8000d8a:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8000d8c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8000d8e:	f010 0f01 	tst.w	r0, #1
 8000d92:	ea4f 0060 	mov.w	r0, r0, asr #1
 8000d96:	f104 0510 	add.w	r5, r4, #16
 8000d9a:	bf18      	it	ne
 8000d9c:	5832      	ldrne	r2, [r6, r0]
 8000d9e:	4430      	add	r0, r6
 8000da0:	bf18      	it	ne
 8000da2:	58d3      	ldrne	r3, [r2, r3]
 8000da4:	462a      	mov	r2, r5
 8000da6:	4798      	blx	r3
 8000da8:	4629      	mov	r1, r5
 8000daa:	f104 0014 	add.w	r0, r4, #20
 8000dae:	f7ff ffdc 	bl	8000d6a <ros::Publisher::publish(ros::Msg const*)>
 8000db2:	bd70      	pop	{r4, r5, r6, pc}

08000db4 <testClass::publish_status()>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4604      	mov	r4, r0
 8000db8:	b672      	cpsid	i
 8000dba:	f100 011c 	add.w	r1, r0, #28
 8000dbe:	3030      	adds	r0, #48	; 0x30
 8000dc0:	f7ff ffd3 	bl	8000d6a <ros::Publisher::publish(ros::Msg const*)>
 8000dc4:	f104 0124 	add.w	r1, r4, #36	; 0x24
 8000dc8:	f104 0044 	add.w	r0, r4, #68	; 0x44
 8000dcc:	f7ff ffcd 	bl	8000d6a <ros::Publisher::publish(ros::Msg const*)>
 8000dd0:	b662      	cpsie	i
 8000dd2:	bd10      	pop	{r4, pc}

08000dd4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>:
 8000dd4:	b510      	push	{r4, lr}
 8000dd6:	f200 520c 	addw	r2, r0, #1292	; 0x50c
 8000dda:	2300      	movs	r3, #0
 8000ddc:	f852 4b04 	ldr.w	r4, [r2], #4
 8000de0:	b944      	cbnz	r4, 8000df4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)+0x20>
 8000de2:	eb00 0283 	add.w	r2, r0, r3, lsl #2
 8000de6:	337d      	adds	r3, #125	; 0x7d
 8000de8:	f8c2 150c 	str.w	r1, [r2, #1292]	; 0x50c
 8000dec:	60c8      	str	r0, [r1, #12]
 8000dee:	608b      	str	r3, [r1, #8]
 8000df0:	2001      	movs	r0, #1
 8000df2:	bd10      	pop	{r4, pc}
 8000df4:	3301      	adds	r3, #1
 8000df6:	2b19      	cmp	r3, #25
 8000df8:	d1f0      	bne.n	8000ddc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)+0x8>
 8000dfa:	2000      	movs	r0, #0
 8000dfc:	bd10      	pop	{r4, pc}

08000dfe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>:
 8000dfe:	b510      	push	{r4, lr}
 8000e00:	f500 62ae 	add.w	r2, r0, #1392	; 0x570
 8000e04:	2300      	movs	r3, #0
 8000e06:	f852 4b04 	ldr.w	r4, [r2], #4
 8000e0a:	b93c      	cbnz	r4, 8000e1c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x1e>
 8000e0c:	f503 72ae 	add.w	r2, r3, #348	; 0x15c
 8000e10:	3364      	adds	r3, #100	; 0x64
 8000e12:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
 8000e16:	604b      	str	r3, [r1, #4]
 8000e18:	2001      	movs	r0, #1
 8000e1a:	bd10      	pop	{r4, pc}
 8000e1c:	3301      	adds	r3, #1
 8000e1e:	2b19      	cmp	r3, #25
 8000e20:	d1f1      	bne.n	8000e06 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)+0x8>
 8000e22:	2000      	movs	r0, #0
 8000e24:	bd10      	pop	{r4, pc}
	...

08000e28 <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)>:
 8000e28:	b570      	push	{r4, r5, r6, lr}
 8000e2a:	221c      	movs	r2, #28
 8000e2c:	4604      	mov	r4, r0
 8000e2e:	460d      	mov	r5, r1
 8000e30:	2100      	movs	r1, #0
 8000e32:	f004 fc6a 	bl	800570a <memset>
 8000e36:	4620      	mov	r0, r4
 8000e38:	2105      	movs	r1, #5
 8000e3a:	f000 fad1 	bl	80013e0 <gpio_init_out>
 8000e3e:	4a3b      	ldr	r2, [pc, #236]	; (8000f2c <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x104>)
 8000e40:	61e2      	str	r2, [r4, #28]
 8000e42:	6662      	str	r2, [r4, #100]	; 0x64
 8000e44:	4a3a      	ldr	r2, [pc, #232]	; (8000f30 <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x108>)
 8000e46:	66e2      	str	r2, [r4, #108]	; 0x6c
 8000e48:	2201      	movs	r2, #1
 8000e4a:	67a2      	str	r2, [r4, #120]	; 0x78
 8000e4c:	f8c4 209c 	str.w	r2, [r4, #156]	; 0x9c
 8000e50:	4a38      	ldr	r2, [pc, #224]	; (8000f34 <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x10c>)
 8000e52:	f8c4 2084 	str.w	r2, [r4, #132]	; 0x84
 8000e56:	4838      	ldr	r0, [pc, #224]	; (8000f38 <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x110>)
 8000e58:	4a38      	ldr	r2, [pc, #224]	; (8000f3c <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x114>)
 8000e5a:	4939      	ldr	r1, [pc, #228]	; (8000f40 <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x118>)
 8000e5c:	6460      	str	r0, [r4, #68]	; 0x44
 8000e5e:	f8c4 20a0 	str.w	r2, [r4, #160]	; 0xa0
 8000e62:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8000e66:	4a37      	ldr	r2, [pc, #220]	; (8000f44 <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x11c>)
 8000e68:	6261      	str	r1, [r4, #36]	; 0x24
 8000e6a:	64a0      	str	r0, [r4, #72]	; 0x48
 8000e6c:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
 8000e70:	f8c4 20ac 	str.w	r2, [r4, #172]	; 0xac
 8000e74:	4b34      	ldr	r3, [pc, #208]	; (8000f48 <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x120>)
 8000e76:	4835      	ldr	r0, [pc, #212]	; (8000f4c <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x124>)
 8000e78:	4935      	ldr	r1, [pc, #212]	; (8000f50 <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x128>)
 8000e7a:	4a36      	ldr	r2, [pc, #216]	; (8000f54 <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x12c>)
 8000e7c:	6323      	str	r3, [r4, #48]	; 0x30
 8000e7e:	65a0      	str	r0, [r4, #88]	; 0x58
 8000e80:	f104 031c 	add.w	r3, r4, #28
 8000e84:	f8c4 1090 	str.w	r1, [r4, #144]	; 0x90
 8000e88:	f8c4 20b0 	str.w	r2, [r4, #176]	; 0xb0
 8000e8c:	f104 01b0 	add.w	r1, r4, #176	; 0xb0
 8000e90:	4a31      	ldr	r2, [pc, #196]	; (8000f58 <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x130>)
 8000e92:	4832      	ldr	r0, [pc, #200]	; (8000f5c <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x134>)
 8000e94:	6363      	str	r3, [r4, #52]	; 0x34
 8000e96:	6620      	str	r0, [r4, #96]	; 0x60
 8000e98:	2300      	movs	r3, #0
 8000e9a:	f8c4 20b4 	str.w	r2, [r4, #180]	; 0xb4
 8000e9e:	f8c4 10b8 	str.w	r1, [r4, #184]	; 0xb8
 8000ea2:	f8c4 20a8 	str.w	r2, [r4, #168]	; 0xa8
 8000ea6:	482e      	ldr	r0, [pc, #184]	; (8000f60 <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x138>)
 8000ea8:	4a2e      	ldr	r2, [pc, #184]	; (8000f64 <testClass::testClass(ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>*)+0x13c>)
 8000eaa:	6423      	str	r3, [r4, #64]	; 0x40
 8000eac:	2102      	movs	r1, #2
 8000eae:	6563      	str	r3, [r4, #84]	; 0x54
 8000eb0:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 8000eb4:	6723      	str	r3, [r4, #112]	; 0x70
 8000eb6:	f8c4 308c 	str.w	r3, [r4, #140]	; 0x8c
 8000eba:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8000ebe:	67e0      	str	r0, [r4, #124]	; 0x7c
 8000ec0:	f8c4 10c4 	str.w	r1, [r4, #196]	; 0xc4
 8000ec4:	6764      	str	r4, [r4, #116]	; 0x74
 8000ec6:	f8c4 4098 	str.w	r4, [r4, #152]	; 0x98
 8000eca:	f8c4 40d0 	str.w	r4, [r4, #208]	; 0xd0
 8000ece:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
 8000ed2:	6822      	ldr	r2, [r4, #0]
 8000ed4:	68e1      	ldr	r1, [r4, #12]
 8000ed6:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8000eda:	0412      	lsls	r2, r2, #16
 8000edc:	62e5      	str	r5, [r4, #44]	; 0x2c
 8000ede:	4628      	mov	r0, r5
 8000ee0:	600a      	str	r2, [r1, #0]
 8000ee2:	f884 3020 	strb.w	r3, [r4, #32]
 8000ee6:	62a3      	str	r3, [r4, #40]	; 0x28
 8000ee8:	f104 0130 	add.w	r1, r4, #48	; 0x30
 8000eec:	f7ff ff72 	bl	8000dd4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 8000ef0:	f104 0144 	add.w	r1, r4, #68	; 0x44
 8000ef4:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8000ef6:	f7ff ff6d 	bl	8000dd4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 8000efa:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8000efe:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8000f00:	f7ff ff7d 	bl	8000dfe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000f04:	f104 017c 	add.w	r1, r4, #124	; 0x7c
 8000f08:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8000f0a:	f7ff ff78 	bl	8000dfe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000f0e:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 8000f10:	f104 01b4 	add.w	r1, r4, #180	; 0xb4
 8000f14:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 8000f18:	4628      	mov	r0, r5
 8000f1a:	f7ff ff5b 	bl	8000dd4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::advertise(ros::Publisher&)>
 8000f1e:	4631      	mov	r1, r6
 8000f20:	4628      	mov	r0, r5
 8000f22:	f7ff ff6c 	bl	8000dfe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::subscribe(ros::Subscriber_&)>
 8000f26:	4620      	mov	r0, r4
 8000f28:	bd70      	pop	{r4, r5, r6, pc}
 8000f2a:	bf00      	nop
 8000f2c:	080061dc 	.word	0x080061dc
 8000f30:	08000d55 	.word	0x08000d55
 8000f34:	0800632e 	.word	0x0800632e
 8000f38:	08006317 	.word	0x08006317
 8000f3c:	0800626c 	.word	0x0800626c
 8000f40:	080061f4 	.word	0x080061f4
 8000f44:	0800620c 	.word	0x0800620c
 8000f48:	0800630b 	.word	0x0800630b
 8000f4c:	0800623c 	.word	0x0800623c
 8000f50:	08000c99 	.word	0x08000c99
 8000f54:	08006224 	.word	0x08006224
 8000f58:	08006339 	.word	0x08006339
 8000f5c:	08006325 	.word	0x08006325
 8000f60:	08006254 	.word	0x08006254
 8000f64:	08000c9f 	.word	0x08000c9f

08000f68 <_start>:
 8000f68:	4807      	ldr	r0, [pc, #28]	; (8000f88 <_start+0x20>)
 8000f6a:	4a08      	ldr	r2, [pc, #32]	; (8000f8c <_start+0x24>)
 8000f6c:	b508      	push	{r3, lr}
 8000f6e:	1a12      	subs	r2, r2, r0
 8000f70:	2100      	movs	r1, #0
 8000f72:	f004 fbca 	bl	800570a <memset>
 8000f76:	f004 f833 	bl	8004fe0 <software_init_hook>
 8000f7a:	f004 fb19 	bl	80055b0 <__libc_init_array>
 8000f7e:	f004 f836 	bl	8004fee <__wrap_main>
 8000f82:	f004 f871 	bl	8005068 <__wrap_exit>
 8000f86:	bf00      	nop
 8000f88:	20000260 	.word	0x20000260
 8000f8c:	200021e8 	.word	0x200021e8

08000f90 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 8000f90:	b530      	push	{r4, r5, lr}
 8000f92:	6802      	ldr	r2, [r0, #0]
 8000f94:	680d      	ldr	r5, [r1, #0]
 8000f96:	4c04      	ldr	r4, [pc, #16]	; (8000fa8 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 8000f98:	fbb5 f3f4 	udiv	r3, r5, r4
 8000f9c:	441a      	add	r2, r3
 8000f9e:	fb04 5313 	mls	r3, r4, r3, r5
 8000fa2:	6002      	str	r2, [r0, #0]
 8000fa4:	600b      	str	r3, [r1, #0]
 8000fa6:	bd30      	pop	{r4, r5, pc}
 8000fa8:	3b9aca00 	.word	0x3b9aca00

08000fac <BufferedSerial::readable()>:
 8000fac:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 8000fb0:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 8000fb4:	1a10      	subs	r0, r2, r0
 8000fb6:	bf18      	it	ne
 8000fb8:	2001      	movne	r0, #1
 8000fba:	4770      	bx	lr

08000fbc <BufferedSerial::writeable()>:
 8000fbc:	2001      	movs	r0, #1
 8000fbe:	4770      	bx	lr

08000fc0 <BufferedSerial::getc()>:
 8000fc0:	b510      	push	{r4, lr}
 8000fc2:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 8000fc6:	f8d0 10bc 	ldr.w	r1, [r0, #188]	; 0xbc
 8000fca:	4603      	mov	r3, r0
 8000fcc:	1c50      	adds	r0, r2, #1
 8000fce:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
 8000fd2:	5c88      	ldrb	r0, [r1, r2]
 8000fd4:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8000fd8:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
 8000fdc:	3a01      	subs	r2, #1
 8000fde:	fbb4 f1f2 	udiv	r1, r4, r2
 8000fe2:	fb02 4211 	mls	r2, r2, r1, r4
 8000fe6:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 8000fea:	bd10      	pop	{r4, pc}

08000fec <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 8000fec:	4603      	mov	r3, r0
 8000fee:	b110      	cbz	r0, 8000ff6 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 8000ff0:	c907      	ldmia	r1, {r0, r1, r2}
 8000ff2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8000ff6:	4770      	bx	lr

08000ff8 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 8000ff8:	4770      	bx	lr

08000ffa <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 8000ffa:	6842      	ldr	r2, [r0, #4]
 8000ffc:	6881      	ldr	r1, [r0, #8]
 8000ffe:	6803      	ldr	r3, [r0, #0]
 8001000:	f012 0f01 	tst.w	r2, #1
 8001004:	ea4f 0262 	mov.w	r2, r2, asr #1
 8001008:	bf1c      	itt	ne
 800100a:	5888      	ldrne	r0, [r1, r2]
 800100c:	58c3      	ldrne	r3, [r0, r3]
 800100e:	1888      	adds	r0, r1, r2
 8001010:	4718      	bx	r3

08001012 <mbed::Callback<void ()>::~Callback()>:
 8001012:	68c3      	ldr	r3, [r0, #12]
 8001014:	b510      	push	{r4, lr}
 8001016:	4604      	mov	r4, r0
 8001018:	b10b      	cbz	r3, 800101e <mbed::Callback<void ()>::~Callback()+0xc>
 800101a:	689b      	ldr	r3, [r3, #8]
 800101c:	4798      	blx	r3
 800101e:	4620      	mov	r0, r4
 8001020:	bd10      	pop	{r4, pc}

08001022 <BufferedSerial::txIrq()>:
 8001022:	b530      	push	{r4, r5, lr}
 8001024:	4604      	mov	r4, r0
 8001026:	b085      	sub	sp, #20
 8001028:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 800102c:	4628      	mov	r0, r5
 800102e:	f002 fa73 	bl	8003518 <serial_writable>
 8001032:	b330      	cbz	r0, 8001082 <BufferedSerial::txIrq()+0x60>
 8001034:	f8d4 20d0 	ldr.w	r2, [r4, #208]	; 0xd0
 8001038:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 800103c:	429a      	cmp	r2, r3
 800103e:	d016      	beq.n	800106e <BufferedSerial::txIrq()+0x4c>
 8001040:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8001044:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 8001048:	1c59      	adds	r1, r3, #1
 800104a:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
 800104e:	5cd1      	ldrb	r1, [r2, r3]
 8001050:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 8001054:	f8d4 00d4 	ldr.w	r0, [r4, #212]	; 0xd4
 8001058:	3b01      	subs	r3, #1
 800105a:	fbb0 f2f3 	udiv	r2, r0, r3
 800105e:	fb03 0312 	mls	r3, r3, r2, r0
 8001062:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 8001066:	4628      	mov	r0, r5
 8001068:	f002 fa60 	bl	800352c <serial_putc>
 800106c:	e7de      	b.n	800102c <BufferedSerial::txIrq()+0xa>
 800106e:	2300      	movs	r3, #0
 8001070:	4620      	mov	r0, r4
 8001072:	2201      	movs	r2, #1
 8001074:	4669      	mov	r1, sp
 8001076:	9303      	str	r3, [sp, #12]
 8001078:	f003 fdfc 	bl	8004c74 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800107c:	4668      	mov	r0, sp
 800107e:	f7ff ffc8 	bl	8001012 <mbed::Callback<void ()>::~Callback()>
 8001082:	b005      	add	sp, #20
 8001084:	bd30      	pop	{r4, r5, pc}

08001086 <mbed::Callback<void (int)>::~Callback()>:
 8001086:	68c3      	ldr	r3, [r0, #12]
 8001088:	b510      	push	{r4, lr}
 800108a:	4604      	mov	r4, r0
 800108c:	b10b      	cbz	r3, 8001092 <mbed::Callback<void (int)>::~Callback()+0xc>
 800108e:	689b      	ldr	r3, [r3, #8]
 8001090:	4798      	blx	r3
 8001092:	4620      	mov	r0, r4
 8001094:	bd10      	pop	{r4, pc}
	...

08001098 <mbed::SerialBase::~SerialBase()>:
 8001098:	b570      	push	{r4, r5, r6, lr}
 800109a:	4606      	mov	r6, r0
 800109c:	4b0b      	ldr	r3, [pc, #44]	; (80010cc <mbed::SerialBase::~SerialBase()+0x34>)
 800109e:	f846 3b98 	str.w	r3, [r6], #152
 80010a2:	4604      	mov	r4, r0
 80010a4:	b146      	cbz	r6, 80010b8 <mbed::SerialBase::~SerialBase()+0x20>
 80010a6:	f100 05b8 	add.w	r5, r0, #184	; 0xb8
 80010aa:	42b5      	cmp	r5, r6
 80010ac:	d004      	beq.n	80010b8 <mbed::SerialBase::~SerialBase()+0x20>
 80010ae:	3d10      	subs	r5, #16
 80010b0:	4628      	mov	r0, r5
 80010b2:	f7ff ffae 	bl	8001012 <mbed::Callback<void ()>::~Callback()>
 80010b6:	e7f8      	b.n	80010aa <mbed::SerialBase::~SerialBase()+0x12>
 80010b8:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80010bc:	f7ff ffe3 	bl	8001086 <mbed::Callback<void (int)>::~Callback()>
 80010c0:	f104 0028 	add.w	r0, r4, #40	; 0x28
 80010c4:	f7ff ffdf 	bl	8001086 <mbed::Callback<void (int)>::~Callback()>
 80010c8:	4620      	mov	r0, r4
 80010ca:	bd70      	pop	{r4, r5, r6, pc}
 80010cc:	08006660 	.word	0x08006660

080010d0 <mbed::SerialBase::~SerialBase()>:
 80010d0:	b510      	push	{r4, lr}
 80010d2:	4604      	mov	r4, r0
 80010d4:	f7ff ffe0 	bl	8001098 <mbed::SerialBase::~SerialBase()>
 80010d8:	4620      	mov	r0, r4
 80010da:	f003 ffe1 	bl	80050a0 <operator delete(void*)>
 80010de:	4620      	mov	r0, r4
 80010e0:	bd10      	pop	{r4, pc}
	...

080010e4 <BufferedSerial::~BufferedSerial()>:
 80010e4:	b530      	push	{r4, r5, lr}
 80010e6:	4b13      	ldr	r3, [pc, #76]	; (8001134 <BufferedSerial::~BufferedSerial()+0x50>)
 80010e8:	6003      	str	r3, [r0, #0]
 80010ea:	b085      	sub	sp, #20
 80010ec:	2500      	movs	r5, #0
 80010ee:	462a      	mov	r2, r5
 80010f0:	4669      	mov	r1, sp
 80010f2:	4604      	mov	r4, r0
 80010f4:	9503      	str	r5, [sp, #12]
 80010f6:	f003 fdbd 	bl	8004c74 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80010fa:	4668      	mov	r0, sp
 80010fc:	f7ff ff89 	bl	8001012 <mbed::Callback<void ()>::~Callback()>
 8001100:	2201      	movs	r2, #1
 8001102:	4669      	mov	r1, sp
 8001104:	4620      	mov	r0, r4
 8001106:	9503      	str	r5, [sp, #12]
 8001108:	f003 fdb4 	bl	8004c74 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800110c:	4668      	mov	r0, sp
 800110e:	f7ff ff80 	bl	8001012 <mbed::Callback<void ()>::~Callback()>
 8001112:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8001116:	f000 f923 	bl	8001360 <Buffer<char>::~Buffer()>
 800111a:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800111e:	f000 f91f 	bl	8001360 <Buffer<char>::~Buffer()>
 8001122:	4b05      	ldr	r3, [pc, #20]	; (8001138 <BufferedSerial::~BufferedSerial()+0x54>)
 8001124:	6023      	str	r3, [r4, #0]
 8001126:	4620      	mov	r0, r4
 8001128:	f7ff ffb6 	bl	8001098 <mbed::SerialBase::~SerialBase()>
 800112c:	4620      	mov	r0, r4
 800112e:	b005      	add	sp, #20
 8001130:	bd30      	pop	{r4, r5, pc}
 8001132:	bf00      	nop
 8001134:	080063d8 	.word	0x080063d8
 8001138:	08006678 	.word	0x08006678

0800113c <BufferedSerial::~BufferedSerial()>:
 800113c:	b510      	push	{r4, lr}
 800113e:	4604      	mov	r4, r0
 8001140:	f7ff ffd0 	bl	80010e4 <BufferedSerial::~BufferedSerial()>
 8001144:	4620      	mov	r0, r4
 8001146:	f003 ffab 	bl	80050a0 <operator delete(void*)>
 800114a:	4620      	mov	r0, r4
 800114c:	bd10      	pop	{r4, pc}
	...

08001150 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 8001150:	b510      	push	{r4, lr}
 8001152:	b086      	sub	sp, #24
 8001154:	e88d 000c 	stmia.w	sp, {r2, r3}
 8001158:	9b01      	ldr	r3, [sp, #4]
 800115a:	9202      	str	r2, [sp, #8]
 800115c:	9303      	str	r3, [sp, #12]
 800115e:	9104      	str	r1, [sp, #16]
 8001160:	4b05      	ldr	r3, [pc, #20]	; (8001178 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 8001162:	f89d 2020 	ldrb.w	r2, [sp, #32]
 8001166:	9305      	str	r3, [sp, #20]
 8001168:	a902      	add	r1, sp, #8
 800116a:	f003 fd83 	bl	8004c74 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800116e:	a802      	add	r0, sp, #8
 8001170:	f7ff ff4f 	bl	8001012 <mbed::Callback<void ()>::~Callback()>
 8001174:	b006      	add	sp, #24
 8001176:	bd10      	pop	{r4, pc}
 8001178:	08006348 	.word	0x08006348

0800117c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 800117c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800117e:	4604      	mov	r4, r0
 8001180:	461d      	mov	r5, r3
 8001182:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8001186:	9e08      	ldr	r6, [sp, #32]
 8001188:	f003 fdac 	bl	8004ce4 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 800118c:	4620      	mov	r0, r4
 800118e:	4b0f      	ldr	r3, [pc, #60]	; (80011cc <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 8001190:	f840 3bbc 	str.w	r3, [r0], #188
 8001194:	4629      	mov	r1, r5
 8001196:	f000 f8f2 	bl	800137e <Buffer<char>::Buffer(unsigned long)>
 800119a:	fb06 f105 	mul.w	r1, r6, r5
 800119e:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 80011a2:	f000 f8ec 	bl	800137e <Buffer<char>::Buffer(unsigned long)>
 80011a6:	4b0a      	ldr	r3, [pc, #40]	; (80011d0 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x54>)
 80011a8:	9302      	str	r3, [sp, #8]
 80011aa:	2300      	movs	r3, #0
 80011ac:	9303      	str	r3, [sp, #12]
 80011ae:	9300      	str	r3, [sp, #0]
 80011b0:	ab04      	add	r3, sp, #16
 80011b2:	4620      	mov	r0, r4
 80011b4:	e913 000c 	ldmdb	r3, {r2, r3}
 80011b8:	4621      	mov	r1, r4
 80011ba:	f7ff ffc9 	bl	8001150 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 80011be:	4620      	mov	r0, r4
 80011c0:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 80011c4:	f8c4 60e0 	str.w	r6, [r4, #224]	; 0xe0
 80011c8:	b004      	add	sp, #16
 80011ca:	bd70      	pop	{r4, r5, r6, pc}
 80011cc:	080063d8 	.word	0x080063d8
 80011d0:	0800123b 	.word	0x0800123b

080011d4 <BufferedSerial::prime()>:
 80011d4:	b570      	push	{r4, r5, r6, lr}
 80011d6:	4604      	mov	r4, r0
 80011d8:	b086      	sub	sp, #24
 80011da:	304c      	adds	r0, #76	; 0x4c
 80011dc:	f002 f99c 	bl	8003518 <serial_writable>
 80011e0:	b1c0      	cbz	r0, 8001214 <BufferedSerial::prime()+0x40>
 80011e2:	ad02      	add	r5, sp, #8
 80011e4:	2201      	movs	r2, #1
 80011e6:	4629      	mov	r1, r5
 80011e8:	2600      	movs	r6, #0
 80011ea:	4620      	mov	r0, r4
 80011ec:	9605      	str	r6, [sp, #20]
 80011ee:	f003 fd41 	bl	8004c74 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80011f2:	4628      	mov	r0, r5
 80011f4:	f7ff ff0d 	bl	8001012 <mbed::Callback<void ()>::~Callback()>
 80011f8:	4620      	mov	r0, r4
 80011fa:	f7ff ff12 	bl	8001022 <BufferedSerial::txIrq()>
 80011fe:	4b06      	ldr	r3, [pc, #24]	; (8001218 <BufferedSerial::prime()+0x44>)
 8001200:	9302      	str	r3, [sp, #8]
 8001202:	2301      	movs	r3, #1
 8001204:	9603      	str	r6, [sp, #12]
 8001206:	9300      	str	r3, [sp, #0]
 8001208:	e895 000c 	ldmia.w	r5, {r2, r3}
 800120c:	4621      	mov	r1, r4
 800120e:	4620      	mov	r0, r4
 8001210:	f7ff ff9e 	bl	8001150 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001214:	b006      	add	sp, #24
 8001216:	bd70      	pop	{r4, r5, r6, pc}
 8001218:	08001023 	.word	0x08001023

0800121c <Buffer<char>::put(char)>:
 800121c:	6843      	ldr	r3, [r0, #4]
 800121e:	6802      	ldr	r2, [r0, #0]
 8001220:	b510      	push	{r4, lr}
 8001222:	1c5c      	adds	r4, r3, #1
 8001224:	6044      	str	r4, [r0, #4]
 8001226:	54d1      	strb	r1, [r2, r3]
 8001228:	68c3      	ldr	r3, [r0, #12]
 800122a:	6841      	ldr	r1, [r0, #4]
 800122c:	3b01      	subs	r3, #1
 800122e:	fbb1 f2f3 	udiv	r2, r1, r3
 8001232:	fb03 1312 	mls	r3, r3, r2, r1
 8001236:	6043      	str	r3, [r0, #4]
 8001238:	bd10      	pop	{r4, pc}

0800123a <BufferedSerial::rxIrq()>:
 800123a:	b538      	push	{r3, r4, r5, lr}
 800123c:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8001240:	4604      	mov	r4, r0
 8001242:	4628      	mov	r0, r5
 8001244:	f002 f94c 	bl	80034e0 <serial_readable>
 8001248:	b138      	cbz	r0, 800125a <BufferedSerial::rxIrq()+0x20>
 800124a:	4628      	mov	r0, r5
 800124c:	f002 f952 	bl	80034f4 <serial_getc>
 8001250:	b2c1      	uxtb	r1, r0
 8001252:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8001256:	f7ff ffe1 	bl	800121c <Buffer<char>::put(char)>
 800125a:	bd38      	pop	{r3, r4, r5, pc}

0800125c <BufferedSerial::putc(int)>:
 800125c:	b538      	push	{r3, r4, r5, lr}
 800125e:	4605      	mov	r5, r0
 8001260:	460c      	mov	r4, r1
 8001262:	30cc      	adds	r0, #204	; 0xcc
 8001264:	b2c9      	uxtb	r1, r1
 8001266:	f7ff ffd9 	bl	800121c <Buffer<char>::put(char)>
 800126a:	4628      	mov	r0, r5
 800126c:	f7ff ffb2 	bl	80011d4 <BufferedSerial::prime()>
 8001270:	4620      	mov	r0, r4
 8001272:	bd38      	pop	{r3, r4, r5, pc}

08001274 <BufferedSerial::puts(char const*)>:
 8001274:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001278:	4607      	mov	r7, r0
 800127a:	460c      	mov	r4, r1
 800127c:	b1b1      	cbz	r1, 80012ac <BufferedSerial::puts(char const*)+0x38>
 800127e:	460d      	mov	r5, r1
 8001280:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8001284:	462e      	mov	r6, r5
 8001286:	f816 1b01 	ldrb.w	r1, [r6], #1
 800128a:	b121      	cbz	r1, 8001296 <BufferedSerial::puts(char const*)+0x22>
 800128c:	4640      	mov	r0, r8
 800128e:	f7ff ffc5 	bl	800121c <Buffer<char>::put(char)>
 8001292:	4635      	mov	r5, r6
 8001294:	e7f6      	b.n	8001284 <BufferedSerial::puts(char const*)+0x10>
 8001296:	210a      	movs	r1, #10
 8001298:	4640      	mov	r0, r8
 800129a:	f7ff ffbf 	bl	800121c <Buffer<char>::put(char)>
 800129e:	1b2c      	subs	r4, r5, r4
 80012a0:	4638      	mov	r0, r7
 80012a2:	f7ff ff97 	bl	80011d4 <BufferedSerial::prime()>
 80012a6:	1c60      	adds	r0, r4, #1
 80012a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80012ac:	4608      	mov	r0, r1
 80012ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080012b2 <BufferedSerial::write(void const*, unsigned int)>:
 80012b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012b6:	4607      	mov	r7, r0
 80012b8:	460d      	mov	r5, r1
 80012ba:	b191      	cbz	r1, 80012e2 <BufferedSerial::write(void const*, unsigned int)+0x30>
 80012bc:	b1a2      	cbz	r2, 80012e8 <BufferedSerial::write(void const*, unsigned int)+0x36>
 80012be:	188c      	adds	r4, r1, r2
 80012c0:	460e      	mov	r6, r1
 80012c2:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 80012c6:	42b4      	cmp	r4, r6
 80012c8:	d005      	beq.n	80012d6 <BufferedSerial::write(void const*, unsigned int)+0x24>
 80012ca:	f816 1b01 	ldrb.w	r1, [r6], #1
 80012ce:	4640      	mov	r0, r8
 80012d0:	f7ff ffa4 	bl	800121c <Buffer<char>::put(char)>
 80012d4:	e7f7      	b.n	80012c6 <BufferedSerial::write(void const*, unsigned int)+0x14>
 80012d6:	4638      	mov	r0, r7
 80012d8:	f7ff ff7c 	bl	80011d4 <BufferedSerial::prime()>
 80012dc:	1b60      	subs	r0, r4, r5
 80012de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80012e2:	4608      	mov	r0, r1
 80012e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80012e8:	4610      	mov	r0, r2
 80012ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080012f0 <BufferedSerial::printf(char const*, ...)>:
 80012f0:	b40e      	push	{r1, r2, r3}
 80012f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012f6:	b085      	sub	sp, #20
 80012f8:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 80012fc:	af02      	add	r7, sp, #8
 80012fe:	1dd3      	adds	r3, r2, #7
 8001300:	f023 0307 	bic.w	r3, r3, #7
 8001304:	f107 0424 	add.w	r4, r7, #36	; 0x24
 8001308:	ebad 0d03 	sub.w	sp, sp, r3
 800130c:	f854 8b04 	ldr.w	r8, [r4], #4
 8001310:	ae02      	add	r6, sp, #8
 8001312:	4605      	mov	r5, r0
 8001314:	2100      	movs	r1, #0
 8001316:	4630      	mov	r0, r6
 8001318:	f004 f9f7 	bl	800570a <memset>
 800131c:	4622      	mov	r2, r4
 800131e:	4641      	mov	r1, r8
 8001320:	4630      	mov	r0, r6
 8001322:	607c      	str	r4, [r7, #4]
 8001324:	f004 fcde 	bl	8005ce4 <vsiprintf>
 8001328:	f8d5 30dc 	ldr.w	r3, [r5, #220]	; 0xdc
 800132c:	4283      	cmp	r3, r0
 800132e:	4602      	mov	r2, r0
 8001330:	d20c      	bcs.n	800134c <BufferedSerial::printf(char const*, ...)+0x5c>
 8001332:	9000      	str	r0, [sp, #0]
 8001334:	225d      	movs	r2, #93	; 0x5d
 8001336:	4808      	ldr	r0, [pc, #32]	; (8001358 <BufferedSerial::printf(char const*, ...)+0x68>)
 8001338:	4908      	ldr	r1, [pc, #32]	; (800135c <BufferedSerial::printf(char const*, ...)+0x6c>)
 800133a:	f000 f917 	bl	800156c <error>
 800133e:	2000      	movs	r0, #0
 8001340:	370c      	adds	r7, #12
 8001342:	46bd      	mov	sp, r7
 8001344:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001348:	b003      	add	sp, #12
 800134a:	4770      	bx	lr
 800134c:	4631      	mov	r1, r6
 800134e:	4628      	mov	r0, r5
 8001350:	f7ff ffaf 	bl	80012b2 <BufferedSerial::write(void const*, unsigned int)>
 8001354:	e7f4      	b.n	8001340 <BufferedSerial::printf(char const*, ...)+0x50>
 8001356:	bf00      	nop
 8001358:	08006395 	.word	0x08006395
 800135c:	08006354 	.word	0x08006354

08001360 <Buffer<char>::~Buffer()>:
 8001360:	b510      	push	{r4, lr}
 8001362:	4604      	mov	r4, r0
 8001364:	6800      	ldr	r0, [r0, #0]
 8001366:	b108      	cbz	r0, 800136c <Buffer<char>::~Buffer()+0xc>
 8001368:	f003 fe96 	bl	8005098 <operator delete[](void*)>
 800136c:	4620      	mov	r0, r4
 800136e:	bd10      	pop	{r4, pc}

08001370 <Buffer<char>::clear()>:
 8001370:	2100      	movs	r1, #0
 8001372:	6041      	str	r1, [r0, #4]
 8001374:	68c2      	ldr	r2, [r0, #12]
 8001376:	6081      	str	r1, [r0, #8]
 8001378:	6800      	ldr	r0, [r0, #0]
 800137a:	f004 b9c6 	b.w	800570a <memset>

0800137e <Buffer<char>::Buffer(unsigned long)>:
 800137e:	b538      	push	{r3, r4, r5, lr}
 8001380:	4604      	mov	r4, r0
 8001382:	4608      	mov	r0, r1
 8001384:	460d      	mov	r5, r1
 8001386:	f003 fe7b 	bl	8005080 <operator new[](unsigned int)>
 800138a:	60e5      	str	r5, [r4, #12]
 800138c:	6020      	str	r0, [r4, #0]
 800138e:	4620      	mov	r0, r4
 8001390:	f7ff ffee 	bl	8001370 <Buffer<char>::clear()>
 8001394:	4620      	mov	r0, r4
 8001396:	bd38      	pop	{r3, r4, r5, pc}

08001398 <_gpio_init_out.part.2>:
 8001398:	b538      	push	{r3, r4, r5, lr}
 800139a:	4604      	mov	r4, r0
 800139c:	460d      	mov	r5, r1
 800139e:	6803      	ldr	r3, [r0, #0]
 80013a0:	b15a      	cbz	r2, 80013ba <_gpio_init_out.part.2+0x22>
 80013a2:	6882      	ldr	r2, [r0, #8]
 80013a4:	6013      	str	r3, [r2, #0]
 80013a6:	4620      	mov	r0, r4
 80013a8:	2101      	movs	r1, #1
 80013aa:	f001 fcbf 	bl	8002d2c <gpio_dir>
 80013ae:	4629      	mov	r1, r5
 80013b0:	4620      	mov	r0, r4
 80013b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80013b6:	f001 bcb5 	b.w	8002d24 <gpio_mode>
 80013ba:	68c2      	ldr	r2, [r0, #12]
 80013bc:	041b      	lsls	r3, r3, #16
 80013be:	e7f1      	b.n	80013a4 <_gpio_init_out.part.2+0xc>

080013c0 <gpio_init_out_ex>:
 80013c0:	b570      	push	{r4, r5, r6, lr}
 80013c2:	460e      	mov	r6, r1
 80013c4:	4604      	mov	r4, r0
 80013c6:	4615      	mov	r5, r2
 80013c8:	f001 fc8c 	bl	8002ce4 <gpio_init>
 80013cc:	3601      	adds	r6, #1
 80013ce:	d006      	beq.n	80013de <gpio_init_out_ex+0x1e>
 80013d0:	462a      	mov	r2, r5
 80013d2:	4620      	mov	r0, r4
 80013d4:	2100      	movs	r1, #0
 80013d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80013da:	f7ff bfdd 	b.w	8001398 <_gpio_init_out.part.2>
 80013de:	bd70      	pop	{r4, r5, r6, pc}

080013e0 <gpio_init_out>:
 80013e0:	2200      	movs	r2, #0
 80013e2:	f7ff bfed 	b.w	80013c0 <gpio_init_out_ex>
	...

080013e8 <get_us_ticker_data>:
 80013e8:	4800      	ldr	r0, [pc, #0]	; (80013ec <get_us_ticker_data+0x4>)
 80013ea:	4770      	bx	lr
 80013ec:	08006404 	.word	0x08006404

080013f0 <us_ticker_irq_handler>:
 80013f0:	4801      	ldr	r0, [pc, #4]	; (80013f8 <us_ticker_irq_handler+0x8>)
 80013f2:	f000 b803 	b.w	80013fc <ticker_irq_handler>
 80013f6:	bf00      	nop
 80013f8:	08006404 	.word	0x08006404

080013fc <ticker_irq_handler>:
 80013fc:	6803      	ldr	r3, [r0, #0]
 80013fe:	b570      	push	{r4, r5, r6, lr}
 8001400:	68db      	ldr	r3, [r3, #12]
 8001402:	4604      	mov	r4, r0
 8001404:	4798      	blx	r3
 8001406:	6863      	ldr	r3, [r4, #4]
 8001408:	685a      	ldr	r2, [r3, #4]
 800140a:	6823      	ldr	r3, [r4, #0]
 800140c:	b91a      	cbnz	r2, 8001416 <ticker_irq_handler+0x1a>
 800140e:	689b      	ldr	r3, [r3, #8]
 8001410:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001414:	4718      	bx	r3
 8001416:	685b      	ldr	r3, [r3, #4]
 8001418:	6815      	ldr	r5, [r2, #0]
 800141a:	4798      	blx	r3
 800141c:	6863      	ldr	r3, [r4, #4]
 800141e:	1a28      	subs	r0, r5, r0
 8001420:	2800      	cmp	r0, #0
 8001422:	685a      	ldr	r2, [r3, #4]
 8001424:	dc07      	bgt.n	8001436 <ticker_irq_handler+0x3a>
 8001426:	6891      	ldr	r1, [r2, #8]
 8001428:	6059      	str	r1, [r3, #4]
 800142a:	681b      	ldr	r3, [r3, #0]
 800142c:	2b00      	cmp	r3, #0
 800142e:	d0ea      	beq.n	8001406 <ticker_irq_handler+0xa>
 8001430:	6850      	ldr	r0, [r2, #4]
 8001432:	4798      	blx	r3
 8001434:	e7e7      	b.n	8001406 <ticker_irq_handler+0xa>
 8001436:	6823      	ldr	r3, [r4, #0]
 8001438:	6810      	ldr	r0, [r2, #0]
 800143a:	691b      	ldr	r3, [r3, #16]
 800143c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001440:	4718      	bx	r3

08001442 <ticker_read>:
 8001442:	6803      	ldr	r3, [r0, #0]
 8001444:	685b      	ldr	r3, [r3, #4]
 8001446:	4718      	bx	r3

08001448 <pinmap_pinout>:
 8001448:	b510      	push	{r4, lr}
 800144a:	4604      	mov	r4, r0
 800144c:	3001      	adds	r0, #1
 800144e:	d10d      	bne.n	800146c <pinmap_pinout+0x24>
 8001450:	bd10      	pop	{r4, pc}
 8001452:	429c      	cmp	r4, r3
 8001454:	d109      	bne.n	800146a <pinmap_pinout+0x22>
 8001456:	4620      	mov	r0, r4
 8001458:	6889      	ldr	r1, [r1, #8]
 800145a:	f001 fd97 	bl	8002f8c <pin_function>
 800145e:	4620      	mov	r0, r4
 8001460:	2100      	movs	r1, #0
 8001462:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001466:	f001 be15 	b.w	8003094 <pin_mode>
 800146a:	310c      	adds	r1, #12
 800146c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001470:	1c5a      	adds	r2, r3, #1
 8001472:	d1ee      	bne.n	8001452 <pinmap_pinout+0xa>
 8001474:	4802      	ldr	r0, [pc, #8]	; (8001480 <pinmap_pinout+0x38>)
 8001476:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800147a:	f000 b877 	b.w	800156c <error>
 800147e:	bf00      	nop
 8001480:	08006451 	.word	0x08006451

08001484 <pinmap_merge>:
 8001484:	4288      	cmp	r0, r1
 8001486:	b508      	push	{r3, lr}
 8001488:	d008      	beq.n	800149c <pinmap_merge+0x18>
 800148a:	1c43      	adds	r3, r0, #1
 800148c:	d006      	beq.n	800149c <pinmap_merge+0x18>
 800148e:	3101      	adds	r1, #1
 8001490:	d006      	beq.n	80014a0 <pinmap_merge+0x1c>
 8001492:	4804      	ldr	r0, [pc, #16]	; (80014a4 <pinmap_merge+0x20>)
 8001494:	f000 f86a 	bl	800156c <error>
 8001498:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800149c:	4608      	mov	r0, r1
 800149e:	bd08      	pop	{r3, pc}
 80014a0:	4601      	mov	r1, r0
 80014a2:	e7fb      	b.n	800149c <pinmap_merge+0x18>
 80014a4:	08006420 	.word	0x08006420

080014a8 <pinmap_find_peripheral>:
 80014a8:	f9b1 3000 	ldrsh.w	r3, [r1]
 80014ac:	1c5a      	adds	r2, r3, #1
 80014ae:	d101      	bne.n	80014b4 <pinmap_find_peripheral+0xc>
 80014b0:	4618      	mov	r0, r3
 80014b2:	4770      	bx	lr
 80014b4:	4283      	cmp	r3, r0
 80014b6:	d101      	bne.n	80014bc <pinmap_find_peripheral+0x14>
 80014b8:	6848      	ldr	r0, [r1, #4]
 80014ba:	4770      	bx	lr
 80014bc:	310c      	adds	r1, #12
 80014be:	e7f3      	b.n	80014a8 <pinmap_find_peripheral>

080014c0 <pinmap_peripheral>:
 80014c0:	1c42      	adds	r2, r0, #1
 80014c2:	b510      	push	{r4, lr}
 80014c4:	4604      	mov	r4, r0
 80014c6:	d007      	beq.n	80014d8 <pinmap_peripheral+0x18>
 80014c8:	f7ff ffee 	bl	80014a8 <pinmap_find_peripheral>
 80014cc:	1c43      	adds	r3, r0, #1
 80014ce:	4604      	mov	r4, r0
 80014d0:	d102      	bne.n	80014d8 <pinmap_peripheral+0x18>
 80014d2:	4802      	ldr	r0, [pc, #8]	; (80014dc <pinmap_peripheral+0x1c>)
 80014d4:	f000 f84a 	bl	800156c <error>
 80014d8:	4620      	mov	r0, r4
 80014da:	bd10      	pop	{r4, pc}
 80014dc:	08006431 	.word	0x08006431

080014e0 <mbed_die>:
 80014e0:	b500      	push	{lr}
 80014e2:	b089      	sub	sp, #36	; 0x24
 80014e4:	f000 f818 	bl	8001518 <core_util_critical_section_enter>
 80014e8:	2105      	movs	r1, #5
 80014ea:	a801      	add	r0, sp, #4
 80014ec:	f7ff ff78 	bl	80013e0 <gpio_init_out>
 80014f0:	9b03      	ldr	r3, [sp, #12]
 80014f2:	9a01      	ldr	r2, [sp, #4]
 80014f4:	601a      	str	r2, [r3, #0]
 80014f6:	2096      	movs	r0, #150	; 0x96
 80014f8:	f003 fcb2 	bl	8004e60 <wait_ms>
 80014fc:	9b01      	ldr	r3, [sp, #4]
 80014fe:	9a04      	ldr	r2, [sp, #16]
 8001500:	041b      	lsls	r3, r3, #16
 8001502:	6013      	str	r3, [r2, #0]
 8001504:	2096      	movs	r0, #150	; 0x96
 8001506:	f003 fcab 	bl	8004e60 <wait_ms>
 800150a:	e7f1      	b.n	80014f0 <mbed_die+0x10>

0800150c <core_util_are_interrupts_enabled>:
 800150c:	f3ef 8010 	mrs	r0, PRIMASK
 8001510:	43c0      	mvns	r0, r0
 8001512:	f000 0001 	and.w	r0, r0, #1
 8001516:	4770      	bx	lr

08001518 <core_util_critical_section_enter>:
 8001518:	b508      	push	{r3, lr}
 800151a:	f7ff fff7 	bl	800150c <core_util_are_interrupts_enabled>
 800151e:	b672      	cpsid	i
 8001520:	4b06      	ldr	r3, [pc, #24]	; (800153c <core_util_critical_section_enter+0x24>)
 8001522:	681a      	ldr	r2, [r3, #0]
 8001524:	b922      	cbnz	r2, 8001530 <core_util_critical_section_enter+0x18>
 8001526:	f080 0001 	eor.w	r0, r0, #1
 800152a:	4a05      	ldr	r2, [pc, #20]	; (8001540 <core_util_critical_section_enter+0x28>)
 800152c:	b2c0      	uxtb	r0, r0
 800152e:	7010      	strb	r0, [r2, #0]
 8001530:	681a      	ldr	r2, [r3, #0]
 8001532:	681a      	ldr	r2, [r3, #0]
 8001534:	3201      	adds	r2, #1
 8001536:	601a      	str	r2, [r3, #0]
 8001538:	bd08      	pop	{r3, pc}
 800153a:	bf00      	nop
 800153c:	20000288 	.word	0x20000288
 8001540:	20000284 	.word	0x20000284

08001544 <core_util_critical_section_exit>:
 8001544:	b508      	push	{r3, lr}
 8001546:	4b07      	ldr	r3, [pc, #28]	; (8001564 <core_util_critical_section_exit+0x20>)
 8001548:	681a      	ldr	r2, [r3, #0]
 800154a:	b152      	cbz	r2, 8001562 <core_util_critical_section_exit+0x1e>
 800154c:	f7ff ffde 	bl	800150c <core_util_are_interrupts_enabled>
 8001550:	681a      	ldr	r2, [r3, #0]
 8001552:	3a01      	subs	r2, #1
 8001554:	601a      	str	r2, [r3, #0]
 8001556:	681b      	ldr	r3, [r3, #0]
 8001558:	b91b      	cbnz	r3, 8001562 <core_util_critical_section_exit+0x1e>
 800155a:	4b03      	ldr	r3, [pc, #12]	; (8001568 <core_util_critical_section_exit+0x24>)
 800155c:	781b      	ldrb	r3, [r3, #0]
 800155e:	b903      	cbnz	r3, 8001562 <core_util_critical_section_exit+0x1e>
 8001560:	b662      	cpsie	i
 8001562:	bd08      	pop	{r3, pc}
 8001564:	20000288 	.word	0x20000288
 8001568:	20000284 	.word	0x20000284

0800156c <error>:
 800156c:	b40f      	push	{r0, r1, r2, r3}
 800156e:	2001      	movs	r0, #1
 8001570:	b508      	push	{r3, lr}
 8001572:	f003 fd79 	bl	8005068 <__wrap_exit>

08001576 <default_idle_hook>:
 8001576:	f001 bc02 	b.w	8002d7e <hal_sleep>
	...

0800157c <rtos_idle_loop>:
 800157c:	b508      	push	{r3, lr}
 800157e:	4c02      	ldr	r4, [pc, #8]	; (8001588 <rtos_idle_loop+0xc>)
 8001580:	6823      	ldr	r3, [r4, #0]
 8001582:	4798      	blx	r3
 8001584:	e7fc      	b.n	8001580 <rtos_idle_loop+0x4>
 8001586:	bf00      	nop
 8001588:	200001c8 	.word	0x200001c8

0800158c <rt_put_prio>:
 800158c:	b530      	push	{r4, r5, lr}
 800158e:	7802      	ldrb	r2, [r0, #0]
 8001590:	788c      	ldrb	r4, [r1, #2]
 8001592:	6843      	ldr	r3, [r0, #4]
 8001594:	3a01      	subs	r2, #1
 8001596:	b2d2      	uxtb	r2, r2
 8001598:	b113      	cbz	r3, 80015a0 <rt_put_prio+0x14>
 800159a:	789d      	ldrb	r5, [r3, #2]
 800159c:	42a5      	cmp	r5, r4
 800159e:	d207      	bcs.n	80015b0 <rt_put_prio+0x24>
 80015a0:	2a02      	cmp	r2, #2
 80015a2:	604b      	str	r3, [r1, #4]
 80015a4:	6041      	str	r1, [r0, #4]
 80015a6:	d806      	bhi.n	80015b6 <rt_put_prio+0x2a>
 80015a8:	b103      	cbz	r3, 80015ac <rt_put_prio+0x20>
 80015aa:	6099      	str	r1, [r3, #8]
 80015ac:	6088      	str	r0, [r1, #8]
 80015ae:	bd30      	pop	{r4, r5, pc}
 80015b0:	4618      	mov	r0, r3
 80015b2:	685b      	ldr	r3, [r3, #4]
 80015b4:	e7f0      	b.n	8001598 <rt_put_prio+0xc>
 80015b6:	2300      	movs	r3, #0
 80015b8:	608b      	str	r3, [r1, #8]
 80015ba:	bd30      	pop	{r4, r5, pc}

080015bc <rt_get_first>:
 80015bc:	7802      	ldrb	r2, [r0, #0]
 80015be:	6843      	ldr	r3, [r0, #4]
 80015c0:	3a01      	subs	r2, #1
 80015c2:	6859      	ldr	r1, [r3, #4]
 80015c4:	6041      	str	r1, [r0, #4]
 80015c6:	2a02      	cmp	r2, #2
 80015c8:	f04f 0200 	mov.w	r2, #0
 80015cc:	d805      	bhi.n	80015da <rt_get_first+0x1e>
 80015ce:	b109      	cbz	r1, 80015d4 <rt_get_first+0x18>
 80015d0:	6088      	str	r0, [r1, #8]
 80015d2:	605a      	str	r2, [r3, #4]
 80015d4:	609a      	str	r2, [r3, #8]
 80015d6:	4618      	mov	r0, r3
 80015d8:	4770      	bx	lr
 80015da:	605a      	str	r2, [r3, #4]
 80015dc:	e7fb      	b.n	80015d6 <rt_get_first+0x1a>
	...

080015e0 <rt_put_rdy_first>:
 80015e0:	4b03      	ldr	r3, [pc, #12]	; (80015f0 <rt_put_rdy_first+0x10>)
 80015e2:	685a      	ldr	r2, [r3, #4]
 80015e4:	6042      	str	r2, [r0, #4]
 80015e6:	2200      	movs	r2, #0
 80015e8:	6082      	str	r2, [r0, #8]
 80015ea:	6058      	str	r0, [r3, #4]
 80015ec:	4770      	bx	lr
 80015ee:	bf00      	nop
 80015f0:	200016f8 	.word	0x200016f8

080015f4 <rt_put_dly>:
 80015f4:	4b10      	ldr	r3, [pc, #64]	; (8001638 <rt_put_dly+0x44>)
 80015f6:	68da      	ldr	r2, [r3, #12]
 80015f8:	b510      	push	{r4, lr}
 80015fa:	b18a      	cbz	r2, 8001620 <rt_put_dly+0x2c>
 80015fc:	8a9a      	ldrh	r2, [r3, #20]
 80015fe:	68dc      	ldr	r4, [r3, #12]
 8001600:	428a      	cmp	r2, r1
 8001602:	d30c      	bcc.n	800161e <rt_put_dly+0x2a>
 8001604:	60c4      	str	r4, [r0, #12]
 8001606:	60d8      	str	r0, [r3, #12]
 8001608:	68c4      	ldr	r4, [r0, #12]
 800160a:	6103      	str	r3, [r0, #16]
 800160c:	b104      	cbz	r4, 8001610 <rt_put_dly+0x1c>
 800160e:	6120      	str	r0, [r4, #16]
 8001610:	1a52      	subs	r2, r2, r1
 8001612:	b292      	uxth	r2, r2
 8001614:	8282      	strh	r2, [r0, #20]
 8001616:	8a99      	ldrh	r1, [r3, #20]
 8001618:	1a8a      	subs	r2, r1, r2
 800161a:	829a      	strh	r2, [r3, #20]
 800161c:	bd10      	pop	{r4, pc}
 800161e:	b93c      	cbnz	r4, 8001630 <rt_put_dly+0x3c>
 8001620:	2400      	movs	r4, #0
 8001622:	1a8a      	subs	r2, r1, r2
 8001624:	60c4      	str	r4, [r0, #12]
 8001626:	60d8      	str	r0, [r3, #12]
 8001628:	6103      	str	r3, [r0, #16]
 800162a:	829a      	strh	r2, [r3, #20]
 800162c:	8284      	strh	r4, [r0, #20]
 800162e:	bd10      	pop	{r4, pc}
 8001630:	8aa3      	ldrh	r3, [r4, #20]
 8001632:	441a      	add	r2, r3
 8001634:	4623      	mov	r3, r4
 8001636:	e7e2      	b.n	80015fe <rt_put_dly+0xa>
 8001638:	20001710 	.word	0x20001710

0800163c <rt_dec_dly>:
 800163c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001640:	4d17      	ldr	r5, [pc, #92]	; (80016a0 <rt_dec_dly+0x64>)
 8001642:	68eb      	ldr	r3, [r5, #12]
 8001644:	b153      	cbz	r3, 800165c <rt_dec_dly+0x20>
 8001646:	8aab      	ldrh	r3, [r5, #20]
 8001648:	4f16      	ldr	r7, [pc, #88]	; (80016a4 <rt_dec_dly+0x68>)
 800164a:	f8df 805c 	ldr.w	r8, [pc, #92]	; 80016a8 <rt_dec_dly+0x6c>
 800164e:	3b01      	subs	r3, #1
 8001650:	82ab      	strh	r3, [r5, #20]
 8001652:	2600      	movs	r6, #0
 8001654:	8aaa      	ldrh	r2, [r5, #20]
 8001656:	b90a      	cbnz	r2, 800165c <rt_dec_dly+0x20>
 8001658:	68ec      	ldr	r4, [r5, #12]
 800165a:	b90c      	cbnz	r4, 8001660 <rt_dec_dly+0x24>
 800165c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001660:	68a3      	ldr	r3, [r4, #8]
 8001662:	b133      	cbz	r3, 8001672 <rt_dec_dly+0x36>
 8001664:	6861      	ldr	r1, [r4, #4]
 8001666:	6059      	str	r1, [r3, #4]
 8001668:	6861      	ldr	r1, [r4, #4]
 800166a:	b109      	cbz	r1, 8001670 <rt_dec_dly+0x34>
 800166c:	608b      	str	r3, [r1, #8]
 800166e:	6062      	str	r2, [r4, #4]
 8001670:	60a6      	str	r6, [r4, #8]
 8001672:	4621      	mov	r1, r4
 8001674:	4638      	mov	r0, r7
 8001676:	f7ff ff89 	bl	800158c <rt_put_prio>
 800167a:	8aa3      	ldrh	r3, [r4, #20]
 800167c:	82ab      	strh	r3, [r5, #20]
 800167e:	7863      	ldrb	r3, [r4, #1]
 8001680:	2b04      	cmp	r3, #4
 8001682:	bf01      	itttt	eq
 8001684:	f8d8 3000 	ldreq.w	r3, [r8]
 8001688:	8ae2      	ldrheq	r2, [r4, #22]
 800168a:	189b      	addeq	r3, r3, r2
 800168c:	82a3      	strheq	r3, [r4, #20]
 800168e:	2301      	movs	r3, #1
 8001690:	7063      	strb	r3, [r4, #1]
 8001692:	68e3      	ldr	r3, [r4, #12]
 8001694:	60eb      	str	r3, [r5, #12]
 8001696:	b10b      	cbz	r3, 800169c <rt_dec_dly+0x60>
 8001698:	611d      	str	r5, [r3, #16]
 800169a:	60e6      	str	r6, [r4, #12]
 800169c:	6126      	str	r6, [r4, #16]
 800169e:	e7d9      	b.n	8001654 <rt_dec_dly+0x18>
 80016a0:	20001710 	.word	0x20001710
 80016a4:	200016f8 	.word	0x200016f8
 80016a8:	20002154 	.word	0x20002154

080016ac <rt_rmv_list>:
 80016ac:	6883      	ldr	r3, [r0, #8]
 80016ae:	b12b      	cbz	r3, 80016bc <rt_rmv_list+0x10>
 80016b0:	6842      	ldr	r2, [r0, #4]
 80016b2:	605a      	str	r2, [r3, #4]
 80016b4:	6842      	ldr	r2, [r0, #4]
 80016b6:	b15a      	cbz	r2, 80016d0 <rt_rmv_list+0x24>
 80016b8:	6093      	str	r3, [r2, #8]
 80016ba:	4770      	bx	lr
 80016bc:	4b05      	ldr	r3, [pc, #20]	; (80016d4 <rt_rmv_list+0x28>)
 80016be:	685a      	ldr	r2, [r3, #4]
 80016c0:	4290      	cmp	r0, r2
 80016c2:	d102      	bne.n	80016ca <rt_rmv_list+0x1e>
 80016c4:	6842      	ldr	r2, [r0, #4]
 80016c6:	605a      	str	r2, [r3, #4]
 80016c8:	4770      	bx	lr
 80016ca:	4613      	mov	r3, r2
 80016cc:	2a00      	cmp	r2, #0
 80016ce:	d1f6      	bne.n	80016be <rt_rmv_list+0x12>
 80016d0:	4770      	bx	lr
 80016d2:	bf00      	nop
 80016d4:	200016f8 	.word	0x200016f8

080016d8 <rt_resort_prio>:
 80016d8:	b510      	push	{r4, lr}
 80016da:	6884      	ldr	r4, [r0, #8]
 80016dc:	4601      	mov	r1, r0
 80016de:	b92c      	cbnz	r4, 80016ec <rt_resort_prio+0x14>
 80016e0:	7843      	ldrb	r3, [r0, #1]
 80016e2:	2b01      	cmp	r3, #1
 80016e4:	d10d      	bne.n	8001702 <rt_resort_prio+0x2a>
 80016e6:	4c07      	ldr	r4, [pc, #28]	; (8001704 <rt_resort_prio+0x2c>)
 80016e8:	e003      	b.n	80016f2 <rt_resort_prio+0x1a>
 80016ea:	68a4      	ldr	r4, [r4, #8]
 80016ec:	7823      	ldrb	r3, [r4, #0]
 80016ee:	2b00      	cmp	r3, #0
 80016f0:	d0fb      	beq.n	80016ea <rt_resort_prio+0x12>
 80016f2:	4608      	mov	r0, r1
 80016f4:	f7ff ffda 	bl	80016ac <rt_rmv_list>
 80016f8:	4620      	mov	r0, r4
 80016fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80016fe:	f7ff bf45 	b.w	800158c <rt_put_prio>
 8001702:	bd10      	pop	{r4, pc}
 8001704:	200016f8 	.word	0x200016f8

08001708 <rt_rmv_dly>:
 8001708:	6903      	ldr	r3, [r0, #16]
 800170a:	b510      	push	{r4, lr}
 800170c:	b163      	cbz	r3, 8001728 <rt_rmv_dly+0x20>
 800170e:	68c2      	ldr	r2, [r0, #12]
 8001710:	60da      	str	r2, [r3, #12]
 8001712:	68c2      	ldr	r2, [r0, #12]
 8001714:	b14a      	cbz	r2, 800172a <rt_rmv_dly+0x22>
 8001716:	8a99      	ldrh	r1, [r3, #20]
 8001718:	8a84      	ldrh	r4, [r0, #20]
 800171a:	4421      	add	r1, r4
 800171c:	8299      	strh	r1, [r3, #20]
 800171e:	6113      	str	r3, [r2, #16]
 8001720:	2300      	movs	r3, #0
 8001722:	60c3      	str	r3, [r0, #12]
 8001724:	2300      	movs	r3, #0
 8001726:	6103      	str	r3, [r0, #16]
 8001728:	bd10      	pop	{r4, pc}
 800172a:	829a      	strh	r2, [r3, #20]
 800172c:	e7fa      	b.n	8001724 <rt_rmv_dly+0x1c>
	...

08001730 <rt_psq_enq>:
 8001730:	b470      	push	{r4, r5, r6}
 8001732:	4b11      	ldr	r3, [pc, #68]	; (8001778 <rt_psq_enq+0x48>)
 8001734:	78dd      	ldrb	r5, [r3, #3]
 8001736:	f3ef 8610 	mrs	r6, PRIMASK
 800173a:	f3ef 8210 	mrs	r2, PRIMASK
 800173e:	b672      	cpsid	i
 8001740:	789a      	ldrb	r2, [r3, #2]
 8001742:	4295      	cmp	r5, r2
 8001744:	d911      	bls.n	800176a <rt_psq_enq+0x3a>
 8001746:	3201      	adds	r2, #1
 8001748:	709a      	strb	r2, [r3, #2]
 800174a:	781a      	ldrb	r2, [r3, #0]
 800174c:	1c54      	adds	r4, r2, #1
 800174e:	42a5      	cmp	r5, r4
 8001750:	bf08      	it	eq
 8001752:	2400      	moveq	r4, #0
 8001754:	701c      	strb	r4, [r3, #0]
 8001756:	b906      	cbnz	r6, 800175a <rt_psq_enq+0x2a>
 8001758:	b662      	cpsie	i
 800175a:	4295      	cmp	r5, r2
 800175c:	d907      	bls.n	800176e <rt_psq_enq+0x3e>
 800175e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8001762:	bc70      	pop	{r4, r5, r6}
 8001764:	6058      	str	r0, [r3, #4]
 8001766:	6099      	str	r1, [r3, #8]
 8001768:	4770      	bx	lr
 800176a:	2e00      	cmp	r6, #0
 800176c:	d0f4      	beq.n	8001758 <rt_psq_enq+0x28>
 800176e:	2002      	movs	r0, #2
 8001770:	bc70      	pop	{r4, r5, r6}
 8001772:	f000 b829 	b.w	80017c8 <os_error>
 8001776:	bf00      	nop
 8001778:	20001728 	.word	0x20001728

0800177c <pre_main>:
 800177c:	b508      	push	{r3, lr}
 800177e:	480b      	ldr	r0, [pc, #44]	; (80017ac <pre_main+0x30>)
 8001780:	f000 fca4 	bl	80020cc <osMutexCreate>
 8001784:	4b0a      	ldr	r3, [pc, #40]	; (80017b0 <pre_main+0x34>)
 8001786:	6018      	str	r0, [r3, #0]
 8001788:	480a      	ldr	r0, [pc, #40]	; (80017b4 <pre_main+0x38>)
 800178a:	f000 fc9f 	bl	80020cc <osMutexCreate>
 800178e:	4b0a      	ldr	r3, [pc, #40]	; (80017b8 <pre_main+0x3c>)
 8001790:	6018      	str	r0, [r3, #0]
 8001792:	480a      	ldr	r0, [pc, #40]	; (80017bc <pre_main+0x40>)
 8001794:	f000 fc9a 	bl	80020cc <osMutexCreate>
 8001798:	4b09      	ldr	r3, [pc, #36]	; (80017c0 <pre_main+0x44>)
 800179a:	6018      	str	r0, [r3, #0]
 800179c:	f003 ff08 	bl	80055b0 <__libc_init_array>
 80017a0:	2100      	movs	r1, #0
 80017a2:	4608      	mov	r0, r1
 80017a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80017a8:	f003 bc21 	b.w	8004fee <__wrap_main>
 80017ac:	080064b0 	.word	0x080064b0
 80017b0:	200017b0 	.word	0x200017b0
 80017b4:	080064ac 	.word	0x080064ac
 80017b8:	20000294 	.word	0x20000294
 80017bc:	080064a8 	.word	0x080064a8
 80017c0:	2000028c 	.word	0x2000028c

080017c4 <os_idle_demon>:
 80017c4:	f7ff beda 	b.w	800157c <rtos_idle_loop>

080017c8 <os_error>:
 80017c8:	b510      	push	{r4, lr}
 80017ca:	4604      	mov	r4, r0
 80017cc:	f000 fbec 	bl	8001fa8 <svcThreadGetId>
 80017d0:	4621      	mov	r1, r4
 80017d2:	4602      	mov	r2, r0
 80017d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80017d8:	4801      	ldr	r0, [pc, #4]	; (80017e0 <os_error+0x18>)
 80017da:	f7ff bec7 	b.w	800156c <error>
 80017de:	bf00      	nop
 80017e0:	08006470 	.word	0x08006470

080017e4 <sysThreadTerminate>:
 80017e4:	f003 bc5e 	b.w	80050a4 <thread_terminate_hook>

080017e8 <set_stack_heap>:
 80017e8:	4a0b      	ldr	r2, [pc, #44]	; (8001818 <set_stack_heap+0x30>)
 80017ea:	4b0c      	ldr	r3, [pc, #48]	; (800181c <set_stack_heap+0x34>)
 80017ec:	480c      	ldr	r0, [pc, #48]	; (8001820 <set_stack_heap+0x38>)
 80017ee:	b430      	push	{r4, r5}
 80017f0:	601a      	str	r2, [r3, #0]
 80017f2:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 80017f6:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
 80017fa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80017fe:	4619      	mov	r1, r3
 8001800:	bf28      	it	cs
 8001802:	f44f 6180 	movcs.w	r1, #1024	; 0x400
 8001806:	4d07      	ldr	r5, [pc, #28]	; (8001824 <set_stack_heap+0x3c>)
 8001808:	4c07      	ldr	r4, [pc, #28]	; (8001828 <set_stack_heap+0x40>)
 800180a:	6001      	str	r1, [r0, #0]
 800180c:	1a5b      	subs	r3, r3, r1
 800180e:	441a      	add	r2, r3
 8001810:	602a      	str	r2, [r5, #0]
 8001812:	6023      	str	r3, [r4, #0]
 8001814:	bc30      	pop	{r4, r5}
 8001816:	4770      	bx	lr
 8001818:	200021e8 	.word	0x200021e8
 800181c:	200016e8 	.word	0x200016e8
 8001820:	20000298 	.word	0x20000298
 8001824:	2000029c 	.word	0x2000029c
 8001828:	200016e4 	.word	0x200016e4

0800182c <software_init_hook_rtos>:
 800182c:	f000 fd22 	bl	8002274 <osKernelInitialize>
 8001830:	f7ff ffda 	bl	80017e8 <set_stack_heap>
 8001834:	4803      	ldr	r0, [pc, #12]	; (8001844 <software_init_hook_rtos+0x18>)
 8001836:	2100      	movs	r1, #0
 8001838:	f000 fcd0 	bl	80021dc <osThreadCreate>
 800183c:	f000 fb36 	bl	8001eac <osKernelStart>
 8001840:	e7fe      	b.n	8001840 <software_init_hook_rtos+0x14>
 8001842:	0000      	.short	0x0000
 8001844:	200001cc 	.word	0x200001cc

08001848 <__rtos_malloc_lock>:
 8001848:	4b02      	ldr	r3, [pc, #8]	; (8001854 <__rtos_malloc_lock+0xc>)
 800184a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800184e:	6818      	ldr	r0, [r3, #0]
 8001850:	f000 bc5a 	b.w	8002108 <osMutexWait>
 8001854:	20000294 	.word	0x20000294

08001858 <__rtos_malloc_unlock>:
 8001858:	4b01      	ldr	r3, [pc, #4]	; (8001860 <__rtos_malloc_unlock+0x8>)
 800185a:	6818      	ldr	r0, [r3, #0]
 800185c:	f000 bc7c 	b.w	8002158 <osMutexRelease>
 8001860:	20000294 	.word	0x20000294

08001864 <rt_init_stack>:
 8001864:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001866:	089b      	lsrs	r3, r3, #2
 8001868:	bf04      	itt	eq
 800186a:	4b22      	ldreq	r3, [pc, #136]	; (80018f4 <rt_init_stack+0x90>)
 800186c:	881b      	ldrheq	r3, [r3, #0]
 800186e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001870:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8001872:	bf08      	it	eq
 8001874:	089b      	lsreq	r3, r3, #2
 8001876:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 800187a:	0754      	lsls	r4, r2, #29
 800187c:	bf48      	it	mi
 800187e:	3a04      	submi	r2, #4
 8001880:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 8001884:	e902 0042 	stmdb	r2, {r1, r6}
 8001888:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 800188c:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8001890:	f1a2 070c 	sub.w	r7, r2, #12
 8001894:	f04f 0e00 	mov.w	lr, #0
 8001898:	f846 ef04 	str.w	lr, [r6, #4]!
 800189c:	42be      	cmp	r6, r7
 800189e:	d1fb      	bne.n	8001898 <rt_init_stack+0x34>
 80018a0:	69c6      	ldr	r6, [r0, #28]
 80018a2:	f842 6c20 	str.w	r6, [r2, #-32]
 80018a6:	6341      	str	r1, [r0, #52]	; 0x34
 80018a8:	4912      	ldr	r1, [pc, #72]	; (80018f4 <rt_init_stack+0x90>)
 80018aa:	62c4      	str	r4, [r0, #44]	; 0x2c
 80018ac:	6809      	ldr	r1, [r1, #0]
 80018ae:	00c9      	lsls	r1, r1, #3
 80018b0:	d517      	bpl.n	80018e2 <rt_init_stack+0x7e>
 80018b2:	2b11      	cmp	r3, #17
 80018b4:	d915      	bls.n	80018e2 <rt_init_stack+0x7e>
 80018b6:	3b10      	subs	r3, #16
 80018b8:	f06f 0107 	mvn.w	r1, #7
 80018bc:	085b      	lsrs	r3, r3, #1
 80018be:	434b      	muls	r3, r1
 80018c0:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 80018c4:	440a      	add	r2, r1
 80018c6:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 80018ca:	4621      	mov	r1, r4
 80018cc:	4291      	cmp	r1, r2
 80018ce:	d10b      	bne.n	80018e8 <rt_init_stack+0x84>
 80018d0:	3308      	adds	r3, #8
 80018d2:	441c      	add	r4, r3
 80018d4:	1f23      	subs	r3, r4, #4
 80018d6:	429d      	cmp	r5, r3
 80018d8:	bf3c      	itt	cc
 80018da:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 80018de:	f844 3c04 	strcc.w	r3, [r4, #-4]
 80018e2:	4b05      	ldr	r3, [pc, #20]	; (80018f8 <rt_init_stack+0x94>)
 80018e4:	602b      	str	r3, [r5, #0]
 80018e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80018e8:	f841 0c04 	str.w	r0, [r1, #-4]
 80018ec:	f841 0d08 	str.w	r0, [r1, #-8]!
 80018f0:	e7ec      	b.n	80018cc <rt_init_stack+0x68>
 80018f2:	bf00      	nop
 80018f4:	080064b8 	.word	0x080064b8
 80018f8:	e25a2ea5 	.word	0xe25a2ea5

080018fc <rt_ret_val>:
 80018fc:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001900:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001902:	b112      	cbz	r2, 800190a <rt_ret_val+0xe>
 8001904:	3360      	adds	r3, #96	; 0x60
 8001906:	6019      	str	r1, [r3, #0]
 8001908:	4770      	bx	lr
 800190a:	3320      	adds	r3, #32
 800190c:	e7fb      	b.n	8001906 <rt_ret_val+0xa>

0800190e <rt_ret_val2>:
 800190e:	b510      	push	{r4, lr}
 8001910:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8001914:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001916:	b11c      	cbz	r4, 8001920 <rt_ret_val2+0x12>
 8001918:	3360      	adds	r3, #96	; 0x60
 800191a:	e883 0006 	stmia.w	r3, {r1, r2}
 800191e:	bd10      	pop	{r4, pc}
 8001920:	3320      	adds	r3, #32
 8001922:	e7fa      	b.n	800191a <rt_ret_val2+0xc>

08001924 <rt_psh_req>:
 8001924:	4b05      	ldr	r3, [pc, #20]	; (800193c <rt_psh_req+0x18>)
 8001926:	781b      	ldrb	r3, [r3, #0]
 8001928:	b923      	cbnz	r3, 8001934 <rt_psh_req+0x10>
 800192a:	4b05      	ldr	r3, [pc, #20]	; (8001940 <rt_psh_req+0x1c>)
 800192c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001930:	601a      	str	r2, [r3, #0]
 8001932:	4770      	bx	lr
 8001934:	4b03      	ldr	r3, [pc, #12]	; (8001944 <rt_psh_req+0x20>)
 8001936:	2201      	movs	r2, #1
 8001938:	701a      	strb	r2, [r3, #0]
 800193a:	4770      	bx	lr
 800193c:	200012f0 	.word	0x200012f0
 8001940:	e000ed04 	.word	0xe000ed04
 8001944:	200012f1 	.word	0x200012f1

08001948 <rt_pop_req>:
 8001948:	b538      	push	{r3, r4, r5, lr}
 800194a:	4b1a      	ldr	r3, [pc, #104]	; (80019b4 <rt_pop_req+0x6c>)
 800194c:	4c1a      	ldr	r4, [pc, #104]	; (80019b8 <rt_pop_req+0x70>)
 800194e:	6818      	ldr	r0, [r3, #0]
 8001950:	2301      	movs	r3, #1
 8001952:	7043      	strb	r3, [r0, #1]
 8001954:	f7ff fe44 	bl	80015e0 <rt_put_rdy_first>
 8001958:	7865      	ldrb	r5, [r4, #1]
 800195a:	78a3      	ldrb	r3, [r4, #2]
 800195c:	b93b      	cbnz	r3, 800196e <rt_pop_req+0x26>
 800195e:	4817      	ldr	r0, [pc, #92]	; (80019bc <rt_pop_req+0x74>)
 8001960:	7065      	strb	r5, [r4, #1]
 8001962:	f7ff fe2b 	bl	80015bc <rt_get_first>
 8001966:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800196a:	f000 bd5d 	b.w	8002428 <rt_switch_req>
 800196e:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8001972:	6858      	ldr	r0, [r3, #4]
 8001974:	7802      	ldrb	r2, [r0, #0]
 8001976:	b99a      	cbnz	r2, 80019a0 <rt_pop_req+0x58>
 8001978:	8919      	ldrh	r1, [r3, #8]
 800197a:	f000 f9bb 	bl	8001cf4 <rt_evt_psh>
 800197e:	78e3      	ldrb	r3, [r4, #3]
 8001980:	3501      	adds	r5, #1
 8001982:	429d      	cmp	r5, r3
 8001984:	bf08      	it	eq
 8001986:	2500      	moveq	r5, #0
 8001988:	f3ef 8310 	mrs	r3, PRIMASK
 800198c:	f3ef 8210 	mrs	r2, PRIMASK
 8001990:	b672      	cpsid	i
 8001992:	78a2      	ldrb	r2, [r4, #2]
 8001994:	3a01      	subs	r2, #1
 8001996:	70a2      	strb	r2, [r4, #2]
 8001998:	2b00      	cmp	r3, #0
 800199a:	d1de      	bne.n	800195a <rt_pop_req+0x12>
 800199c:	b662      	cpsie	i
 800199e:	e7dc      	b.n	800195a <rt_pop_req+0x12>
 80019a0:	2a01      	cmp	r2, #1
 80019a2:	d103      	bne.n	80019ac <rt_pop_req+0x64>
 80019a4:	6899      	ldr	r1, [r3, #8]
 80019a6:	f000 f933 	bl	8001c10 <rt_mbx_psh>
 80019aa:	e7e8      	b.n	800197e <rt_pop_req+0x36>
 80019ac:	f001 f844 	bl	8002a38 <rt_sem_psh>
 80019b0:	e7e5      	b.n	800197e <rt_pop_req+0x36>
 80019b2:	bf00      	nop
 80019b4:	2000210c 	.word	0x2000210c
 80019b8:	20001728 	.word	0x20001728
 80019bc:	200016f8 	.word	0x200016f8

080019c0 <os_tick_init>:
 80019c0:	4b08      	ldr	r3, [pc, #32]	; (80019e4 <os_tick_init+0x24>)
 80019c2:	681a      	ldr	r2, [r3, #0]
 80019c4:	4b08      	ldr	r3, [pc, #32]	; (80019e8 <os_tick_init+0x28>)
 80019c6:	601a      	str	r2, [r3, #0]
 80019c8:	2200      	movs	r2, #0
 80019ca:	605a      	str	r2, [r3, #4]
 80019cc:	2207      	movs	r2, #7
 80019ce:	f843 2c04 	str.w	r2, [r3, #-4]
 80019d2:	4a06      	ldr	r2, [pc, #24]	; (80019ec <os_tick_init+0x2c>)
 80019d4:	6813      	ldr	r3, [r2, #0]
 80019d6:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80019da:	6013      	str	r3, [r2, #0]
 80019dc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80019e0:	4770      	bx	lr
 80019e2:	bf00      	nop
 80019e4:	080064d0 	.word	0x080064d0
 80019e8:	e000e014 	.word	0xe000e014
 80019ec:	e000ed20 	.word	0xe000ed20

080019f0 <os_tick_irqack>:
 80019f0:	4770      	bx	lr
	...

080019f4 <rt_systick>:
 80019f4:	b508      	push	{r3, lr}
 80019f6:	4b0b      	ldr	r3, [pc, #44]	; (8001a24 <rt_systick+0x30>)
 80019f8:	6818      	ldr	r0, [r3, #0]
 80019fa:	2301      	movs	r3, #1
 80019fc:	7043      	strb	r3, [r0, #1]
 80019fe:	f7ff fdef 	bl	80015e0 <rt_put_rdy_first>
 8001a02:	f000 f9ad 	bl	8001d60 <rt_chk_robin>
 8001a06:	4a08      	ldr	r2, [pc, #32]	; (8001a28 <rt_systick+0x34>)
 8001a08:	6813      	ldr	r3, [r2, #0]
 8001a0a:	3301      	adds	r3, #1
 8001a0c:	6013      	str	r3, [r2, #0]
 8001a0e:	f7ff fe15 	bl	800163c <rt_dec_dly>
 8001a12:	f000 fc91 	bl	8002338 <sysTimerTick>
 8001a16:	4805      	ldr	r0, [pc, #20]	; (8001a2c <rt_systick+0x38>)
 8001a18:	f7ff fdd0 	bl	80015bc <rt_get_first>
 8001a1c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001a20:	f000 bd02 	b.w	8002428 <rt_switch_req>
 8001a24:	2000210c 	.word	0x2000210c
 8001a28:	20002154 	.word	0x20002154
 8001a2c:	200016f8 	.word	0x200016f8

08001a30 <rt_stk_check>:
 8001a30:	4b06      	ldr	r3, [pc, #24]	; (8001a4c <rt_stk_check+0x1c>)
 8001a32:	681a      	ldr	r2, [r3, #0]
 8001a34:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001a36:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8001a38:	4293      	cmp	r3, r2
 8001a3a:	d803      	bhi.n	8001a44 <rt_stk_check+0x14>
 8001a3c:	681a      	ldr	r2, [r3, #0]
 8001a3e:	4b04      	ldr	r3, [pc, #16]	; (8001a50 <rt_stk_check+0x20>)
 8001a40:	429a      	cmp	r2, r3
 8001a42:	d002      	beq.n	8001a4a <rt_stk_check+0x1a>
 8001a44:	2001      	movs	r0, #1
 8001a46:	f7ff bebf 	b.w	80017c8 <os_error>
 8001a4a:	4770      	bx	lr
 8001a4c:	2000210c 	.word	0x2000210c
 8001a50:	e25a2ea5 	.word	0xe25a2ea5

08001a54 <_init_box>:
 8001a54:	2a00      	cmp	r2, #0
 8001a56:	bfbb      	ittet	lt
 8001a58:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 8001a5c:	3207      	addlt	r2, #7
 8001a5e:	3203      	addge	r2, #3
 8001a60:	f022 0207 	biclt.w	r2, r2, #7
 8001a64:	bfa8      	it	ge
 8001a66:	f022 0203 	bicge.w	r2, r2, #3
 8001a6a:	b510      	push	{r4, lr}
 8001a6c:	bfb4      	ite	lt
 8001a6e:	2310      	movlt	r3, #16
 8001a70:	230c      	movge	r3, #12
 8001a72:	b192      	cbz	r2, 8001a9a <_init_box+0x46>
 8001a74:	18d4      	adds	r4, r2, r3
 8001a76:	428c      	cmp	r4, r1
 8001a78:	d80f      	bhi.n	8001a9a <_init_box+0x46>
 8001a7a:	4401      	add	r1, r0
 8001a7c:	4403      	add	r3, r0
 8001a7e:	4254      	negs	r4, r2
 8001a80:	6041      	str	r1, [r0, #4]
 8001a82:	6003      	str	r3, [r0, #0]
 8001a84:	6082      	str	r2, [r0, #8]
 8001a86:	4421      	add	r1, r4
 8001a88:	1898      	adds	r0, r3, r2
 8001a8a:	4281      	cmp	r1, r0
 8001a8c:	d302      	bcc.n	8001a94 <_init_box+0x40>
 8001a8e:	5100      	str	r0, [r0, r4]
 8001a90:	4603      	mov	r3, r0
 8001a92:	e7f9      	b.n	8001a88 <_init_box+0x34>
 8001a94:	2000      	movs	r0, #0
 8001a96:	6018      	str	r0, [r3, #0]
 8001a98:	bd10      	pop	{r4, pc}
 8001a9a:	2001      	movs	r0, #1
 8001a9c:	bd10      	pop	{r4, pc}

08001a9e <rt_alloc_box>:
 8001a9e:	f3ef 8310 	mrs	r3, PRIMASK
 8001aa2:	b672      	cpsid	i
 8001aa4:	6802      	ldr	r2, [r0, #0]
 8001aa6:	f003 0301 	and.w	r3, r3, #1
 8001aaa:	b10a      	cbz	r2, 8001ab0 <rt_alloc_box+0x12>
 8001aac:	6811      	ldr	r1, [r2, #0]
 8001aae:	6001      	str	r1, [r0, #0]
 8001ab0:	b903      	cbnz	r3, 8001ab4 <rt_alloc_box+0x16>
 8001ab2:	b662      	cpsie	i
 8001ab4:	4610      	mov	r0, r2
 8001ab6:	4770      	bx	lr

08001ab8 <rt_free_box>:
 8001ab8:	4281      	cmp	r1, r0
 8001aba:	d30d      	bcc.n	8001ad8 <rt_free_box+0x20>
 8001abc:	6843      	ldr	r3, [r0, #4]
 8001abe:	4299      	cmp	r1, r3
 8001ac0:	d20a      	bcs.n	8001ad8 <rt_free_box+0x20>
 8001ac2:	f3ef 8310 	mrs	r3, PRIMASK
 8001ac6:	b672      	cpsid	i
 8001ac8:	6802      	ldr	r2, [r0, #0]
 8001aca:	600a      	str	r2, [r1, #0]
 8001acc:	6001      	str	r1, [r0, #0]
 8001ace:	f013 0001 	ands.w	r0, r3, #1
 8001ad2:	d103      	bne.n	8001adc <rt_free_box+0x24>
 8001ad4:	b662      	cpsie	i
 8001ad6:	4770      	bx	lr
 8001ad8:	2001      	movs	r0, #1
 8001ada:	4770      	bx	lr
 8001adc:	2000      	movs	r0, #0
 8001ade:	4770      	bx	lr

08001ae0 <rt_mbx_init>:
 8001ae0:	2301      	movs	r3, #1
 8001ae2:	3910      	subs	r1, #16
 8001ae4:	7003      	strb	r3, [r0, #0]
 8001ae6:	0889      	lsrs	r1, r1, #2
 8001ae8:	2300      	movs	r3, #0
 8001aea:	7043      	strb	r3, [r0, #1]
 8001aec:	7083      	strb	r3, [r0, #2]
 8001aee:	6043      	str	r3, [r0, #4]
 8001af0:	8103      	strh	r3, [r0, #8]
 8001af2:	8143      	strh	r3, [r0, #10]
 8001af4:	8183      	strh	r3, [r0, #12]
 8001af6:	81c1      	strh	r1, [r0, #14]
 8001af8:	4770      	bx	lr
	...

08001afc <rt_mbx_wait>:
 8001afc:	b570      	push	{r4, r5, r6, lr}
 8001afe:	8985      	ldrh	r5, [r0, #12]
 8001b00:	4604      	mov	r4, r0
 8001b02:	4616      	mov	r6, r2
 8001b04:	2d00      	cmp	r5, #0
 8001b06:	d038      	beq.n	8001b7a <rt_mbx_wait+0x7e>
 8001b08:	8943      	ldrh	r3, [r0, #10]
 8001b0a:	1d1a      	adds	r2, r3, #4
 8001b0c:	3301      	adds	r3, #1
 8001b0e:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8001b12:	600a      	str	r2, [r1, #0]
 8001b14:	89c2      	ldrh	r2, [r0, #14]
 8001b16:	b29b      	uxth	r3, r3
 8001b18:	429a      	cmp	r2, r3
 8001b1a:	8143      	strh	r3, [r0, #10]
 8001b1c:	bf04      	itt	eq
 8001b1e:	2300      	moveq	r3, #0
 8001b20:	8143      	strheq	r3, [r0, #10]
 8001b22:	6843      	ldr	r3, [r0, #4]
 8001b24:	b1f3      	cbz	r3, 8001b64 <rt_mbx_wait+0x68>
 8001b26:	7843      	ldrb	r3, [r0, #1]
 8001b28:	2b02      	cmp	r3, #2
 8001b2a:	d11b      	bne.n	8001b64 <rt_mbx_wait+0x68>
 8001b2c:	f7ff fd46 	bl	80015bc <rt_get_first>
 8001b30:	2100      	movs	r1, #0
 8001b32:	4605      	mov	r5, r0
 8001b34:	f7ff fee2 	bl	80018fc <rt_ret_val>
 8001b38:	8923      	ldrh	r3, [r4, #8]
 8001b3a:	69e9      	ldr	r1, [r5, #28]
 8001b3c:	1d1a      	adds	r2, r3, #4
 8001b3e:	3301      	adds	r3, #1
 8001b40:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8001b44:	89e2      	ldrh	r2, [r4, #14]
 8001b46:	b29b      	uxth	r3, r3
 8001b48:	429a      	cmp	r2, r3
 8001b4a:	8123      	strh	r3, [r4, #8]
 8001b4c:	bf08      	it	eq
 8001b4e:	2300      	moveq	r3, #0
 8001b50:	4628      	mov	r0, r5
 8001b52:	bf08      	it	eq
 8001b54:	8123      	strheq	r3, [r4, #8]
 8001b56:	f7ff fdd7 	bl	8001708 <rt_rmv_dly>
 8001b5a:	4628      	mov	r0, r5
 8001b5c:	f000 fc7e 	bl	800245c <rt_dispatch>
 8001b60:	2000      	movs	r0, #0
 8001b62:	bd70      	pop	{r4, r5, r6, pc}
 8001b64:	f3ef 8010 	mrs	r0, PRIMASK
 8001b68:	f3ef 8310 	mrs	r3, PRIMASK
 8001b6c:	b672      	cpsid	i
 8001b6e:	3d01      	subs	r5, #1
 8001b70:	81a5      	strh	r5, [r4, #12]
 8001b72:	2800      	cmp	r0, #0
 8001b74:	d1f4      	bne.n	8001b60 <rt_mbx_wait+0x64>
 8001b76:	b662      	cpsie	i
 8001b78:	bd70      	pop	{r4, r5, r6, pc}
 8001b7a:	b14a      	cbz	r2, 8001b90 <rt_mbx_wait+0x94>
 8001b7c:	6842      	ldr	r2, [r0, #4]
 8001b7e:	4b09      	ldr	r3, [pc, #36]	; (8001ba4 <rt_mbx_wait+0xa8>)
 8001b80:	b142      	cbz	r2, 8001b94 <rt_mbx_wait+0x98>
 8001b82:	6819      	ldr	r1, [r3, #0]
 8001b84:	f7ff fd02 	bl	800158c <rt_put_prio>
 8001b88:	2108      	movs	r1, #8
 8001b8a:	4630      	mov	r0, r6
 8001b8c:	f000 fc8a 	bl	80024a4 <rt_block>
 8001b90:	2001      	movs	r0, #1
 8001b92:	bd70      	pop	{r4, r5, r6, pc}
 8001b94:	681b      	ldr	r3, [r3, #0]
 8001b96:	6043      	str	r3, [r0, #4]
 8001b98:	605a      	str	r2, [r3, #4]
 8001b9a:	6098      	str	r0, [r3, #8]
 8001b9c:	2301      	movs	r3, #1
 8001b9e:	7043      	strb	r3, [r0, #1]
 8001ba0:	e7f2      	b.n	8001b88 <rt_mbx_wait+0x8c>
 8001ba2:	bf00      	nop
 8001ba4:	2000210c 	.word	0x2000210c

08001ba8 <rt_mbx_check>:
 8001ba8:	89c2      	ldrh	r2, [r0, #14]
 8001baa:	8980      	ldrh	r0, [r0, #12]
 8001bac:	1a10      	subs	r0, r2, r0
 8001bae:	4770      	bx	lr

08001bb0 <isr_mbx_send>:
 8001bb0:	b508      	push	{r3, lr}
 8001bb2:	f7ff fdbd 	bl	8001730 <rt_psq_enq>
 8001bb6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001bba:	f7ff beb3 	b.w	8001924 <rt_psh_req>

08001bbe <isr_mbx_receive>:
 8001bbe:	8983      	ldrh	r3, [r0, #12]
 8001bc0:	b510      	push	{r4, lr}
 8001bc2:	4604      	mov	r4, r0
 8001bc4:	b30b      	cbz	r3, 8001c0a <isr_mbx_receive+0x4c>
 8001bc6:	8943      	ldrh	r3, [r0, #10]
 8001bc8:	3304      	adds	r3, #4
 8001bca:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8001bce:	600b      	str	r3, [r1, #0]
 8001bd0:	7843      	ldrb	r3, [r0, #1]
 8001bd2:	2b02      	cmp	r3, #2
 8001bd4:	d104      	bne.n	8001be0 <isr_mbx_receive+0x22>
 8001bd6:	2100      	movs	r1, #0
 8001bd8:	f7ff fdaa 	bl	8001730 <rt_psq_enq>
 8001bdc:	f7ff fea2 	bl	8001924 <rt_psh_req>
 8001be0:	f3ef 8310 	mrs	r3, PRIMASK
 8001be4:	f3ef 8210 	mrs	r2, PRIMASK
 8001be8:	b672      	cpsid	i
 8001bea:	89a2      	ldrh	r2, [r4, #12]
 8001bec:	3a01      	subs	r2, #1
 8001bee:	81a2      	strh	r2, [r4, #12]
 8001bf0:	b903      	cbnz	r3, 8001bf4 <isr_mbx_receive+0x36>
 8001bf2:	b662      	cpsie	i
 8001bf4:	8963      	ldrh	r3, [r4, #10]
 8001bf6:	89e2      	ldrh	r2, [r4, #14]
 8001bf8:	3301      	adds	r3, #1
 8001bfa:	b29b      	uxth	r3, r3
 8001bfc:	429a      	cmp	r2, r3
 8001bfe:	8163      	strh	r3, [r4, #10]
 8001c00:	d101      	bne.n	8001c06 <isr_mbx_receive+0x48>
 8001c02:	2300      	movs	r3, #0
 8001c04:	8163      	strh	r3, [r4, #10]
 8001c06:	2004      	movs	r0, #4
 8001c08:	bd10      	pop	{r4, pc}
 8001c0a:	4618      	mov	r0, r3
 8001c0c:	bd10      	pop	{r4, pc}
	...

08001c10 <rt_mbx_psh>:
 8001c10:	6843      	ldr	r3, [r0, #4]
 8001c12:	b570      	push	{r4, r5, r6, lr}
 8001c14:	4604      	mov	r4, r0
 8001c16:	460e      	mov	r6, r1
 8001c18:	2b00      	cmp	r3, #0
 8001c1a:	d04b      	beq.n	8001cb4 <rt_mbx_psh+0xa4>
 8001c1c:	7845      	ldrb	r5, [r0, #1]
 8001c1e:	2d02      	cmp	r5, #2
 8001c20:	d020      	beq.n	8001c64 <rt_mbx_psh+0x54>
 8001c22:	2d03      	cmp	r5, #3
 8001c24:	d00a      	beq.n	8001c3c <rt_mbx_psh+0x2c>
 8001c26:	2d01      	cmp	r5, #1
 8001c28:	d161      	bne.n	8001cee <rt_mbx_psh+0xde>
 8001c2a:	f7ff fcc7 	bl	80015bc <rt_get_first>
 8001c2e:	4604      	mov	r4, r0
 8001c30:	4632      	mov	r2, r6
 8001c32:	2110      	movs	r1, #16
 8001c34:	f7ff fe6b 	bl	800190e <rt_ret_val2>
 8001c38:	7065      	strb	r5, [r4, #1]
 8001c3a:	e00e      	b.n	8001c5a <rt_mbx_psh+0x4a>
 8001c3c:	4608      	mov	r0, r1
 8001c3e:	f7ff ff2e 	bl	8001a9e <rt_alloc_box>
 8001c42:	4605      	mov	r5, r0
 8001c44:	2800      	cmp	r0, #0
 8001c46:	d052      	beq.n	8001cee <rt_mbx_psh+0xde>
 8001c48:	4620      	mov	r0, r4
 8001c4a:	f7ff fcb7 	bl	80015bc <rt_get_first>
 8001c4e:	4629      	mov	r1, r5
 8001c50:	4604      	mov	r4, r0
 8001c52:	f7ff fe53 	bl	80018fc <rt_ret_val>
 8001c56:	2301      	movs	r3, #1
 8001c58:	7063      	strb	r3, [r4, #1]
 8001c5a:	4620      	mov	r0, r4
 8001c5c:	f7ff fd54 	bl	8001708 <rt_rmv_dly>
 8001c60:	4621      	mov	r1, r4
 8001c62:	e022      	b.n	8001caa <rt_mbx_psh+0x9a>
 8001c64:	f7ff fcaa 	bl	80015bc <rt_get_first>
 8001c68:	2100      	movs	r1, #0
 8001c6a:	4605      	mov	r5, r0
 8001c6c:	f7ff fe46 	bl	80018fc <rt_ret_val>
 8001c70:	8923      	ldrh	r3, [r4, #8]
 8001c72:	69e9      	ldr	r1, [r5, #28]
 8001c74:	1d1a      	adds	r2, r3, #4
 8001c76:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8001c7a:	f3ef 8210 	mrs	r2, PRIMASK
 8001c7e:	f3ef 8110 	mrs	r1, PRIMASK
 8001c82:	b672      	cpsid	i
 8001c84:	89a1      	ldrh	r1, [r4, #12]
 8001c86:	3101      	adds	r1, #1
 8001c88:	81a1      	strh	r1, [r4, #12]
 8001c8a:	b902      	cbnz	r2, 8001c8e <rt_mbx_psh+0x7e>
 8001c8c:	b662      	cpsie	i
 8001c8e:	89e2      	ldrh	r2, [r4, #14]
 8001c90:	3301      	adds	r3, #1
 8001c92:	b29b      	uxth	r3, r3
 8001c94:	429a      	cmp	r2, r3
 8001c96:	8123      	strh	r3, [r4, #8]
 8001c98:	bf04      	itt	eq
 8001c9a:	2300      	moveq	r3, #0
 8001c9c:	8123      	strheq	r3, [r4, #8]
 8001c9e:	2301      	movs	r3, #1
 8001ca0:	706b      	strb	r3, [r5, #1]
 8001ca2:	4628      	mov	r0, r5
 8001ca4:	f7ff fd30 	bl	8001708 <rt_rmv_dly>
 8001ca8:	4629      	mov	r1, r5
 8001caa:	4811      	ldr	r0, [pc, #68]	; (8001cf0 <rt_mbx_psh+0xe0>)
 8001cac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001cb0:	f7ff bc6c 	b.w	800158c <rt_put_prio>
 8001cb4:	8980      	ldrh	r0, [r0, #12]
 8001cb6:	89e1      	ldrh	r1, [r4, #14]
 8001cb8:	4288      	cmp	r0, r1
 8001cba:	d213      	bcs.n	8001ce4 <rt_mbx_psh+0xd4>
 8001cbc:	8923      	ldrh	r3, [r4, #8]
 8001cbe:	1d1a      	adds	r2, r3, #4
 8001cc0:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8001cc4:	f3ef 8210 	mrs	r2, PRIMASK
 8001cc8:	f3ef 8510 	mrs	r5, PRIMASK
 8001ccc:	b672      	cpsid	i
 8001cce:	3001      	adds	r0, #1
 8001cd0:	81a0      	strh	r0, [r4, #12]
 8001cd2:	b902      	cbnz	r2, 8001cd6 <rt_mbx_psh+0xc6>
 8001cd4:	b662      	cpsie	i
 8001cd6:	3301      	adds	r3, #1
 8001cd8:	b29b      	uxth	r3, r3
 8001cda:	4299      	cmp	r1, r3
 8001cdc:	bf08      	it	eq
 8001cde:	2300      	moveq	r3, #0
 8001ce0:	8123      	strh	r3, [r4, #8]
 8001ce2:	bd70      	pop	{r4, r5, r6, pc}
 8001ce4:	2003      	movs	r0, #3
 8001ce6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001cea:	f7ff bd6d 	b.w	80017c8 <os_error>
 8001cee:	bd70      	pop	{r4, r5, r6, pc}
 8001cf0:	200016f8 	.word	0x200016f8

08001cf4 <rt_evt_psh>:
 8001cf4:	b510      	push	{r4, lr}
 8001cf6:	8b03      	ldrh	r3, [r0, #24]
 8001cf8:	7842      	ldrb	r2, [r0, #1]
 8001cfa:	4319      	orrs	r1, r3
 8001cfc:	2a06      	cmp	r2, #6
 8001cfe:	4604      	mov	r4, r0
 8001d00:	8301      	strh	r1, [r0, #24]
 8001d02:	8b43      	ldrh	r3, [r0, #26]
 8001d04:	d115      	bne.n	8001d32 <rt_evt_psh+0x3e>
 8001d06:	ea33 0201 	bics.w	r2, r3, r1
 8001d0a:	d119      	bne.n	8001d40 <rt_evt_psh+0x4c>
 8001d0c:	ea21 0103 	bic.w	r1, r1, r3
 8001d10:	8321      	strh	r1, [r4, #24]
 8001d12:	4620      	mov	r0, r4
 8001d14:	f7ff fcf8 	bl	8001708 <rt_rmv_dly>
 8001d18:	2301      	movs	r3, #1
 8001d1a:	4620      	mov	r0, r4
 8001d1c:	7063      	strb	r3, [r4, #1]
 8001d1e:	8b62      	ldrh	r2, [r4, #26]
 8001d20:	2108      	movs	r1, #8
 8001d22:	f7ff fdf4 	bl	800190e <rt_ret_val2>
 8001d26:	4621      	mov	r1, r4
 8001d28:	4806      	ldr	r0, [pc, #24]	; (8001d44 <rt_evt_psh+0x50>)
 8001d2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d2e:	f7ff bc2d 	b.w	800158c <rt_put_prio>
 8001d32:	2a05      	cmp	r2, #5
 8001d34:	d104      	bne.n	8001d40 <rt_evt_psh+0x4c>
 8001d36:	ea11 0203 	ands.w	r2, r1, r3
 8001d3a:	d001      	beq.n	8001d40 <rt_evt_psh+0x4c>
 8001d3c:	8342      	strh	r2, [r0, #26]
 8001d3e:	e7e5      	b.n	8001d0c <rt_evt_psh+0x18>
 8001d40:	bd10      	pop	{r4, pc}
 8001d42:	bf00      	nop
 8001d44:	200016f8 	.word	0x200016f8

08001d48 <rt_init_robin>:
 8001d48:	4b03      	ldr	r3, [pc, #12]	; (8001d58 <rt_init_robin+0x10>)
 8001d4a:	2200      	movs	r2, #0
 8001d4c:	601a      	str	r2, [r3, #0]
 8001d4e:	4a03      	ldr	r2, [pc, #12]	; (8001d5c <rt_init_robin+0x14>)
 8001d50:	6812      	ldr	r2, [r2, #0]
 8001d52:	80da      	strh	r2, [r3, #6]
 8001d54:	4770      	bx	lr
 8001d56:	bf00      	nop
 8001d58:	200020f8 	.word	0x200020f8
 8001d5c:	080064b4 	.word	0x080064b4

08001d60 <rt_chk_robin>:
 8001d60:	b508      	push	{r3, lr}
 8001d62:	4b0e      	ldr	r3, [pc, #56]	; (8001d9c <rt_chk_robin+0x3c>)
 8001d64:	685a      	ldr	r2, [r3, #4]
 8001d66:	4b0e      	ldr	r3, [pc, #56]	; (8001da0 <rt_chk_robin+0x40>)
 8001d68:	6819      	ldr	r1, [r3, #0]
 8001d6a:	4291      	cmp	r1, r2
 8001d6c:	490d      	ldr	r1, [pc, #52]	; (8001da4 <rt_chk_robin+0x44>)
 8001d6e:	d005      	beq.n	8001d7c <rt_chk_robin+0x1c>
 8001d70:	601a      	str	r2, [r3, #0]
 8001d72:	88da      	ldrh	r2, [r3, #6]
 8001d74:	6808      	ldr	r0, [r1, #0]
 8001d76:	3a01      	subs	r2, #1
 8001d78:	4402      	add	r2, r0
 8001d7a:	809a      	strh	r2, [r3, #4]
 8001d7c:	8898      	ldrh	r0, [r3, #4]
 8001d7e:	880a      	ldrh	r2, [r1, #0]
 8001d80:	4290      	cmp	r0, r2
 8001d82:	d10a      	bne.n	8001d9a <rt_chk_robin+0x3a>
 8001d84:	2200      	movs	r2, #0
 8001d86:	4805      	ldr	r0, [pc, #20]	; (8001d9c <rt_chk_robin+0x3c>)
 8001d88:	601a      	str	r2, [r3, #0]
 8001d8a:	f7ff fc17 	bl	80015bc <rt_get_first>
 8001d8e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001d92:	4601      	mov	r1, r0
 8001d94:	4801      	ldr	r0, [pc, #4]	; (8001d9c <rt_chk_robin+0x3c>)
 8001d96:	f7ff bbf9 	b.w	800158c <rt_put_prio>
 8001d9a:	bd08      	pop	{r3, pc}
 8001d9c:	200016f8 	.word	0x200016f8
 8001da0:	200020f8 	.word	0x200020f8
 8001da4:	20002154 	.word	0x20002154

08001da8 <rt_timer_insert>:
 8001da8:	4a0b      	ldr	r2, [pc, #44]	; (8001dd8 <rt_timer_insert+0x30>)
 8001daa:	6813      	ldr	r3, [r2, #0]
 8001dac:	b530      	push	{r4, r5, lr}
 8001dae:	2400      	movs	r4, #0
 8001db0:	b943      	cbnz	r3, 8001dc4 <rt_timer_insert+0x1c>
 8001db2:	6003      	str	r3, [r0, #0]
 8001db4:	6081      	str	r1, [r0, #8]
 8001db6:	b113      	cbz	r3, 8001dbe <rt_timer_insert+0x16>
 8001db8:	689d      	ldr	r5, [r3, #8]
 8001dba:	1a69      	subs	r1, r5, r1
 8001dbc:	6099      	str	r1, [r3, #8]
 8001dbe:	b144      	cbz	r4, 8001dd2 <rt_timer_insert+0x2a>
 8001dc0:	6020      	str	r0, [r4, #0]
 8001dc2:	bd30      	pop	{r4, r5, pc}
 8001dc4:	689d      	ldr	r5, [r3, #8]
 8001dc6:	42a9      	cmp	r1, r5
 8001dc8:	d3f3      	bcc.n	8001db2 <rt_timer_insert+0xa>
 8001dca:	461c      	mov	r4, r3
 8001dcc:	1b49      	subs	r1, r1, r5
 8001dce:	681b      	ldr	r3, [r3, #0]
 8001dd0:	e7ee      	b.n	8001db0 <rt_timer_insert+0x8>
 8001dd2:	6010      	str	r0, [r2, #0]
 8001dd4:	bd30      	pop	{r4, r5, pc}
 8001dd6:	bf00      	nop
 8001dd8:	20002108 	.word	0x20002108

08001ddc <rt_ms2tick>:
 8001ddc:	b1c0      	cbz	r0, 8001e10 <rt_ms2tick+0x34>
 8001dde:	1c43      	adds	r3, r0, #1
 8001de0:	d011      	beq.n	8001e06 <rt_ms2tick+0x2a>
 8001de2:	4b0c      	ldr	r3, [pc, #48]	; (8001e14 <rt_ms2tick+0x38>)
 8001de4:	4298      	cmp	r0, r3
 8001de6:	d811      	bhi.n	8001e0c <rt_ms2tick+0x30>
 8001de8:	4b0b      	ldr	r3, [pc, #44]	; (8001e18 <rt_ms2tick+0x3c>)
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001df0:	1e5a      	subs	r2, r3, #1
 8001df2:	fb01 2000 	mla	r0, r1, r0, r2
 8001df6:	fbb0 f3f3 	udiv	r3, r0, r3
 8001dfa:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001dfe:	4283      	cmp	r3, r0
 8001e00:	d806      	bhi.n	8001e10 <rt_ms2tick+0x34>
 8001e02:	b298      	uxth	r0, r3
 8001e04:	4770      	bx	lr
 8001e06:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001e0a:	4770      	bx	lr
 8001e0c:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001e10:	4770      	bx	lr
 8001e12:	bf00      	nop
 8001e14:	003d0900 	.word	0x003d0900
 8001e18:	0800646c 	.word	0x0800646c

08001e1c <rt_tid2ptcb>:
 8001e1c:	b138      	cbz	r0, 8001e2e <rt_tid2ptcb+0x12>
 8001e1e:	0783      	lsls	r3, r0, #30
 8001e20:	d104      	bne.n	8001e2c <rt_tid2ptcb+0x10>
 8001e22:	7803      	ldrb	r3, [r0, #0]
 8001e24:	2b00      	cmp	r3, #0
 8001e26:	bf18      	it	ne
 8001e28:	2000      	movne	r0, #0
 8001e2a:	4770      	bx	lr
 8001e2c:	2000      	movs	r0, #0
 8001e2e:	4770      	bx	lr

08001e30 <svcKernelStart>:
 8001e30:	b5b0      	push	{r4, r5, r7, lr}
 8001e32:	4d0e      	ldr	r5, [pc, #56]	; (8001e6c <svcKernelStart+0x3c>)
 8001e34:	7828      	ldrb	r0, [r5, #0]
 8001e36:	af00      	add	r7, sp, #0
 8001e38:	b9a8      	cbnz	r0, 8001e66 <svcKernelStart+0x36>
 8001e3a:	4c0d      	ldr	r4, [pc, #52]	; (8001e70 <svcKernelStart+0x40>)
 8001e3c:	6823      	ldr	r3, [r4, #0]
 8001e3e:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 8001e42:	f000 fb51 	bl	80024e8 <rt_tsk_prio>
 8001e46:	6823      	ldr	r3, [r4, #0]
 8001e48:	78da      	ldrb	r2, [r3, #3]
 8001e4a:	2aff      	cmp	r2, #255	; 0xff
 8001e4c:	d103      	bne.n	8001e56 <svcKernelStart+0x26>
 8001e4e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001e50:	3220      	adds	r2, #32
 8001e52:	f382 8809 	msr	PSP, r2
 8001e56:	6862      	ldr	r2, [r4, #4]
 8001e58:	b90a      	cbnz	r2, 8001e5e <svcKernelStart+0x2e>
 8001e5a:	e884 000c 	stmia.w	r4, {r2, r3}
 8001e5e:	f000 fcfb 	bl	8002858 <rt_sys_start>
 8001e62:	2301      	movs	r3, #1
 8001e64:	702b      	strb	r3, [r5, #0]
 8001e66:	2000      	movs	r0, #0
 8001e68:	bdb0      	pop	{r4, r5, r7, pc}
 8001e6a:	bf00      	nop
 8001e6c:	20002105 	.word	0x20002105
 8001e70:	2000210c 	.word	0x2000210c

08001e74 <svcKernelRunning>:
 8001e74:	4b01      	ldr	r3, [pc, #4]	; (8001e7c <svcKernelRunning+0x8>)
 8001e76:	7818      	ldrb	r0, [r3, #0]
 8001e78:	4770      	bx	lr
 8001e7a:	bf00      	nop
 8001e7c:	20002105 	.word	0x20002105

08001e80 <osKernelRunning>:
 8001e80:	b510      	push	{r4, lr}
 8001e82:	f3ef 8410 	mrs	r4, PRIMASK
 8001e86:	b934      	cbnz	r4, 8001e96 <osKernelRunning+0x16>
 8001e88:	f3ef 8405 	mrs	r4, IPSR
 8001e8c:	b91c      	cbnz	r4, 8001e96 <osKernelRunning+0x16>
 8001e8e:	f3ef 8414 	mrs	r4, CONTROL
 8001e92:	07e4      	lsls	r4, r4, #31
 8001e94:	d402      	bmi.n	8001e9c <osKernelRunning+0x1c>
 8001e96:	4b03      	ldr	r3, [pc, #12]	; (8001ea4 <osKernelRunning+0x24>)
 8001e98:	7818      	ldrb	r0, [r3, #0]
 8001e9a:	bd10      	pop	{r4, pc}
 8001e9c:	f8df c008 	ldr.w	r12, [pc, #8]	; 8001ea8 <osKernelRunning+0x28>
 8001ea0:	df00      	svc	0
 8001ea2:	bd10      	pop	{r4, pc}
 8001ea4:	20002105 	.word	0x20002105
 8001ea8:	08001e75 	.word	0x08001e75

08001eac <osKernelStart>:
 8001eac:	b590      	push	{r4, r7, lr}
 8001eae:	b089      	sub	sp, #36	; 0x24
 8001eb0:	af00      	add	r7, sp, #0
 8001eb2:	f3ef 8310 	mrs	r3, PRIMASK
 8001eb6:	2b00      	cmp	r3, #0
 8001eb8:	d137      	bne.n	8001f2a <osKernelStart+0x7e>
 8001eba:	f3ef 8305 	mrs	r3, IPSR
 8001ebe:	2b00      	cmp	r3, #0
 8001ec0:	d133      	bne.n	8001f2a <osKernelStart+0x7e>
 8001ec2:	f7ff ffdd 	bl	8001e80 <osKernelRunning>
 8001ec6:	b928      	cbnz	r0, 8001ed4 <osKernelStart+0x28>
 8001ec8:	4c19      	ldr	r4, [pc, #100]	; (8001f30 <osKernelStart+0x84>)
 8001eca:	6824      	ldr	r4, [r4, #0]
 8001ecc:	b114      	cbz	r4, 8001ed4 <osKernelStart+0x28>
 8001ece:	6864      	ldr	r4, [r4, #4]
 8001ed0:	b104      	cbz	r4, 8001ed4 <osKernelStart+0x28>
 8001ed2:	47a0      	blx	r4
 8001ed4:	f3ef 8414 	mrs	r4, CONTROL
 8001ed8:	f004 0403 	and.w	r4, r4, #3
 8001edc:	2c02      	cmp	r4, #2
 8001ede:	d018      	beq.n	8001f12 <osKernelStart+0x66>
 8001ee0:	2c03      	cmp	r4, #3
 8001ee2:	d01c      	beq.n	8001f1e <osKernelStart+0x72>
 8001ee4:	2c01      	cmp	r4, #1
 8001ee6:	d01e      	beq.n	8001f26 <osKernelStart+0x7a>
 8001ee8:	f107 0420 	add.w	r4, r7, #32
 8001eec:	f384 8809 	msr	PSP, r4
 8001ef0:	4c10      	ldr	r4, [pc, #64]	; (8001f34 <osKernelStart+0x88>)
 8001ef2:	7824      	ldrb	r4, [r4, #0]
 8001ef4:	07e4      	lsls	r4, r4, #31
 8001ef6:	d510      	bpl.n	8001f1a <osKernelStart+0x6e>
 8001ef8:	2402      	movs	r4, #2
 8001efa:	f384 8814 	msr	CONTROL, r4
 8001efe:	f3bf 8f4f 	dsb	sy
 8001f02:	f3bf 8f6f 	isb	sy
 8001f06:	f8df c030 	ldr.w	r12, [pc, #48]	; 8001f38 <osKernelStart+0x8c>
 8001f0a:	df00      	svc	0
 8001f0c:	3724      	adds	r7, #36	; 0x24
 8001f0e:	46bd      	mov	sp, r7
 8001f10:	bd90      	pop	{r4, r7, pc}
 8001f12:	4c08      	ldr	r4, [pc, #32]	; (8001f34 <osKernelStart+0x88>)
 8001f14:	7824      	ldrb	r4, [r4, #0]
 8001f16:	07e4      	lsls	r4, r4, #31
 8001f18:	d4f5      	bmi.n	8001f06 <osKernelStart+0x5a>
 8001f1a:	2403      	movs	r4, #3
 8001f1c:	e7ed      	b.n	8001efa <osKernelStart+0x4e>
 8001f1e:	4c05      	ldr	r4, [pc, #20]	; (8001f34 <osKernelStart+0x88>)
 8001f20:	7824      	ldrb	r4, [r4, #0]
 8001f22:	07e4      	lsls	r4, r4, #31
 8001f24:	d5ef      	bpl.n	8001f06 <osKernelStart+0x5a>
 8001f26:	20ff      	movs	r0, #255	; 0xff
 8001f28:	e7f0      	b.n	8001f0c <osKernelStart+0x60>
 8001f2a:	2082      	movs	r0, #130	; 0x82
 8001f2c:	e7ee      	b.n	8001f0c <osKernelStart+0x60>
 8001f2e:	bf00      	nop
 8001f30:	200020f4 	.word	0x200020f4
 8001f34:	0800649a 	.word	0x0800649a
 8001f38:	08001e31 	.word	0x08001e31

08001f3c <svcThreadCreate>:
 8001f3c:	b570      	push	{r4, r5, r6, lr}
 8001f3e:	460b      	mov	r3, r1
 8001f40:	4616      	mov	r6, r2
 8001f42:	4602      	mov	r2, r0
 8001f44:	b910      	cbnz	r0, 8001f4c <svcThreadCreate+0x10>
 8001f46:	2400      	movs	r4, #0
 8001f48:	4620      	mov	r0, r4
 8001f4a:	bd70      	pop	{r4, r5, r6, pc}
 8001f4c:	6800      	ldr	r0, [r0, #0]
 8001f4e:	2800      	cmp	r0, #0
 8001f50:	d0f9      	beq.n	8001f46 <svcThreadCreate+0xa>
 8001f52:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 8001f56:	1ce5      	adds	r5, r4, #3
 8001f58:	b2ad      	uxth	r5, r5
 8001f5a:	2d06      	cmp	r5, #6
 8001f5c:	d8f3      	bhi.n	8001f46 <svcThreadCreate+0xa>
 8001f5e:	68d1      	ldr	r1, [r2, #12]
 8001f60:	b1c1      	cbz	r1, 8001f94 <svcThreadCreate+0x58>
 8001f62:	6912      	ldr	r2, [r2, #16]
 8001f64:	3404      	adds	r4, #4
 8001f66:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 8001f6a:	f000 fafb 	bl	8002564 <rt_tsk_create>
 8001f6e:	2800      	cmp	r0, #0
 8001f70:	d0e9      	beq.n	8001f46 <svcThreadCreate+0xa>
 8001f72:	4b0a      	ldr	r3, [pc, #40]	; (8001f9c <svcThreadCreate+0x60>)
 8001f74:	4a0a      	ldr	r2, [pc, #40]	; (8001fa0 <svcThreadCreate+0x64>)
 8001f76:	3801      	subs	r0, #1
 8001f78:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8001f7c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001f7e:	635a      	str	r2, [r3, #52]	; 0x34
 8001f80:	4b08      	ldr	r3, [pc, #32]	; (8001fa4 <svcThreadCreate+0x68>)
 8001f82:	681b      	ldr	r3, [r3, #0]
 8001f84:	b143      	cbz	r3, 8001f98 <svcThreadCreate+0x5c>
 8001f86:	689b      	ldr	r3, [r3, #8]
 8001f88:	b133      	cbz	r3, 8001f98 <svcThreadCreate+0x5c>
 8001f8a:	4631      	mov	r1, r6
 8001f8c:	78e0      	ldrb	r0, [r4, #3]
 8001f8e:	4798      	blx	r3
 8001f90:	63e0      	str	r0, [r4, #60]	; 0x3c
 8001f92:	e7d9      	b.n	8001f48 <svcThreadCreate+0xc>
 8001f94:	460a      	mov	r2, r1
 8001f96:	e7e5      	b.n	8001f64 <svcThreadCreate+0x28>
 8001f98:	63e6      	str	r6, [r4, #60]	; 0x3c
 8001f9a:	e7d5      	b.n	8001f48 <svcThreadCreate+0xc>
 8001f9c:	20001ad8 	.word	0x20001ad8
 8001fa0:	08002129 	.word	0x08002129
 8001fa4:	200020f4 	.word	0x200020f4

08001fa8 <svcThreadGetId>:
 8001fa8:	b508      	push	{r3, lr}
 8001faa:	f000 fa95 	bl	80024d8 <rt_tsk_self>
 8001fae:	b118      	cbz	r0, 8001fb8 <svcThreadGetId+0x10>
 8001fb0:	3801      	subs	r0, #1
 8001fb2:	4b02      	ldr	r3, [pc, #8]	; (8001fbc <svcThreadGetId+0x14>)
 8001fb4:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8001fb8:	bd08      	pop	{r3, pc}
 8001fba:	bf00      	nop
 8001fbc:	20001ad8 	.word	0x20001ad8

08001fc0 <svcThreadTerminate>:
 8001fc0:	b510      	push	{r4, lr}
 8001fc2:	f7ff ff2b 	bl	8001e1c <rt_tid2ptcb>
 8001fc6:	4604      	mov	r4, r0
 8001fc8:	b170      	cbz	r0, 8001fe8 <svcThreadTerminate+0x28>
 8001fca:	4b08      	ldr	r3, [pc, #32]	; (8001fec <svcThreadTerminate+0x2c>)
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	b11b      	cbz	r3, 8001fd8 <svcThreadTerminate+0x18>
 8001fd0:	68db      	ldr	r3, [r3, #12]
 8001fd2:	b10b      	cbz	r3, 8001fd8 <svcThreadTerminate+0x18>
 8001fd4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8001fd6:	4798      	blx	r3
 8001fd8:	78e0      	ldrb	r0, [r4, #3]
 8001fda:	f000 fb19 	bl	8002610 <rt_tsk_delete>
 8001fde:	28ff      	cmp	r0, #255	; 0xff
 8001fe0:	bf0c      	ite	eq
 8001fe2:	2081      	moveq	r0, #129	; 0x81
 8001fe4:	2000      	movne	r0, #0
 8001fe6:	bd10      	pop	{r4, pc}
 8001fe8:	2080      	movs	r0, #128	; 0x80
 8001fea:	bd10      	pop	{r4, pc}
 8001fec:	200020f4 	.word	0x200020f4

08001ff0 <svcDelay>:
 8001ff0:	b508      	push	{r3, lr}
 8001ff2:	b128      	cbz	r0, 8002000 <svcDelay+0x10>
 8001ff4:	f7ff fef2 	bl	8001ddc <rt_ms2tick>
 8001ff8:	f000 fd1a 	bl	8002a30 <rt_dly_wait>
 8001ffc:	2040      	movs	r0, #64	; 0x40
 8001ffe:	bd08      	pop	{r3, pc}
 8002000:	bd08      	pop	{r3, pc}
	...

08002004 <osDelay>:
 8002004:	b510      	push	{r4, lr}
 8002006:	f3ef 8410 	mrs	r4, PRIMASK
 800200a:	b934      	cbnz	r4, 800201a <osDelay+0x16>
 800200c:	f3ef 8405 	mrs	r4, IPSR
 8002010:	b91c      	cbnz	r4, 800201a <osDelay+0x16>
 8002012:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002020 <osDelay+0x1c>
 8002016:	df00      	svc	0
 8002018:	bd10      	pop	{r4, pc}
 800201a:	2082      	movs	r0, #130	; 0x82
 800201c:	bd10      	pop	{r4, pc}
 800201e:	0000      	.short	0x0000
 8002020:	08001ff1 	.word	0x08001ff1

08002024 <svcTimerCall>:
 8002024:	0783      	lsls	r3, r0, #30
 8002026:	d105      	bne.n	8002034 <svcTimerCall+0x10>
 8002028:	b138      	cbz	r0, 800203a <svcTimerCall+0x16>
 800202a:	6943      	ldr	r3, [r0, #20]
 800202c:	6901      	ldr	r1, [r0, #16]
 800202e:	681b      	ldr	r3, [r3, #0]
 8002030:	4618      	mov	r0, r3
 8002032:	4770      	bx	lr
 8002034:	2300      	movs	r3, #0
 8002036:	4619      	mov	r1, r3
 8002038:	e7fa      	b.n	8002030 <svcTimerCall+0xc>
 800203a:	4603      	mov	r3, r0
 800203c:	e7fb      	b.n	8002036 <svcTimerCall+0x12>
	...

08002040 <osTimerCall>:
 8002040:	b510      	push	{r4, lr}
 8002042:	4604      	mov	r4, r0
 8002044:	4608      	mov	r0, r1
 8002046:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002054 <osTimerCall+0x14>
 800204a:	df00      	svc	0
 800204c:	e884 0003 	stmia.w	r4, {r0, r1}
 8002050:	4620      	mov	r0, r4
 8002052:	bd10      	pop	{r4, pc}
 8002054:	08002025 	.word	0x08002025

08002058 <svcMutexCreate>:
 8002058:	b510      	push	{r4, lr}
 800205a:	b148      	cbz	r0, 8002070 <svcMutexCreate+0x18>
 800205c:	6804      	ldr	r4, [r0, #0]
 800205e:	b124      	cbz	r4, 800206a <svcMutexCreate+0x12>
 8002060:	7823      	ldrb	r3, [r4, #0]
 8002062:	b923      	cbnz	r3, 800206e <svcMutexCreate+0x16>
 8002064:	4620      	mov	r0, r4
 8002066:	f000 fc3d 	bl	80028e4 <rt_mut_init>
 800206a:	4620      	mov	r0, r4
 800206c:	bd10      	pop	{r4, pc}
 800206e:	2000      	movs	r0, #0
 8002070:	bd10      	pop	{r4, pc}

08002072 <svcMutexWait>:
 8002072:	b570      	push	{r4, r5, r6, lr}
 8002074:	f010 0403 	ands.w	r4, r0, #3
 8002078:	4605      	mov	r5, r0
 800207a:	460e      	mov	r6, r1
 800207c:	d111      	bne.n	80020a2 <svcMutexWait+0x30>
 800207e:	b180      	cbz	r0, 80020a2 <svcMutexWait+0x30>
 8002080:	7803      	ldrb	r3, [r0, #0]
 8002082:	2b03      	cmp	r3, #3
 8002084:	d10d      	bne.n	80020a2 <svcMutexWait+0x30>
 8002086:	4608      	mov	r0, r1
 8002088:	f7ff fea8 	bl	8001ddc <rt_ms2tick>
 800208c:	4601      	mov	r1, r0
 800208e:	4628      	mov	r0, r5
 8002090:	f000 fca0 	bl	80029d4 <rt_mut_wait>
 8002094:	2801      	cmp	r0, #1
 8002096:	d106      	bne.n	80020a6 <svcMutexWait+0x34>
 8002098:	2e00      	cmp	r6, #0
 800209a:	bf14      	ite	ne
 800209c:	20c1      	movne	r0, #193	; 0xc1
 800209e:	2081      	moveq	r0, #129	; 0x81
 80020a0:	bd70      	pop	{r4, r5, r6, pc}
 80020a2:	2080      	movs	r0, #128	; 0x80
 80020a4:	bd70      	pop	{r4, r5, r6, pc}
 80020a6:	4620      	mov	r0, r4
 80020a8:	bd70      	pop	{r4, r5, r6, pc}

080020aa <svcMutexRelease>:
 80020aa:	0782      	lsls	r2, r0, #30
 80020ac:	b508      	push	{r3, lr}
 80020ae:	d10a      	bne.n	80020c6 <svcMutexRelease+0x1c>
 80020b0:	b148      	cbz	r0, 80020c6 <svcMutexRelease+0x1c>
 80020b2:	7803      	ldrb	r3, [r0, #0]
 80020b4:	2b03      	cmp	r3, #3
 80020b6:	d106      	bne.n	80020c6 <svcMutexRelease+0x1c>
 80020b8:	f000 fc1c 	bl	80028f4 <rt_mut_release>
 80020bc:	28ff      	cmp	r0, #255	; 0xff
 80020be:	bf0c      	ite	eq
 80020c0:	2081      	moveq	r0, #129	; 0x81
 80020c2:	2000      	movne	r0, #0
 80020c4:	bd08      	pop	{r3, pc}
 80020c6:	2080      	movs	r0, #128	; 0x80
 80020c8:	bd08      	pop	{r3, pc}
	...

080020cc <osMutexCreate>:
 80020cc:	b570      	push	{r4, r5, r6, lr}
 80020ce:	4605      	mov	r5, r0
 80020d0:	f3ef 8410 	mrs	r4, PRIMASK
 80020d4:	b994      	cbnz	r4, 80020fc <osMutexCreate+0x30>
 80020d6:	f3ef 8605 	mrs	r6, IPSR
 80020da:	b97e      	cbnz	r6, 80020fc <osMutexCreate+0x30>
 80020dc:	f3ef 8414 	mrs	r4, CONTROL
 80020e0:	07e4      	lsls	r4, r4, #31
 80020e2:	d406      	bmi.n	80020f2 <osMutexCreate+0x26>
 80020e4:	4c06      	ldr	r4, [pc, #24]	; (8002100 <osMutexCreate+0x34>)
 80020e6:	7824      	ldrb	r4, [r4, #0]
 80020e8:	b91c      	cbnz	r4, 80020f2 <osMutexCreate+0x26>
 80020ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80020ee:	f7ff bfb3 	b.w	8002058 <svcMutexCreate>
 80020f2:	4628      	mov	r0, r5
 80020f4:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002104 <osMutexCreate+0x38>
 80020f8:	df00      	svc	0
 80020fa:	bd70      	pop	{r4, r5, r6, pc}
 80020fc:	2000      	movs	r0, #0
 80020fe:	bd70      	pop	{r4, r5, r6, pc}
 8002100:	20002105 	.word	0x20002105
 8002104:	08002059 	.word	0x08002059

08002108 <osMutexWait>:
 8002108:	b510      	push	{r4, lr}
 800210a:	f3ef 8410 	mrs	r4, PRIMASK
 800210e:	b934      	cbnz	r4, 800211e <osMutexWait+0x16>
 8002110:	f3ef 8405 	mrs	r4, IPSR
 8002114:	b91c      	cbnz	r4, 800211e <osMutexWait+0x16>
 8002116:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002124 <osMutexWait+0x1c>
 800211a:	df00      	svc	0
 800211c:	bd10      	pop	{r4, pc}
 800211e:	2082      	movs	r0, #130	; 0x82
 8002120:	bd10      	pop	{r4, pc}
 8002122:	0000      	.short	0x0000
 8002124:	08002073 	.word	0x08002073

08002128 <osThreadExit>:
 8002128:	4808      	ldr	r0, [pc, #32]	; (800214c <osThreadExit+0x24>)
 800212a:	b508      	push	{r3, lr}
 800212c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002130:	6800      	ldr	r0, [r0, #0]
 8002132:	f7ff ffe9 	bl	8002108 <osMutexWait>
 8002136:	f8df c018 	ldr.w	r12, [pc, #24]	; 8002150 <osThreadExit+0x28>
 800213a:	df00      	svc	0
 800213c:	4604      	mov	r4, r0
 800213e:	f7ff fb51 	bl	80017e4 <sysThreadTerminate>
 8002142:	4620      	mov	r0, r4
 8002144:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002154 <osThreadExit+0x2c>
 8002148:	df00      	svc	0
 800214a:	e7fe      	b.n	800214a <osThreadExit+0x22>
 800214c:	20002100 	.word	0x20002100
 8002150:	08001fa9 	.word	0x08001fa9
 8002154:	08001fc1 	.word	0x08001fc1

08002158 <osMutexRelease>:
 8002158:	b510      	push	{r4, lr}
 800215a:	f3ef 8410 	mrs	r4, PRIMASK
 800215e:	b934      	cbnz	r4, 800216e <osMutexRelease+0x16>
 8002160:	f3ef 8405 	mrs	r4, IPSR
 8002164:	b91c      	cbnz	r4, 800216e <osMutexRelease+0x16>
 8002166:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002174 <osMutexRelease+0x1c>
 800216a:	df00      	svc	0
 800216c:	bd10      	pop	{r4, pc}
 800216e:	2082      	movs	r0, #130	; 0x82
 8002170:	bd10      	pop	{r4, pc}
 8002172:	0000      	.short	0x0000
 8002174:	080020ab 	.word	0x080020ab

08002178 <osThreadContextCreate>:
 8002178:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800217c:	4680      	mov	r8, r0
 800217e:	460f      	mov	r7, r1
 8002180:	4616      	mov	r6, r2
 8002182:	f3ef 8410 	mrs	r4, PRIMASK
 8002186:	bb04      	cbnz	r4, 80021ca <osThreadContextCreate+0x52>
 8002188:	f3ef 8305 	mrs	r3, IPSR
 800218c:	b9d3      	cbnz	r3, 80021c4 <osThreadContextCreate+0x4c>
 800218e:	f3ef 8314 	mrs	r3, CONTROL
 8002192:	07db      	lsls	r3, r3, #31
 8002194:	d406      	bmi.n	80021a4 <osThreadContextCreate+0x2c>
 8002196:	4b0e      	ldr	r3, [pc, #56]	; (80021d0 <osThreadContextCreate+0x58>)
 8002198:	781b      	ldrb	r3, [r3, #0]
 800219a:	b91b      	cbnz	r3, 80021a4 <osThreadContextCreate+0x2c>
 800219c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80021a0:	f7ff becc 	b.w	8001f3c <svcThreadCreate>
 80021a4:	4d0b      	ldr	r5, [pc, #44]	; (80021d4 <osThreadContextCreate+0x5c>)
 80021a6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80021aa:	6828      	ldr	r0, [r5, #0]
 80021ac:	f7ff ffac 	bl	8002108 <osMutexWait>
 80021b0:	4640      	mov	r0, r8
 80021b2:	4639      	mov	r1, r7
 80021b4:	4632      	mov	r2, r6
 80021b6:	f8df c020 	ldr.w	r12, [pc, #32]	; 80021d8 <osThreadContextCreate+0x60>
 80021ba:	df00      	svc	0
 80021bc:	4604      	mov	r4, r0
 80021be:	6828      	ldr	r0, [r5, #0]
 80021c0:	f7ff ffca 	bl	8002158 <osMutexRelease>
 80021c4:	4620      	mov	r0, r4
 80021c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80021ca:	2400      	movs	r4, #0
 80021cc:	e7fa      	b.n	80021c4 <osThreadContextCreate+0x4c>
 80021ce:	bf00      	nop
 80021d0:	20002105 	.word	0x20002105
 80021d4:	20002100 	.word	0x20002100
 80021d8:	08001f3d 	.word	0x08001f3d

080021dc <osThreadCreate>:
 80021dc:	2200      	movs	r2, #0
 80021de:	f7ff bfcb 	b.w	8002178 <osThreadContextCreate>

080021e2 <svcMessageCreate>:
 80021e2:	b510      	push	{r4, lr}
 80021e4:	4604      	mov	r4, r0
 80021e6:	b160      	cbz	r0, 8002202 <svcMessageCreate+0x20>
 80021e8:	6801      	ldr	r1, [r0, #0]
 80021ea:	b151      	cbz	r1, 8002202 <svcMessageCreate+0x20>
 80021ec:	6840      	ldr	r0, [r0, #4]
 80021ee:	b148      	cbz	r0, 8002204 <svcMessageCreate+0x22>
 80021f0:	7803      	ldrb	r3, [r0, #0]
 80021f2:	b933      	cbnz	r3, 8002202 <svcMessageCreate+0x20>
 80021f4:	3104      	adds	r1, #4
 80021f6:	0089      	lsls	r1, r1, #2
 80021f8:	b289      	uxth	r1, r1
 80021fa:	f7ff fc71 	bl	8001ae0 <rt_mbx_init>
 80021fe:	6860      	ldr	r0, [r4, #4]
 8002200:	bd10      	pop	{r4, pc}
 8002202:	2000      	movs	r0, #0
 8002204:	bd10      	pop	{r4, pc}
	...

08002208 <svcKernelInitialize>:
 8002208:	b538      	push	{r3, r4, r5, lr}
 800220a:	4c11      	ldr	r4, [pc, #68]	; (8002250 <svcKernelInitialize+0x48>)
 800220c:	7823      	ldrb	r3, [r4, #0]
 800220e:	b90b      	cbnz	r3, 8002214 <svcKernelInitialize+0xc>
 8002210:	f000 faa8 	bl	8002764 <rt_sys_init>
 8002214:	4b0f      	ldr	r3, [pc, #60]	; (8002254 <svcKernelInitialize+0x4c>)
 8002216:	7825      	ldrb	r5, [r4, #0]
 8002218:	681b      	ldr	r3, [r3, #0]
 800221a:	22ff      	movs	r2, #255	; 0xff
 800221c:	709a      	strb	r2, [r3, #2]
 800221e:	b98d      	cbnz	r5, 8002244 <svcKernelInitialize+0x3c>
 8002220:	4629      	mov	r1, r5
 8002222:	480d      	ldr	r0, [pc, #52]	; (8002258 <svcKernelInitialize+0x50>)
 8002224:	f7ff ffdd 	bl	80021e2 <svcMessageCreate>
 8002228:	4b0c      	ldr	r3, [pc, #48]	; (800225c <svcKernelInitialize+0x54>)
 800222a:	462a      	mov	r2, r5
 800222c:	6018      	str	r0, [r3, #0]
 800222e:	4629      	mov	r1, r5
 8002230:	480b      	ldr	r0, [pc, #44]	; (8002260 <svcKernelInitialize+0x58>)
 8002232:	f7ff fe83 	bl	8001f3c <svcThreadCreate>
 8002236:	4b0b      	ldr	r3, [pc, #44]	; (8002264 <svcKernelInitialize+0x5c>)
 8002238:	6018      	str	r0, [r3, #0]
 800223a:	480b      	ldr	r0, [pc, #44]	; (8002268 <svcKernelInitialize+0x60>)
 800223c:	f7ff ff46 	bl	80020cc <osMutexCreate>
 8002240:	4b0a      	ldr	r3, [pc, #40]	; (800226c <svcKernelInitialize+0x64>)
 8002242:	6018      	str	r0, [r3, #0]
 8002244:	2301      	movs	r3, #1
 8002246:	7023      	strb	r3, [r4, #0]
 8002248:	4b09      	ldr	r3, [pc, #36]	; (8002270 <svcKernelInitialize+0x68>)
 800224a:	2000      	movs	r0, #0
 800224c:	7018      	strb	r0, [r3, #0]
 800224e:	bd38      	pop	{r3, r4, r5, pc}
 8002250:	20002104 	.word	0x20002104
 8002254:	2000210c 	.word	0x2000210c
 8002258:	080064a0 	.word	0x080064a0
 800225c:	200017b4 	.word	0x200017b4
 8002260:	080064bc 	.word	0x080064bc
 8002264:	200017ac 	.word	0x200017ac
 8002268:	080064d4 	.word	0x080064d4
 800226c:	20002100 	.word	0x20002100
 8002270:	20002105 	.word	0x20002105

08002274 <osKernelInitialize>:
 8002274:	b510      	push	{r4, lr}
 8002276:	f3ef 8410 	mrs	r4, PRIMASK
 800227a:	b974      	cbnz	r4, 800229a <osKernelInitialize+0x26>
 800227c:	f3ef 8405 	mrs	r4, IPSR
 8002280:	b95c      	cbnz	r4, 800229a <osKernelInitialize+0x26>
 8002282:	f3ef 8414 	mrs	r4, CONTROL
 8002286:	07e4      	lsls	r4, r4, #31
 8002288:	d403      	bmi.n	8002292 <osKernelInitialize+0x1e>
 800228a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800228e:	f7ff bfbb 	b.w	8002208 <svcKernelInitialize>
 8002292:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80022a0 <osKernelInitialize+0x2c>
 8002296:	df00      	svc	0
 8002298:	bd10      	pop	{r4, pc}
 800229a:	2082      	movs	r0, #130	; 0x82
 800229c:	bd10      	pop	{r4, pc}
 800229e:	0000      	.short	0x0000
 80022a0:	08002209 	.word	0x08002209

080022a4 <svcMessageGet>:
 80022a4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80022a8:	460c      	mov	r4, r1
 80022aa:	4680      	mov	r8, r0
 80022ac:	b318      	cbz	r0, 80022f6 <svcMessageGet+0x52>
 80022ae:	7803      	ldrb	r3, [r0, #0]
 80022b0:	2b01      	cmp	r3, #1
 80022b2:	d125      	bne.n	8002300 <svcMessageGet+0x5c>
 80022b4:	4608      	mov	r0, r1
 80022b6:	f7ff fd91 	bl	8001ddc <rt_ms2tick>
 80022ba:	a902      	add	r1, sp, #8
 80022bc:	4602      	mov	r2, r0
 80022be:	4640      	mov	r0, r8
 80022c0:	f7ff fc1c 	bl	8001afc <rt_mbx_wait>
 80022c4:	2801      	cmp	r0, #1
 80022c6:	d111      	bne.n	80022ec <svcMessageGet+0x48>
 80022c8:	2000      	movs	r0, #0
 80022ca:	2c00      	cmp	r4, #0
 80022cc:	4602      	mov	r2, r0
 80022ce:	4603      	mov	r3, r0
 80022d0:	bf18      	it	ne
 80022d2:	2040      	movne	r0, #64	; 0x40
 80022d4:	9902      	ldr	r1, [sp, #8]
 80022d6:	4604      	mov	r4, r0
 80022d8:	460d      	mov	r5, r1
 80022da:	4616      	mov	r6, r2
 80022dc:	461f      	mov	r7, r3
 80022de:	4620      	mov	r0, r4
 80022e0:	4629      	mov	r1, r5
 80022e2:	4632      	mov	r2, r6
 80022e4:	463b      	mov	r3, r7
 80022e6:	b004      	add	sp, #16
 80022e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80022ec:	2000      	movs	r0, #0
 80022ee:	4602      	mov	r2, r0
 80022f0:	4603      	mov	r3, r0
 80022f2:	2010      	movs	r0, #16
 80022f4:	e7ee      	b.n	80022d4 <svcMessageGet+0x30>
 80022f6:	2480      	movs	r4, #128	; 0x80
 80022f8:	4605      	mov	r5, r0
 80022fa:	4606      	mov	r6, r0
 80022fc:	4607      	mov	r7, r0
 80022fe:	e7ee      	b.n	80022de <svcMessageGet+0x3a>
 8002300:	2500      	movs	r5, #0
 8002302:	2480      	movs	r4, #128	; 0x80
 8002304:	462e      	mov	r6, r5
 8002306:	462f      	mov	r7, r5
 8002308:	e7e9      	b.n	80022de <svcMessageGet+0x3a>

0800230a <isrMessagePut>:
 800230a:	b570      	push	{r4, r5, r6, lr}
 800230c:	460e      	mov	r6, r1
 800230e:	4614      	mov	r4, r2
 8002310:	4605      	mov	r5, r0
 8002312:	b160      	cbz	r0, 800232e <isrMessagePut+0x24>
 8002314:	b95a      	cbnz	r2, 800232e <isrMessagePut+0x24>
 8002316:	7803      	ldrb	r3, [r0, #0]
 8002318:	2b01      	cmp	r3, #1
 800231a:	d108      	bne.n	800232e <isrMessagePut+0x24>
 800231c:	f7ff fc44 	bl	8001ba8 <rt_mbx_check>
 8002320:	b138      	cbz	r0, 8002332 <isrMessagePut+0x28>
 8002322:	4628      	mov	r0, r5
 8002324:	4631      	mov	r1, r6
 8002326:	f7ff fc43 	bl	8001bb0 <isr_mbx_send>
 800232a:	4620      	mov	r0, r4
 800232c:	bd70      	pop	{r4, r5, r6, pc}
 800232e:	2080      	movs	r0, #128	; 0x80
 8002330:	bd70      	pop	{r4, r5, r6, pc}
 8002332:	2081      	movs	r0, #129	; 0x81
 8002334:	bd70      	pop	{r4, r5, r6, pc}
	...

08002338 <sysTimerTick>:
 8002338:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800233a:	4e11      	ldr	r6, [pc, #68]	; (8002380 <sysTimerTick+0x48>)
 800233c:	6834      	ldr	r4, [r6, #0]
 800233e:	b12c      	cbz	r4, 800234c <sysTimerTick+0x14>
 8002340:	68a3      	ldr	r3, [r4, #8]
 8002342:	4f10      	ldr	r7, [pc, #64]	; (8002384 <sysTimerTick+0x4c>)
 8002344:	3b01      	subs	r3, #1
 8002346:	60a3      	str	r3, [r4, #8]
 8002348:	68a2      	ldr	r2, [r4, #8]
 800234a:	b102      	cbz	r2, 800234e <sysTimerTick+0x16>
 800234c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800234e:	6825      	ldr	r5, [r4, #0]
 8002350:	6838      	ldr	r0, [r7, #0]
 8002352:	6035      	str	r5, [r6, #0]
 8002354:	4621      	mov	r1, r4
 8002356:	f7ff ffd8 	bl	800230a <isrMessagePut>
 800235a:	b110      	cbz	r0, 8002362 <sysTimerTick+0x2a>
 800235c:	2004      	movs	r0, #4
 800235e:	f7ff fa33 	bl	80017c8 <os_error>
 8002362:	7963      	ldrb	r3, [r4, #5]
 8002364:	2b01      	cmp	r3, #1
 8002366:	d107      	bne.n	8002378 <sysTimerTick+0x40>
 8002368:	68e1      	ldr	r1, [r4, #12]
 800236a:	4620      	mov	r0, r4
 800236c:	f7ff fd1c 	bl	8001da8 <rt_timer_insert>
 8002370:	2d00      	cmp	r5, #0
 8002372:	d0eb      	beq.n	800234c <sysTimerTick+0x14>
 8002374:	462c      	mov	r4, r5
 8002376:	e7e7      	b.n	8002348 <sysTimerTick+0x10>
 8002378:	2301      	movs	r3, #1
 800237a:	7123      	strb	r3, [r4, #4]
 800237c:	e7f8      	b.n	8002370 <sysTimerTick+0x38>
 800237e:	bf00      	nop
 8002380:	20002108 	.word	0x20002108
 8002384:	200017b4 	.word	0x200017b4

08002388 <isrMessageGet>:
 8002388:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800238a:	4604      	mov	r4, r0
 800238c:	4616      	mov	r6, r2
 800238e:	4608      	mov	r0, r1
 8002390:	b101      	cbz	r1, 8002394 <isrMessageGet+0xc>
 8002392:	b122      	cbz	r2, 800239e <isrMessageGet+0x16>
 8002394:	2380      	movs	r3, #128	; 0x80
 8002396:	6023      	str	r3, [r4, #0]
 8002398:	4620      	mov	r0, r4
 800239a:	b004      	add	sp, #16
 800239c:	bd70      	pop	{r4, r5, r6, pc}
 800239e:	780b      	ldrb	r3, [r1, #0]
 80023a0:	2b01      	cmp	r3, #1
 80023a2:	d1f7      	bne.n	8002394 <isrMessageGet+0xc>
 80023a4:	a902      	add	r1, sp, #8
 80023a6:	f7ff fc0a 	bl	8001bbe <isr_mbx_receive>
 80023aa:	2804      	cmp	r0, #4
 80023ac:	bf08      	it	eq
 80023ae:	2310      	moveq	r3, #16
 80023b0:	ad01      	add	r5, sp, #4
 80023b2:	bf14      	ite	ne
 80023b4:	9601      	strne	r6, [sp, #4]
 80023b6:	9301      	streq	r3, [sp, #4]
 80023b8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80023bc:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80023c0:	e7ea      	b.n	8002398 <isrMessageGet+0x10>
	...

080023c4 <osMessageGet>:
 80023c4:	b538      	push	{r3, r4, r5, lr}
 80023c6:	4604      	mov	r4, r0
 80023c8:	4615      	mov	r5, r2
 80023ca:	f3ef 8010 	mrs	r0, PRIMASK
 80023ce:	b910      	cbnz	r0, 80023d6 <osMessageGet+0x12>
 80023d0:	f3ef 8005 	mrs	r0, IPSR
 80023d4:	b128      	cbz	r0, 80023e2 <osMessageGet+0x1e>
 80023d6:	462a      	mov	r2, r5
 80023d8:	4620      	mov	r0, r4
 80023da:	f7ff ffd5 	bl	8002388 <isrMessageGet>
 80023de:	4620      	mov	r0, r4
 80023e0:	bd38      	pop	{r3, r4, r5, pc}
 80023e2:	4608      	mov	r0, r1
 80023e4:	4611      	mov	r1, r2
 80023e6:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80023f4 <osMessageGet+0x30>
 80023ea:	df00      	svc	0
 80023ec:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80023f0:	e7f5      	b.n	80023de <osMessageGet+0x1a>
 80023f2:	0000      	.short	0x0000
 80023f4:	080022a5 	.word	0x080022a5

080023f8 <osTimerThread>:
 80023f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80023fa:	4c0a      	ldr	r4, [pc, #40]	; (8002424 <osTimerThread+0x2c>)
 80023fc:	6821      	ldr	r1, [r4, #0]
 80023fe:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002402:	a803      	add	r0, sp, #12
 8002404:	f7ff ffde 	bl	80023c4 <osMessageGet>
 8002408:	9b03      	ldr	r3, [sp, #12]
 800240a:	2b10      	cmp	r3, #16
 800240c:	d1f6      	bne.n	80023fc <osTimerThread+0x4>
 800240e:	9904      	ldr	r1, [sp, #16]
 8002410:	a801      	add	r0, sp, #4
 8002412:	f7ff fe15 	bl	8002040 <osTimerCall>
 8002416:	9b01      	ldr	r3, [sp, #4]
 8002418:	2b00      	cmp	r3, #0
 800241a:	d0ef      	beq.n	80023fc <osTimerThread+0x4>
 800241c:	9802      	ldr	r0, [sp, #8]
 800241e:	4798      	blx	r3
 8002420:	e7ec      	b.n	80023fc <osTimerThread+0x4>
 8002422:	bf00      	nop
 8002424:	200017b4 	.word	0x200017b4

08002428 <rt_switch_req>:
 8002428:	4b05      	ldr	r3, [pc, #20]	; (8002440 <rt_switch_req+0x18>)
 800242a:	6058      	str	r0, [r3, #4]
 800242c:	2302      	movs	r3, #2
 800242e:	7043      	strb	r3, [r0, #1]
 8002430:	4b04      	ldr	r3, [pc, #16]	; (8002444 <rt_switch_req+0x1c>)
 8002432:	681b      	ldr	r3, [r3, #0]
 8002434:	b11b      	cbz	r3, 800243e <rt_switch_req+0x16>
 8002436:	691b      	ldr	r3, [r3, #16]
 8002438:	b10b      	cbz	r3, 800243e <rt_switch_req+0x16>
 800243a:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800243c:	4718      	bx	r3
 800243e:	4770      	bx	lr
 8002440:	2000210c 	.word	0x2000210c
 8002444:	200020f4 	.word	0x200020f4

08002448 <rt_dispatch.part.0>:
 8002448:	b508      	push	{r3, lr}
 800244a:	4803      	ldr	r0, [pc, #12]	; (8002458 <rt_dispatch.part.0+0x10>)
 800244c:	f7ff f8b6 	bl	80015bc <rt_get_first>
 8002450:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002454:	f7ff bfe8 	b.w	8002428 <rt_switch_req>
 8002458:	200016f8 	.word	0x200016f8

0800245c <rt_dispatch>:
 800245c:	b570      	push	{r4, r5, r6, lr}
 800245e:	4604      	mov	r4, r0
 8002460:	b918      	cbnz	r0, 800246a <rt_dispatch+0xe>
 8002462:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002466:	f7ff bfef 	b.w	8002448 <rt_dispatch.part.0>
 800246a:	4e0c      	ldr	r6, [pc, #48]	; (800249c <rt_dispatch+0x40>)
 800246c:	78a2      	ldrb	r2, [r4, #2]
 800246e:	6830      	ldr	r0, [r6, #0]
 8002470:	7883      	ldrb	r3, [r0, #2]
 8002472:	429a      	cmp	r2, r3
 8002474:	f04f 0501 	mov.w	r5, #1
 8002478:	d908      	bls.n	800248c <rt_dispatch+0x30>
 800247a:	f7ff f8b1 	bl	80015e0 <rt_put_rdy_first>
 800247e:	6833      	ldr	r3, [r6, #0]
 8002480:	705d      	strb	r5, [r3, #1]
 8002482:	4620      	mov	r0, r4
 8002484:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002488:	f7ff bfce 	b.w	8002428 <rt_switch_req>
 800248c:	7065      	strb	r5, [r4, #1]
 800248e:	4621      	mov	r1, r4
 8002490:	4803      	ldr	r0, [pc, #12]	; (80024a0 <rt_dispatch+0x44>)
 8002492:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002496:	f7ff b879 	b.w	800158c <rt_put_prio>
 800249a:	bf00      	nop
 800249c:	2000210c 	.word	0x2000210c
 80024a0:	200016f8 	.word	0x200016f8

080024a4 <rt_block>:
 80024a4:	b538      	push	{r3, r4, r5, lr}
 80024a6:	460d      	mov	r5, r1
 80024a8:	4601      	mov	r1, r0
 80024aa:	b180      	cbz	r0, 80024ce <rt_block+0x2a>
 80024ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024b0:	4298      	cmp	r0, r3
 80024b2:	4c07      	ldr	r4, [pc, #28]	; (80024d0 <rt_block+0x2c>)
 80024b4:	d002      	beq.n	80024bc <rt_block+0x18>
 80024b6:	6820      	ldr	r0, [r4, #0]
 80024b8:	f7ff f89c 	bl	80015f4 <rt_put_dly>
 80024bc:	6823      	ldr	r3, [r4, #0]
 80024be:	4805      	ldr	r0, [pc, #20]	; (80024d4 <rt_block+0x30>)
 80024c0:	705d      	strb	r5, [r3, #1]
 80024c2:	f7ff f87b 	bl	80015bc <rt_get_first>
 80024c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80024ca:	f7ff bfad 	b.w	8002428 <rt_switch_req>
 80024ce:	bd38      	pop	{r3, r4, r5, pc}
 80024d0:	2000210c 	.word	0x2000210c
 80024d4:	200016f8 	.word	0x200016f8

080024d8 <rt_tsk_self>:
 80024d8:	4b02      	ldr	r3, [pc, #8]	; (80024e4 <rt_tsk_self+0xc>)
 80024da:	6818      	ldr	r0, [r3, #0]
 80024dc:	b100      	cbz	r0, 80024e0 <rt_tsk_self+0x8>
 80024de:	78c0      	ldrb	r0, [r0, #3]
 80024e0:	4770      	bx	lr
 80024e2:	bf00      	nop
 80024e4:	2000210c 	.word	0x2000210c

080024e8 <rt_tsk_prio>:
 80024e8:	b510      	push	{r4, lr}
 80024ea:	b9a8      	cbnz	r0, 8002518 <rt_tsk_prio+0x30>
 80024ec:	4b19      	ldr	r3, [pc, #100]	; (8002554 <rt_tsk_prio+0x6c>)
 80024ee:	681b      	ldr	r3, [r3, #0]
 80024f0:	7099      	strb	r1, [r3, #2]
 80024f2:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 80024f6:	4818      	ldr	r0, [pc, #96]	; (8002558 <rt_tsk_prio+0x70>)
 80024f8:	6843      	ldr	r3, [r0, #4]
 80024fa:	789b      	ldrb	r3, [r3, #2]
 80024fc:	428b      	cmp	r3, r1
 80024fe:	d801      	bhi.n	8002504 <rt_tsk_prio+0x1c>
 8002500:	2000      	movs	r0, #0
 8002502:	bd10      	pop	{r4, pc}
 8002504:	4c13      	ldr	r4, [pc, #76]	; (8002554 <rt_tsk_prio+0x6c>)
 8002506:	6821      	ldr	r1, [r4, #0]
 8002508:	f7ff f840 	bl	800158c <rt_put_prio>
 800250c:	6823      	ldr	r3, [r4, #0]
 800250e:	2201      	movs	r2, #1
 8002510:	705a      	strb	r2, [r3, #1]
 8002512:	f7ff ff99 	bl	8002448 <rt_dispatch.part.0>
 8002516:	e7f3      	b.n	8002500 <rt_tsk_prio+0x18>
 8002518:	4b10      	ldr	r3, [pc, #64]	; (800255c <rt_tsk_prio+0x74>)
 800251a:	881b      	ldrh	r3, [r3, #0]
 800251c:	4298      	cmp	r0, r3
 800251e:	d817      	bhi.n	8002550 <rt_tsk_prio+0x68>
 8002520:	3801      	subs	r0, #1
 8002522:	4b0f      	ldr	r3, [pc, #60]	; (8002560 <rt_tsk_prio+0x78>)
 8002524:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002528:	b194      	cbz	r4, 8002550 <rt_tsk_prio+0x68>
 800252a:	4b0a      	ldr	r3, [pc, #40]	; (8002554 <rt_tsk_prio+0x6c>)
 800252c:	70a1      	strb	r1, [r4, #2]
 800252e:	681b      	ldr	r3, [r3, #0]
 8002530:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 8002534:	429c      	cmp	r4, r3
 8002536:	d0de      	beq.n	80024f6 <rt_tsk_prio+0xe>
 8002538:	4620      	mov	r0, r4
 800253a:	f7ff f8cd 	bl	80016d8 <rt_resort_prio>
 800253e:	7863      	ldrb	r3, [r4, #1]
 8002540:	2b01      	cmp	r3, #1
 8002542:	d1dd      	bne.n	8002500 <rt_tsk_prio+0x18>
 8002544:	4804      	ldr	r0, [pc, #16]	; (8002558 <rt_tsk_prio+0x70>)
 8002546:	f7ff f839 	bl	80015bc <rt_get_first>
 800254a:	f7ff ff87 	bl	800245c <rt_dispatch>
 800254e:	e7d7      	b.n	8002500 <rt_tsk_prio+0x18>
 8002550:	20ff      	movs	r0, #255	; 0xff
 8002552:	bd10      	pop	{r4, pc}
 8002554:	2000210c 	.word	0x2000210c
 8002558:	200016f8 	.word	0x200016f8
 800255c:	0800649c 	.word	0x0800649c
 8002560:	20001ad8 	.word	0x20001ad8

08002564 <rt_tsk_create>:
 8002564:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8002568:	f011 0fff 	tst.w	r1, #255	; 0xff
 800256c:	460d      	mov	r5, r1
 800256e:	4680      	mov	r8, r0
 8002570:	4823      	ldr	r0, [pc, #140]	; (8002600 <rt_tsk_create+0x9c>)
 8002572:	4616      	mov	r6, r2
 8002574:	469a      	mov	r10, r3
 8002576:	bf08      	it	eq
 8002578:	3501      	addeq	r5, #1
 800257a:	f7ff fa90 	bl	8001a9e <rt_alloc_box>
 800257e:	4604      	mov	r4, r0
 8002580:	b920      	cbnz	r0, 800258c <rt_tsk_create+0x28>
 8002582:	f04f 0900 	mov.w	r9, #0
 8002586:	4648      	mov	r0, r9
 8002588:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800258c:	4b1d      	ldr	r3, [pc, #116]	; (8002604 <rt_tsk_create+0xa0>)
 800258e:	6306      	str	r6, [r0, #48]	; 0x30
 8002590:	881b      	ldrh	r3, [r3, #0]
 8002592:	4e1d      	ldr	r6, [pc, #116]	; (8002608 <rt_tsk_create+0xa4>)
 8002594:	0a28      	lsrs	r0, r5, #8
 8002596:	62a0      	str	r0, [r4, #40]	; 0x28
 8002598:	2100      	movs	r1, #0
 800259a:	428b      	cmp	r3, r1
 800259c:	f101 0901 	add.w	r9, r1, #1
 80025a0:	d0ef      	beq.n	8002582 <rt_tsk_create+0x1e>
 80025a2:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 80025a6:	460f      	mov	r7, r1
 80025a8:	f852 2c04 	ldr.w	r2, [r2, #-4]
 80025ac:	4649      	mov	r1, r9
 80025ae:	2a00      	cmp	r2, #0
 80025b0:	d1f3      	bne.n	800259a <rt_tsk_create+0x36>
 80025b2:	b2ed      	uxtb	r5, r5
 80025b4:	2301      	movs	r3, #1
 80025b6:	f884 9003 	strb.w	r9, [r4, #3]
 80025ba:	f8c4 a01c 	str.w	r10, [r4, #28]
 80025be:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 80025c2:	7022      	strb	r2, [r4, #0]
 80025c4:	7063      	strb	r3, [r4, #1]
 80025c6:	70a5      	strb	r5, [r4, #2]
 80025c8:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 80025cc:	6062      	str	r2, [r4, #4]
 80025ce:	60a2      	str	r2, [r4, #8]
 80025d0:	60e2      	str	r2, [r4, #12]
 80025d2:	6122      	str	r2, [r4, #16]
 80025d4:	6222      	str	r2, [r4, #32]
 80025d6:	82a2      	strh	r2, [r4, #20]
 80025d8:	82e2      	strh	r2, [r4, #22]
 80025da:	8322      	strh	r2, [r4, #24]
 80025dc:	8362      	strh	r2, [r4, #26]
 80025de:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 80025e2:	b918      	cbnz	r0, 80025ec <rt_tsk_create+0x88>
 80025e4:	4809      	ldr	r0, [pc, #36]	; (800260c <rt_tsk_create+0xa8>)
 80025e6:	f7ff fa5a 	bl	8001a9e <rt_alloc_box>
 80025ea:	6320      	str	r0, [r4, #48]	; 0x30
 80025ec:	4620      	mov	r0, r4
 80025ee:	4641      	mov	r1, r8
 80025f0:	f7ff f938 	bl	8001864 <rt_init_stack>
 80025f4:	4620      	mov	r0, r4
 80025f6:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 80025fa:	f7ff ff2f 	bl	800245c <rt_dispatch>
 80025fe:	e7c2      	b.n	8002586 <rt_tsk_create+0x22>
 8002600:	20001b14 	.word	0x20001b14
 8002604:	0800649c 	.word	0x0800649c
 8002608:	20001ad8 	.word	0x20001ad8
 800260c:	20001ee0 	.word	0x20001ee0

08002610 <rt_tsk_delete>:
 8002610:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8002614:	4d4d      	ldr	r5, [pc, #308]	; (800274c <rt_tsk_delete+0x13c>)
 8002616:	b118      	cbz	r0, 8002620 <rt_tsk_delete+0x10>
 8002618:	682b      	ldr	r3, [r5, #0]
 800261a:	78db      	ldrb	r3, [r3, #3]
 800261c:	4298      	cmp	r0, r3
 800261e:	d141      	bne.n	80026a4 <rt_tsk_delete+0x94>
 8002620:	682c      	ldr	r4, [r5, #0]
 8002622:	f8df 813c 	ldr.w	r8, [pc, #316]	; 8002760 <rt_tsk_delete+0x150>
 8002626:	2300      	movs	r3, #0
 8002628:	7063      	strb	r3, [r4, #1]
 800262a:	f002 fd48 	bl	80050be <rt_get_PSP>
 800262e:	62e0      	str	r0, [r4, #44]	; 0x2c
 8002630:	f7ff f9fe 	bl	8001a30 <rt_stk_check>
 8002634:	682b      	ldr	r3, [r5, #0]
 8002636:	6a1c      	ldr	r4, [r3, #32]
 8002638:	2701      	movs	r7, #1
 800263a:	b9a4      	cbnz	r4, 8002666 <rt_tsk_delete+0x56>
 800263c:	682a      	ldr	r2, [r5, #0]
 800263e:	4944      	ldr	r1, [pc, #272]	; (8002750 <rt_tsk_delete+0x140>)
 8002640:	78d3      	ldrb	r3, [r2, #3]
 8002642:	4844      	ldr	r0, [pc, #272]	; (8002754 <rt_tsk_delete+0x144>)
 8002644:	3b01      	subs	r3, #1
 8002646:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 800264a:	6b11      	ldr	r1, [r2, #48]	; 0x30
 800264c:	f7ff fa34 	bl	8001ab8 <rt_free_box>
 8002650:	6829      	ldr	r1, [r5, #0]
 8002652:	4841      	ldr	r0, [pc, #260]	; (8002758 <rt_tsk_delete+0x148>)
 8002654:	630c      	str	r4, [r1, #48]	; 0x30
 8002656:	f7ff fa2f 	bl	8001ab8 <rt_free_box>
 800265a:	602c      	str	r4, [r5, #0]
 800265c:	f7ff fef4 	bl	8002448 <rt_dispatch.part.0>
 8002660:	4620      	mov	r0, r4
 8002662:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8002666:	6863      	ldr	r3, [r4, #4]
 8002668:	b1b3      	cbz	r3, 8002698 <rt_tsk_delete+0x88>
 800266a:	4620      	mov	r0, r4
 800266c:	f7fe ffa6 	bl	80015bc <rt_get_first>
 8002670:	2100      	movs	r1, #0
 8002672:	4606      	mov	r6, r0
 8002674:	f7ff f942 	bl	80018fc <rt_ret_val>
 8002678:	4630      	mov	r0, r6
 800267a:	f7ff f845 	bl	8001708 <rt_rmv_dly>
 800267e:	7077      	strb	r7, [r6, #1]
 8002680:	4631      	mov	r1, r6
 8002682:	4640      	mov	r0, r8
 8002684:	f7fe ff82 	bl	800158c <rt_put_prio>
 8002688:	68e3      	ldr	r3, [r4, #12]
 800268a:	6a32      	ldr	r2, [r6, #32]
 800268c:	8067      	strh	r7, [r4, #2]
 800268e:	60a6      	str	r6, [r4, #8]
 8002690:	60e2      	str	r2, [r4, #12]
 8002692:	6234      	str	r4, [r6, #32]
 8002694:	461c      	mov	r4, r3
 8002696:	e7d0      	b.n	800263a <rt_tsk_delete+0x2a>
 8002698:	68e2      	ldr	r2, [r4, #12]
 800269a:	8063      	strh	r3, [r4, #2]
 800269c:	60a3      	str	r3, [r4, #8]
 800269e:	60e3      	str	r3, [r4, #12]
 80026a0:	4614      	mov	r4, r2
 80026a2:	e7ca      	b.n	800263a <rt_tsk_delete+0x2a>
 80026a4:	4b2d      	ldr	r3, [pc, #180]	; (800275c <rt_tsk_delete+0x14c>)
 80026a6:	881b      	ldrh	r3, [r3, #0]
 80026a8:	4298      	cmp	r0, r3
 80026aa:	d84d      	bhi.n	8002748 <rt_tsk_delete+0x138>
 80026ac:	4b28      	ldr	r3, [pc, #160]	; (8002750 <rt_tsk_delete+0x140>)
 80026ae:	1e47      	subs	r7, r0, #1
 80026b0:	4699      	mov	r9, r3
 80026b2:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 80026b6:	2e00      	cmp	r6, #0
 80026b8:	d046      	beq.n	8002748 <rt_tsk_delete+0x138>
 80026ba:	4630      	mov	r0, r6
 80026bc:	f7fe fff6 	bl	80016ac <rt_rmv_list>
 80026c0:	4630      	mov	r0, r6
 80026c2:	f7ff f821 	bl	8001708 <rt_rmv_dly>
 80026c6:	f8df b098 	ldr.w	r11, [pc, #152]	; 8002760 <rt_tsk_delete+0x150>
 80026ca:	6a34      	ldr	r4, [r6, #32]
 80026cc:	f04f 0a01 	mov.w	r10, #1
 80026d0:	b9b4      	cbnz	r4, 8002700 <rt_tsk_delete+0xf0>
 80026d2:	6b31      	ldr	r1, [r6, #48]	; 0x30
 80026d4:	481f      	ldr	r0, [pc, #124]	; (8002754 <rt_tsk_delete+0x144>)
 80026d6:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 80026da:	f7ff f9ed 	bl	8001ab8 <rt_free_box>
 80026de:	4631      	mov	r1, r6
 80026e0:	6334      	str	r4, [r6, #48]	; 0x30
 80026e2:	481d      	ldr	r0, [pc, #116]	; (8002758 <rt_tsk_delete+0x148>)
 80026e4:	f7ff f9e8 	bl	8001ab8 <rt_free_box>
 80026e8:	481d      	ldr	r0, [pc, #116]	; (8002760 <rt_tsk_delete+0x150>)
 80026ea:	6829      	ldr	r1, [r5, #0]
 80026ec:	6843      	ldr	r3, [r0, #4]
 80026ee:	789a      	ldrb	r2, [r3, #2]
 80026f0:	788b      	ldrb	r3, [r1, #2]
 80026f2:	429a      	cmp	r2, r3
 80026f4:	d9b4      	bls.n	8002660 <rt_tsk_delete+0x50>
 80026f6:	2301      	movs	r3, #1
 80026f8:	704b      	strb	r3, [r1, #1]
 80026fa:	f7fe ff47 	bl	800158c <rt_put_prio>
 80026fe:	e7ad      	b.n	800265c <rt_tsk_delete+0x4c>
 8002700:	6863      	ldr	r3, [r4, #4]
 8002702:	b1db      	cbz	r3, 800273c <rt_tsk_delete+0x12c>
 8002704:	4620      	mov	r0, r4
 8002706:	f7fe ff59 	bl	80015bc <rt_get_first>
 800270a:	2100      	movs	r1, #0
 800270c:	4680      	mov	r8, r0
 800270e:	f7ff f8f5 	bl	80018fc <rt_ret_val>
 8002712:	4640      	mov	r0, r8
 8002714:	f7fe fff8 	bl	8001708 <rt_rmv_dly>
 8002718:	f888 a001 	strb.w	r10, [r8, #1]
 800271c:	4641      	mov	r1, r8
 800271e:	4658      	mov	r0, r11
 8002720:	f7fe ff34 	bl	800158c <rt_put_prio>
 8002724:	68e3      	ldr	r3, [r4, #12]
 8002726:	f8d8 2020 	ldr.w	r2, [r8, #32]
 800272a:	f8a4 a002 	strh.w	r10, [r4, #2]
 800272e:	f8c4 8008 	str.w	r8, [r4, #8]
 8002732:	60e2      	str	r2, [r4, #12]
 8002734:	f8c8 4020 	str.w	r4, [r8, #32]
 8002738:	461c      	mov	r4, r3
 800273a:	e7c9      	b.n	80026d0 <rt_tsk_delete+0xc0>
 800273c:	68e2      	ldr	r2, [r4, #12]
 800273e:	8063      	strh	r3, [r4, #2]
 8002740:	60a3      	str	r3, [r4, #8]
 8002742:	60e3      	str	r3, [r4, #12]
 8002744:	4614      	mov	r4, r2
 8002746:	e7c3      	b.n	80026d0 <rt_tsk_delete+0xc0>
 8002748:	24ff      	movs	r4, #255	; 0xff
 800274a:	e789      	b.n	8002660 <rt_tsk_delete+0x50>
 800274c:	2000210c 	.word	0x2000210c
 8002750:	20001ad8 	.word	0x20001ad8
 8002754:	20001ee0 	.word	0x20001ee0
 8002758:	20001b14 	.word	0x20001b14
 800275c:	0800649c 	.word	0x0800649c
 8002760:	200016f8 	.word	0x200016f8

08002764 <rt_sys_init>:
 8002764:	b538      	push	{r3, r4, r5, lr}
 8002766:	4b2c      	ldr	r3, [pc, #176]	; (8002818 <rt_sys_init+0xb4>)
 8002768:	492c      	ldr	r1, [pc, #176]	; (800281c <rt_sys_init+0xb8>)
 800276a:	881a      	ldrh	r2, [r3, #0]
 800276c:	2300      	movs	r3, #0
 800276e:	4618      	mov	r0, r3
 8002770:	4293      	cmp	r3, r2
 8002772:	d34d      	bcc.n	8002810 <rt_sys_init+0xac>
 8002774:	4b2a      	ldr	r3, [pc, #168]	; (8002820 <rt_sys_init+0xbc>)
 8002776:	482b      	ldr	r0, [pc, #172]	; (8002824 <rt_sys_init+0xc0>)
 8002778:	8819      	ldrh	r1, [r3, #0]
 800277a:	4c2b      	ldr	r4, [pc, #172]	; (8002828 <rt_sys_init+0xc4>)
 800277c:	2240      	movs	r2, #64	; 0x40
 800277e:	f7ff f969 	bl	8001a54 <_init_box>
 8002782:	4b2a      	ldr	r3, [pc, #168]	; (800282c <rt_sys_init+0xc8>)
 8002784:	482a      	ldr	r0, [pc, #168]	; (8002830 <rt_sys_init+0xcc>)
 8002786:	881a      	ldrh	r2, [r3, #0]
 8002788:	4b2a      	ldr	r3, [pc, #168]	; (8002834 <rt_sys_init+0xd0>)
 800278a:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 800278e:	6819      	ldr	r1, [r3, #0]
 8002790:	f7ff f960 	bl	8001a54 <_init_box>
 8002794:	4b28      	ldr	r3, [pc, #160]	; (8002838 <rt_sys_init+0xd4>)
 8002796:	8819      	ldrh	r1, [r3, #0]
 8002798:	4b28      	ldr	r3, [pc, #160]	; (800283c <rt_sys_init+0xd8>)
 800279a:	2208      	movs	r2, #8
 800279c:	6818      	ldr	r0, [r3, #0]
 800279e:	f7ff f959 	bl	8001a54 <_init_box>
 80027a2:	23ff      	movs	r3, #255	; 0xff
 80027a4:	2500      	movs	r5, #0
 80027a6:	70e3      	strb	r3, [r4, #3]
 80027a8:	4821      	ldr	r0, [pc, #132]	; (8002830 <rt_sys_init+0xcc>)
 80027aa:	62a5      	str	r5, [r4, #40]	; 0x28
 80027ac:	2301      	movs	r3, #1
 80027ae:	7063      	strb	r3, [r4, #1]
 80027b0:	7025      	strb	r5, [r4, #0]
 80027b2:	70a5      	strb	r5, [r4, #2]
 80027b4:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 80027b8:	6065      	str	r5, [r4, #4]
 80027ba:	60a5      	str	r5, [r4, #8]
 80027bc:	60e5      	str	r5, [r4, #12]
 80027be:	6125      	str	r5, [r4, #16]
 80027c0:	6225      	str	r5, [r4, #32]
 80027c2:	82a5      	strh	r5, [r4, #20]
 80027c4:	82e5      	strh	r5, [r4, #22]
 80027c6:	8325      	strh	r5, [r4, #24]
 80027c8:	8365      	strh	r5, [r4, #26]
 80027ca:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 80027ce:	f7ff f966 	bl	8001a9e <rt_alloc_box>
 80027d2:	491b      	ldr	r1, [pc, #108]	; (8002840 <rt_sys_init+0xdc>)
 80027d4:	6320      	str	r0, [r4, #48]	; 0x30
 80027d6:	4620      	mov	r0, r4
 80027d8:	f7ff f844 	bl	8001864 <rt_init_stack>
 80027dc:	4b19      	ldr	r3, [pc, #100]	; (8002844 <rt_sys_init+0xe0>)
 80027de:	2204      	movs	r2, #4
 80027e0:	701a      	strb	r2, [r3, #0]
 80027e2:	605d      	str	r5, [r3, #4]
 80027e4:	4b18      	ldr	r3, [pc, #96]	; (8002848 <rt_sys_init+0xe4>)
 80027e6:	701a      	strb	r2, [r3, #0]
 80027e8:	60dd      	str	r5, [r3, #12]
 80027ea:	611d      	str	r5, [r3, #16]
 80027ec:	829d      	strh	r5, [r3, #20]
 80027ee:	4b17      	ldr	r3, [pc, #92]	; (800284c <rt_sys_init+0xe8>)
 80027f0:	4620      	mov	r0, r4
 80027f2:	601c      	str	r4, [r3, #0]
 80027f4:	2302      	movs	r3, #2
 80027f6:	7063      	strb	r3, [r4, #1]
 80027f8:	f7ff fe16 	bl	8002428 <rt_switch_req>
 80027fc:	4a14      	ldr	r2, [pc, #80]	; (8002850 <rt_sys_init+0xec>)
 80027fe:	4b15      	ldr	r3, [pc, #84]	; (8002854 <rt_sys_init+0xf0>)
 8002800:	7812      	ldrb	r2, [r2, #0]
 8002802:	701d      	strb	r5, [r3, #0]
 8002804:	705d      	strb	r5, [r3, #1]
 8002806:	70da      	strb	r2, [r3, #3]
 8002808:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800280c:	f7ff ba9c 	b.w	8001d48 <rt_init_robin>
 8002810:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8002814:	3301      	adds	r3, #1
 8002816:	e7ab      	b.n	8002770 <rt_sys_init+0xc>
 8002818:	0800649c 	.word	0x0800649c
 800281c:	20001ad8 	.word	0x20001ad8
 8002820:	08006468 	.word	0x08006468
 8002824:	20001b14 	.word	0x20001b14
 8002828:	20002114 	.word	0x20002114
 800282c:	080064b8 	.word	0x080064b8
 8002830:	20001ee0 	.word	0x20001ee0
 8002834:	08006464 	.word	0x08006464
 8002838:	0800646a 	.word	0x0800646a
 800283c:	20000290 	.word	0x20000290
 8002840:	080017c5 	.word	0x080017c5
 8002844:	200016f8 	.word	0x200016f8
 8002848:	20001710 	.word	0x20001710
 800284c:	2000210c 	.word	0x2000210c
 8002850:	08006499 	.word	0x08006499
 8002854:	20001728 	.word	0x20001728

08002858 <rt_sys_start>:
 8002858:	b508      	push	{r3, lr}
 800285a:	4b1e      	ldr	r3, [pc, #120]	; (80028d4 <rt_sys_start+0x7c>)
 800285c:	681a      	ldr	r2, [r3, #0]
 800285e:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 8002862:	601a      	str	r2, [r3, #0]
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	021b      	lsls	r3, r3, #8
 8002868:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 800286c:	43db      	mvns	r3, r3
 800286e:	fab3 f383 	clz	r3, r3
 8002872:	4a19      	ldr	r2, [pc, #100]	; (80028d8 <rt_sys_start+0x80>)
 8002874:	4819      	ldr	r0, [pc, #100]	; (80028dc <rt_sys_start+0x84>)
 8002876:	6812      	ldr	r2, [r2, #0]
 8002878:	6801      	ldr	r1, [r0, #0]
 800287a:	b2db      	uxtb	r3, r3
 800287c:	f1c3 0308 	rsb	r3, r3, #8
 8002880:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8002884:	4293      	cmp	r3, r2
 8002886:	bf98      	it	ls
 8002888:	1c53      	addls	r3, r2, #1
 800288a:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 800288e:	fa02 f303 	lsl.w	r3, r2, r3
 8002892:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002896:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 800289a:	4313      	orrs	r3, r2
 800289c:	6003      	str	r3, [r0, #0]
 800289e:	f7ff f88f 	bl	80019c0 <os_tick_init>
 80028a2:	4b0f      	ldr	r3, [pc, #60]	; (80028e0 <rt_sys_start+0x88>)
 80028a4:	2800      	cmp	r0, #0
 80028a6:	6018      	str	r0, [r3, #0]
 80028a8:	db12      	blt.n	80028d0 <rt_sys_start+0x78>
 80028aa:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 80028ae:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 80028b2:	22ff      	movs	r2, #255	; 0xff
 80028b4:	7002      	strb	r2, [r0, #0]
 80028b6:	681a      	ldr	r2, [r3, #0]
 80028b8:	0953      	lsrs	r3, r2, #5
 80028ba:	009b      	lsls	r3, r3, #2
 80028bc:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80028c0:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 80028c4:	f002 021f 	and.w	r2, r2, #31
 80028c8:	2101      	movs	r1, #1
 80028ca:	fa01 f202 	lsl.w	r2, r1, r2
 80028ce:	601a      	str	r2, [r3, #0]
 80028d0:	bd08      	pop	{r3, pc}
 80028d2:	bf00      	nop
 80028d4:	e000ed20 	.word	0xe000ed20
 80028d8:	e000ed0c 	.word	0xe000ed0c
 80028dc:	e000ed1c 	.word	0xe000ed1c
 80028e0:	200020f0 	.word	0x200020f0

080028e4 <rt_mut_init>:
 80028e4:	2303      	movs	r3, #3
 80028e6:	7003      	strb	r3, [r0, #0]
 80028e8:	2300      	movs	r3, #0
 80028ea:	8043      	strh	r3, [r0, #2]
 80028ec:	6043      	str	r3, [r0, #4]
 80028ee:	6083      	str	r3, [r0, #8]
 80028f0:	60c3      	str	r3, [r0, #12]
 80028f2:	4770      	bx	lr

080028f4 <rt_mut_release>:
 80028f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80028f8:	8843      	ldrh	r3, [r0, #2]
 80028fa:	4605      	mov	r5, r0
 80028fc:	2b00      	cmp	r3, #0
 80028fe:	d063      	beq.n	80029c8 <rt_mut_release+0xd4>
 8002900:	4f32      	ldr	r7, [pc, #200]	; (80029cc <rt_mut_release+0xd8>)
 8002902:	6881      	ldr	r1, [r0, #8]
 8002904:	683a      	ldr	r2, [r7, #0]
 8002906:	4291      	cmp	r1, r2
 8002908:	d15e      	bne.n	80029c8 <rt_mut_release+0xd4>
 800290a:	3b01      	subs	r3, #1
 800290c:	b29b      	uxth	r3, r3
 800290e:	8043      	strh	r3, [r0, #2]
 8002910:	b11b      	cbz	r3, 800291a <rt_mut_release+0x26>
 8002912:	2400      	movs	r4, #0
 8002914:	4620      	mov	r0, r4
 8002916:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800291a:	6a0b      	ldr	r3, [r1, #32]
 800291c:	4298      	cmp	r0, r3
 800291e:	d129      	bne.n	8002974 <rt_mut_release+0x80>
 8002920:	68c3      	ldr	r3, [r0, #12]
 8002922:	620b      	str	r3, [r1, #32]
 8002924:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8002928:	6a0c      	ldr	r4, [r1, #32]
 800292a:	bb5c      	cbnz	r4, 8002984 <rt_mut_release+0x90>
 800292c:	708b      	strb	r3, [r1, #2]
 800292e:	686a      	ldr	r2, [r5, #4]
 8002930:	f8df 809c 	ldr.w	r8, [pc, #156]	; 80029d0 <rt_mut_release+0xdc>
 8002934:	2a00      	cmp	r2, #0
 8002936:	d03b      	beq.n	80029b0 <rt_mut_release+0xbc>
 8002938:	4628      	mov	r0, r5
 800293a:	f7fe fe3f 	bl	80015bc <rt_get_first>
 800293e:	4621      	mov	r1, r4
 8002940:	4606      	mov	r6, r0
 8002942:	f7fe ffdb 	bl	80018fc <rt_ret_val>
 8002946:	4630      	mov	r0, r6
 8002948:	f7fe fede 	bl	8001708 <rt_rmv_dly>
 800294c:	6a33      	ldr	r3, [r6, #32]
 800294e:	60eb      	str	r3, [r5, #12]
 8002950:	f04f 0901 	mov.w	r9, #1
 8002954:	6839      	ldr	r1, [r7, #0]
 8002956:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800295a:	f8a5 9002 	strh.w	r9, [r5, #2]
 800295e:	60ae      	str	r6, [r5, #8]
 8002960:	6235      	str	r5, [r6, #32]
 8002962:	788a      	ldrb	r2, [r1, #2]
 8002964:	789b      	ldrb	r3, [r3, #2]
 8002966:	429a      	cmp	r2, r3
 8002968:	d314      	bcc.n	8002994 <rt_mut_release+0xa0>
 800296a:	4630      	mov	r0, r6
 800296c:	f7ff fd76 	bl	800245c <rt_dispatch>
 8002970:	e7d0      	b.n	8002914 <rt_mut_release+0x20>
 8002972:	4613      	mov	r3, r2
 8002974:	2b00      	cmp	r3, #0
 8002976:	d0d5      	beq.n	8002924 <rt_mut_release+0x30>
 8002978:	68da      	ldr	r2, [r3, #12]
 800297a:	4295      	cmp	r5, r2
 800297c:	d1f9      	bne.n	8002972 <rt_mut_release+0x7e>
 800297e:	68ea      	ldr	r2, [r5, #12]
 8002980:	60da      	str	r2, [r3, #12]
 8002982:	e7cf      	b.n	8002924 <rt_mut_release+0x30>
 8002984:	6862      	ldr	r2, [r4, #4]
 8002986:	b11a      	cbz	r2, 8002990 <rt_mut_release+0x9c>
 8002988:	7892      	ldrb	r2, [r2, #2]
 800298a:	4293      	cmp	r3, r2
 800298c:	bf38      	it	cc
 800298e:	4613      	movcc	r3, r2
 8002990:	68e4      	ldr	r4, [r4, #12]
 8002992:	e7ca      	b.n	800292a <rt_mut_release+0x36>
 8002994:	4640      	mov	r0, r8
 8002996:	f7fe fdf9 	bl	800158c <rt_put_prio>
 800299a:	4631      	mov	r1, r6
 800299c:	4640      	mov	r0, r8
 800299e:	f7fe fdf5 	bl	800158c <rt_put_prio>
 80029a2:	683b      	ldr	r3, [r7, #0]
 80029a4:	f883 9001 	strb.w	r9, [r3, #1]
 80029a8:	f886 9001 	strb.w	r9, [r6, #1]
 80029ac:	4620      	mov	r0, r4
 80029ae:	e7dd      	b.n	800296c <rt_mut_release+0x78>
 80029b0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80029b4:	7892      	ldrb	r2, [r2, #2]
 80029b6:	429a      	cmp	r2, r3
 80029b8:	d9ab      	bls.n	8002912 <rt_mut_release+0x1e>
 80029ba:	4640      	mov	r0, r8
 80029bc:	f7fe fde6 	bl	800158c <rt_put_prio>
 80029c0:	683b      	ldr	r3, [r7, #0]
 80029c2:	2201      	movs	r2, #1
 80029c4:	705a      	strb	r2, [r3, #1]
 80029c6:	e7f1      	b.n	80029ac <rt_mut_release+0xb8>
 80029c8:	24ff      	movs	r4, #255	; 0xff
 80029ca:	e7a3      	b.n	8002914 <rt_mut_release+0x20>
 80029cc:	2000210c 	.word	0x2000210c
 80029d0:	200016f8 	.word	0x200016f8

080029d4 <rt_mut_wait>:
 80029d4:	8843      	ldrh	r3, [r0, #2]
 80029d6:	b570      	push	{r4, r5, r6, lr}
 80029d8:	4604      	mov	r4, r0
 80029da:	460e      	mov	r6, r1
 80029dc:	4d13      	ldr	r5, [pc, #76]	; (8002a2c <rt_mut_wait+0x58>)
 80029de:	b943      	cbnz	r3, 80029f2 <rt_mut_wait+0x1e>
 80029e0:	682a      	ldr	r2, [r5, #0]
 80029e2:	6082      	str	r2, [r0, #8]
 80029e4:	6a11      	ldr	r1, [r2, #32]
 80029e6:	60c1      	str	r1, [r0, #12]
 80029e8:	6210      	str	r0, [r2, #32]
 80029ea:	3301      	adds	r3, #1
 80029ec:	8063      	strh	r3, [r4, #2]
 80029ee:	2000      	movs	r0, #0
 80029f0:	bd70      	pop	{r4, r5, r6, pc}
 80029f2:	6880      	ldr	r0, [r0, #8]
 80029f4:	682a      	ldr	r2, [r5, #0]
 80029f6:	4290      	cmp	r0, r2
 80029f8:	d0f7      	beq.n	80029ea <rt_mut_wait+0x16>
 80029fa:	b181      	cbz	r1, 8002a1e <rt_mut_wait+0x4a>
 80029fc:	7893      	ldrb	r3, [r2, #2]
 80029fe:	7882      	ldrb	r2, [r0, #2]
 8002a00:	429a      	cmp	r2, r3
 8002a02:	d202      	bcs.n	8002a0a <rt_mut_wait+0x36>
 8002a04:	7083      	strb	r3, [r0, #2]
 8002a06:	f7fe fe67 	bl	80016d8 <rt_resort_prio>
 8002a0a:	6862      	ldr	r2, [r4, #4]
 8002a0c:	b14a      	cbz	r2, 8002a22 <rt_mut_wait+0x4e>
 8002a0e:	6829      	ldr	r1, [r5, #0]
 8002a10:	4620      	mov	r0, r4
 8002a12:	f7fe fdbb 	bl	800158c <rt_put_prio>
 8002a16:	2109      	movs	r1, #9
 8002a18:	4630      	mov	r0, r6
 8002a1a:	f7ff fd43 	bl	80024a4 <rt_block>
 8002a1e:	2001      	movs	r0, #1
 8002a20:	bd70      	pop	{r4, r5, r6, pc}
 8002a22:	682b      	ldr	r3, [r5, #0]
 8002a24:	6063      	str	r3, [r4, #4]
 8002a26:	605a      	str	r2, [r3, #4]
 8002a28:	609c      	str	r4, [r3, #8]
 8002a2a:	e7f4      	b.n	8002a16 <rt_mut_wait+0x42>
 8002a2c:	2000210c 	.word	0x2000210c

08002a30 <rt_dly_wait>:
 8002a30:	2103      	movs	r1, #3
 8002a32:	f7ff bd37 	b.w	80024a4 <rt_block>
	...

08002a38 <rt_sem_psh>:
 8002a38:	6842      	ldr	r2, [r0, #4]
 8002a3a:	b510      	push	{r4, lr}
 8002a3c:	b17a      	cbz	r2, 8002a5e <rt_sem_psh+0x26>
 8002a3e:	f7fe fdbd 	bl	80015bc <rt_get_first>
 8002a42:	4604      	mov	r4, r0
 8002a44:	f7fe fe60 	bl	8001708 <rt_rmv_dly>
 8002a48:	2101      	movs	r1, #1
 8002a4a:	7061      	strb	r1, [r4, #1]
 8002a4c:	4620      	mov	r0, r4
 8002a4e:	f7fe ff55 	bl	80018fc <rt_ret_val>
 8002a52:	4621      	mov	r1, r4
 8002a54:	4804      	ldr	r0, [pc, #16]	; (8002a68 <rt_sem_psh+0x30>)
 8002a56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002a5a:	f7fe bd97 	b.w	800158c <rt_put_prio>
 8002a5e:	8842      	ldrh	r2, [r0, #2]
 8002a60:	3201      	adds	r2, #1
 8002a62:	8042      	strh	r2, [r0, #2]
 8002a64:	bd10      	pop	{r4, pc}
 8002a66:	bf00      	nop
 8002a68:	200016f8 	.word	0x200016f8

08002a6c <timer_irq_handler>:
 8002a6c:	b570      	push	{r4, r5, r6, lr}
 8002a6e:	4c13      	ldr	r4, [pc, #76]	; (8002abc <timer_irq_handler+0x50>)
 8002a70:	6823      	ldr	r3, [r4, #0]
 8002a72:	691a      	ldr	r2, [r3, #16]
 8002a74:	0795      	lsls	r5, r2, #30
 8002a76:	d507      	bpl.n	8002a88 <timer_irq_handler+0x1c>
 8002a78:	68da      	ldr	r2, [r3, #12]
 8002a7a:	0790      	lsls	r0, r2, #30
 8002a7c:	d504      	bpl.n	8002a88 <timer_irq_handler+0x1c>
 8002a7e:	f06f 0202 	mvn.w	r2, #2
 8002a82:	611a      	str	r2, [r3, #16]
 8002a84:	f7fe fcb4 	bl	80013f0 <us_ticker_irq_handler>
 8002a88:	6823      	ldr	r3, [r4, #0]
 8002a8a:	691a      	ldr	r2, [r3, #16]
 8002a8c:	0751      	lsls	r1, r2, #29
 8002a8e:	d513      	bpl.n	8002ab8 <timer_irq_handler+0x4c>
 8002a90:	68da      	ldr	r2, [r3, #12]
 8002a92:	0752      	lsls	r2, r2, #29
 8002a94:	d510      	bpl.n	8002ab8 <timer_irq_handler+0x4c>
 8002a96:	f06f 0204 	mvn.w	r2, #4
 8002a9a:	4e09      	ldr	r6, [pc, #36]	; (8002ac0 <timer_irq_handler+0x54>)
 8002a9c:	611a      	str	r2, [r3, #16]
 8002a9e:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8002aa0:	6833      	ldr	r3, [r6, #0]
 8002aa2:	1aeb      	subs	r3, r5, r3
 8002aa4:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002aa8:	d306      	bcc.n	8002ab8 <timer_irq_handler+0x4c>
 8002aaa:	f002 f81f 	bl	8004aec <HAL_IncTick>
 8002aae:	6823      	ldr	r3, [r4, #0]
 8002ab0:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 8002ab4:	639a      	str	r2, [r3, #56]	; 0x38
 8002ab6:	6035      	str	r5, [r6, #0]
 8002ab8:	bd70      	pop	{r4, r5, r6, pc}
 8002aba:	bf00      	nop
 8002abc:	20002158 	.word	0x20002158
 8002ac0:	20001304 	.word	0x20001304

08002ac4 <HAL_InitTick>:
 8002ac4:	b530      	push	{r4, r5, lr}
 8002ac6:	b089      	sub	sp, #36	; 0x24
 8002ac8:	a901      	add	r1, sp, #4
 8002aca:	a803      	add	r0, sp, #12
 8002acc:	f001 ff8a 	bl	80049e4 <HAL_RCC_GetClockConfig>
 8002ad0:	f001 ff58 	bl	8004984 <HAL_RCC_GetPCLK1Freq>
 8002ad4:	2300      	movs	r3, #0
 8002ad6:	9302      	str	r3, [sp, #8]
 8002ad8:	4b24      	ldr	r3, [pc, #144]	; (8002b6c <HAL_InitTick+0xa8>)
 8002ada:	9001      	str	r0, [sp, #4]
 8002adc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002ade:	4c24      	ldr	r4, [pc, #144]	; (8002b70 <HAL_InitTick+0xac>)
 8002ae0:	f042 0208 	orr.w	r2, r2, #8
 8002ae4:	641a      	str	r2, [r3, #64]	; 0x40
 8002ae6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002ae8:	f002 0208 	and.w	r2, r2, #8
 8002aec:	9202      	str	r2, [sp, #8]
 8002aee:	9a02      	ldr	r2, [sp, #8]
 8002af0:	6a1a      	ldr	r2, [r3, #32]
 8002af2:	f042 0208 	orr.w	r2, r2, #8
 8002af6:	621a      	str	r2, [r3, #32]
 8002af8:	6a1a      	ldr	r2, [r3, #32]
 8002afa:	f022 0208 	bic.w	r2, r2, #8
 8002afe:	621a      	str	r2, [r3, #32]
 8002b00:	9a06      	ldr	r2, [sp, #24]
 8002b02:	f5a3 330b 	sub.w	r3, r3, #142336	; 0x22c00
 8002b06:	6023      	str	r3, [r4, #0]
 8002b08:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002b0c:	60e3      	str	r3, [r4, #12]
 8002b0e:	4b19      	ldr	r3, [pc, #100]	; (8002b74 <HAL_InitTick+0xb0>)
 8002b10:	bb4a      	cbnz	r2, 8002b66 <HAL_InitTick+0xa2>
 8002b12:	fbb0 f0f3 	udiv	r0, r0, r3
 8002b16:	3801      	subs	r0, #1
 8002b18:	2500      	movs	r5, #0
 8002b1a:	6060      	str	r0, [r4, #4]
 8002b1c:	4814      	ldr	r0, [pc, #80]	; (8002b70 <HAL_InitTick+0xac>)
 8002b1e:	6125      	str	r5, [r4, #16]
 8002b20:	60a5      	str	r5, [r4, #8]
 8002b22:	6165      	str	r5, [r4, #20]
 8002b24:	f001 fdda 	bl	80046dc <HAL_TIM_OC_Init>
 8002b28:	4913      	ldr	r1, [pc, #76]	; (8002b78 <HAL_InitTick+0xb4>)
 8002b2a:	2032      	movs	r0, #50	; 0x32
 8002b2c:	f000 fe54 	bl	80037d8 <__NVIC_SetVector>
 8002b30:	4b12      	ldr	r3, [pc, #72]	; (8002b7c <HAL_InitTick+0xb8>)
 8002b32:	480f      	ldr	r0, [pc, #60]	; (8002b70 <HAL_InitTick+0xac>)
 8002b34:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8002b38:	605a      	str	r2, [r3, #4]
 8002b3a:	4629      	mov	r1, r5
 8002b3c:	f001 fe0e 	bl	800475c <HAL_TIM_OC_Start>
 8002b40:	2104      	movs	r1, #4
 8002b42:	480b      	ldr	r0, [pc, #44]	; (8002b70 <HAL_InitTick+0xac>)
 8002b44:	f001 fe0a 	bl	800475c <HAL_TIM_OC_Start>
 8002b48:	6823      	ldr	r3, [r4, #0]
 8002b4a:	4a0d      	ldr	r2, [pc, #52]	; (8002b80 <HAL_InitTick+0xbc>)
 8002b4c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002b4e:	6011      	str	r1, [r2, #0]
 8002b50:	6812      	ldr	r2, [r2, #0]
 8002b52:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 8002b56:	639a      	str	r2, [r3, #56]	; 0x38
 8002b58:	68da      	ldr	r2, [r3, #12]
 8002b5a:	4628      	mov	r0, r5
 8002b5c:	f042 0204 	orr.w	r2, r2, #4
 8002b60:	60da      	str	r2, [r3, #12]
 8002b62:	b009      	add	sp, #36	; 0x24
 8002b64:	bd30      	pop	{r4, r5, pc}
 8002b66:	0040      	lsls	r0, r0, #1
 8002b68:	e7d3      	b.n	8002b12 <HAL_InitTick+0x4e>
 8002b6a:	bf00      	nop
 8002b6c:	40023800 	.word	0x40023800
 8002b70:	20002158 	.word	0x20002158
 8002b74:	000f4240 	.word	0x000f4240
 8002b78:	08002a6d 	.word	0x08002a6d
 8002b7c:	e000e100 	.word	0xe000e100
 8002b80:	20001304 	.word	0x20001304

08002b84 <HAL_SuspendTick>:
 8002b84:	4b03      	ldr	r3, [pc, #12]	; (8002b94 <HAL_SuspendTick+0x10>)
 8002b86:	4a04      	ldr	r2, [pc, #16]	; (8002b98 <HAL_SuspendTick+0x14>)
 8002b88:	6013      	str	r3, [r2, #0]
 8002b8a:	68da      	ldr	r2, [r3, #12]
 8002b8c:	f022 0204 	bic.w	r2, r2, #4
 8002b90:	60da      	str	r2, [r3, #12]
 8002b92:	4770      	bx	lr
 8002b94:	40000c00 	.word	0x40000c00
 8002b98:	20002158 	.word	0x20002158

08002b9c <HAL_ResumeTick>:
 8002b9c:	4b03      	ldr	r3, [pc, #12]	; (8002bac <HAL_ResumeTick+0x10>)
 8002b9e:	4a04      	ldr	r2, [pc, #16]	; (8002bb0 <HAL_ResumeTick+0x14>)
 8002ba0:	6013      	str	r3, [r2, #0]
 8002ba2:	68da      	ldr	r2, [r3, #12]
 8002ba4:	f042 0204 	orr.w	r2, r2, #4
 8002ba8:	60da      	str	r2, [r3, #12]
 8002baa:	4770      	bx	lr
 8002bac:	40000c00 	.word	0x40000c00
 8002bb0:	20002158 	.word	0x20002158

08002bb4 <Set_GPIO_Clock>:
 8002bb4:	b500      	push	{lr}
 8002bb6:	2300      	movs	r3, #0
 8002bb8:	b089      	sub	sp, #36	; 0x24
 8002bba:	2807      	cmp	r0, #7
 8002bbc:	d86f      	bhi.n	8002c9e <Set_GPIO_Clock+0xea>
 8002bbe:	e8df f000 	tbb	[pc, r0]
 8002bc2:	1304      	.short	0x1304
 8002bc4:	473a2d20 	.word	0x473a2d20
 8002bc8:	6154      	.short	0x6154
 8002bca:	9300      	str	r3, [sp, #0]
 8002bcc:	4b36      	ldr	r3, [pc, #216]	; (8002ca8 <Set_GPIO_Clock+0xf4>)
 8002bce:	4837      	ldr	r0, [pc, #220]	; (8002cac <Set_GPIO_Clock+0xf8>)
 8002bd0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002bd2:	f042 0201 	orr.w	r2, r2, #1
 8002bd6:	631a      	str	r2, [r3, #48]	; 0x30
 8002bd8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bda:	f003 0301 	and.w	r3, r3, #1
 8002bde:	9300      	str	r3, [sp, #0]
 8002be0:	9b00      	ldr	r3, [sp, #0]
 8002be2:	b009      	add	sp, #36	; 0x24
 8002be4:	f85d fb04 	ldr.w	pc, [sp], #4
 8002be8:	9301      	str	r3, [sp, #4]
 8002bea:	4b2f      	ldr	r3, [pc, #188]	; (8002ca8 <Set_GPIO_Clock+0xf4>)
 8002bec:	4830      	ldr	r0, [pc, #192]	; (8002cb0 <Set_GPIO_Clock+0xfc>)
 8002bee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002bf0:	f042 0202 	orr.w	r2, r2, #2
 8002bf4:	631a      	str	r2, [r3, #48]	; 0x30
 8002bf6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bf8:	f003 0302 	and.w	r3, r3, #2
 8002bfc:	9301      	str	r3, [sp, #4]
 8002bfe:	9b01      	ldr	r3, [sp, #4]
 8002c00:	e7ef      	b.n	8002be2 <Set_GPIO_Clock+0x2e>
 8002c02:	9302      	str	r3, [sp, #8]
 8002c04:	4b28      	ldr	r3, [pc, #160]	; (8002ca8 <Set_GPIO_Clock+0xf4>)
 8002c06:	482b      	ldr	r0, [pc, #172]	; (8002cb4 <Set_GPIO_Clock+0x100>)
 8002c08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002c0a:	f042 0204 	orr.w	r2, r2, #4
 8002c0e:	631a      	str	r2, [r3, #48]	; 0x30
 8002c10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c12:	f003 0304 	and.w	r3, r3, #4
 8002c16:	9302      	str	r3, [sp, #8]
 8002c18:	9b02      	ldr	r3, [sp, #8]
 8002c1a:	e7e2      	b.n	8002be2 <Set_GPIO_Clock+0x2e>
 8002c1c:	9303      	str	r3, [sp, #12]
 8002c1e:	4b22      	ldr	r3, [pc, #136]	; (8002ca8 <Set_GPIO_Clock+0xf4>)
 8002c20:	4825      	ldr	r0, [pc, #148]	; (8002cb8 <Set_GPIO_Clock+0x104>)
 8002c22:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002c24:	f042 0208 	orr.w	r2, r2, #8
 8002c28:	631a      	str	r2, [r3, #48]	; 0x30
 8002c2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c2c:	f003 0308 	and.w	r3, r3, #8
 8002c30:	9303      	str	r3, [sp, #12]
 8002c32:	9b03      	ldr	r3, [sp, #12]
 8002c34:	e7d5      	b.n	8002be2 <Set_GPIO_Clock+0x2e>
 8002c36:	9304      	str	r3, [sp, #16]
 8002c38:	4b1b      	ldr	r3, [pc, #108]	; (8002ca8 <Set_GPIO_Clock+0xf4>)
 8002c3a:	4820      	ldr	r0, [pc, #128]	; (8002cbc <Set_GPIO_Clock+0x108>)
 8002c3c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002c3e:	f042 0210 	orr.w	r2, r2, #16
 8002c42:	631a      	str	r2, [r3, #48]	; 0x30
 8002c44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c46:	f003 0310 	and.w	r3, r3, #16
 8002c4a:	9304      	str	r3, [sp, #16]
 8002c4c:	9b04      	ldr	r3, [sp, #16]
 8002c4e:	e7c8      	b.n	8002be2 <Set_GPIO_Clock+0x2e>
 8002c50:	9305      	str	r3, [sp, #20]
 8002c52:	4b15      	ldr	r3, [pc, #84]	; (8002ca8 <Set_GPIO_Clock+0xf4>)
 8002c54:	481a      	ldr	r0, [pc, #104]	; (8002cc0 <Set_GPIO_Clock+0x10c>)
 8002c56:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002c58:	f042 0220 	orr.w	r2, r2, #32
 8002c5c:	631a      	str	r2, [r3, #48]	; 0x30
 8002c5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c60:	f003 0320 	and.w	r3, r3, #32
 8002c64:	9305      	str	r3, [sp, #20]
 8002c66:	9b05      	ldr	r3, [sp, #20]
 8002c68:	e7bb      	b.n	8002be2 <Set_GPIO_Clock+0x2e>
 8002c6a:	9306      	str	r3, [sp, #24]
 8002c6c:	4b0e      	ldr	r3, [pc, #56]	; (8002ca8 <Set_GPIO_Clock+0xf4>)
 8002c6e:	4815      	ldr	r0, [pc, #84]	; (8002cc4 <Set_GPIO_Clock+0x110>)
 8002c70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002c72:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002c76:	631a      	str	r2, [r3, #48]	; 0x30
 8002c78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c7a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002c7e:	9306      	str	r3, [sp, #24]
 8002c80:	9b06      	ldr	r3, [sp, #24]
 8002c82:	e7ae      	b.n	8002be2 <Set_GPIO_Clock+0x2e>
 8002c84:	9307      	str	r3, [sp, #28]
 8002c86:	4b08      	ldr	r3, [pc, #32]	; (8002ca8 <Set_GPIO_Clock+0xf4>)
 8002c88:	480f      	ldr	r0, [pc, #60]	; (8002cc8 <Set_GPIO_Clock+0x114>)
 8002c8a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002c8c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002c90:	631a      	str	r2, [r3, #48]	; 0x30
 8002c92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c94:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002c98:	9307      	str	r3, [sp, #28]
 8002c9a:	9b07      	ldr	r3, [sp, #28]
 8002c9c:	e7a1      	b.n	8002be2 <Set_GPIO_Clock+0x2e>
 8002c9e:	480b      	ldr	r0, [pc, #44]	; (8002ccc <Set_GPIO_Clock+0x118>)
 8002ca0:	f7fe fc64 	bl	800156c <error>
 8002ca4:	2000      	movs	r0, #0
 8002ca6:	e79c      	b.n	8002be2 <Set_GPIO_Clock+0x2e>
 8002ca8:	40023800 	.word	0x40023800
 8002cac:	40020000 	.word	0x40020000
 8002cb0:	40020400 	.word	0x40020400
 8002cb4:	40020800 	.word	0x40020800
 8002cb8:	40020c00 	.word	0x40020c00
 8002cbc:	40021000 	.word	0x40021000
 8002cc0:	40021400 	.word	0x40021400
 8002cc4:	40021800 	.word	0x40021800
 8002cc8:	40021c00 	.word	0x40021c00
 8002ccc:	080064d8 	.word	0x080064d8

08002cd0 <gpio_set>:
 8002cd0:	b510      	push	{r4, lr}
 8002cd2:	2100      	movs	r1, #0
 8002cd4:	4604      	mov	r4, r0
 8002cd6:	f004 040f 	and.w	r4, r4, #15
 8002cda:	f000 f957 	bl	8002f8c <pin_function>
 8002cde:	2001      	movs	r0, #1
 8002ce0:	40a0      	lsls	r0, r4
 8002ce2:	bd10      	pop	{r4, pc}

08002ce4 <gpio_init>:
 8002ce4:	b570      	push	{r4, r5, r6, lr}
 8002ce6:	4604      	mov	r4, r0
 8002ce8:	1c4b      	adds	r3, r1, #1
 8002cea:	460e      	mov	r6, r1
 8002cec:	8221      	strh	r1, [r4, #16]
 8002cee:	d016      	beq.n	8002d1e <gpio_init+0x3a>
 8002cf0:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8002cf4:	f7ff ff5e 	bl	8002bb4 <Set_GPIO_Clock>
 8002cf8:	4605      	mov	r5, r0
 8002cfa:	4630      	mov	r0, r6
 8002cfc:	f7ff ffe8 	bl	8002cd0 <gpio_set>
 8002d00:	8a23      	ldrh	r3, [r4, #16]
 8002d02:	4a07      	ldr	r2, [pc, #28]	; (8002d20 <gpio_init+0x3c>)
 8002d04:	6165      	str	r5, [r4, #20]
 8002d06:	f003 030f 	and.w	r3, r3, #15
 8002d0a:	6020      	str	r0, [r4, #0]
 8002d0c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002d10:	61a3      	str	r3, [r4, #24]
 8002d12:	f105 0310 	add.w	r3, r5, #16
 8002d16:	3518      	adds	r5, #24
 8002d18:	6063      	str	r3, [r4, #4]
 8002d1a:	60a5      	str	r5, [r4, #8]
 8002d1c:	60e5      	str	r5, [r4, #12]
 8002d1e:	bd70      	pop	{r4, r5, r6, pc}
 8002d20:	080064fc 	.word	0x080064fc

08002d24 <gpio_mode>:
 8002d24:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8002d28:	f000 b9b4 	b.w	8003094 <pin_mode>

08002d2c <gpio_dir>:
 8002d2c:	b510      	push	{r4, lr}
 8002d2e:	6983      	ldr	r3, [r0, #24]
 8002d30:	6944      	ldr	r4, [r0, #20]
 8002d32:	b971      	cbnz	r1, 8002d52 <gpio_dir+0x26>
 8002d34:	6821      	ldr	r1, [r4, #0]
 8002d36:	fa93 f2a3 	rbit	r2, r3
 8002d3a:	fab2 f282 	clz	r2, r2
 8002d3e:	2003      	movs	r0, #3
 8002d40:	0052      	lsls	r2, r2, #1
 8002d42:	fa00 f202 	lsl.w	r2, r0, r2
 8002d46:	ea21 0202 	bic.w	r2, r1, r2
 8002d4a:	fa93 f3a3 	rbit	r3, r3
 8002d4e:	6022      	str	r2, [r4, #0]
 8002d50:	bd10      	pop	{r4, pc}
 8002d52:	6822      	ldr	r2, [r4, #0]
 8002d54:	fa93 f1a3 	rbit	r1, r3
 8002d58:	fab1 f181 	clz	r1, r1
 8002d5c:	fa93 f3a3 	rbit	r3, r3
 8002d60:	2003      	movs	r0, #3
 8002d62:	0049      	lsls	r1, r1, #1
 8002d64:	fa00 f101 	lsl.w	r1, r0, r1
 8002d68:	fab3 f383 	clz	r3, r3
 8002d6c:	ea22 0201 	bic.w	r2, r2, r1
 8002d70:	005b      	lsls	r3, r3, #1
 8002d72:	2101      	movs	r1, #1
 8002d74:	fa01 f303 	lsl.w	r3, r1, r3
 8002d78:	4313      	orrs	r3, r2
 8002d7a:	6023      	str	r3, [r4, #0]
 8002d7c:	bd10      	pop	{r4, pc}

08002d7e <hal_sleep>:
 8002d7e:	b508      	push	{r3, lr}
 8002d80:	f7ff ff00 	bl	8002b84 <HAL_SuspendTick>
 8002d84:	2101      	movs	r1, #1
 8002d86:	2000      	movs	r0, #0
 8002d88:	f001 fcea 	bl	8004760 <HAL_PWR_EnterSLEEPMode>
 8002d8c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002d90:	f7ff bf04 	b.w	8002b9c <HAL_ResumeTick>

08002d94 <can_irq>:
 8002d94:	6943      	ldr	r3, [r0, #20]
 8002d96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002d9a:	4c3a      	ldr	r4, [pc, #232]	; (8002e84 <can_irq+0xf0>)
 8002d9c:	460d      	mov	r5, r1
 8002d9e:	07d9      	lsls	r1, r3, #31
 8002da0:	6020      	str	r0, [r4, #0]
 8002da2:	d52c      	bpl.n	8002dfe <can_irq+0x6a>
 8002da4:	6881      	ldr	r1, [r0, #8]
 8002da6:	f8df e0e8 	ldr.w	lr, [pc, #232]	; 8002e90 <can_irq+0xfc>
 8002daa:	6882      	ldr	r2, [r0, #8]
 8002dac:	4f36      	ldr	r7, [pc, #216]	; (8002e88 <can_irq+0xf4>)
 8002dae:	6883      	ldr	r3, [r0, #8]
 8002db0:	4e36      	ldr	r6, [pc, #216]	; (8002e8c <can_irq+0xf8>)
 8002db2:	ea01 010e 	and.w	r1, r1, lr
 8002db6:	4571      	cmp	r1, lr
 8002db8:	ea02 0207 	and.w	r2, r2, r7
 8002dbc:	bf04      	itt	eq
 8002dbe:	f04f 0e01 	moveq.w	lr, #1
 8002dc2:	f8c0 e008 	streq.w	lr, [r0, #8]
 8002dc6:	42ba      	cmp	r2, r7
 8002dc8:	ea03 0306 	and.w	r3, r3, r6
 8002dcc:	bf04      	itt	eq
 8002dce:	f44f 7780 	moveq.w	r7, #256	; 0x100
 8002dd2:	6087      	streq	r7, [r0, #8]
 8002dd4:	42b3      	cmp	r3, r6
 8002dd6:	bf04      	itt	eq
 8002dd8:	f44f 3680 	moveq.w	r6, #65536	; 0x10000
 8002ddc:	6086      	streq	r6, [r0, #8]
 8002dde:	482c      	ldr	r0, [pc, #176]	; (8002e90 <can_irq+0xfc>)
 8002de0:	4281      	cmp	r1, r0
 8002de2:	d005      	beq.n	8002df0 <can_irq+0x5c>
 8002de4:	4928      	ldr	r1, [pc, #160]	; (8002e88 <can_irq+0xf4>)
 8002de6:	428a      	cmp	r2, r1
 8002de8:	d002      	beq.n	8002df0 <can_irq+0x5c>
 8002dea:	4a28      	ldr	r2, [pc, #160]	; (8002e8c <can_irq+0xf8>)
 8002dec:	4293      	cmp	r3, r2
 8002dee:	d106      	bne.n	8002dfe <can_irq+0x6a>
 8002df0:	4b28      	ldr	r3, [pc, #160]	; (8002e94 <can_irq+0x100>)
 8002df2:	4a29      	ldr	r2, [pc, #164]	; (8002e98 <can_irq+0x104>)
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8002dfa:	2101      	movs	r1, #1
 8002dfc:	4798      	blx	r3
 8002dfe:	6823      	ldr	r3, [r4, #0]
 8002e00:	68da      	ldr	r2, [r3, #12]
 8002e02:	695b      	ldr	r3, [r3, #20]
 8002e04:	0792      	lsls	r2, r2, #30
 8002e06:	d008      	beq.n	8002e1a <can_irq+0x86>
 8002e08:	079f      	lsls	r7, r3, #30
 8002e0a:	d506      	bpl.n	8002e1a <can_irq+0x86>
 8002e0c:	4b21      	ldr	r3, [pc, #132]	; (8002e94 <can_irq+0x100>)
 8002e0e:	4a22      	ldr	r2, [pc, #136]	; (8002e98 <can_irq+0x104>)
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8002e16:	2100      	movs	r1, #0
 8002e18:	4798      	blx	r3
 8002e1a:	6823      	ldr	r3, [r4, #0]
 8002e1c:	6999      	ldr	r1, [r3, #24]
 8002e1e:	695a      	ldr	r2, [r3, #20]
 8002e20:	695b      	ldr	r3, [r3, #20]
 8002e22:	078e      	lsls	r6, r1, #30
 8002e24:	d50a      	bpl.n	8002e3c <can_irq+0xa8>
 8002e26:	0590      	lsls	r0, r2, #22
 8002e28:	d508      	bpl.n	8002e3c <can_irq+0xa8>
 8002e2a:	0419      	lsls	r1, r3, #16
 8002e2c:	d506      	bpl.n	8002e3c <can_irq+0xa8>
 8002e2e:	4b19      	ldr	r3, [pc, #100]	; (8002e94 <can_irq+0x100>)
 8002e30:	4a19      	ldr	r2, [pc, #100]	; (8002e98 <can_irq+0x104>)
 8002e32:	681b      	ldr	r3, [r3, #0]
 8002e34:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8002e38:	2105      	movs	r1, #5
 8002e3a:	4798      	blx	r3
 8002e3c:	6822      	ldr	r2, [r4, #0]
 8002e3e:	6997      	ldr	r7, [r2, #24]
 8002e40:	6956      	ldr	r6, [r2, #20]
 8002e42:	6952      	ldr	r2, [r2, #20]
 8002e44:	f017 0704 	ands.w	r7, r7, #4
 8002e48:	f406 6680 	and.w	r6, r6, #1024	; 0x400
 8002e4c:	d009      	beq.n	8002e62 <can_irq+0xce>
 8002e4e:	b146      	cbz	r6, 8002e62 <can_irq+0xce>
 8002e50:	0412      	lsls	r2, r2, #16
 8002e52:	d506      	bpl.n	8002e62 <can_irq+0xce>
 8002e54:	4b0f      	ldr	r3, [pc, #60]	; (8002e94 <can_irq+0x100>)
 8002e56:	4a10      	ldr	r2, [pc, #64]	; (8002e98 <can_irq+0x104>)
 8002e58:	681b      	ldr	r3, [r3, #0]
 8002e5a:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8002e5e:	2107      	movs	r1, #7
 8002e60:	4798      	blx	r3
 8002e62:	6823      	ldr	r3, [r4, #0]
 8002e64:	695b      	ldr	r3, [r3, #20]
 8002e66:	b15f      	cbz	r7, 8002e80 <can_irq+0xec>
 8002e68:	b156      	cbz	r6, 8002e80 <can_irq+0xec>
 8002e6a:	041b      	lsls	r3, r3, #16
 8002e6c:	d508      	bpl.n	8002e80 <can_irq+0xec>
 8002e6e:	4b09      	ldr	r3, [pc, #36]	; (8002e94 <can_irq+0x100>)
 8002e70:	4a09      	ldr	r2, [pc, #36]	; (8002e98 <can_irq+0x104>)
 8002e72:	681b      	ldr	r3, [r3, #0]
 8002e74:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8002e78:	2102      	movs	r1, #2
 8002e7a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002e7e:	4718      	bx	r3
 8002e80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002e84:	20001308 	.word	0x20001308
 8002e88:	08000300 	.word	0x08000300
 8002e8c:	10030000 	.word	0x10030000
 8002e90:	04000003 	.word	0x04000003
 8002e94:	20001350 	.word	0x20001350
 8002e98:	20001348 	.word	0x20001348

08002e9c <CAN1_SCE_IRQHandler>:
 8002e9c:	2100      	movs	r1, #0
 8002e9e:	4801      	ldr	r0, [pc, #4]	; (8002ea4 <CAN1_SCE_IRQHandler+0x8>)
 8002ea0:	f7ff bf78 	b.w	8002d94 <can_irq>
 8002ea4:	40006400 	.word	0x40006400

08002ea8 <CAN1_TX_IRQHandler>:
 8002ea8:	f7ff bff8 	b.w	8002e9c <CAN1_SCE_IRQHandler>

08002eac <CAN1_RX0_IRQHandler>:
 8002eac:	f7ff bff6 	b.w	8002e9c <CAN1_SCE_IRQHandler>

08002eb0 <CAN2_SCE_IRQHandler>:
 8002eb0:	2101      	movs	r1, #1
 8002eb2:	4801      	ldr	r0, [pc, #4]	; (8002eb8 <CAN2_SCE_IRQHandler+0x8>)
 8002eb4:	f7ff bf6e 	b.w	8002d94 <can_irq>
 8002eb8:	40006800 	.word	0x40006800

08002ebc <CAN2_TX_IRQHandler>:
 8002ebc:	f7ff bff8 	b.w	8002eb0 <CAN2_SCE_IRQHandler>

08002ec0 <CAN2_RX0_IRQHandler>:
 8002ec0:	f7ff bff6 	b.w	8002eb0 <CAN2_SCE_IRQHandler>

08002ec4 <us_ticker_init>:
 8002ec4:	4b05      	ldr	r3, [pc, #20]	; (8002edc <us_ticker_init+0x18>)
 8002ec6:	6818      	ldr	r0, [r3, #0]
 8002ec8:	b930      	cbnz	r0, 8002ed8 <us_ticker_init+0x14>
 8002eca:	2201      	movs	r2, #1
 8002ecc:	601a      	str	r2, [r3, #0]
 8002ece:	4b04      	ldr	r3, [pc, #16]	; (8002ee0 <us_ticker_init+0x1c>)
 8002ed0:	4a04      	ldr	r2, [pc, #16]	; (8002ee4 <us_ticker_init+0x20>)
 8002ed2:	601a      	str	r2, [r3, #0]
 8002ed4:	f7ff bdf6 	b.w	8002ac4 <HAL_InitTick>
 8002ed8:	4770      	bx	lr
 8002eda:	bf00      	nop
 8002edc:	20001354 	.word	0x20001354
 8002ee0:	20002158 	.word	0x20002158
 8002ee4:	40000c00 	.word	0x40000c00

08002ee8 <us_ticker_read>:
 8002ee8:	b508      	push	{r3, lr}
 8002eea:	4b04      	ldr	r3, [pc, #16]	; (8002efc <us_ticker_read+0x14>)
 8002eec:	681b      	ldr	r3, [r3, #0]
 8002eee:	b90b      	cbnz	r3, 8002ef4 <us_ticker_read+0xc>
 8002ef0:	f7ff ffe8 	bl	8002ec4 <us_ticker_init>
 8002ef4:	4b02      	ldr	r3, [pc, #8]	; (8002f00 <us_ticker_read+0x18>)
 8002ef6:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8002ef8:	bd08      	pop	{r3, pc}
 8002efa:	bf00      	nop
 8002efc:	20001354 	.word	0x20001354
 8002f00:	40000c00 	.word	0x40000c00

08002f04 <us_ticker_set_interrupt>:
 8002f04:	4b04      	ldr	r3, [pc, #16]	; (8002f18 <us_ticker_set_interrupt+0x14>)
 8002f06:	4a05      	ldr	r2, [pc, #20]	; (8002f1c <us_ticker_set_interrupt+0x18>)
 8002f08:	6013      	str	r3, [r2, #0]
 8002f0a:	6358      	str	r0, [r3, #52]	; 0x34
 8002f0c:	68da      	ldr	r2, [r3, #12]
 8002f0e:	f042 0202 	orr.w	r2, r2, #2
 8002f12:	60da      	str	r2, [r3, #12]
 8002f14:	4770      	bx	lr
 8002f16:	bf00      	nop
 8002f18:	40000c00 	.word	0x40000c00
 8002f1c:	20002158 	.word	0x20002158

08002f20 <us_ticker_disable_interrupt>:
 8002f20:	4b03      	ldr	r3, [pc, #12]	; (8002f30 <us_ticker_disable_interrupt+0x10>)
 8002f22:	4a04      	ldr	r2, [pc, #16]	; (8002f34 <us_ticker_disable_interrupt+0x14>)
 8002f24:	6013      	str	r3, [r2, #0]
 8002f26:	68da      	ldr	r2, [r3, #12]
 8002f28:	f022 0202 	bic.w	r2, r2, #2
 8002f2c:	60da      	str	r2, [r3, #12]
 8002f2e:	4770      	bx	lr
 8002f30:	40000c00 	.word	0x40000c00
 8002f34:	20002158 	.word	0x20002158

08002f38 <us_ticker_clear_interrupt>:
 8002f38:	4a03      	ldr	r2, [pc, #12]	; (8002f48 <us_ticker_clear_interrupt+0x10>)
 8002f3a:	4b04      	ldr	r3, [pc, #16]	; (8002f4c <us_ticker_clear_interrupt+0x14>)
 8002f3c:	6013      	str	r3, [r2, #0]
 8002f3e:	f06f 0202 	mvn.w	r2, #2
 8002f42:	611a      	str	r2, [r3, #16]
 8002f44:	4770      	bx	lr
 8002f46:	bf00      	nop
 8002f48:	20002158 	.word	0x20002158
 8002f4c:	40000c00 	.word	0x40000c00

08002f50 <LL_GPIO_SetPinPull>:
 8002f50:	b530      	push	{r4, r5, lr}
 8002f52:	68c3      	ldr	r3, [r0, #12]
 8002f54:	fa91 f4a1 	rbit	r4, r1
 8002f58:	fab4 f484 	clz	r4, r4
 8002f5c:	fa91 f1a1 	rbit	r1, r1
 8002f60:	2503      	movs	r5, #3
 8002f62:	fab1 f181 	clz	r1, r1
 8002f66:	0064      	lsls	r4, r4, #1
 8002f68:	fa05 f404 	lsl.w	r4, r5, r4
 8002f6c:	0049      	lsls	r1, r1, #1
 8002f6e:	ea23 0304 	bic.w	r3, r3, r4
 8002f72:	fa02 f101 	lsl.w	r1, r2, r1
 8002f76:	4319      	orrs	r1, r3
 8002f78:	60c1      	str	r1, [r0, #12]
 8002f7a:	bd30      	pop	{r4, r5, pc}

08002f7c <stm_pin_PullConfig>:
 8002f7c:	2a01      	cmp	r2, #1
 8002f7e:	d002      	beq.n	8002f86 <stm_pin_PullConfig+0xa>
 8002f80:	2a02      	cmp	r2, #2
 8002f82:	bf18      	it	ne
 8002f84:	2200      	movne	r2, #0
 8002f86:	f7ff bfe3 	b.w	8002f50 <LL_GPIO_SetPinPull>
	...

08002f8c <pin_function>:
 8002f8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002f90:	4b3f      	ldr	r3, [pc, #252]	; (8003090 <pin_function+0x104>)
 8002f92:	f000 080f 	and.w	r8, r0, #15
 8002f96:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8002f9a:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 8002f9e:	460e      	mov	r6, r1
 8002fa0:	f001 0507 	and.w	r5, r1, #7
 8002fa4:	f7ff fe06 	bl	8002bb4 <Set_GPIO_Clock>
 8002fa8:	6883      	ldr	r3, [r0, #8]
 8002faa:	fa94 f1a4 	rbit	r1, r4
 8002fae:	fab1 f181 	clz	r1, r1
 8002fb2:	fa94 f2a4 	rbit	r2, r4
 8002fb6:	2703      	movs	r7, #3
 8002fb8:	0049      	lsls	r1, r1, #1
 8002fba:	fa07 f101 	lsl.w	r1, r7, r1
 8002fbe:	fab2 f282 	clz	r2, r2
 8002fc2:	ea23 0301 	bic.w	r3, r3, r1
 8002fc6:	0052      	lsls	r2, r2, #1
 8002fc8:	2102      	movs	r1, #2
 8002fca:	fa01 f202 	lsl.w	r2, r1, r2
 8002fce:	4313      	orrs	r3, r2
 8002fd0:	428d      	cmp	r5, r1
 8002fd2:	6083      	str	r3, [r0, #8]
 8002fd4:	d028      	beq.n	8003028 <pin_function+0x9c>
 8002fd6:	42bd      	cmp	r5, r7
 8002fd8:	d041      	beq.n	800305e <pin_function+0xd2>
 8002fda:	2d01      	cmp	r5, #1
 8002fdc:	d03f      	beq.n	800305e <pin_function+0xd2>
 8002fde:	2300      	movs	r3, #0
 8002fe0:	6802      	ldr	r2, [r0, #0]
 8002fe2:	fa94 f7a4 	rbit	r7, r4
 8002fe6:	fab7 f787 	clz	r7, r7
 8002fea:	fa94 f1a4 	rbit	r1, r4
 8002fee:	f04f 0e03 	mov.w	lr, #3
 8002ff2:	fab1 f181 	clz	r1, r1
 8002ff6:	007f      	lsls	r7, r7, #1
 8002ff8:	fa0e f707 	lsl.w	r7, lr, r7
 8002ffc:	0049      	lsls	r1, r1, #1
 8002ffe:	ea22 0207 	bic.w	r2, r2, r7
 8003002:	408b      	lsls	r3, r1
 8003004:	3d01      	subs	r5, #1
 8003006:	4313      	orrs	r3, r2
 8003008:	2d01      	cmp	r5, #1
 800300a:	6003      	str	r3, [r0, #0]
 800300c:	d805      	bhi.n	800301a <pin_function+0x8e>
 800300e:	6843      	ldr	r3, [r0, #4]
 8003010:	0732      	lsls	r2, r6, #28
 8003012:	bf4c      	ite	mi
 8003014:	4323      	orrmi	r3, r4
 8003016:	43a3      	bicpl	r3, r4
 8003018:	6043      	str	r3, [r0, #4]
 800301a:	f3c6 1201 	ubfx	r2, r6, #4, #2
 800301e:	4621      	mov	r1, r4
 8003020:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003024:	f7ff bfaa 	b.w	8002f7c <stm_pin_PullConfig>
 8003028:	f1b8 0f07 	cmp.w	r8, #7
 800302c:	f3c6 2703 	ubfx	r7, r6, #8, #4
 8003030:	d917      	bls.n	8003062 <pin_function+0xd6>
 8003032:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003034:	0a23      	lsrs	r3, r4, #8
 8003036:	fa93 f1a3 	rbit	r1, r3
 800303a:	fab1 f181 	clz	r1, r1
 800303e:	fa93 f3a3 	rbit	r3, r3
 8003042:	f04f 0e0f 	mov.w	lr, #15
 8003046:	fab3 f383 	clz	r3, r3
 800304a:	0089      	lsls	r1, r1, #2
 800304c:	fa0e f101 	lsl.w	r1, lr, r1
 8003050:	009b      	lsls	r3, r3, #2
 8003052:	ea22 0201 	bic.w	r2, r2, r1
 8003056:	fa07 f303 	lsl.w	r3, r7, r3
 800305a:	4313      	orrs	r3, r2
 800305c:	6243      	str	r3, [r0, #36]	; 0x24
 800305e:	462b      	mov	r3, r5
 8003060:	e7be      	b.n	8002fe0 <pin_function+0x54>
 8003062:	6a02      	ldr	r2, [r0, #32]
 8003064:	fa94 f3a4 	rbit	r3, r4
 8003068:	fab3 f383 	clz	r3, r3
 800306c:	fa94 f1a4 	rbit	r1, r4
 8003070:	f04f 0e0f 	mov.w	lr, #15
 8003074:	fab1 f181 	clz	r1, r1
 8003078:	009b      	lsls	r3, r3, #2
 800307a:	fa0e f303 	lsl.w	r3, lr, r3
 800307e:	0089      	lsls	r1, r1, #2
 8003080:	ea22 0203 	bic.w	r2, r2, r3
 8003084:	fa07 f301 	lsl.w	r3, r7, r1
 8003088:	4313      	orrs	r3, r2
 800308a:	6203      	str	r3, [r0, #32]
 800308c:	e7e7      	b.n	800305e <pin_function+0xd2>
 800308e:	bf00      	nop
 8003090:	080064fc 	.word	0x080064fc

08003094 <pin_mode>:
 8003094:	b538      	push	{r3, r4, r5, lr}
 8003096:	f000 020f 	and.w	r2, r0, #15
 800309a:	4b19      	ldr	r3, [pc, #100]	; (8003100 <pin_mode+0x6c>)
 800309c:	f3c0 1003 	ubfx	r0, r0, #4, #4
 80030a0:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80030a4:	460d      	mov	r5, r1
 80030a6:	f7ff fd85 	bl	8002bb4 <Set_GPIO_Clock>
 80030aa:	fb04 f204 	mul.w	r2, r4, r4
 80030ae:	6801      	ldr	r1, [r0, #0]
 80030b0:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80030b4:	400b      	ands	r3, r1
 80030b6:	fbb3 f3f2 	udiv	r3, r3, r2
 80030ba:	3b01      	subs	r3, #1
 80030bc:	2b01      	cmp	r3, #1
 80030be:	d805      	bhi.n	80030cc <pin_mode+0x38>
 80030c0:	1eeb      	subs	r3, r5, #3
 80030c2:	2b02      	cmp	r3, #2
 80030c4:	6843      	ldr	r3, [r0, #4]
 80030c6:	d809      	bhi.n	80030dc <pin_mode+0x48>
 80030c8:	4323      	orrs	r3, r4
 80030ca:	6043      	str	r3, [r0, #4]
 80030cc:	2d03      	cmp	r5, #3
 80030ce:	d108      	bne.n	80030e2 <pin_mode+0x4e>
 80030d0:	2201      	movs	r2, #1
 80030d2:	4621      	mov	r1, r4
 80030d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80030d8:	f7ff bf50 	b.w	8002f7c <stm_pin_PullConfig>
 80030dc:	ea23 0304 	bic.w	r3, r3, r4
 80030e0:	6043      	str	r3, [r0, #4]
 80030e2:	2d01      	cmp	r5, #1
 80030e4:	d0f4      	beq.n	80030d0 <pin_mode+0x3c>
 80030e6:	2d05      	cmp	r5, #5
 80030e8:	d001      	beq.n	80030ee <pin_mode+0x5a>
 80030ea:	2d02      	cmp	r5, #2
 80030ec:	d101      	bne.n	80030f2 <pin_mode+0x5e>
 80030ee:	2202      	movs	r2, #2
 80030f0:	e7ef      	b.n	80030d2 <pin_mode+0x3e>
 80030f2:	4621      	mov	r1, r4
 80030f4:	2200      	movs	r2, #0
 80030f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80030fa:	f7ff bf29 	b.w	8002f50 <LL_GPIO_SetPinPull>
 80030fe:	bf00      	nop
 8003100:	080064fc 	.word	0x080064fc

08003104 <__NVIC_DisableIRQ>:
 8003104:	0943      	lsrs	r3, r0, #5
 8003106:	2201      	movs	r2, #1
 8003108:	f000 001f 	and.w	r0, r0, #31
 800310c:	fa02 f000 	lsl.w	r0, r2, r0
 8003110:	3320      	adds	r3, #32
 8003112:	4a04      	ldr	r2, [pc, #16]	; (8003124 <__NVIC_DisableIRQ+0x20>)
 8003114:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8003118:	f3bf 8f4f 	dsb	sy
 800311c:	f3bf 8f6f 	isb	sy
 8003120:	4770      	bx	lr
 8003122:	bf00      	nop
 8003124:	e000e100 	.word	0xe000e100

08003128 <init_uart>:
 8003128:	6842      	ldr	r2, [r0, #4]
 800312a:	4916      	ldr	r1, [pc, #88]	; (8003184 <init_uart+0x5c>)
 800312c:	0192      	lsls	r2, r2, #6
 800312e:	b510      	push	{r4, lr}
 8003130:	188b      	adds	r3, r1, r2
 8003132:	6804      	ldr	r4, [r0, #0]
 8003134:	508c      	str	r4, [r1, r2]
 8003136:	6882      	ldr	r2, [r0, #8]
 8003138:	605a      	str	r2, [r3, #4]
 800313a:	68c2      	ldr	r2, [r0, #12]
 800313c:	609a      	str	r2, [r3, #8]
 800313e:	6902      	ldr	r2, [r0, #16]
 8003140:	60da      	str	r2, [r3, #12]
 8003142:	6942      	ldr	r2, [r0, #20]
 8003144:	611a      	str	r2, [r3, #16]
 8003146:	6a02      	ldr	r2, [r0, #32]
 8003148:	619a      	str	r2, [r3, #24]
 800314a:	2200      	movs	r2, #0
 800314c:	61da      	str	r2, [r3, #28]
 800314e:	84da      	strh	r2, [r3, #38]	; 0x26
 8003150:	849a      	strh	r2, [r3, #36]	; 0x24
 8003152:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003154:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003156:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 800315a:	3201      	adds	r2, #1
 800315c:	d10a      	bne.n	8003174 <init_uart+0x4c>
 800315e:	2208      	movs	r2, #8
 8003160:	615a      	str	r2, [r3, #20]
 8003162:	4618      	mov	r0, r3
 8003164:	f001 fa27 	bl	80045b6 <HAL_UART_Init>
 8003168:	b158      	cbz	r0, 8003182 <init_uart+0x5a>
 800316a:	4807      	ldr	r0, [pc, #28]	; (8003188 <init_uart+0x60>)
 800316c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003170:	f7fe b9fc 	b.w	800156c <error>
 8003174:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8003178:	3201      	adds	r2, #1
 800317a:	bf0c      	ite	eq
 800317c:	2204      	moveq	r2, #4
 800317e:	220c      	movne	r2, #12
 8003180:	e7ee      	b.n	8003160 <init_uart+0x38>
 8003182:	bd10      	pop	{r4, pc}
 8003184:	20001380 	.word	0x20001380
 8003188:	0800653c 	.word	0x0800653c

0800318c <uart_irq>:
 800318c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800318e:	4e19      	ldr	r6, [pc, #100]	; (80031f4 <uart_irq+0x68>)
 8003190:	4607      	mov	r7, r0
 8003192:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8003196:	2800      	cmp	r0, #0
 8003198:	d02a      	beq.n	80031f0 <uart_irq+0x64>
 800319a:	4c17      	ldr	r4, [pc, #92]	; (80031f8 <uart_irq+0x6c>)
 800319c:	01bd      	lsls	r5, r7, #6
 800319e:	5963      	ldr	r3, [r4, r5]
 80031a0:	681a      	ldr	r2, [r3, #0]
 80031a2:	0652      	lsls	r2, r2, #25
 80031a4:	d50a      	bpl.n	80031bc <uart_irq+0x30>
 80031a6:	68db      	ldr	r3, [r3, #12]
 80031a8:	0659      	lsls	r1, r3, #25
 80031aa:	d507      	bpl.n	80031bc <uart_irq+0x30>
 80031ac:	4b13      	ldr	r3, [pc, #76]	; (80031fc <uart_irq+0x70>)
 80031ae:	2101      	movs	r1, #1
 80031b0:	681b      	ldr	r3, [r3, #0]
 80031b2:	4798      	blx	r3
 80031b4:	5963      	ldr	r3, [r4, r5]
 80031b6:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80031ba:	601a      	str	r2, [r3, #0]
 80031bc:	5963      	ldr	r3, [r4, r5]
 80031be:	681a      	ldr	r2, [r3, #0]
 80031c0:	0692      	lsls	r2, r2, #26
 80031c2:	d50c      	bpl.n	80031de <uart_irq+0x52>
 80031c4:	68db      	ldr	r3, [r3, #12]
 80031c6:	0698      	lsls	r0, r3, #26
 80031c8:	d509      	bpl.n	80031de <uart_irq+0x52>
 80031ca:	4b0c      	ldr	r3, [pc, #48]	; (80031fc <uart_irq+0x70>)
 80031cc:	f856 0027 	ldr.w	r0, [r6, r7, lsl #2]
 80031d0:	681b      	ldr	r3, [r3, #0]
 80031d2:	2100      	movs	r1, #0
 80031d4:	4798      	blx	r3
 80031d6:	5963      	ldr	r3, [r4, r5]
 80031d8:	f06f 0220 	mvn.w	r2, #32
 80031dc:	601a      	str	r2, [r3, #0]
 80031de:	5963      	ldr	r3, [r4, r5]
 80031e0:	681a      	ldr	r2, [r3, #0]
 80031e2:	0711      	lsls	r1, r2, #28
 80031e4:	d504      	bpl.n	80031f0 <uart_irq+0x64>
 80031e6:	695a      	ldr	r2, [r3, #20]
 80031e8:	07d2      	lsls	r2, r2, #31
 80031ea:	bf44      	itt	mi
 80031ec:	685b      	ldrmi	r3, [r3, #4]
 80031ee:	9301      	strmi	r3, [sp, #4]
 80031f0:	b003      	add	sp, #12
 80031f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80031f4:	2000135c 	.word	0x2000135c
 80031f8:	20001380 	.word	0x20001380
 80031fc:	20001358 	.word	0x20001358

08003200 <uart1_irq>:
 8003200:	2000      	movs	r0, #0
 8003202:	f7ff bfc3 	b.w	800318c <uart_irq>

08003206 <uart2_irq>:
 8003206:	2001      	movs	r0, #1
 8003208:	f7ff bfc0 	b.w	800318c <uart_irq>

0800320c <uart3_irq>:
 800320c:	2002      	movs	r0, #2
 800320e:	f7ff bfbd 	b.w	800318c <uart_irq>

08003212 <uart4_irq>:
 8003212:	2003      	movs	r0, #3
 8003214:	f7ff bfba 	b.w	800318c <uart_irq>

08003218 <uart5_irq>:
 8003218:	2004      	movs	r0, #4
 800321a:	f7ff bfb7 	b.w	800318c <uart_irq>

0800321e <uart6_irq>:
 800321e:	2005      	movs	r0, #5
 8003220:	f7ff bfb4 	b.w	800318c <uart_irq>

08003224 <serial_init>:
 8003224:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003226:	460e      	mov	r6, r1
 8003228:	b087      	sub	sp, #28
 800322a:	4604      	mov	r4, r0
 800322c:	496d      	ldr	r1, [pc, #436]	; (80033e4 <serial_init+0x1c0>)
 800322e:	4630      	mov	r0, r6
 8003230:	4615      	mov	r5, r2
 8003232:	f7fe f945 	bl	80014c0 <pinmap_peripheral>
 8003236:	496c      	ldr	r1, [pc, #432]	; (80033e8 <serial_init+0x1c4>)
 8003238:	4607      	mov	r7, r0
 800323a:	4628      	mov	r0, r5
 800323c:	f7fe f940 	bl	80014c0 <pinmap_peripheral>
 8003240:	4601      	mov	r1, r0
 8003242:	4638      	mov	r0, r7
 8003244:	f7fe f91e 	bl	8001484 <pinmap_merge>
 8003248:	4b68      	ldr	r3, [pc, #416]	; (80033ec <serial_init+0x1c8>)
 800324a:	6020      	str	r0, [r4, #0]
 800324c:	4298      	cmp	r0, r3
 800324e:	f000 809c 	beq.w	800338a <serial_init+0x166>
 8003252:	d836      	bhi.n	80032c2 <serial_init+0x9e>
 8003254:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8003258:	4298      	cmp	r0, r3
 800325a:	d069      	beq.n	8003330 <serial_init+0x10c>
 800325c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003260:	4298      	cmp	r0, r3
 8003262:	d07c      	beq.n	800335e <serial_init+0x13a>
 8003264:	495f      	ldr	r1, [pc, #380]	; (80033e4 <serial_init+0x1c0>)
 8003266:	4630      	mov	r0, r6
 8003268:	f7fe f8ee 	bl	8001448 <pinmap_pinout>
 800326c:	495e      	ldr	r1, [pc, #376]	; (80033e8 <serial_init+0x1c4>)
 800326e:	4628      	mov	r0, r5
 8003270:	f7fe f8ea 	bl	8001448 <pinmap_pinout>
 8003274:	1c72      	adds	r2, r6, #1
 8003276:	d003      	beq.n	8003280 <serial_init+0x5c>
 8003278:	2101      	movs	r1, #1
 800327a:	4630      	mov	r0, r6
 800327c:	f7ff ff0a 	bl	8003094 <pin_mode>
 8003280:	1c6b      	adds	r3, r5, #1
 8003282:	d003      	beq.n	800328c <serial_init+0x68>
 8003284:	2101      	movs	r1, #1
 8003286:	4628      	mov	r0, r5
 8003288:	f7ff ff04 	bl	8003094 <pin_mode>
 800328c:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8003290:	60a3      	str	r3, [r4, #8]
 8003292:	2300      	movs	r3, #0
 8003294:	60e3      	str	r3, [r4, #12]
 8003296:	6123      	str	r3, [r4, #16]
 8003298:	6163      	str	r3, [r4, #20]
 800329a:	6223      	str	r3, [r4, #32]
 800329c:	8326      	strh	r6, [r4, #24]
 800329e:	8365      	strh	r5, [r4, #26]
 80032a0:	4620      	mov	r0, r4
 80032a2:	f7ff ff41 	bl	8003128 <init_uart>
 80032a6:	6822      	ldr	r2, [r4, #0]
 80032a8:	4b51      	ldr	r3, [pc, #324]	; (80033f0 <serial_init+0x1cc>)
 80032aa:	429a      	cmp	r2, r3
 80032ac:	d107      	bne.n	80032be <serial_init+0x9a>
 80032ae:	4b51      	ldr	r3, [pc, #324]	; (80033f4 <serial_init+0x1d0>)
 80032b0:	4851      	ldr	r0, [pc, #324]	; (80033f8 <serial_init+0x1d4>)
 80032b2:	2201      	movs	r2, #1
 80032b4:	601a      	str	r2, [r3, #0]
 80032b6:	4621      	mov	r1, r4
 80032b8:	224c      	movs	r2, #76	; 0x4c
 80032ba:	f002 fa01 	bl	80056c0 <memcpy>
 80032be:	b007      	add	sp, #28
 80032c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80032c2:	4b4e      	ldr	r3, [pc, #312]	; (80033fc <serial_init+0x1d8>)
 80032c4:	4298      	cmp	r0, r3
 80032c6:	d01d      	beq.n	8003304 <serial_init+0xe0>
 80032c8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80032cc:	4298      	cmp	r0, r3
 80032ce:	d072      	beq.n	80033b6 <serial_init+0x192>
 80032d0:	f5a3 4344 	sub.w	r3, r3, #50176	; 0xc400
 80032d4:	4298      	cmp	r0, r3
 80032d6:	d1c5      	bne.n	8003264 <serial_init+0x40>
 80032d8:	4b49      	ldr	r3, [pc, #292]	; (8003400 <serial_init+0x1dc>)
 80032da:	6a1a      	ldr	r2, [r3, #32]
 80032dc:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80032e0:	621a      	str	r2, [r3, #32]
 80032e2:	6a1a      	ldr	r2, [r3, #32]
 80032e4:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 80032e8:	621a      	str	r2, [r3, #32]
 80032ea:	2200      	movs	r2, #0
 80032ec:	9204      	str	r2, [sp, #16]
 80032ee:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80032f0:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80032f4:	641a      	str	r2, [r3, #64]	; 0x40
 80032f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80032f8:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80032fc:	9304      	str	r3, [sp, #16]
 80032fe:	9b04      	ldr	r3, [sp, #16]
 8003300:	2304      	movs	r3, #4
 8003302:	e02a      	b.n	800335a <serial_init+0x136>
 8003304:	4b3e      	ldr	r3, [pc, #248]	; (8003400 <serial_init+0x1dc>)
 8003306:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003308:	f042 0210 	orr.w	r2, r2, #16
 800330c:	625a      	str	r2, [r3, #36]	; 0x24
 800330e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003310:	2100      	movs	r1, #0
 8003312:	f022 0210 	bic.w	r2, r2, #16
 8003316:	625a      	str	r2, [r3, #36]	; 0x24
 8003318:	9100      	str	r1, [sp, #0]
 800331a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800331c:	f042 0210 	orr.w	r2, r2, #16
 8003320:	645a      	str	r2, [r3, #68]	; 0x44
 8003322:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003324:	6061      	str	r1, [r4, #4]
 8003326:	f003 0310 	and.w	r3, r3, #16
 800332a:	9300      	str	r3, [sp, #0]
 800332c:	9b00      	ldr	r3, [sp, #0]
 800332e:	e799      	b.n	8003264 <serial_init+0x40>
 8003330:	4b33      	ldr	r3, [pc, #204]	; (8003400 <serial_init+0x1dc>)
 8003332:	6a1a      	ldr	r2, [r3, #32]
 8003334:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003338:	621a      	str	r2, [r3, #32]
 800333a:	6a1a      	ldr	r2, [r3, #32]
 800333c:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8003340:	621a      	str	r2, [r3, #32]
 8003342:	2200      	movs	r2, #0
 8003344:	9201      	str	r2, [sp, #4]
 8003346:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003348:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800334c:	641a      	str	r2, [r3, #64]	; 0x40
 800334e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003350:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003354:	9301      	str	r3, [sp, #4]
 8003356:	9b01      	ldr	r3, [sp, #4]
 8003358:	2301      	movs	r3, #1
 800335a:	6063      	str	r3, [r4, #4]
 800335c:	e782      	b.n	8003264 <serial_init+0x40>
 800335e:	4b28      	ldr	r3, [pc, #160]	; (8003400 <serial_init+0x1dc>)
 8003360:	6a1a      	ldr	r2, [r3, #32]
 8003362:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003366:	621a      	str	r2, [r3, #32]
 8003368:	6a1a      	ldr	r2, [r3, #32]
 800336a:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800336e:	621a      	str	r2, [r3, #32]
 8003370:	2200      	movs	r2, #0
 8003372:	9202      	str	r2, [sp, #8]
 8003374:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003376:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800337a:	641a      	str	r2, [r3, #64]	; 0x40
 800337c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800337e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003382:	9302      	str	r3, [sp, #8]
 8003384:	9b02      	ldr	r3, [sp, #8]
 8003386:	2302      	movs	r3, #2
 8003388:	e7e7      	b.n	800335a <serial_init+0x136>
 800338a:	4b1d      	ldr	r3, [pc, #116]	; (8003400 <serial_init+0x1dc>)
 800338c:	6a1a      	ldr	r2, [r3, #32]
 800338e:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8003392:	621a      	str	r2, [r3, #32]
 8003394:	6a1a      	ldr	r2, [r3, #32]
 8003396:	f422 2200 	bic.w	r2, r2, #524288	; 0x80000
 800339a:	621a      	str	r2, [r3, #32]
 800339c:	2200      	movs	r2, #0
 800339e:	9203      	str	r2, [sp, #12]
 80033a0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80033a2:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 80033a6:	641a      	str	r2, [r3, #64]	; 0x40
 80033a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033aa:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80033ae:	9303      	str	r3, [sp, #12]
 80033b0:	9b03      	ldr	r3, [sp, #12]
 80033b2:	2303      	movs	r3, #3
 80033b4:	e7d1      	b.n	800335a <serial_init+0x136>
 80033b6:	4b12      	ldr	r3, [pc, #72]	; (8003400 <serial_init+0x1dc>)
 80033b8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80033ba:	f042 0220 	orr.w	r2, r2, #32
 80033be:	625a      	str	r2, [r3, #36]	; 0x24
 80033c0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80033c2:	f022 0220 	bic.w	r2, r2, #32
 80033c6:	625a      	str	r2, [r3, #36]	; 0x24
 80033c8:	2200      	movs	r2, #0
 80033ca:	9205      	str	r2, [sp, #20]
 80033cc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80033ce:	f042 0220 	orr.w	r2, r2, #32
 80033d2:	645a      	str	r2, [r3, #68]	; 0x44
 80033d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80033d6:	f003 0320 	and.w	r3, r3, #32
 80033da:	9305      	str	r3, [sp, #20]
 80033dc:	9b05      	ldr	r3, [sp, #20]
 80033de:	2305      	movs	r3, #5
 80033e0:	e7bb      	b.n	800335a <serial_init+0x136>
 80033e2:	bf00      	nop
 80033e4:	080065c0 	.word	0x080065c0
 80033e8:	08006554 	.word	0x08006554
 80033ec:	40004c00 	.word	0x40004c00
 80033f0:	40004400 	.word	0x40004400
 80033f4:	2000137c 	.word	0x2000137c
 80033f8:	20002194 	.word	0x20002194
 80033fc:	40011000 	.word	0x40011000
 8003400:	40023800 	.word	0x40023800

08003404 <serial_baud>:
 8003404:	6081      	str	r1, [r0, #8]
 8003406:	f7ff be8f 	b.w	8003128 <init_uart>
	...

0800340c <serial_irq_handler>:
 800340c:	4b03      	ldr	r3, [pc, #12]	; (800341c <serial_irq_handler+0x10>)
 800340e:	6019      	str	r1, [r3, #0]
 8003410:	6841      	ldr	r1, [r0, #4]
 8003412:	4b03      	ldr	r3, [pc, #12]	; (8003420 <serial_irq_handler+0x14>)
 8003414:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8003418:	4770      	bx	lr
 800341a:	bf00      	nop
 800341c:	20001358 	.word	0x20001358
 8003420:	2000135c 	.word	0x2000135c

08003424 <serial_irq_set>:
 8003424:	b538      	push	{r3, r4, r5, lr}
 8003426:	6843      	ldr	r3, [r0, #4]
 8003428:	460d      	mov	r5, r1
 800342a:	2b05      	cmp	r3, #5
 800342c:	d82b      	bhi.n	8003486 <serial_irq_set+0x62>
 800342e:	e8df f003 	tbb	[pc, r3]
 8003432:	1b03      	.short	0x1b03
 8003434:	2724211e 	.word	0x2724211e
 8003438:	4921      	ldr	r1, [pc, #132]	; (80034c0 <serial_irq_set+0x9c>)
 800343a:	2425      	movs	r4, #37	; 0x25
 800343c:	4821      	ldr	r0, [pc, #132]	; (80034c4 <serial_irq_set+0xa0>)
 800343e:	019b      	lsls	r3, r3, #6
 8003440:	b33a      	cbz	r2, 8003492 <serial_irq_set+0x6e>
 8003442:	58c2      	ldr	r2, [r0, r3]
 8003444:	68d3      	ldr	r3, [r2, #12]
 8003446:	bb0d      	cbnz	r5, 800348c <serial_irq_set+0x68>
 8003448:	f043 0320 	orr.w	r3, r3, #32
 800344c:	60d3      	str	r3, [r2, #12]
 800344e:	4620      	mov	r0, r4
 8003450:	f000 f9c2 	bl	80037d8 <__NVIC_SetVector>
 8003454:	0962      	lsrs	r2, r4, #5
 8003456:	2301      	movs	r3, #1
 8003458:	f004 0417 	and.w	r4, r4, #23
 800345c:	fa03 f404 	lsl.w	r4, r3, r4
 8003460:	4b19      	ldr	r3, [pc, #100]	; (80034c8 <serial_irq_set+0xa4>)
 8003462:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003466:	bd38      	pop	{r3, r4, r5, pc}
 8003468:	4918      	ldr	r1, [pc, #96]	; (80034cc <serial_irq_set+0xa8>)
 800346a:	2426      	movs	r4, #38	; 0x26
 800346c:	e7e6      	b.n	800343c <serial_irq_set+0x18>
 800346e:	4918      	ldr	r1, [pc, #96]	; (80034d0 <serial_irq_set+0xac>)
 8003470:	2427      	movs	r4, #39	; 0x27
 8003472:	e7e3      	b.n	800343c <serial_irq_set+0x18>
 8003474:	4917      	ldr	r1, [pc, #92]	; (80034d4 <serial_irq_set+0xb0>)
 8003476:	2434      	movs	r4, #52	; 0x34
 8003478:	e7e0      	b.n	800343c <serial_irq_set+0x18>
 800347a:	4917      	ldr	r1, [pc, #92]	; (80034d8 <serial_irq_set+0xb4>)
 800347c:	2435      	movs	r4, #53	; 0x35
 800347e:	e7dd      	b.n	800343c <serial_irq_set+0x18>
 8003480:	4916      	ldr	r1, [pc, #88]	; (80034dc <serial_irq_set+0xb8>)
 8003482:	2447      	movs	r4, #71	; 0x47
 8003484:	e7da      	b.n	800343c <serial_irq_set+0x18>
 8003486:	2100      	movs	r1, #0
 8003488:	460c      	mov	r4, r1
 800348a:	e7d7      	b.n	800343c <serial_irq_set+0x18>
 800348c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003490:	e7dc      	b.n	800344c <serial_irq_set+0x28>
 8003492:	58c3      	ldr	r3, [r0, r3]
 8003494:	68da      	ldr	r2, [r3, #12]
 8003496:	b935      	cbnz	r5, 80034a6 <serial_irq_set+0x82>
 8003498:	f022 0220 	bic.w	r2, r2, #32
 800349c:	60da      	str	r2, [r3, #12]
 800349e:	68db      	ldr	r3, [r3, #12]
 80034a0:	061a      	lsls	r2, r3, #24
 80034a2:	d506      	bpl.n	80034b2 <serial_irq_set+0x8e>
 80034a4:	bd38      	pop	{r3, r4, r5, pc}
 80034a6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80034aa:	60da      	str	r2, [r3, #12]
 80034ac:	68db      	ldr	r3, [r3, #12]
 80034ae:	069b      	lsls	r3, r3, #26
 80034b0:	d404      	bmi.n	80034bc <serial_irq_set+0x98>
 80034b2:	4620      	mov	r0, r4
 80034b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80034b8:	f7ff be24 	b.w	8003104 <__NVIC_DisableIRQ>
 80034bc:	bd38      	pop	{r3, r4, r5, pc}
 80034be:	bf00      	nop
 80034c0:	08003201 	.word	0x08003201
 80034c4:	20001380 	.word	0x20001380
 80034c8:	e000e100 	.word	0xe000e100
 80034cc:	08003207 	.word	0x08003207
 80034d0:	0800320d 	.word	0x0800320d
 80034d4:	08003213 	.word	0x08003213
 80034d8:	08003219 	.word	0x08003219
 80034dc:	0800321f 	.word	0x0800321f

080034e0 <serial_readable>:
 80034e0:	6843      	ldr	r3, [r0, #4]
 80034e2:	4a03      	ldr	r2, [pc, #12]	; (80034f0 <serial_readable+0x10>)
 80034e4:	019b      	lsls	r3, r3, #6
 80034e6:	58d3      	ldr	r3, [r2, r3]
 80034e8:	6818      	ldr	r0, [r3, #0]
 80034ea:	f3c0 1040 	ubfx	r0, r0, #5, #1
 80034ee:	4770      	bx	lr
 80034f0:	20001380 	.word	0x20001380

080034f4 <serial_getc>:
 80034f4:	6841      	ldr	r1, [r0, #4]
 80034f6:	b510      	push	{r4, lr}
 80034f8:	4604      	mov	r4, r0
 80034fa:	4620      	mov	r0, r4
 80034fc:	f7ff fff0 	bl	80034e0 <serial_readable>
 8003500:	2800      	cmp	r0, #0
 8003502:	d0fa      	beq.n	80034fa <serial_getc+0x6>
 8003504:	0189      	lsls	r1, r1, #6
 8003506:	4b03      	ldr	r3, [pc, #12]	; (8003514 <serial_getc+0x20>)
 8003508:	585b      	ldr	r3, [r3, r1]
 800350a:	6858      	ldr	r0, [r3, #4]
 800350c:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8003510:	bd10      	pop	{r4, pc}
 8003512:	bf00      	nop
 8003514:	20001380 	.word	0x20001380

08003518 <serial_writable>:
 8003518:	6843      	ldr	r3, [r0, #4]
 800351a:	4a03      	ldr	r2, [pc, #12]	; (8003528 <serial_writable+0x10>)
 800351c:	019b      	lsls	r3, r3, #6
 800351e:	58d3      	ldr	r3, [r2, r3]
 8003520:	6818      	ldr	r0, [r3, #0]
 8003522:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 8003526:	4770      	bx	lr
 8003528:	20001380 	.word	0x20001380

0800352c <serial_putc>:
 800352c:	b538      	push	{r3, r4, r5, lr}
 800352e:	6844      	ldr	r4, [r0, #4]
 8003530:	4605      	mov	r5, r0
 8003532:	4628      	mov	r0, r5
 8003534:	f7ff fff0 	bl	8003518 <serial_writable>
 8003538:	2800      	cmp	r0, #0
 800353a:	d0fa      	beq.n	8003532 <serial_putc+0x6>
 800353c:	01a4      	lsls	r4, r4, #6
 800353e:	4b03      	ldr	r3, [pc, #12]	; (800354c <serial_putc+0x20>)
 8003540:	591b      	ldr	r3, [r3, r4]
 8003542:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8003546:	6059      	str	r1, [r3, #4]
 8003548:	bd38      	pop	{r3, r4, r5, pc}
 800354a:	bf00      	nop
 800354c:	20001380 	.word	0x20001380

08003550 <mbed_sdk_init>:
 8003550:	b508      	push	{r3, lr}
 8003552:	f000 f805 	bl	8003560 <SystemCoreClockUpdate>
 8003556:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800355a:	f001 baaf 	b.w	8004abc <HAL_Init>
	...

08003560 <SystemCoreClockUpdate>:
 8003560:	4a17      	ldr	r2, [pc, #92]	; (80035c0 <SystemCoreClockUpdate+0x60>)
 8003562:	4918      	ldr	r1, [pc, #96]	; (80035c4 <SystemCoreClockUpdate+0x64>)
 8003564:	6893      	ldr	r3, [r2, #8]
 8003566:	f003 030c 	and.w	r3, r3, #12
 800356a:	2b04      	cmp	r3, #4
 800356c:	b510      	push	{r4, lr}
 800356e:	d00d      	beq.n	800358c <SystemCoreClockUpdate+0x2c>
 8003570:	2b08      	cmp	r3, #8
 8003572:	d00d      	beq.n	8003590 <SystemCoreClockUpdate+0x30>
 8003574:	4b14      	ldr	r3, [pc, #80]	; (80035c8 <SystemCoreClockUpdate+0x68>)
 8003576:	600b      	str	r3, [r1, #0]
 8003578:	4b11      	ldr	r3, [pc, #68]	; (80035c0 <SystemCoreClockUpdate+0x60>)
 800357a:	4a14      	ldr	r2, [pc, #80]	; (80035cc <SystemCoreClockUpdate+0x6c>)
 800357c:	689b      	ldr	r3, [r3, #8]
 800357e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8003582:	5cd2      	ldrb	r2, [r2, r3]
 8003584:	680b      	ldr	r3, [r1, #0]
 8003586:	40d3      	lsrs	r3, r2
 8003588:	600b      	str	r3, [r1, #0]
 800358a:	bd10      	pop	{r4, pc}
 800358c:	4b10      	ldr	r3, [pc, #64]	; (80035d0 <SystemCoreClockUpdate+0x70>)
 800358e:	e7f2      	b.n	8003576 <SystemCoreClockUpdate+0x16>
 8003590:	6854      	ldr	r4, [r2, #4]
 8003592:	6850      	ldr	r0, [r2, #4]
 8003594:	6852      	ldr	r2, [r2, #4]
 8003596:	0263      	lsls	r3, r4, #9
 8003598:	f3c2 1288 	ubfx	r2, r2, #6, #9
 800359c:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 80035a0:	bf4c      	ite	mi
 80035a2:	4b0b      	ldrmi	r3, [pc, #44]	; (80035d0 <SystemCoreClockUpdate+0x70>)
 80035a4:	4b08      	ldrpl	r3, [pc, #32]	; (80035c8 <SystemCoreClockUpdate+0x68>)
 80035a6:	fbb3 f3f0 	udiv	r3, r3, r0
 80035aa:	4353      	muls	r3, r2
 80035ac:	4a04      	ldr	r2, [pc, #16]	; (80035c0 <SystemCoreClockUpdate+0x60>)
 80035ae:	6852      	ldr	r2, [r2, #4]
 80035b0:	f3c2 4201 	ubfx	r2, r2, #16, #2
 80035b4:	3201      	adds	r2, #1
 80035b6:	0052      	lsls	r2, r2, #1
 80035b8:	fbb3 f3f2 	udiv	r3, r3, r2
 80035bc:	e7db      	b.n	8003576 <SystemCoreClockUpdate+0x16>
 80035be:	bf00      	nop
 80035c0:	40023800 	.word	0x40023800
 80035c4:	200001e0 	.word	0x200001e0
 80035c8:	00f42400 	.word	0x00f42400
 80035cc:	0800662c 	.word	0x0800662c
 80035d0:	007a1200 	.word	0x007a1200

080035d4 <SetSysClock_PLL_HSE>:
 80035d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80035d8:	b0ac      	sub	sp, #176	; 0xb0
 80035da:	4b30      	ldr	r3, [pc, #192]	; (800369c <SetSysClock_PLL_HSE+0xc8>)
 80035dc:	2100      	movs	r1, #0
 80035de:	9101      	str	r1, [sp, #4]
 80035e0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80035e2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80035e6:	641a      	str	r2, [r3, #64]	; 0x40
 80035e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80035ee:	9301      	str	r3, [sp, #4]
 80035f0:	9b01      	ldr	r3, [sp, #4]
 80035f2:	4b2b      	ldr	r3, [pc, #172]	; (80036a0 <SetSysClock_PLL_HSE+0xcc>)
 80035f4:	9102      	str	r1, [sp, #8]
 80035f6:	681a      	ldr	r2, [r3, #0]
 80035f8:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80035fc:	601a      	str	r2, [r3, #0]
 80035fe:	681b      	ldr	r3, [r3, #0]
 8003600:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8003604:	9302      	str	r3, [sp, #8]
 8003606:	9b02      	ldr	r3, [sp, #8]
 8003608:	2301      	movs	r3, #1
 800360a:	9308      	str	r3, [sp, #32]
 800360c:	4607      	mov	r7, r0
 800360e:	b9c0      	cbnz	r0, 8003642 <SetSysClock_PLL_HSE+0x6e>
 8003610:	9309      	str	r3, [sp, #36]	; 0x24
 8003612:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8003616:	2402      	movs	r4, #2
 8003618:	f44f 0580 	mov.w	r5, #4194304	; 0x400000
 800361c:	2608      	movs	r6, #8
 800361e:	9311      	str	r3, [sp, #68]	; 0x44
 8003620:	a808      	add	r0, sp, #32
 8003622:	2307      	movs	r3, #7
 8003624:	940e      	str	r4, [sp, #56]	; 0x38
 8003626:	950f      	str	r5, [sp, #60]	; 0x3c
 8003628:	9610      	str	r6, [sp, #64]	; 0x40
 800362a:	9412      	str	r4, [sp, #72]	; 0x48
 800362c:	9313      	str	r3, [sp, #76]	; 0x4c
 800362e:	9414      	str	r4, [sp, #80]	; 0x50
 8003630:	f000 fbe2 	bl	8003df8 <HAL_RCC_OscConfig>
 8003634:	b918      	cbnz	r0, 800363e <SetSysClock_PLL_HSE+0x6a>
 8003636:	f001 f9f5 	bl	8004a24 <HAL_PWREx_EnableOverDrive>
 800363a:	4680      	mov	r8, r0
 800363c:	b118      	cbz	r0, 8003646 <SetSysClock_PLL_HSE+0x72>
 800363e:	2000      	movs	r0, #0
 8003640:	e028      	b.n	8003694 <SetSysClock_PLL_HSE+0xc0>
 8003642:	2305      	movs	r3, #5
 8003644:	e7e4      	b.n	8003610 <SetSysClock_PLL_HSE+0x3c>
 8003646:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800364a:	931c      	str	r3, [sp, #112]	; 0x70
 800364c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003650:	9315      	str	r3, [sp, #84]	; 0x54
 8003652:	a815      	add	r0, sp, #84	; 0x54
 8003654:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8003658:	932a      	str	r3, [sp, #168]	; 0xa8
 800365a:	961b      	str	r6, [sp, #108]	; 0x6c
 800365c:	961d      	str	r6, [sp, #116]	; 0x74
 800365e:	f000 f8db 	bl	8003818 <HAL_RCCEx_PeriphCLKConfig>
 8003662:	230f      	movs	r3, #15
 8003664:	9303      	str	r3, [sp, #12]
 8003666:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800366a:	9306      	str	r3, [sp, #24]
 800366c:	2105      	movs	r1, #5
 800366e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003672:	a803      	add	r0, sp, #12
 8003674:	9404      	str	r4, [sp, #16]
 8003676:	f8cd 8014 	str.w	r8, [sp, #20]
 800367a:	9307      	str	r3, [sp, #28]
 800367c:	f001 f8cc 	bl	8004818 <HAL_RCC_ClockConfig>
 8003680:	4602      	mov	r2, r0
 8003682:	2800      	cmp	r0, #0
 8003684:	d1db      	bne.n	800363e <SetSysClock_PLL_HSE+0x6a>
 8003686:	b90f      	cbnz	r7, 800368c <SetSysClock_PLL_HSE+0xb8>
 8003688:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800368c:	4629      	mov	r1, r5
 800368e:	f001 f877 	bl	8004780 <HAL_RCC_MCOConfig>
 8003692:	2001      	movs	r0, #1
 8003694:	b02c      	add	sp, #176	; 0xb0
 8003696:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800369a:	bf00      	nop
 800369c:	40023800 	.word	0x40023800
 80036a0:	40007000 	.word	0x40007000

080036a4 <SetSysClock_PLL_HSI>:
 80036a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80036a6:	b095      	sub	sp, #84	; 0x54
 80036a8:	2400      	movs	r4, #0
 80036aa:	4b23      	ldr	r3, [pc, #140]	; (8003738 <SetSysClock_PLL_HSI+0x94>)
 80036ac:	9400      	str	r4, [sp, #0]
 80036ae:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80036b0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80036b4:	641a      	str	r2, [r3, #64]	; 0x40
 80036b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036b8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80036bc:	9300      	str	r3, [sp, #0]
 80036be:	9b00      	ldr	r3, [sp, #0]
 80036c0:	4b1e      	ldr	r3, [pc, #120]	; (800373c <SetSysClock_PLL_HSI+0x98>)
 80036c2:	9401      	str	r4, [sp, #4]
 80036c4:	681a      	ldr	r2, [r3, #0]
 80036c6:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80036ca:	601a      	str	r2, [r3, #0]
 80036cc:	681b      	ldr	r3, [r3, #0]
 80036ce:	9408      	str	r4, [sp, #32]
 80036d0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80036d4:	9301      	str	r3, [sp, #4]
 80036d6:	9b01      	ldr	r3, [sp, #4]
 80036d8:	940e      	str	r4, [sp, #56]	; 0x38
 80036da:	2303      	movs	r3, #3
 80036dc:	9307      	str	r3, [sp, #28]
 80036de:	2310      	movs	r3, #16
 80036e0:	930b      	str	r3, [sp, #44]	; 0x2c
 80036e2:	930f      	str	r3, [sp, #60]	; 0x3c
 80036e4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 80036e8:	2602      	movs	r6, #2
 80036ea:	9310      	str	r3, [sp, #64]	; 0x40
 80036ec:	2701      	movs	r7, #1
 80036ee:	2306      	movs	r3, #6
 80036f0:	a807      	add	r0, sp, #28
 80036f2:	970a      	str	r7, [sp, #40]	; 0x28
 80036f4:	960d      	str	r6, [sp, #52]	; 0x34
 80036f6:	9611      	str	r6, [sp, #68]	; 0x44
 80036f8:	9312      	str	r3, [sp, #72]	; 0x48
 80036fa:	f000 fb7d 	bl	8003df8 <HAL_RCC_OscConfig>
 80036fe:	4605      	mov	r5, r0
 8003700:	b9b8      	cbnz	r0, 8003732 <SetSysClock_PLL_HSI+0x8e>
 8003702:	230f      	movs	r3, #15
 8003704:	9302      	str	r3, [sp, #8]
 8003706:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800370a:	9004      	str	r0, [sp, #16]
 800370c:	9305      	str	r3, [sp, #20]
 800370e:	2105      	movs	r1, #5
 8003710:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003714:	a802      	add	r0, sp, #8
 8003716:	9603      	str	r6, [sp, #12]
 8003718:	9306      	str	r3, [sp, #24]
 800371a:	f001 f87d 	bl	8004818 <HAL_RCC_ClockConfig>
 800371e:	4602      	mov	r2, r0
 8003720:	b928      	cbnz	r0, 800372e <SetSysClock_PLL_HSI+0x8a>
 8003722:	4601      	mov	r1, r0
 8003724:	f001 f82c 	bl	8004780 <HAL_RCC_MCOConfig>
 8003728:	4638      	mov	r0, r7
 800372a:	b015      	add	sp, #84	; 0x54
 800372c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800372e:	4628      	mov	r0, r5
 8003730:	e7fb      	b.n	800372a <SetSysClock_PLL_HSI+0x86>
 8003732:	4620      	mov	r0, r4
 8003734:	e7f9      	b.n	800372a <SetSysClock_PLL_HSI+0x86>
 8003736:	bf00      	nop
 8003738:	40023800 	.word	0x40023800
 800373c:	40007000 	.word	0x40007000

08003740 <SetSysClock>:
 8003740:	b508      	push	{r3, lr}
 8003742:	2001      	movs	r0, #1
 8003744:	f7ff ff46 	bl	80035d4 <SetSysClock_PLL_HSE>
 8003748:	b918      	cbnz	r0, 8003752 <SetSysClock+0x12>
 800374a:	f7ff ffab 	bl	80036a4 <SetSysClock_PLL_HSI>
 800374e:	b900      	cbnz	r0, 8003752 <SetSysClock+0x12>
 8003750:	e7fe      	b.n	8003750 <SetSysClock+0x10>
 8003752:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 8003756:	2100      	movs	r1, #0
 8003758:	2001      	movs	r0, #1
 800375a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800375e:	f001 b80f 	b.w	8004780 <HAL_RCC_MCOConfig>
	...

08003764 <SystemInit>:
 8003764:	4a17      	ldr	r2, [pc, #92]	; (80037c4 <SystemInit+0x60>)
 8003766:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 800376a:	b510      	push	{r4, lr}
 800376c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003770:	4c15      	ldr	r4, [pc, #84]	; (80037c8 <SystemInit+0x64>)
 8003772:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8003776:	6823      	ldr	r3, [r4, #0]
 8003778:	2100      	movs	r1, #0
 800377a:	f043 0301 	orr.w	r3, r3, #1
 800377e:	6023      	str	r3, [r4, #0]
 8003780:	60a1      	str	r1, [r4, #8]
 8003782:	6823      	ldr	r3, [r4, #0]
 8003784:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8003788:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800378c:	6023      	str	r3, [r4, #0]
 800378e:	4b0f      	ldr	r3, [pc, #60]	; (80037cc <SystemInit+0x68>)
 8003790:	6063      	str	r3, [r4, #4]
 8003792:	6823      	ldr	r3, [r4, #0]
 8003794:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003798:	6023      	str	r3, [r4, #0]
 800379a:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800379e:	60e1      	str	r1, [r4, #12]
 80037a0:	6093      	str	r3, [r2, #8]
 80037a2:	4b0b      	ldr	r3, [pc, #44]	; (80037d0 <SystemInit+0x6c>)
 80037a4:	4a0b      	ldr	r2, [pc, #44]	; (80037d4 <SystemInit+0x70>)
 80037a6:	601a      	str	r2, [r3, #0]
 80037a8:	f001 f988 	bl	8004abc <HAL_Init>
 80037ac:	f7ff ffc8 	bl	8003740 <SetSysClock>
 80037b0:	6a23      	ldr	r3, [r4, #32]
 80037b2:	f043 0308 	orr.w	r3, r3, #8
 80037b6:	6223      	str	r3, [r4, #32]
 80037b8:	6a23      	ldr	r3, [r4, #32]
 80037ba:	f023 0308 	bic.w	r3, r3, #8
 80037be:	6223      	str	r3, [r4, #32]
 80037c0:	bd10      	pop	{r4, pc}
 80037c2:	bf00      	nop
 80037c4:	e000ed00 	.word	0xe000ed00
 80037c8:	40023800 	.word	0x40023800
 80037cc:	24003010 	.word	0x24003010
 80037d0:	200001e0 	.word	0x200001e0
 80037d4:	0112a880 	.word	0x0112a880

080037d8 <__NVIC_SetVector>:
 80037d8:	b530      	push	{r4, r5, lr}
 80037da:	4c0c      	ldr	r4, [pc, #48]	; (800380c <__NVIC_SetVector+0x34>)
 80037dc:	68a2      	ldr	r2, [r4, #8]
 80037de:	68a4      	ldr	r4, [r4, #8]
 80037e0:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 80037e4:	4613      	mov	r3, r2
 80037e6:	d10c      	bne.n	8003802 <__NVIC_SetVector+0x2a>
 80037e8:	1f13      	subs	r3, r2, #4
 80037ea:	4c09      	ldr	r4, [pc, #36]	; (8003810 <__NVIC_SetVector+0x38>)
 80037ec:	4a09      	ldr	r2, [pc, #36]	; (8003814 <__NVIC_SetVector+0x3c>)
 80037ee:	f853 5f04 	ldr.w	r5, [r3, #4]!
 80037f2:	f842 5f04 	str.w	r5, [r2, #4]!
 80037f6:	42a2      	cmp	r2, r4
 80037f8:	d1f9      	bne.n	80037ee <__NVIC_SetVector+0x16>
 80037fa:	4a04      	ldr	r2, [pc, #16]	; (800380c <__NVIC_SetVector+0x34>)
 80037fc:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8003800:	6093      	str	r3, [r2, #8]
 8003802:	3010      	adds	r0, #16
 8003804:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 8003808:	bd30      	pop	{r4, r5, pc}
 800380a:	bf00      	nop
 800380c:	e000ed00 	.word	0xe000ed00
 8003810:	200001c0 	.word	0x200001c0
 8003814:	1ffffffc 	.word	0x1ffffffc

08003818 <HAL_RCCEx_PeriphCLKConfig>:
 8003818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 800381c:	6803      	ldr	r3, [r0, #0]
 800381e:	f013 0601 	ands.w	r6, r3, #1
 8003822:	b085      	sub	sp, #20
 8003824:	4604      	mov	r4, r0
 8003826:	d00b      	beq.n	8003840 <HAL_RCCEx_PeriphCLKConfig+0x28>
 8003828:	49c8      	ldr	r1, [pc, #800]	; (8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>)
 800382a:	6b86      	ldr	r6, [r0, #56]	; 0x38
 800382c:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 8003830:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 8003834:	4332      	orrs	r2, r6
 8003836:	fab6 f686 	clz	r6, r6
 800383a:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
 800383e:	0976      	lsrs	r6, r6, #5
 8003840:	0799      	lsls	r1, r3, #30
 8003842:	d50b      	bpl.n	800385c <HAL_RCCEx_PeriphCLKConfig+0x44>
 8003844:	48c1      	ldr	r0, [pc, #772]	; (8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8003846:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8003848:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
 800384c:	f022 52c0 	bic.w	r2, r2, #402653184	; 0x18000000
 8003850:	430a      	orrs	r2, r1
 8003852:	2900      	cmp	r1, #0
 8003854:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
 8003858:	bf08      	it	eq
 800385a:	2601      	moveq	r6, #1
 800385c:	f013 0504 	ands.w	r5, r3, #4
 8003860:	d012      	beq.n	8003888 <HAL_RCCEx_PeriphCLKConfig+0x70>
 8003862:	49ba      	ldr	r1, [pc, #744]	; (8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8003864:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8003866:	f8d1 208c 	ldr.w	r2, [r1, #140]	; 0x8c
 800386a:	f5b5 1f80 	cmp.w	r5, #1048576	; 0x100000
 800386e:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8003872:	ea42 0205 	orr.w	r2, r2, r5
 8003876:	bf18      	it	ne
 8003878:	fab5 f585 	clzne	r5, r5
 800387c:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
 8003880:	bf12      	itee	ne
 8003882:	096d      	lsrne	r5, r5, #5
 8003884:	2500      	moveq	r5, #0
 8003886:	2601      	moveq	r6, #1
 8003888:	071a      	lsls	r2, r3, #28
 800388a:	d50f      	bpl.n	80038ac <HAL_RCCEx_PeriphCLKConfig+0x94>
 800388c:	48af      	ldr	r0, [pc, #700]	; (8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>)
 800388e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003890:	f8d0 208c 	ldr.w	r2, [r0, #140]	; 0x8c
 8003894:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8003898:	430a      	orrs	r2, r1
 800389a:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
 800389e:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
 80038a2:	f000 81bf 	beq.w	8003c24 <HAL_RCCEx_PeriphCLKConfig+0x40c>
 80038a6:	2900      	cmp	r1, #0
 80038a8:	bf08      	it	eq
 80038aa:	2501      	moveq	r5, #1
 80038ac:	069f      	lsls	r7, r3, #26
 80038ae:	d533      	bpl.n	8003918 <HAL_RCCEx_PeriphCLKConfig+0x100>
 80038b0:	2300      	movs	r3, #0
 80038b2:	9303      	str	r3, [sp, #12]
 80038b4:	4ba5      	ldr	r3, [pc, #660]	; (8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80038b6:	4fa6      	ldr	r7, [pc, #664]	; (8003b50 <HAL_RCCEx_PeriphCLKConfig+0x338>)
 80038b8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80038ba:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80038be:	641a      	str	r2, [r3, #64]	; 0x40
 80038c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80038c2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80038c6:	9303      	str	r3, [sp, #12]
 80038c8:	9b03      	ldr	r3, [sp, #12]
 80038ca:	683b      	ldr	r3, [r7, #0]
 80038cc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80038d0:	603b      	str	r3, [r7, #0]
 80038d2:	f001 f913 	bl	8004afc <HAL_GetTick>
 80038d6:	4680      	mov	r8, r0
 80038d8:	683b      	ldr	r3, [r7, #0]
 80038da:	05d8      	lsls	r0, r3, #23
 80038dc:	f140 81a4 	bpl.w	8003c28 <HAL_RCCEx_PeriphCLKConfig+0x410>
 80038e0:	4f9a      	ldr	r7, [pc, #616]	; (8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80038e2:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80038e4:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 80038e8:	f040 81a9 	bne.w	8003c3e <HAL_RCCEx_PeriphCLKConfig+0x426>
 80038ec:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80038ee:	f403 7240 	and.w	r2, r3, #768	; 0x300
 80038f2:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80038f6:	4a95      	ldr	r2, [pc, #596]	; (8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80038f8:	f040 81c4 	bne.w	8003c84 <HAL_RCCEx_PeriphCLKConfig+0x46c>
 80038fc:	6891      	ldr	r1, [r2, #8]
 80038fe:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8003902:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8003906:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800390a:	4301      	orrs	r1, r0
 800390c:	6091      	str	r1, [r2, #8]
 800390e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8003910:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003914:	430b      	orrs	r3, r1
 8003916:	6713      	str	r3, [r2, #112]	; 0x70
 8003918:	6823      	ldr	r3, [r4, #0]
 800391a:	06db      	lsls	r3, r3, #27
 800391c:	bf42      	ittt	mi
 800391e:	4b8d      	ldrmi	r3, [pc, #564]	; (8003b54 <HAL_RCCEx_PeriphCLKConfig+0x33c>)
 8003920:	f894 2058 	ldrbmi.w	r2, [r4, #88]	; 0x58
 8003924:	601a      	strmi	r2, [r3, #0]
 8003926:	6823      	ldr	r3, [r4, #0]
 8003928:	061f      	lsls	r7, r3, #24
 800392a:	d508      	bpl.n	800393e <HAL_RCCEx_PeriphCLKConfig+0x126>
 800392c:	4987      	ldr	r1, [pc, #540]	; (8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>)
 800392e:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8003930:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 8003934:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8003938:	4302      	orrs	r2, r0
 800393a:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 800393e:	0658      	lsls	r0, r3, #25
 8003940:	d508      	bpl.n	8003954 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8003942:	4982      	ldr	r1, [pc, #520]	; (8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8003944:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8003946:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 800394a:	f022 6280 	bic.w	r2, r2, #67108864	; 0x4000000
 800394e:	4302      	orrs	r2, r0
 8003950:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 8003954:	05d9      	lsls	r1, r3, #23
 8003956:	d50c      	bpl.n	8003972 <HAL_RCCEx_PeriphCLKConfig+0x15a>
 8003958:	487c      	ldr	r0, [pc, #496]	; (8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>)
 800395a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 800395c:	f8d0 2094 	ldr.w	r2, [r0, #148]	; 0x94
 8003960:	f022 6200 	bic.w	r2, r2, #134217728	; 0x8000000
 8003964:	430a      	orrs	r2, r1
 8003966:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
 800396a:	f8c0 2094 	str.w	r2, [r0, #148]	; 0x94
 800396e:	bf08      	it	eq
 8003970:	2501      	moveq	r5, #1
 8003972:	059a      	lsls	r2, r3, #22
 8003974:	d508      	bpl.n	8003988 <HAL_RCCEx_PeriphCLKConfig+0x170>
 8003976:	4975      	ldr	r1, [pc, #468]	; (8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8003978:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800397a:	f8d1 2094 	ldr.w	r2, [r1, #148]	; 0x94
 800397e:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8003982:	4302      	orrs	r2, r0
 8003984:	f8c1 2094 	str.w	r2, [r1, #148]	; 0x94
 8003988:	055f      	lsls	r7, r3, #21
 800398a:	f100 817f 	bmi.w	8003c8c <HAL_RCCEx_PeriphCLKConfig+0x474>
 800398e:	2e01      	cmp	r6, #1
 8003990:	f040 818a 	bne.w	8003ca8 <HAL_RCCEx_PeriphCLKConfig+0x490>
 8003994:	4e70      	ldr	r6, [pc, #448]	; (8003b58 <HAL_RCCEx_PeriphCLKConfig+0x340>)
 8003996:	4f6d      	ldr	r7, [pc, #436]	; (8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8003998:	2300      	movs	r3, #0
 800399a:	6033      	str	r3, [r6, #0]
 800399c:	f001 f8ae 	bl	8004afc <HAL_GetTick>
 80039a0:	9601      	str	r6, [sp, #4]
 80039a2:	4680      	mov	r8, r0
 80039a4:	683b      	ldr	r3, [r7, #0]
 80039a6:	0118      	lsls	r0, r3, #4
 80039a8:	f100 820b 	bmi.w	8003dc2 <HAL_RCCEx_PeriphCLKConfig+0x5aa>
 80039ac:	6820      	ldr	r0, [r4, #0]
 80039ae:	07c1      	lsls	r1, r0, #31
 80039b0:	d501      	bpl.n	80039b6 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 80039b2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80039b4:	b123      	cbz	r3, 80039c0 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 80039b6:	0782      	lsls	r2, r0, #30
 80039b8:	d546      	bpl.n	8003a48 <HAL_RCCEx_PeriphCLKConfig+0x230>
 80039ba:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80039bc:	2b00      	cmp	r3, #0
 80039be:	d143      	bne.n	8003a48 <HAL_RCCEx_PeriphCLKConfig+0x230>
 80039c0:	4f62      	ldr	r7, [pc, #392]	; (8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>)
 80039c2:	f44f 3140 	mov.w	r1, #196608	; 0x30000
 80039c6:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 80039ca:	fa91 fea1 	rbit	lr, r1
 80039ce:	f04f 6c70 	mov.w	r12, #251658240	; 0xf000000
 80039d2:	fabe fe8e 	clz	lr, lr
 80039d6:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80039da:	fa9c f8ac 	rbit	r8, r12
 80039de:	f647 7bc0 	movw	r11, #32704	; 0x7fc0
 80039e2:	fab8 f888 	clz	r8, r8
 80039e6:	fa9b fbab 	rbit	r11, r11
 80039ea:	fabb fb8b 	clz	r11, r11
 80039ee:	fa91 f1a1 	rbit	r1, r1
 80039f2:	fab1 f181 	clz	r1, r1
 80039f6:	fa9c fcac 	rbit	r12, r12
 80039fa:	f04f 4ae0 	mov.w	r10, #1879048192	; 0x70000000
 80039fe:	fabc fc8c 	clz	r12, r12
 8003a02:	fa9a faaa 	rbit	r10, r10
 8003a06:	68a6      	ldr	r6, [r4, #8]
 8003a08:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8003a0c:	fa06 f90b 	lsl.w	r9, r6, r11
 8003a10:	6966      	ldr	r6, [r4, #20]
 8003a12:	faba fa8a 	clz	r10, r10
 8003a16:	fa22 f20e 	lsr.w	r2, r2, lr
 8003a1a:	fa06 fa0a 	lsl.w	r10, r6, r10
 8003a1e:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8003a22:	6866      	ldr	r6, [r4, #4]
 8003a24:	3201      	adds	r2, #1
 8003a26:	ea49 090a 	orr.w	r9, r9, r10
 8003a2a:	fa23 f308 	lsr.w	r3, r3, r8
 8003a2e:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8003a32:	ea49 0906 	orr.w	r9, r9, r6
 8003a36:	fa03 f30c 	lsl.w	r3, r3, r12
 8003a3a:	3a01      	subs	r2, #1
 8003a3c:	ea49 0303 	orr.w	r3, r9, r3
 8003a40:	408a      	lsls	r2, r1
 8003a42:	4313      	orrs	r3, r2
 8003a44:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8003a48:	0743      	lsls	r3, r0, #29
 8003a4a:	d503      	bpl.n	8003a54 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8003a4c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003a4e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8003a52:	d005      	beq.n	8003a60 <HAL_RCCEx_PeriphCLKConfig+0x248>
 8003a54:	0707      	lsls	r7, r0, #28
 8003a56:	d550      	bpl.n	8003afa <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 8003a58:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003a5a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8003a5e:	d14c      	bne.n	8003afa <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 8003a60:	4f3a      	ldr	r7, [pc, #232]	; (8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>)
 8003a62:	f44f 3140 	mov.w	r1, #196608	; 0x30000
 8003a66:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 8003a6a:	fa91 fea1 	rbit	lr, r1
 8003a6e:	f04f 4ce0 	mov.w	r12, #1879048192	; 0x70000000
 8003a72:	fabe fe8e 	clz	lr, lr
 8003a76:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8003a7a:	fa9c f8ac 	rbit	r8, r12
 8003a7e:	f647 7bc0 	movw	r11, #32704	; 0x7fc0
 8003a82:	fab8 f888 	clz	r8, r8
 8003a86:	fa9b fbab 	rbit	r11, r11
 8003a8a:	fabb fb8b 	clz	r11, r11
 8003a8e:	fa91 f1a1 	rbit	r1, r1
 8003a92:	f04f 6a70 	mov.w	r10, #251658240	; 0xf000000
 8003a96:	fab1 f181 	clz	r1, r1
 8003a9a:	fa9a faaa 	rbit	r10, r10
 8003a9e:	faba fa8a 	clz	r10, r10
 8003aa2:	fa9c fcac 	rbit	r12, r12
 8003aa6:	68a6      	ldr	r6, [r4, #8]
 8003aa8:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8003aac:	fa06 f90b 	lsl.w	r9, r6, r11
 8003ab0:	6926      	ldr	r6, [r4, #16]
 8003ab2:	fa22 f20e 	lsr.w	r2, r2, lr
 8003ab6:	fa06 fa0a 	lsl.w	r10, r6, r10
 8003aba:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 8003abe:	6866      	ldr	r6, [r4, #4]
 8003ac0:	3201      	adds	r2, #1
 8003ac2:	fabc fc8c 	clz	r12, r12
 8003ac6:	ea49 090a 	orr.w	r9, r9, r10
 8003aca:	fa23 f308 	lsr.w	r3, r3, r8
 8003ace:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8003ad2:	ea49 0906 	orr.w	r9, r9, r6
 8003ad6:	fa03 f30c 	lsl.w	r3, r3, r12
 8003ada:	3a01      	subs	r2, #1
 8003adc:	408a      	lsls	r2, r1
 8003ade:	ea49 0303 	orr.w	r3, r9, r3
 8003ae2:	4313      	orrs	r3, r2
 8003ae4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8003ae8:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 8003aec:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8003aee:	f022 021f 	bic.w	r2, r2, #31
 8003af2:	3b01      	subs	r3, #1
 8003af4:	4313      	orrs	r3, r2
 8003af6:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8003afa:	0546      	lsls	r6, r0, #21
 8003afc:	d553      	bpl.n	8003ba6 <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8003afe:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003b00:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8003b04:	d14f      	bne.n	8003ba6 <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8003b06:	f8df c044 	ldr.w	r12, [pc, #68]	; 8003b4c <HAL_RCCEx_PeriphCLKConfig+0x334>
 8003b0a:	f44f 3b40 	mov.w	r11, #196608	; 0x30000
 8003b0e:	f8dc 2084 	ldr.w	r2, [r12, #132]	; 0x84
 8003b12:	fa9b f8ab 	rbit	r8, r11
 8003b16:	f04f 47e0 	mov.w	r7, #1879048192	; 0x70000000
 8003b1a:	fab8 f888 	clz	r8, r8
 8003b1e:	f8dc 1084 	ldr.w	r1, [r12, #132]	; 0x84
 8003b22:	fa97 f9a7 	rbit	r9, r7
 8003b26:	f647 7ac0 	movw	r10, #32704	; 0x7fc0
 8003b2a:	fab9 f989 	clz	r9, r9
 8003b2e:	fa9a faaa 	rbit	r10, r10
 8003b32:	faba fa8a 	clz	r10, r10
 8003b36:	fa9b fbab 	rbit	r11, r11
 8003b3a:	f04f 6e70 	mov.w	lr, #251658240	; 0xf000000
 8003b3e:	fabb fb8b 	clz	r11, r11
 8003b42:	fa9e feae 	rbit	lr, lr
 8003b46:	fabe fe8e 	clz	lr, lr
 8003b4a:	e007      	b.n	8003b5c <HAL_RCCEx_PeriphCLKConfig+0x344>
 8003b4c:	40023800 	.word	0x40023800
 8003b50:	40007000 	.word	0x40007000
 8003b54:	424711e0 	.word	0x424711e0
 8003b58:	42470068 	.word	0x42470068
 8003b5c:	fa97 f7a7 	rbit	r7, r7
 8003b60:	68e3      	ldr	r3, [r4, #12]
 8003b62:	68a6      	ldr	r6, [r4, #8]
 8003b64:	085b      	lsrs	r3, r3, #1
 8003b66:	3b01      	subs	r3, #1
 8003b68:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8003b6c:	fa06 fa0a 	lsl.w	r10, r6, r10
 8003b70:	fa03 f30b 	lsl.w	r3, r3, r11
 8003b74:	6866      	ldr	r6, [r4, #4]
 8003b76:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 8003b7a:	fa22 f808 	lsr.w	r8, r2, r8
 8003b7e:	fab7 f787 	clz	r7, r7
 8003b82:	ea43 030a 	orr.w	r3, r3, r10
 8003b86:	fa21 f909 	lsr.w	r9, r1, r9
 8003b8a:	f108 0801 	add.w	r8, r8, #1
 8003b8e:	4333      	orrs	r3, r6
 8003b90:	fa09 f707 	lsl.w	r7, r9, r7
 8003b94:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8003b98:	431f      	orrs	r7, r3
 8003b9a:	fa08 fe0e 	lsl.w	lr, r8, lr
 8003b9e:	ea47 070e 	orr.w	r7, r7, lr
 8003ba2:	f8cc 7084 	str.w	r7, [r12, #132]	; 0x84
 8003ba6:	0501      	lsls	r1, r0, #20
 8003ba8:	d52c      	bpl.n	8003c04 <HAL_RCCEx_PeriphCLKConfig+0x3ec>
 8003baa:	f647 77c0 	movw	r7, #32704	; 0x7fc0
 8003bae:	fa97 f7a7 	rbit	r7, r7
 8003bb2:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8003bb6:	fab7 f787 	clz	r7, r7
 8003bba:	fa93 f3a3 	rbit	r3, r3
 8003bbe:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 8003bc2:	fab3 f283 	clz	r2, r3
 8003bc6:	fa90 f0a0 	rbit	r0, r0
 8003bca:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
 8003bce:	fab0 f080 	clz	r0, r0
 8003bd2:	fa91 f1a1 	rbit	r1, r1
 8003bd6:	68e3      	ldr	r3, [r4, #12]
 8003bd8:	085b      	lsrs	r3, r3, #1
 8003bda:	3b01      	subs	r3, #1
 8003bdc:	4093      	lsls	r3, r2
 8003bde:	68a2      	ldr	r2, [r4, #8]
 8003be0:	fa02 f707 	lsl.w	r7, r2, r7
 8003be4:	6862      	ldr	r2, [r4, #4]
 8003be6:	433b      	orrs	r3, r7
 8003be8:	4313      	orrs	r3, r2
 8003bea:	6922      	ldr	r2, [r4, #16]
 8003bec:	fa02 f000 	lsl.w	r0, r2, r0
 8003bf0:	6962      	ldr	r2, [r4, #20]
 8003bf2:	fab1 f181 	clz	r1, r1
 8003bf6:	fa02 f101 	lsl.w	r1, r2, r1
 8003bfa:	4303      	orrs	r3, r0
 8003bfc:	4a7b      	ldr	r2, [pc, #492]	; (8003dec <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8003bfe:	430b      	orrs	r3, r1
 8003c00:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8003c04:	9a01      	ldr	r2, [sp, #4]
 8003c06:	4e79      	ldr	r6, [pc, #484]	; (8003dec <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8003c08:	2301      	movs	r3, #1
 8003c0a:	6013      	str	r3, [r2, #0]
 8003c0c:	f000 ff76 	bl	8004afc <HAL_GetTick>
 8003c10:	4607      	mov	r7, r0
 8003c12:	6833      	ldr	r3, [r6, #0]
 8003c14:	011a      	lsls	r2, r3, #4
 8003c16:	d44b      	bmi.n	8003cb0 <HAL_RCCEx_PeriphCLKConfig+0x498>
 8003c18:	f000 ff70 	bl	8004afc <HAL_GetTick>
 8003c1c:	1bc0      	subs	r0, r0, r7
 8003c1e:	2802      	cmp	r0, #2
 8003c20:	d9f7      	bls.n	8003c12 <HAL_RCCEx_PeriphCLKConfig+0x3fa>
 8003c22:	e008      	b.n	8003c36 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8003c24:	2601      	movs	r6, #1
 8003c26:	e641      	b.n	80038ac <HAL_RCCEx_PeriphCLKConfig+0x94>
 8003c28:	f000 ff68 	bl	8004afc <HAL_GetTick>
 8003c2c:	eba0 0008 	sub.w	r0, r0, r8
 8003c30:	2802      	cmp	r0, #2
 8003c32:	f67f ae51 	bls.w	80038d8 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 8003c36:	2003      	movs	r0, #3
 8003c38:	b005      	add	sp, #20
 8003c3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8003c3e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003c40:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8003c44:	4293      	cmp	r3, r2
 8003c46:	f43f ae51 	beq.w	80038ec <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8003c4a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003c4c:	4a68      	ldr	r2, [pc, #416]	; (8003df0 <HAL_RCCEx_PeriphCLKConfig+0x5d8>)
 8003c4e:	2101      	movs	r1, #1
 8003c50:	6011      	str	r1, [r2, #0]
 8003c52:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003c56:	2100      	movs	r1, #0
 8003c58:	6011      	str	r1, [r2, #0]
 8003c5a:	673b      	str	r3, [r7, #112]	; 0x70
 8003c5c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003c5e:	07d9      	lsls	r1, r3, #31
 8003c60:	f57f ae44 	bpl.w	80038ec <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8003c64:	f000 ff4a 	bl	8004afc <HAL_GetTick>
 8003c68:	f241 3988 	movw	r9, #5000	; 0x1388
 8003c6c:	4680      	mov	r8, r0
 8003c6e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003c70:	079a      	lsls	r2, r3, #30
 8003c72:	f53f ae3b 	bmi.w	80038ec <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8003c76:	f000 ff41 	bl	8004afc <HAL_GetTick>
 8003c7a:	eba0 0008 	sub.w	r0, r0, r8
 8003c7e:	4548      	cmp	r0, r9
 8003c80:	d9f5      	bls.n	8003c6e <HAL_RCCEx_PeriphCLKConfig+0x456>
 8003c82:	e7d8      	b.n	8003c36 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8003c84:	6891      	ldr	r1, [r2, #8]
 8003c86:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8003c8a:	e63f      	b.n	800390c <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8003c8c:	4857      	ldr	r0, [pc, #348]	; (8003dec <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8003c8e:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8003c90:	f8d0 2094 	ldr.w	r2, [r0, #148]	; 0x94
 8003c94:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8003c98:	430a      	orrs	r2, r1
 8003c9a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
 8003c9e:	f8c0 2094 	str.w	r2, [r0, #148]	; 0x94
 8003ca2:	f47f ae74 	bne.w	800398e <HAL_RCCEx_PeriphCLKConfig+0x176>
 8003ca6:	e675      	b.n	8003994 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8003ca8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003cac:	f43f ae72 	beq.w	8003994 <HAL_RCCEx_PeriphCLKConfig+0x17c>
 8003cb0:	2d01      	cmp	r5, #1
 8003cb2:	f040 8084 	bne.w	8003dbe <HAL_RCCEx_PeriphCLKConfig+0x5a6>
 8003cb6:	4d4f      	ldr	r5, [pc, #316]	; (8003df4 <HAL_RCCEx_PeriphCLKConfig+0x5dc>)
 8003cb8:	4e4c      	ldr	r6, [pc, #304]	; (8003dec <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8003cba:	2300      	movs	r3, #0
 8003cbc:	602b      	str	r3, [r5, #0]
 8003cbe:	f000 ff1d 	bl	8004afc <HAL_GetTick>
 8003cc2:	4607      	mov	r7, r0
 8003cc4:	6833      	ldr	r3, [r6, #0]
 8003cc6:	009b      	lsls	r3, r3, #2
 8003cc8:	f100 8083 	bmi.w	8003dd2 <HAL_RCCEx_PeriphCLKConfig+0x5ba>
 8003ccc:	6820      	ldr	r0, [r4, #0]
 8003cce:	0746      	lsls	r6, r0, #29
 8003cd0:	d501      	bpl.n	8003cd6 <HAL_RCCEx_PeriphCLKConfig+0x4be>
 8003cd2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003cd4:	b11b      	cbz	r3, 8003cde <HAL_RCCEx_PeriphCLKConfig+0x4c6>
 8003cd6:	0701      	lsls	r1, r0, #28
 8003cd8:	d538      	bpl.n	8003d4c <HAL_RCCEx_PeriphCLKConfig+0x534>
 8003cda:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003cdc:	bbb3      	cbnz	r3, 8003d4c <HAL_RCCEx_PeriphCLKConfig+0x534>
 8003cde:	4943      	ldr	r1, [pc, #268]	; (8003dec <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8003ce0:	f44f 3640 	mov.w	r6, #196608	; 0x30000
 8003ce4:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
 8003ce8:	fa96 fea6 	rbit	lr, r6
 8003cec:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8003cf0:	fabe fe8e 	clz	lr, lr
 8003cf4:	fa92 f2a2 	rbit	r2, r2
 8003cf8:	fab2 f782 	clz	r7, r2
 8003cfc:	fa96 f6a6 	rbit	r6, r6
 8003d00:	f04f 6c70 	mov.w	r12, #251658240	; 0xf000000
 8003d04:	fab6 f686 	clz	r6, r6
 8003d08:	fa9c fcac 	rbit	r12, r12
 8003d0c:	69e2      	ldr	r2, [r4, #28]
 8003d0e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003d12:	40ba      	lsls	r2, r7
 8003d14:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8003d16:	fabc fc8c 	clz	r12, r12
 8003d1a:	fa23 f30e 	lsr.w	r3, r3, lr
 8003d1e:	fa07 f70c 	lsl.w	r7, r7, r12
 8003d22:	3301      	adds	r3, #1
 8003d24:	433a      	orrs	r2, r7
 8003d26:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003d2a:	69a7      	ldr	r7, [r4, #24]
 8003d2c:	3b01      	subs	r3, #1
 8003d2e:	433a      	orrs	r2, r7
 8003d30:	40b3      	lsls	r3, r6
 8003d32:	4313      	orrs	r3, r2
 8003d34:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003d38:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8003d3c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8003d3e:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8003d42:	3a01      	subs	r2, #1
 8003d44:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8003d48:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8003d4c:	05c2      	lsls	r2, r0, #23
 8003d4e:	d52d      	bpl.n	8003dac <HAL_RCCEx_PeriphCLKConfig+0x594>
 8003d50:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8003d52:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8003d56:	d129      	bne.n	8003dac <HAL_RCCEx_PeriphCLKConfig+0x594>
 8003d58:	4924      	ldr	r1, [pc, #144]	; (8003dec <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8003d5a:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 8003d5e:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
 8003d62:	fa90 f6a0 	rbit	r6, r0
 8003d66:	f647 7ec0 	movw	lr, #32704	; 0x7fc0
 8003d6a:	fab6 f686 	clz	r6, r6
 8003d6e:	fa9e feae 	rbit	lr, lr
 8003d72:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8003d76:	fabe fe8e 	clz	lr, lr
 8003d7a:	fa93 f3a3 	rbit	r3, r3
 8003d7e:	fab3 f783 	clz	r7, r3
 8003d82:	fa90 f0a0 	rbit	r0, r0
 8003d86:	6a23      	ldr	r3, [r4, #32]
 8003d88:	085b      	lsrs	r3, r3, #1
 8003d8a:	3b01      	subs	r3, #1
 8003d8c:	40bb      	lsls	r3, r7
 8003d8e:	69e7      	ldr	r7, [r4, #28]
 8003d90:	69a4      	ldr	r4, [r4, #24]
 8003d92:	fa07 f70e 	lsl.w	r7, r7, lr
 8003d96:	f002 6270 	and.w	r2, r2, #251658240	; 0xf000000
 8003d9a:	fab0 f080 	clz	r0, r0
 8003d9e:	433b      	orrs	r3, r7
 8003da0:	40f2      	lsrs	r2, r6
 8003da2:	4323      	orrs	r3, r4
 8003da4:	4082      	lsls	r2, r0
 8003da6:	4313      	orrs	r3, r2
 8003da8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8003dac:	2301      	movs	r3, #1
 8003dae:	602b      	str	r3, [r5, #0]
 8003db0:	f000 fea4 	bl	8004afc <HAL_GetTick>
 8003db4:	4c0d      	ldr	r4, [pc, #52]	; (8003dec <HAL_RCCEx_PeriphCLKConfig+0x5d4>)
 8003db6:	4605      	mov	r5, r0
 8003db8:	6823      	ldr	r3, [r4, #0]
 8003dba:	009b      	lsls	r3, r3, #2
 8003dbc:	d510      	bpl.n	8003de0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 8003dbe:	2000      	movs	r0, #0
 8003dc0:	e73a      	b.n	8003c38 <HAL_RCCEx_PeriphCLKConfig+0x420>
 8003dc2:	f000 fe9b 	bl	8004afc <HAL_GetTick>
 8003dc6:	eba0 0008 	sub.w	r0, r0, r8
 8003dca:	2802      	cmp	r0, #2
 8003dcc:	f67f adea 	bls.w	80039a4 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 8003dd0:	e731      	b.n	8003c36 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8003dd2:	f000 fe93 	bl	8004afc <HAL_GetTick>
 8003dd6:	1bc0      	subs	r0, r0, r7
 8003dd8:	2802      	cmp	r0, #2
 8003dda:	f67f af73 	bls.w	8003cc4 <HAL_RCCEx_PeriphCLKConfig+0x4ac>
 8003dde:	e72a      	b.n	8003c36 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8003de0:	f000 fe8c 	bl	8004afc <HAL_GetTick>
 8003de4:	1b40      	subs	r0, r0, r5
 8003de6:	2802      	cmp	r0, #2
 8003de8:	d9e6      	bls.n	8003db8 <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8003dea:	e724      	b.n	8003c36 <HAL_RCCEx_PeriphCLKConfig+0x41e>
 8003dec:	40023800 	.word	0x40023800
 8003df0:	42470e40 	.word	0x42470e40
 8003df4:	42470070 	.word	0x42470070

08003df8 <HAL_RCC_OscConfig>:
 8003df8:	6803      	ldr	r3, [r0, #0]
 8003dfa:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003dfc:	07df      	lsls	r7, r3, #31
 8003dfe:	4604      	mov	r4, r0
 8003e00:	d438      	bmi.n	8003e74 <HAL_RCC_OscConfig+0x7c>
 8003e02:	6823      	ldr	r3, [r4, #0]
 8003e04:	079e      	lsls	r6, r3, #30
 8003e06:	d47a      	bmi.n	8003efe <HAL_RCC_OscConfig+0x106>
 8003e08:	6823      	ldr	r3, [r4, #0]
 8003e0a:	071e      	lsls	r6, r3, #28
 8003e0c:	f100 80cf 	bmi.w	8003fae <HAL_RCC_OscConfig+0x1b6>
 8003e10:	6823      	ldr	r3, [r4, #0]
 8003e12:	075d      	lsls	r5, r3, #29
 8003e14:	d528      	bpl.n	8003e68 <HAL_RCC_OscConfig+0x70>
 8003e16:	2300      	movs	r3, #0
 8003e18:	9301      	str	r3, [sp, #4]
 8003e1a:	4baf      	ldr	r3, [pc, #700]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8003e1c:	4daf      	ldr	r5, [pc, #700]	; (80040dc <HAL_RCC_OscConfig+0x2e4>)
 8003e1e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003e20:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003e24:	641a      	str	r2, [r3, #64]	; 0x40
 8003e26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003e28:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003e2c:	9301      	str	r3, [sp, #4]
 8003e2e:	9b01      	ldr	r3, [sp, #4]
 8003e30:	682b      	ldr	r3, [r5, #0]
 8003e32:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003e36:	602b      	str	r3, [r5, #0]
 8003e38:	f000 fe60 	bl	8004afc <HAL_GetTick>
 8003e3c:	4606      	mov	r6, r0
 8003e3e:	682b      	ldr	r3, [r5, #0]
 8003e40:	05da      	lsls	r2, r3, #23
 8003e42:	f140 80d6 	bpl.w	8003ff2 <HAL_RCC_OscConfig+0x1fa>
 8003e46:	4ba6      	ldr	r3, [pc, #664]	; (80040e0 <HAL_RCC_OscConfig+0x2e8>)
 8003e48:	7a22      	ldrb	r2, [r4, #8]
 8003e4a:	701a      	strb	r2, [r3, #0]
 8003e4c:	68a3      	ldr	r3, [r4, #8]
 8003e4e:	2b00      	cmp	r3, #0
 8003e50:	f000 80dd 	beq.w	800400e <HAL_RCC_OscConfig+0x216>
 8003e54:	f000 fe52 	bl	8004afc <HAL_GetTick>
 8003e58:	4d9f      	ldr	r5, [pc, #636]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8003e5a:	4606      	mov	r6, r0
 8003e5c:	f241 3788 	movw	r7, #5000	; 0x1388
 8003e60:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8003e62:	079b      	lsls	r3, r3, #30
 8003e64:	f140 80cc 	bpl.w	8004000 <HAL_RCC_OscConfig+0x208>
 8003e68:	69a2      	ldr	r2, [r4, #24]
 8003e6a:	2a00      	cmp	r2, #0
 8003e6c:	f040 80df 	bne.w	800402e <HAL_RCC_OscConfig+0x236>
 8003e70:	2000      	movs	r0, #0
 8003e72:	e01e      	b.n	8003eb2 <HAL_RCC_OscConfig+0xba>
 8003e74:	4b98      	ldr	r3, [pc, #608]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8003e76:	689a      	ldr	r2, [r3, #8]
 8003e78:	f002 020c 	and.w	r2, r2, #12
 8003e7c:	2a04      	cmp	r2, #4
 8003e7e:	d010      	beq.n	8003ea2 <HAL_RCC_OscConfig+0xaa>
 8003e80:	689a      	ldr	r2, [r3, #8]
 8003e82:	f002 020c 	and.w	r2, r2, #12
 8003e86:	2a08      	cmp	r2, #8
 8003e88:	d102      	bne.n	8003e90 <HAL_RCC_OscConfig+0x98>
 8003e8a:	685b      	ldr	r3, [r3, #4]
 8003e8c:	025d      	lsls	r5, r3, #9
 8003e8e:	d408      	bmi.n	8003ea2 <HAL_RCC_OscConfig+0xaa>
 8003e90:	4a91      	ldr	r2, [pc, #580]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8003e92:	6893      	ldr	r3, [r2, #8]
 8003e94:	f003 030c 	and.w	r3, r3, #12
 8003e98:	2b0c      	cmp	r3, #12
 8003e9a:	d10c      	bne.n	8003eb6 <HAL_RCC_OscConfig+0xbe>
 8003e9c:	6853      	ldr	r3, [r2, #4]
 8003e9e:	0258      	lsls	r0, r3, #9
 8003ea0:	d509      	bpl.n	8003eb6 <HAL_RCC_OscConfig+0xbe>
 8003ea2:	4b8d      	ldr	r3, [pc, #564]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8003ea4:	681b      	ldr	r3, [r3, #0]
 8003ea6:	0399      	lsls	r1, r3, #14
 8003ea8:	d5ab      	bpl.n	8003e02 <HAL_RCC_OscConfig+0xa>
 8003eaa:	6863      	ldr	r3, [r4, #4]
 8003eac:	2b00      	cmp	r3, #0
 8003eae:	d1a8      	bne.n	8003e02 <HAL_RCC_OscConfig+0xa>
 8003eb0:	2001      	movs	r0, #1
 8003eb2:	b003      	add	sp, #12
 8003eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003eb6:	4b8b      	ldr	r3, [pc, #556]	; (80040e4 <HAL_RCC_OscConfig+0x2ec>)
 8003eb8:	7922      	ldrb	r2, [r4, #4]
 8003eba:	701a      	strb	r2, [r3, #0]
 8003ebc:	6863      	ldr	r3, [r4, #4]
 8003ebe:	b17b      	cbz	r3, 8003ee0 <HAL_RCC_OscConfig+0xe8>
 8003ec0:	f000 fe1c 	bl	8004afc <HAL_GetTick>
 8003ec4:	4d84      	ldr	r5, [pc, #528]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8003ec6:	4606      	mov	r6, r0
 8003ec8:	f241 3788 	movw	r7, #5000	; 0x1388
 8003ecc:	682b      	ldr	r3, [r5, #0]
 8003ece:	039a      	lsls	r2, r3, #14
 8003ed0:	d497      	bmi.n	8003e02 <HAL_RCC_OscConfig+0xa>
 8003ed2:	f000 fe13 	bl	8004afc <HAL_GetTick>
 8003ed6:	1b80      	subs	r0, r0, r6
 8003ed8:	42b8      	cmp	r0, r7
 8003eda:	d9f7      	bls.n	8003ecc <HAL_RCC_OscConfig+0xd4>
 8003edc:	2003      	movs	r0, #3
 8003ede:	e7e8      	b.n	8003eb2 <HAL_RCC_OscConfig+0xba>
 8003ee0:	f000 fe0c 	bl	8004afc <HAL_GetTick>
 8003ee4:	4d7c      	ldr	r5, [pc, #496]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8003ee6:	4606      	mov	r6, r0
 8003ee8:	f241 3788 	movw	r7, #5000	; 0x1388
 8003eec:	682b      	ldr	r3, [r5, #0]
 8003eee:	039b      	lsls	r3, r3, #14
 8003ef0:	d587      	bpl.n	8003e02 <HAL_RCC_OscConfig+0xa>
 8003ef2:	f000 fe03 	bl	8004afc <HAL_GetTick>
 8003ef6:	1b80      	subs	r0, r0, r6
 8003ef8:	42b8      	cmp	r0, r7
 8003efa:	d9f7      	bls.n	8003eec <HAL_RCC_OscConfig+0xf4>
 8003efc:	e7ee      	b.n	8003edc <HAL_RCC_OscConfig+0xe4>
 8003efe:	4b76      	ldr	r3, [pc, #472]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8003f00:	689a      	ldr	r2, [r3, #8]
 8003f02:	f012 0f0c 	tst.w	r2, #12
 8003f06:	d010      	beq.n	8003f2a <HAL_RCC_OscConfig+0x132>
 8003f08:	689a      	ldr	r2, [r3, #8]
 8003f0a:	f002 020c 	and.w	r2, r2, #12
 8003f0e:	2a08      	cmp	r2, #8
 8003f10:	d102      	bne.n	8003f18 <HAL_RCC_OscConfig+0x120>
 8003f12:	685b      	ldr	r3, [r3, #4]
 8003f14:	0258      	lsls	r0, r3, #9
 8003f16:	d508      	bpl.n	8003f2a <HAL_RCC_OscConfig+0x132>
 8003f18:	4a6f      	ldr	r2, [pc, #444]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8003f1a:	6893      	ldr	r3, [r2, #8]
 8003f1c:	f003 030c 	and.w	r3, r3, #12
 8003f20:	2b0c      	cmp	r3, #12
 8003f22:	d116      	bne.n	8003f52 <HAL_RCC_OscConfig+0x15a>
 8003f24:	6853      	ldr	r3, [r2, #4]
 8003f26:	0259      	lsls	r1, r3, #9
 8003f28:	d413      	bmi.n	8003f52 <HAL_RCC_OscConfig+0x15a>
 8003f2a:	4b6b      	ldr	r3, [pc, #428]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8003f2c:	681a      	ldr	r2, [r3, #0]
 8003f2e:	0792      	lsls	r2, r2, #30
 8003f30:	d502      	bpl.n	8003f38 <HAL_RCC_OscConfig+0x140>
 8003f32:	68e2      	ldr	r2, [r4, #12]
 8003f34:	2a01      	cmp	r2, #1
 8003f36:	d1bb      	bne.n	8003eb0 <HAL_RCC_OscConfig+0xb8>
 8003f38:	6818      	ldr	r0, [r3, #0]
 8003f3a:	22f8      	movs	r2, #248	; 0xf8
 8003f3c:	fa92 f2a2 	rbit	r2, r2
 8003f40:	fab2 f182 	clz	r1, r2
 8003f44:	6922      	ldr	r2, [r4, #16]
 8003f46:	408a      	lsls	r2, r1
 8003f48:	f020 01f8 	bic.w	r1, r0, #248	; 0xf8
 8003f4c:	430a      	orrs	r2, r1
 8003f4e:	601a      	str	r2, [r3, #0]
 8003f50:	e75a      	b.n	8003e08 <HAL_RCC_OscConfig+0x10>
 8003f52:	68e2      	ldr	r2, [r4, #12]
 8003f54:	4b64      	ldr	r3, [pc, #400]	; (80040e8 <HAL_RCC_OscConfig+0x2f0>)
 8003f56:	b1da      	cbz	r2, 8003f90 <HAL_RCC_OscConfig+0x198>
 8003f58:	2201      	movs	r2, #1
 8003f5a:	601a      	str	r2, [r3, #0]
 8003f5c:	f000 fdce 	bl	8004afc <HAL_GetTick>
 8003f60:	4d5d      	ldr	r5, [pc, #372]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8003f62:	4606      	mov	r6, r0
 8003f64:	682b      	ldr	r3, [r5, #0]
 8003f66:	079b      	lsls	r3, r3, #30
 8003f68:	d50c      	bpl.n	8003f84 <HAL_RCC_OscConfig+0x18c>
 8003f6a:	6829      	ldr	r1, [r5, #0]
 8003f6c:	23f8      	movs	r3, #248	; 0xf8
 8003f6e:	fa93 f3a3 	rbit	r3, r3
 8003f72:	fab3 f283 	clz	r2, r3
 8003f76:	6923      	ldr	r3, [r4, #16]
 8003f78:	4093      	lsls	r3, r2
 8003f7a:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 8003f7e:	4313      	orrs	r3, r2
 8003f80:	602b      	str	r3, [r5, #0]
 8003f82:	e741      	b.n	8003e08 <HAL_RCC_OscConfig+0x10>
 8003f84:	f000 fdba 	bl	8004afc <HAL_GetTick>
 8003f88:	1b80      	subs	r0, r0, r6
 8003f8a:	2802      	cmp	r0, #2
 8003f8c:	d9ea      	bls.n	8003f64 <HAL_RCC_OscConfig+0x16c>
 8003f8e:	e7a5      	b.n	8003edc <HAL_RCC_OscConfig+0xe4>
 8003f90:	601a      	str	r2, [r3, #0]
 8003f92:	f000 fdb3 	bl	8004afc <HAL_GetTick>
 8003f96:	4d50      	ldr	r5, [pc, #320]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8003f98:	4606      	mov	r6, r0
 8003f9a:	682b      	ldr	r3, [r5, #0]
 8003f9c:	079f      	lsls	r7, r3, #30
 8003f9e:	f57f af33 	bpl.w	8003e08 <HAL_RCC_OscConfig+0x10>
 8003fa2:	f000 fdab 	bl	8004afc <HAL_GetTick>
 8003fa6:	1b80      	subs	r0, r0, r6
 8003fa8:	2802      	cmp	r0, #2
 8003faa:	d9f6      	bls.n	8003f9a <HAL_RCC_OscConfig+0x1a2>
 8003fac:	e796      	b.n	8003edc <HAL_RCC_OscConfig+0xe4>
 8003fae:	6962      	ldr	r2, [r4, #20]
 8003fb0:	4b4e      	ldr	r3, [pc, #312]	; (80040ec <HAL_RCC_OscConfig+0x2f4>)
 8003fb2:	b17a      	cbz	r2, 8003fd4 <HAL_RCC_OscConfig+0x1dc>
 8003fb4:	2201      	movs	r2, #1
 8003fb6:	601a      	str	r2, [r3, #0]
 8003fb8:	f000 fda0 	bl	8004afc <HAL_GetTick>
 8003fbc:	4d46      	ldr	r5, [pc, #280]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8003fbe:	4606      	mov	r6, r0
 8003fc0:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8003fc2:	0798      	lsls	r0, r3, #30
 8003fc4:	f53f af24 	bmi.w	8003e10 <HAL_RCC_OscConfig+0x18>
 8003fc8:	f000 fd98 	bl	8004afc <HAL_GetTick>
 8003fcc:	1b80      	subs	r0, r0, r6
 8003fce:	2802      	cmp	r0, #2
 8003fd0:	d9f6      	bls.n	8003fc0 <HAL_RCC_OscConfig+0x1c8>
 8003fd2:	e783      	b.n	8003edc <HAL_RCC_OscConfig+0xe4>
 8003fd4:	601a      	str	r2, [r3, #0]
 8003fd6:	f000 fd91 	bl	8004afc <HAL_GetTick>
 8003fda:	4d3f      	ldr	r5, [pc, #252]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8003fdc:	4606      	mov	r6, r0
 8003fde:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8003fe0:	0799      	lsls	r1, r3, #30
 8003fe2:	f57f af15 	bpl.w	8003e10 <HAL_RCC_OscConfig+0x18>
 8003fe6:	f000 fd89 	bl	8004afc <HAL_GetTick>
 8003fea:	1b80      	subs	r0, r0, r6
 8003fec:	2802      	cmp	r0, #2
 8003fee:	d9f6      	bls.n	8003fde <HAL_RCC_OscConfig+0x1e6>
 8003ff0:	e774      	b.n	8003edc <HAL_RCC_OscConfig+0xe4>
 8003ff2:	f000 fd83 	bl	8004afc <HAL_GetTick>
 8003ff6:	1b80      	subs	r0, r0, r6
 8003ff8:	2802      	cmp	r0, #2
 8003ffa:	f67f af20 	bls.w	8003e3e <HAL_RCC_OscConfig+0x46>
 8003ffe:	e76d      	b.n	8003edc <HAL_RCC_OscConfig+0xe4>
 8004000:	f000 fd7c 	bl	8004afc <HAL_GetTick>
 8004004:	1b80      	subs	r0, r0, r6
 8004006:	42b8      	cmp	r0, r7
 8004008:	f67f af2a 	bls.w	8003e60 <HAL_RCC_OscConfig+0x68>
 800400c:	e766      	b.n	8003edc <HAL_RCC_OscConfig+0xe4>
 800400e:	f000 fd75 	bl	8004afc <HAL_GetTick>
 8004012:	4d31      	ldr	r5, [pc, #196]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8004014:	4606      	mov	r6, r0
 8004016:	f241 3788 	movw	r7, #5000	; 0x1388
 800401a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800401c:	0798      	lsls	r0, r3, #30
 800401e:	f57f af23 	bpl.w	8003e68 <HAL_RCC_OscConfig+0x70>
 8004022:	f000 fd6b 	bl	8004afc <HAL_GetTick>
 8004026:	1b80      	subs	r0, r0, r6
 8004028:	42b8      	cmp	r0, r7
 800402a:	d9f6      	bls.n	800401a <HAL_RCC_OscConfig+0x222>
 800402c:	e756      	b.n	8003edc <HAL_RCC_OscConfig+0xe4>
 800402e:	4d2a      	ldr	r5, [pc, #168]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 8004030:	68ab      	ldr	r3, [r5, #8]
 8004032:	f003 030c 	and.w	r3, r3, #12
 8004036:	2b08      	cmp	r3, #8
 8004038:	f43f af3a 	beq.w	8003eb0 <HAL_RCC_OscConfig+0xb8>
 800403c:	4e2c      	ldr	r6, [pc, #176]	; (80040f0 <HAL_RCC_OscConfig+0x2f8>)
 800403e:	2300      	movs	r3, #0
 8004040:	2a02      	cmp	r2, #2
 8004042:	6033      	str	r3, [r6, #0]
 8004044:	d156      	bne.n	80040f4 <HAL_RCC_OscConfig+0x2fc>
 8004046:	f000 fd59 	bl	8004afc <HAL_GetTick>
 800404a:	4607      	mov	r7, r0
 800404c:	682b      	ldr	r3, [r5, #0]
 800404e:	0199      	lsls	r1, r3, #6
 8004050:	d43c      	bmi.n	80040cc <HAL_RCC_OscConfig+0x2d4>
 8004052:	f647 7ec0 	movw	lr, #32704	; 0x7fc0
 8004056:	fa9e feae 	rbit	lr, lr
 800405a:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 800405e:	fabe fe8e 	clz	lr, lr
 8004062:	fa92 f2a2 	rbit	r2, r2
 8004066:	f04f 6070 	mov.w	r0, #251658240	; 0xf000000
 800406a:	fab2 f782 	clz	r7, r2
 800406e:	fa90 f0a0 	rbit	r0, r0
 8004072:	f04f 41e0 	mov.w	r1, #1879048192	; 0x70000000
 8004076:	fab0 f080 	clz	r0, r0
 800407a:	fa91 f1a1 	rbit	r1, r1
 800407e:	6a22      	ldr	r2, [r4, #32]
 8004080:	69e3      	ldr	r3, [r4, #28]
 8004082:	4313      	orrs	r3, r2
 8004084:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004086:	fa02 f20e 	lsl.w	r2, r2, lr
 800408a:	4313      	orrs	r3, r2
 800408c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800408e:	0852      	lsrs	r2, r2, #1
 8004090:	3a01      	subs	r2, #1
 8004092:	40ba      	lsls	r2, r7
 8004094:	4313      	orrs	r3, r2
 8004096:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8004098:	fa02 f000 	lsl.w	r0, r2, r0
 800409c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800409e:	4c0e      	ldr	r4, [pc, #56]	; (80040d8 <HAL_RCC_OscConfig+0x2e0>)
 80040a0:	fab1 f181 	clz	r1, r1
 80040a4:	4303      	orrs	r3, r0
 80040a6:	fa02 f101 	lsl.w	r1, r2, r1
 80040aa:	430b      	orrs	r3, r1
 80040ac:	606b      	str	r3, [r5, #4]
 80040ae:	2301      	movs	r3, #1
 80040b0:	6033      	str	r3, [r6, #0]
 80040b2:	f000 fd23 	bl	8004afc <HAL_GetTick>
 80040b6:	4605      	mov	r5, r0
 80040b8:	6823      	ldr	r3, [r4, #0]
 80040ba:	019a      	lsls	r2, r3, #6
 80040bc:	f53f aed8 	bmi.w	8003e70 <HAL_RCC_OscConfig+0x78>
 80040c0:	f000 fd1c 	bl	8004afc <HAL_GetTick>
 80040c4:	1b40      	subs	r0, r0, r5
 80040c6:	2802      	cmp	r0, #2
 80040c8:	d9f6      	bls.n	80040b8 <HAL_RCC_OscConfig+0x2c0>
 80040ca:	e707      	b.n	8003edc <HAL_RCC_OscConfig+0xe4>
 80040cc:	f000 fd16 	bl	8004afc <HAL_GetTick>
 80040d0:	1bc0      	subs	r0, r0, r7
 80040d2:	2802      	cmp	r0, #2
 80040d4:	d9ba      	bls.n	800404c <HAL_RCC_OscConfig+0x254>
 80040d6:	e701      	b.n	8003edc <HAL_RCC_OscConfig+0xe4>
 80040d8:	40023800 	.word	0x40023800
 80040dc:	40007000 	.word	0x40007000
 80040e0:	40023870 	.word	0x40023870
 80040e4:	40023802 	.word	0x40023802
 80040e8:	42470000 	.word	0x42470000
 80040ec:	42470e80 	.word	0x42470e80
 80040f0:	42470060 	.word	0x42470060
 80040f4:	f000 fd02 	bl	8004afc <HAL_GetTick>
 80040f8:	4604      	mov	r4, r0
 80040fa:	682b      	ldr	r3, [r5, #0]
 80040fc:	019b      	lsls	r3, r3, #6
 80040fe:	f57f aeb7 	bpl.w	8003e70 <HAL_RCC_OscConfig+0x78>
 8004102:	f000 fcfb 	bl	8004afc <HAL_GetTick>
 8004106:	1b00      	subs	r0, r0, r4
 8004108:	2802      	cmp	r0, #2
 800410a:	d9f6      	bls.n	80040fa <HAL_RCC_OscConfig+0x302>
 800410c:	e6e6      	b.n	8003edc <HAL_RCC_OscConfig+0xe4>
 800410e:	bf00      	nop

08004110 <HAL_RCC_GetSysClockFreq>:
 8004110:	4b2b      	ldr	r3, [pc, #172]	; (80041c0 <HAL_RCC_GetSysClockFreq+0xb0>)
 8004112:	689a      	ldr	r2, [r3, #8]
 8004114:	f002 020c 	and.w	r2, r2, #12
 8004118:	2a08      	cmp	r2, #8
 800411a:	d007      	beq.n	800412c <HAL_RCC_GetSysClockFreq+0x1c>
 800411c:	2a0c      	cmp	r2, #12
 800411e:	d02c      	beq.n	800417a <HAL_RCC_GetSysClockFreq+0x6a>
 8004120:	4b28      	ldr	r3, [pc, #160]	; (80041c4 <HAL_RCC_GetSysClockFreq+0xb4>)
 8004122:	4829      	ldr	r0, [pc, #164]	; (80041c8 <HAL_RCC_GetSysClockFreq+0xb8>)
 8004124:	2a04      	cmp	r2, #4
 8004126:	bf18      	it	ne
 8004128:	4618      	movne	r0, r3
 800412a:	4770      	bx	lr
 800412c:	685a      	ldr	r2, [r3, #4]
 800412e:	6859      	ldr	r1, [r3, #4]
 8004130:	685b      	ldr	r3, [r3, #4]
 8004132:	f411 0f80 	tst.w	r1, #4194304	; 0x400000
 8004136:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800413a:	f647 71c0 	movw	r1, #32704	; 0x7fc0
 800413e:	fa91 f0a1 	rbit	r0, r1
 8004142:	fab0 f080 	clz	r0, r0
 8004146:	ea03 0301 	and.w	r3, r3, r1
 800414a:	fa23 f300 	lsr.w	r3, r3, r0
 800414e:	bf14      	ite	ne
 8004150:	481d      	ldrne	r0, [pc, #116]	; (80041c8 <HAL_RCC_GetSysClockFreq+0xb8>)
 8004152:	481c      	ldreq	r0, [pc, #112]	; (80041c4 <HAL_RCC_GetSysClockFreq+0xb4>)
 8004154:	fbb0 f0f2 	udiv	r0, r0, r2
 8004158:	4358      	muls	r0, r3
 800415a:	4b19      	ldr	r3, [pc, #100]	; (80041c0 <HAL_RCC_GetSysClockFreq+0xb0>)
 800415c:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8004160:	685b      	ldr	r3, [r3, #4]
 8004162:	fa92 f2a2 	rbit	r2, r2
 8004166:	fab2 f282 	clz	r2, r2
 800416a:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800416e:	40d3      	lsrs	r3, r2
 8004170:	3301      	adds	r3, #1
 8004172:	005b      	lsls	r3, r3, #1
 8004174:	fbb0 f0f3 	udiv	r0, r0, r3
 8004178:	4770      	bx	lr
 800417a:	685a      	ldr	r2, [r3, #4]
 800417c:	6859      	ldr	r1, [r3, #4]
 800417e:	685b      	ldr	r3, [r3, #4]
 8004180:	f411 0f80 	tst.w	r1, #4194304	; 0x400000
 8004184:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8004188:	f647 71c0 	movw	r1, #32704	; 0x7fc0
 800418c:	fa91 f0a1 	rbit	r0, r1
 8004190:	fab0 f080 	clz	r0, r0
 8004194:	ea03 0301 	and.w	r3, r3, r1
 8004198:	fa23 f300 	lsr.w	r3, r3, r0
 800419c:	bf14      	ite	ne
 800419e:	480a      	ldrne	r0, [pc, #40]	; (80041c8 <HAL_RCC_GetSysClockFreq+0xb8>)
 80041a0:	4808      	ldreq	r0, [pc, #32]	; (80041c4 <HAL_RCC_GetSysClockFreq+0xb4>)
 80041a2:	fbb0 f0f2 	udiv	r0, r0, r2
 80041a6:	4358      	muls	r0, r3
 80041a8:	4b05      	ldr	r3, [pc, #20]	; (80041c0 <HAL_RCC_GetSysClockFreq+0xb0>)
 80041aa:	f04f 42e0 	mov.w	r2, #1879048192	; 0x70000000
 80041ae:	685b      	ldr	r3, [r3, #4]
 80041b0:	fa92 f2a2 	rbit	r2, r2
 80041b4:	fab2 f282 	clz	r2, r2
 80041b8:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
 80041bc:	40d3      	lsrs	r3, r2
 80041be:	e7d9      	b.n	8004174 <HAL_RCC_GetSysClockFreq+0x64>
 80041c0:	40023800 	.word	0x40023800
 80041c4:	00f42400 	.word	0x00f42400
 80041c8:	007a1200 	.word	0x007a1200

080041cc <HAL_GPIO_Init>:
 80041cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80041d0:	b085      	sub	sp, #20
 80041d2:	680b      	ldr	r3, [r1, #0]
 80041d4:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 8004378 <HAL_GPIO_Init+0x1ac>
 80041d8:	4a65      	ldr	r2, [pc, #404]	; (8004370 <HAL_GPIO_Init+0x1a4>)
 80041da:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 800437c <HAL_GPIO_Init+0x1b0>
 80041de:	9301      	str	r3, [sp, #4]
 80041e0:	2300      	movs	r3, #0
 80041e2:	f04f 0e01 	mov.w	lr, #1
 80041e6:	9c01      	ldr	r4, [sp, #4]
 80041e8:	fa0e fe03 	lsl.w	lr, lr, r3
 80041ec:	ea0e 0604 	and.w	r6, lr, r4
 80041f0:	45b6      	cmp	lr, r6
 80041f2:	f040 80aa 	bne.w	800434a <HAL_GPIO_Init+0x17e>
 80041f6:	684c      	ldr	r4, [r1, #4]
 80041f8:	f024 0710 	bic.w	r7, r4, #16
 80041fc:	2f02      	cmp	r7, #2
 80041fe:	d116      	bne.n	800422e <HAL_GPIO_Init+0x62>
 8004200:	ea4f 0ad3 	mov.w	r10, r3, lsr #3
 8004204:	eb00 0a8a 	add.w	r10, r0, r10, lsl #2
 8004208:	f003 0b07 	and.w	r11, r3, #7
 800420c:	f8da 5020 	ldr.w	r5, [r10, #32]
 8004210:	ea4f 0b8b 	mov.w	r11, r11, lsl #2
 8004214:	f04f 0c0f 	mov.w	r12, #15
 8004218:	fa0c fc0b 	lsl.w	r12, r12, r11
 800421c:	ea25 0c0c 	bic.w	r12, r5, r12
 8004220:	690d      	ldr	r5, [r1, #16]
 8004222:	fa05 f50b 	lsl.w	r5, r5, r11
 8004226:	ea45 050c 	orr.w	r5, r5, r12
 800422a:	f8ca 5020 	str.w	r5, [r10, #32]
 800422e:	ea4f 0a43 	mov.w	r10, r3, lsl #1
 8004232:	2503      	movs	r5, #3
 8004234:	f8d0 b000 	ldr.w	r11, [r0]
 8004238:	fa05 f50a 	lsl.w	r5, r5, r10
 800423c:	43ed      	mvns	r5, r5
 800423e:	f004 0c03 	and.w	r12, r4, #3
 8004242:	ea0b 0b05 	and.w	r11, r11, r5
 8004246:	fa0c fc0a 	lsl.w	r12, r12, r10
 800424a:	3f01      	subs	r7, #1
 800424c:	ea4c 0c0b 	orr.w	r12, r12, r11
 8004250:	2f01      	cmp	r7, #1
 8004252:	f8c0 c000 	str.w	r12, [r0]
 8004256:	d811      	bhi.n	800427c <HAL_GPIO_Init+0xb0>
 8004258:	6887      	ldr	r7, [r0, #8]
 800425a:	ea07 0b05 	and.w	r11, r7, r5
 800425e:	68cf      	ldr	r7, [r1, #12]
 8004260:	fa07 fc0a 	lsl.w	r12, r7, r10
 8004264:	ea4c 070b 	orr.w	r7, r12, r11
 8004268:	6087      	str	r7, [r0, #8]
 800426a:	6847      	ldr	r7, [r0, #4]
 800426c:	ea27 0e0e 	bic.w	lr, r7, lr
 8004270:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8004274:	409f      	lsls	r7, r3
 8004276:	ea47 070e 	orr.w	r7, r7, lr
 800427a:	6047      	str	r7, [r0, #4]
 800427c:	68c7      	ldr	r7, [r0, #12]
 800427e:	403d      	ands	r5, r7
 8004280:	688f      	ldr	r7, [r1, #8]
 8004282:	fa07 f70a 	lsl.w	r7, r7, r10
 8004286:	433d      	orrs	r5, r7
 8004288:	60c5      	str	r5, [r0, #12]
 800428a:	00e5      	lsls	r5, r4, #3
 800428c:	d55d      	bpl.n	800434a <HAL_GPIO_Init+0x17e>
 800428e:	f04f 0b00 	mov.w	r11, #0
 8004292:	f8cd b00c 	str.w	r11, [sp, #12]
 8004296:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 800429a:	4d36      	ldr	r5, [pc, #216]	; (8004374 <HAL_GPIO_Init+0x1a8>)
 800429c:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 80042a0:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 80042a4:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 80042a8:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 80042ac:	9703      	str	r7, [sp, #12]
 80042ae:	9f03      	ldr	r7, [sp, #12]
 80042b0:	f023 0703 	bic.w	r7, r3, #3
 80042b4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80042b8:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
 80042bc:	f003 0c03 	and.w	r12, r3, #3
 80042c0:	f8d7 a008 	ldr.w	r10, [r7, #8]
 80042c4:	ea4f 0c8c 	mov.w	r12, r12, lsl #2
 80042c8:	f04f 0e0f 	mov.w	lr, #15
 80042cc:	fa0e fe0c 	lsl.w	lr, lr, r12
 80042d0:	42a8      	cmp	r0, r5
 80042d2:	ea2a 0e0e 	bic.w	lr, r10, lr
 80042d6:	d03f      	beq.n	8004358 <HAL_GPIO_Init+0x18c>
 80042d8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80042dc:	42a8      	cmp	r0, r5
 80042de:	d03d      	beq.n	800435c <HAL_GPIO_Init+0x190>
 80042e0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80042e4:	42a8      	cmp	r0, r5
 80042e6:	d03b      	beq.n	8004360 <HAL_GPIO_Init+0x194>
 80042e8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80042ec:	42a8      	cmp	r0, r5
 80042ee:	d039      	beq.n	8004364 <HAL_GPIO_Init+0x198>
 80042f0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80042f4:	42a8      	cmp	r0, r5
 80042f6:	d037      	beq.n	8004368 <HAL_GPIO_Init+0x19c>
 80042f8:	4548      	cmp	r0, r9
 80042fa:	d037      	beq.n	800436c <HAL_GPIO_Init+0x1a0>
 80042fc:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8004300:	42a8      	cmp	r0, r5
 8004302:	bf14      	ite	ne
 8004304:	2508      	movne	r5, #8
 8004306:	2506      	moveq	r5, #6
 8004308:	fa05 f50c 	lsl.w	r5, r5, r12
 800430c:	ea45 050e 	orr.w	r5, r5, lr
 8004310:	60bd      	str	r5, [r7, #8]
 8004312:	6815      	ldr	r5, [r2, #0]
 8004314:	43f7      	mvns	r7, r6
 8004316:	f414 3f80 	tst.w	r4, #65536	; 0x10000
 800431a:	bf0c      	ite	eq
 800431c:	403d      	andeq	r5, r7
 800431e:	4335      	orrne	r5, r6
 8004320:	6015      	str	r5, [r2, #0]
 8004322:	6855      	ldr	r5, [r2, #4]
 8004324:	f414 3f00 	tst.w	r4, #131072	; 0x20000
 8004328:	bf0c      	ite	eq
 800432a:	403d      	andeq	r5, r7
 800432c:	4335      	orrne	r5, r6
 800432e:	6055      	str	r5, [r2, #4]
 8004330:	6895      	ldr	r5, [r2, #8]
 8004332:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
 8004336:	bf0c      	ite	eq
 8004338:	403d      	andeq	r5, r7
 800433a:	4335      	orrne	r5, r6
 800433c:	6095      	str	r5, [r2, #8]
 800433e:	68d5      	ldr	r5, [r2, #12]
 8004340:	02a4      	lsls	r4, r4, #10
 8004342:	bf54      	ite	pl
 8004344:	403d      	andpl	r5, r7
 8004346:	4335      	orrmi	r5, r6
 8004348:	60d5      	str	r5, [r2, #12]
 800434a:	3301      	adds	r3, #1
 800434c:	2b10      	cmp	r3, #16
 800434e:	f47f af48 	bne.w	80041e2 <HAL_GPIO_Init+0x16>
 8004352:	b005      	add	sp, #20
 8004354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8004358:	465d      	mov	r5, r11
 800435a:	e7d5      	b.n	8004308 <HAL_GPIO_Init+0x13c>
 800435c:	2501      	movs	r5, #1
 800435e:	e7d3      	b.n	8004308 <HAL_GPIO_Init+0x13c>
 8004360:	2502      	movs	r5, #2
 8004362:	e7d1      	b.n	8004308 <HAL_GPIO_Init+0x13c>
 8004364:	2503      	movs	r5, #3
 8004366:	e7cf      	b.n	8004308 <HAL_GPIO_Init+0x13c>
 8004368:	2504      	movs	r5, #4
 800436a:	e7cd      	b.n	8004308 <HAL_GPIO_Init+0x13c>
 800436c:	2505      	movs	r5, #5
 800436e:	e7cb      	b.n	8004308 <HAL_GPIO_Init+0x13c>
 8004370:	40013c00 	.word	0x40013c00
 8004374:	40020000 	.word	0x40020000
 8004378:	40023800 	.word	0x40023800
 800437c:	40021400 	.word	0x40021400

08004380 <UART_SetConfig>:
 8004380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8004384:	6806      	ldr	r6, [r0, #0]
 8004386:	68c2      	ldr	r2, [r0, #12]
 8004388:	6933      	ldr	r3, [r6, #16]
 800438a:	69c1      	ldr	r1, [r0, #28]
 800438c:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8004390:	4313      	orrs	r3, r2
 8004392:	6133      	str	r3, [r6, #16]
 8004394:	4604      	mov	r4, r0
 8004396:	6883      	ldr	r3, [r0, #8]
 8004398:	6900      	ldr	r0, [r0, #16]
 800439a:	68f2      	ldr	r2, [r6, #12]
 800439c:	4303      	orrs	r3, r0
 800439e:	6960      	ldr	r0, [r4, #20]
 80043a0:	f422 4216 	bic.w	r2, r2, #38400	; 0x9600
 80043a4:	4303      	orrs	r3, r0
 80043a6:	f022 020c 	bic.w	r2, r2, #12
 80043aa:	430b      	orrs	r3, r1
 80043ac:	4313      	orrs	r3, r2
 80043ae:	60f3      	str	r3, [r6, #12]
 80043b0:	6973      	ldr	r3, [r6, #20]
 80043b2:	69a2      	ldr	r2, [r4, #24]
 80043b4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80043b8:	4313      	orrs	r3, r2
 80043ba:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 80043be:	6173      	str	r3, [r6, #20]
 80043c0:	4b7a      	ldr	r3, [pc, #488]	; (80045ac <UART_SetConfig+0x22c>)
 80043c2:	d17c      	bne.n	80044be <UART_SetConfig+0x13e>
 80043c4:	429e      	cmp	r6, r3
 80043c6:	d003      	beq.n	80043d0 <UART_SetConfig+0x50>
 80043c8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80043cc:	429e      	cmp	r6, r3
 80043ce:	d144      	bne.n	800445a <UART_SetConfig+0xda>
 80043d0:	f000 faf0 	bl	80049b4 <HAL_RCC_GetPCLK2Freq>
 80043d4:	2519      	movs	r5, #25
 80043d6:	fb05 f300 	mul.w	r3, r5, r0
 80043da:	6860      	ldr	r0, [r4, #4]
 80043dc:	f04f 0964 	mov.w	r9, #100	; 0x64
 80043e0:	0040      	lsls	r0, r0, #1
 80043e2:	fbb3 f3f0 	udiv	r3, r3, r0
 80043e6:	fbb3 f3f9 	udiv	r3, r3, r9
 80043ea:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80043ee:	f000 fae1 	bl	80049b4 <HAL_RCC_GetPCLK2Freq>
 80043f2:	6863      	ldr	r3, [r4, #4]
 80043f4:	4368      	muls	r0, r5
 80043f6:	005b      	lsls	r3, r3, #1
 80043f8:	fbb0 f7f3 	udiv	r7, r0, r3
 80043fc:	f000 fada 	bl	80049b4 <HAL_RCC_GetPCLK2Freq>
 8004400:	6863      	ldr	r3, [r4, #4]
 8004402:	4368      	muls	r0, r5
 8004404:	005b      	lsls	r3, r3, #1
 8004406:	fbb0 f3f3 	udiv	r3, r0, r3
 800440a:	fbb3 f3f9 	udiv	r3, r3, r9
 800440e:	fb09 7313 	mls	r3, r9, r3, r7
 8004412:	00db      	lsls	r3, r3, #3
 8004414:	3332      	adds	r3, #50	; 0x32
 8004416:	fbb3 f3f9 	udiv	r3, r3, r9
 800441a:	005b      	lsls	r3, r3, #1
 800441c:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 8004420:	f000 fac8 	bl	80049b4 <HAL_RCC_GetPCLK2Freq>
 8004424:	6862      	ldr	r2, [r4, #4]
 8004426:	4368      	muls	r0, r5
 8004428:	0052      	lsls	r2, r2, #1
 800442a:	fbb0 faf2 	udiv	r10, r0, r2
 800442e:	f000 fac1 	bl	80049b4 <HAL_RCC_GetPCLK2Freq>
 8004432:	6863      	ldr	r3, [r4, #4]
 8004434:	4368      	muls	r0, r5
 8004436:	005b      	lsls	r3, r3, #1
 8004438:	fbb0 f3f3 	udiv	r3, r0, r3
 800443c:	fbb3 f3f9 	udiv	r3, r3, r9
 8004440:	fb09 a313 	mls	r3, r9, r3, r10
 8004444:	00db      	lsls	r3, r3, #3
 8004446:	3332      	adds	r3, #50	; 0x32
 8004448:	fbb3 f3f9 	udiv	r3, r3, r9
 800444c:	f003 0307 	and.w	r3, r3, #7
 8004450:	4443      	add	r3, r8
 8004452:	443b      	add	r3, r7
 8004454:	60b3      	str	r3, [r6, #8]
 8004456:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800445a:	f000 fa93 	bl	8004984 <HAL_RCC_GetPCLK1Freq>
 800445e:	2519      	movs	r5, #25
 8004460:	fb05 f300 	mul.w	r3, r5, r0
 8004464:	6860      	ldr	r0, [r4, #4]
 8004466:	f04f 0964 	mov.w	r9, #100	; 0x64
 800446a:	0040      	lsls	r0, r0, #1
 800446c:	fbb3 f3f0 	udiv	r3, r3, r0
 8004470:	fbb3 f3f9 	udiv	r3, r3, r9
 8004474:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8004478:	f000 fa84 	bl	8004984 <HAL_RCC_GetPCLK1Freq>
 800447c:	6863      	ldr	r3, [r4, #4]
 800447e:	4368      	muls	r0, r5
 8004480:	005b      	lsls	r3, r3, #1
 8004482:	fbb0 f7f3 	udiv	r7, r0, r3
 8004486:	f000 fa7d 	bl	8004984 <HAL_RCC_GetPCLK1Freq>
 800448a:	6863      	ldr	r3, [r4, #4]
 800448c:	4368      	muls	r0, r5
 800448e:	005b      	lsls	r3, r3, #1
 8004490:	fbb0 f3f3 	udiv	r3, r0, r3
 8004494:	fbb3 f3f9 	udiv	r3, r3, r9
 8004498:	fb09 7313 	mls	r3, r9, r3, r7
 800449c:	00db      	lsls	r3, r3, #3
 800449e:	3332      	adds	r3, #50	; 0x32
 80044a0:	fbb3 f3f9 	udiv	r3, r3, r9
 80044a4:	005b      	lsls	r3, r3, #1
 80044a6:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 80044aa:	f000 fa6b 	bl	8004984 <HAL_RCC_GetPCLK1Freq>
 80044ae:	6862      	ldr	r2, [r4, #4]
 80044b0:	4368      	muls	r0, r5
 80044b2:	0052      	lsls	r2, r2, #1
 80044b4:	fbb0 faf2 	udiv	r10, r0, r2
 80044b8:	f000 fa64 	bl	8004984 <HAL_RCC_GetPCLK1Freq>
 80044bc:	e7b9      	b.n	8004432 <UART_SetConfig+0xb2>
 80044be:	429e      	cmp	r6, r3
 80044c0:	d002      	beq.n	80044c8 <UART_SetConfig+0x148>
 80044c2:	4b3b      	ldr	r3, [pc, #236]	; (80045b0 <UART_SetConfig+0x230>)
 80044c4:	429e      	cmp	r6, r3
 80044c6:	d140      	bne.n	800454a <UART_SetConfig+0x1ca>
 80044c8:	f000 fa74 	bl	80049b4 <HAL_RCC_GetPCLK2Freq>
 80044cc:	6867      	ldr	r7, [r4, #4]
 80044ce:	2519      	movs	r5, #25
 80044d0:	f04f 0964 	mov.w	r9, #100	; 0x64
 80044d4:	fb05 f300 	mul.w	r3, r5, r0
 80044d8:	00bf      	lsls	r7, r7, #2
 80044da:	fbb3 f3f7 	udiv	r3, r3, r7
 80044de:	fbb3 f3f9 	udiv	r3, r3, r9
 80044e2:	011f      	lsls	r7, r3, #4
 80044e4:	f000 fa66 	bl	80049b4 <HAL_RCC_GetPCLK2Freq>
 80044e8:	6863      	ldr	r3, [r4, #4]
 80044ea:	4368      	muls	r0, r5
 80044ec:	009b      	lsls	r3, r3, #2
 80044ee:	fbb0 f8f3 	udiv	r8, r0, r3
 80044f2:	f000 fa5f 	bl	80049b4 <HAL_RCC_GetPCLK2Freq>
 80044f6:	6863      	ldr	r3, [r4, #4]
 80044f8:	4368      	muls	r0, r5
 80044fa:	009b      	lsls	r3, r3, #2
 80044fc:	fbb0 f3f3 	udiv	r3, r0, r3
 8004500:	fbb3 f3f9 	udiv	r3, r3, r9
 8004504:	fb09 8313 	mls	r3, r9, r3, r8
 8004508:	011b      	lsls	r3, r3, #4
 800450a:	3332      	adds	r3, #50	; 0x32
 800450c:	fbb3 f3f9 	udiv	r3, r3, r9
 8004510:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8004514:	f000 fa4e 	bl	80049b4 <HAL_RCC_GetPCLK2Freq>
 8004518:	6862      	ldr	r2, [r4, #4]
 800451a:	4368      	muls	r0, r5
 800451c:	0092      	lsls	r2, r2, #2
 800451e:	fbb0 faf2 	udiv	r10, r0, r2
 8004522:	f000 fa47 	bl	80049b4 <HAL_RCC_GetPCLK2Freq>
 8004526:	6863      	ldr	r3, [r4, #4]
 8004528:	4368      	muls	r0, r5
 800452a:	009b      	lsls	r3, r3, #2
 800452c:	fbb0 f3f3 	udiv	r3, r0, r3
 8004530:	fbb3 f3f9 	udiv	r3, r3, r9
 8004534:	fb09 a313 	mls	r3, r9, r3, r10
 8004538:	011b      	lsls	r3, r3, #4
 800453a:	3332      	adds	r3, #50	; 0x32
 800453c:	fbb3 f3f9 	udiv	r3, r3, r9
 8004540:	f003 030f 	and.w	r3, r3, #15
 8004544:	ea43 0308 	orr.w	r3, r3, r8
 8004548:	e783      	b.n	8004452 <UART_SetConfig+0xd2>
 800454a:	f000 fa1b 	bl	8004984 <HAL_RCC_GetPCLK1Freq>
 800454e:	6867      	ldr	r7, [r4, #4]
 8004550:	2519      	movs	r5, #25
 8004552:	f04f 0964 	mov.w	r9, #100	; 0x64
 8004556:	fb05 f300 	mul.w	r3, r5, r0
 800455a:	00bf      	lsls	r7, r7, #2
 800455c:	fbb3 f3f7 	udiv	r3, r3, r7
 8004560:	fbb3 f3f9 	udiv	r3, r3, r9
 8004564:	011f      	lsls	r7, r3, #4
 8004566:	f000 fa0d 	bl	8004984 <HAL_RCC_GetPCLK1Freq>
 800456a:	6863      	ldr	r3, [r4, #4]
 800456c:	4368      	muls	r0, r5
 800456e:	009b      	lsls	r3, r3, #2
 8004570:	fbb0 f8f3 	udiv	r8, r0, r3
 8004574:	f000 fa06 	bl	8004984 <HAL_RCC_GetPCLK1Freq>
 8004578:	6863      	ldr	r3, [r4, #4]
 800457a:	4368      	muls	r0, r5
 800457c:	009b      	lsls	r3, r3, #2
 800457e:	fbb0 f3f3 	udiv	r3, r0, r3
 8004582:	fbb3 f3f9 	udiv	r3, r3, r9
 8004586:	fb09 8313 	mls	r3, r9, r3, r8
 800458a:	011b      	lsls	r3, r3, #4
 800458c:	3332      	adds	r3, #50	; 0x32
 800458e:	fbb3 f3f9 	udiv	r3, r3, r9
 8004592:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8004596:	f000 f9f5 	bl	8004984 <HAL_RCC_GetPCLK1Freq>
 800459a:	6862      	ldr	r2, [r4, #4]
 800459c:	4368      	muls	r0, r5
 800459e:	0092      	lsls	r2, r2, #2
 80045a0:	fbb0 faf2 	udiv	r10, r0, r2
 80045a4:	f000 f9ee 	bl	8004984 <HAL_RCC_GetPCLK1Freq>
 80045a8:	e7bd      	b.n	8004526 <UART_SetConfig+0x1a6>
 80045aa:	bf00      	nop
 80045ac:	40011000 	.word	0x40011000
 80045b0:	40011400 	.word	0x40011400

080045b4 <HAL_UART_MspInit>:
 80045b4:	4770      	bx	lr

080045b6 <HAL_UART_Init>:
 80045b6:	b510      	push	{r4, lr}
 80045b8:	4604      	mov	r4, r0
 80045ba:	b340      	cbz	r0, 800460e <HAL_UART_Init+0x58>
 80045bc:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80045c0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80045c4:	b91b      	cbnz	r3, 80045ce <HAL_UART_Init+0x18>
 80045c6:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 80045ca:	f7ff fff3 	bl	80045b4 <HAL_UART_MspInit>
 80045ce:	6822      	ldr	r2, [r4, #0]
 80045d0:	2324      	movs	r3, #36	; 0x24
 80045d2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80045d6:	68d3      	ldr	r3, [r2, #12]
 80045d8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80045dc:	60d3      	str	r3, [r2, #12]
 80045de:	4620      	mov	r0, r4
 80045e0:	f7ff fece 	bl	8004380 <UART_SetConfig>
 80045e4:	6823      	ldr	r3, [r4, #0]
 80045e6:	691a      	ldr	r2, [r3, #16]
 80045e8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80045ec:	611a      	str	r2, [r3, #16]
 80045ee:	695a      	ldr	r2, [r3, #20]
 80045f0:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80045f4:	615a      	str	r2, [r3, #20]
 80045f6:	68da      	ldr	r2, [r3, #12]
 80045f8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80045fc:	60da      	str	r2, [r3, #12]
 80045fe:	2000      	movs	r0, #0
 8004600:	2320      	movs	r3, #32
 8004602:	63e0      	str	r0, [r4, #60]	; 0x3c
 8004604:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004608:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 800460c:	bd10      	pop	{r4, pc}
 800460e:	2001      	movs	r0, #1
 8004610:	bd10      	pop	{r4, pc}

08004612 <HAL_TIM_OC_MspInit>:
 8004612:	4770      	bx	lr

08004614 <TIM_Base_SetConfig>:
 8004614:	4a2e      	ldr	r2, [pc, #184]	; (80046d0 <TIM_Base_SetConfig+0xbc>)
 8004616:	6803      	ldr	r3, [r0, #0]
 8004618:	4290      	cmp	r0, r2
 800461a:	d012      	beq.n	8004642 <TIM_Base_SetConfig+0x2e>
 800461c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004620:	d00f      	beq.n	8004642 <TIM_Base_SetConfig+0x2e>
 8004622:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8004626:	4290      	cmp	r0, r2
 8004628:	d00b      	beq.n	8004642 <TIM_Base_SetConfig+0x2e>
 800462a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800462e:	4290      	cmp	r0, r2
 8004630:	d007      	beq.n	8004642 <TIM_Base_SetConfig+0x2e>
 8004632:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004636:	4290      	cmp	r0, r2
 8004638:	d003      	beq.n	8004642 <TIM_Base_SetConfig+0x2e>
 800463a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800463e:	4290      	cmp	r0, r2
 8004640:	d11d      	bne.n	800467e <TIM_Base_SetConfig+0x6a>
 8004642:	684a      	ldr	r2, [r1, #4]
 8004644:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004648:	4313      	orrs	r3, r2
 800464a:	4a21      	ldr	r2, [pc, #132]	; (80046d0 <TIM_Base_SetConfig+0xbc>)
 800464c:	4290      	cmp	r0, r2
 800464e:	d104      	bne.n	800465a <TIM_Base_SetConfig+0x46>
 8004650:	68ca      	ldr	r2, [r1, #12]
 8004652:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004656:	4313      	orrs	r3, r2
 8004658:	e028      	b.n	80046ac <TIM_Base_SetConfig+0x98>
 800465a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800465e:	d0f7      	beq.n	8004650 <TIM_Base_SetConfig+0x3c>
 8004660:	4a1c      	ldr	r2, [pc, #112]	; (80046d4 <TIM_Base_SetConfig+0xc0>)
 8004662:	4290      	cmp	r0, r2
 8004664:	d0f4      	beq.n	8004650 <TIM_Base_SetConfig+0x3c>
 8004666:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800466a:	4290      	cmp	r0, r2
 800466c:	d0f0      	beq.n	8004650 <TIM_Base_SetConfig+0x3c>
 800466e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004672:	4290      	cmp	r0, r2
 8004674:	d0ec      	beq.n	8004650 <TIM_Base_SetConfig+0x3c>
 8004676:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800467a:	4290      	cmp	r0, r2
 800467c:	d0e8      	beq.n	8004650 <TIM_Base_SetConfig+0x3c>
 800467e:	4a16      	ldr	r2, [pc, #88]	; (80046d8 <TIM_Base_SetConfig+0xc4>)
 8004680:	4290      	cmp	r0, r2
 8004682:	d0e5      	beq.n	8004650 <TIM_Base_SetConfig+0x3c>
 8004684:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004688:	4290      	cmp	r0, r2
 800468a:	d0e1      	beq.n	8004650 <TIM_Base_SetConfig+0x3c>
 800468c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004690:	4290      	cmp	r0, r2
 8004692:	d0dd      	beq.n	8004650 <TIM_Base_SetConfig+0x3c>
 8004694:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8004698:	4290      	cmp	r0, r2
 800469a:	d0d9      	beq.n	8004650 <TIM_Base_SetConfig+0x3c>
 800469c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80046a0:	4290      	cmp	r0, r2
 80046a2:	d0d5      	beq.n	8004650 <TIM_Base_SetConfig+0x3c>
 80046a4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80046a8:	4290      	cmp	r0, r2
 80046aa:	d0d1      	beq.n	8004650 <TIM_Base_SetConfig+0x3c>
 80046ac:	6003      	str	r3, [r0, #0]
 80046ae:	688b      	ldr	r3, [r1, #8]
 80046b0:	62c3      	str	r3, [r0, #44]	; 0x2c
 80046b2:	680b      	ldr	r3, [r1, #0]
 80046b4:	6283      	str	r3, [r0, #40]	; 0x28
 80046b6:	4b06      	ldr	r3, [pc, #24]	; (80046d0 <TIM_Base_SetConfig+0xbc>)
 80046b8:	4298      	cmp	r0, r3
 80046ba:	d006      	beq.n	80046ca <TIM_Base_SetConfig+0xb6>
 80046bc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80046c0:	4298      	cmp	r0, r3
 80046c2:	d002      	beq.n	80046ca <TIM_Base_SetConfig+0xb6>
 80046c4:	2301      	movs	r3, #1
 80046c6:	6143      	str	r3, [r0, #20]
 80046c8:	4770      	bx	lr
 80046ca:	690b      	ldr	r3, [r1, #16]
 80046cc:	6303      	str	r3, [r0, #48]	; 0x30
 80046ce:	e7f9      	b.n	80046c4 <TIM_Base_SetConfig+0xb0>
 80046d0:	40010000 	.word	0x40010000
 80046d4:	40000400 	.word	0x40000400
 80046d8:	40014000 	.word	0x40014000

080046dc <HAL_TIM_OC_Init>:
 80046dc:	b510      	push	{r4, lr}
 80046de:	4604      	mov	r4, r0
 80046e0:	b1a0      	cbz	r0, 800470c <HAL_TIM_OC_Init+0x30>
 80046e2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80046e6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80046ea:	b91b      	cbnz	r3, 80046f4 <HAL_TIM_OC_Init+0x18>
 80046ec:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 80046f0:	f7ff ff8f 	bl	8004612 <HAL_TIM_OC_MspInit>
 80046f4:	2302      	movs	r3, #2
 80046f6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80046fa:	6820      	ldr	r0, [r4, #0]
 80046fc:	1d21      	adds	r1, r4, #4
 80046fe:	f7ff ff89 	bl	8004614 <TIM_Base_SetConfig>
 8004702:	2301      	movs	r3, #1
 8004704:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004708:	2000      	movs	r0, #0
 800470a:	bd10      	pop	{r4, pc}
 800470c:	2001      	movs	r0, #1
 800470e:	bd10      	pop	{r4, pc}

08004710 <TIM_CCxChannelCmd>:
 8004710:	6a03      	ldr	r3, [r0, #32]
 8004712:	b510      	push	{r4, lr}
 8004714:	2401      	movs	r4, #1
 8004716:	408c      	lsls	r4, r1
 8004718:	ea23 0304 	bic.w	r3, r3, r4
 800471c:	6203      	str	r3, [r0, #32]
 800471e:	6a03      	ldr	r3, [r0, #32]
 8004720:	408a      	lsls	r2, r1
 8004722:	431a      	orrs	r2, r3
 8004724:	6202      	str	r2, [r0, #32]
 8004726:	bd10      	pop	{r4, pc}

08004728 <HAL_TIM_PWM_Start>:
 8004728:	b510      	push	{r4, lr}
 800472a:	4604      	mov	r4, r0
 800472c:	2201      	movs	r2, #1
 800472e:	6800      	ldr	r0, [r0, #0]
 8004730:	f7ff ffee 	bl	8004710 <TIM_CCxChannelCmd>
 8004734:	6823      	ldr	r3, [r4, #0]
 8004736:	4a08      	ldr	r2, [pc, #32]	; (8004758 <HAL_TIM_PWM_Start+0x30>)
 8004738:	4293      	cmp	r3, r2
 800473a:	d003      	beq.n	8004744 <HAL_TIM_PWM_Start+0x1c>
 800473c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004740:	4293      	cmp	r3, r2
 8004742:	d103      	bne.n	800474c <HAL_TIM_PWM_Start+0x24>
 8004744:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004746:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800474a:	645a      	str	r2, [r3, #68]	; 0x44
 800474c:	681a      	ldr	r2, [r3, #0]
 800474e:	f042 0201 	orr.w	r2, r2, #1
 8004752:	601a      	str	r2, [r3, #0]
 8004754:	2000      	movs	r0, #0
 8004756:	bd10      	pop	{r4, pc}
 8004758:	40010000 	.word	0x40010000

0800475c <HAL_TIM_OC_Start>:
 800475c:	f7ff bfe4 	b.w	8004728 <HAL_TIM_PWM_Start>

08004760 <HAL_PWR_EnterSLEEPMode>:
 8004760:	4a06      	ldr	r2, [pc, #24]	; (800477c <HAL_PWR_EnterSLEEPMode+0x1c>)
 8004762:	6913      	ldr	r3, [r2, #16]
 8004764:	2901      	cmp	r1, #1
 8004766:	f023 0304 	bic.w	r3, r3, #4
 800476a:	6113      	str	r3, [r2, #16]
 800476c:	d101      	bne.n	8004772 <HAL_PWR_EnterSLEEPMode+0x12>
 800476e:	bf30      	wfi
 8004770:	4770      	bx	lr
 8004772:	bf40      	sev
 8004774:	bf20      	wfe
 8004776:	bf20      	wfe
 8004778:	4770      	bx	lr
 800477a:	bf00      	nop
 800477c:	e000ed00 	.word	0xe000ed00

08004780 <HAL_RCC_MCOConfig>:
 8004780:	b570      	push	{r4, r5, r6, lr}
 8004782:	460d      	mov	r5, r1
 8004784:	b088      	sub	sp, #32
 8004786:	4616      	mov	r6, r2
 8004788:	4c20      	ldr	r4, [pc, #128]	; (800480c <HAL_RCC_MCOConfig+0x8c>)
 800478a:	b9f0      	cbnz	r0, 80047ca <HAL_RCC_MCOConfig+0x4a>
 800478c:	9001      	str	r0, [sp, #4]
 800478e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004790:	f043 0301 	orr.w	r3, r3, #1
 8004794:	6323      	str	r3, [r4, #48]	; 0x30
 8004796:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004798:	9005      	str	r0, [sp, #20]
 800479a:	f003 0301 	and.w	r3, r3, #1
 800479e:	9301      	str	r3, [sp, #4]
 80047a0:	9b01      	ldr	r3, [sp, #4]
 80047a2:	9007      	str	r0, [sp, #28]
 80047a4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80047a8:	9303      	str	r3, [sp, #12]
 80047aa:	2302      	movs	r3, #2
 80047ac:	9304      	str	r3, [sp, #16]
 80047ae:	a903      	add	r1, sp, #12
 80047b0:	2303      	movs	r3, #3
 80047b2:	4817      	ldr	r0, [pc, #92]	; (8004810 <HAL_RCC_MCOConfig+0x90>)
 80047b4:	9306      	str	r3, [sp, #24]
 80047b6:	f7ff fd09 	bl	80041cc <HAL_GPIO_Init>
 80047ba:	68a1      	ldr	r1, [r4, #8]
 80047bc:	f021 61ec 	bic.w	r1, r1, #123731968	; 0x7600000
 80047c0:	4331      	orrs	r1, r6
 80047c2:	4329      	orrs	r1, r5
 80047c4:	60a1      	str	r1, [r4, #8]
 80047c6:	b008      	add	sp, #32
 80047c8:	bd70      	pop	{r4, r5, r6, pc}
 80047ca:	2300      	movs	r3, #0
 80047cc:	9302      	str	r3, [sp, #8]
 80047ce:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80047d0:	4810      	ldr	r0, [pc, #64]	; (8004814 <HAL_RCC_MCOConfig+0x94>)
 80047d2:	f042 0204 	orr.w	r2, r2, #4
 80047d6:	6322      	str	r2, [r4, #48]	; 0x30
 80047d8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80047da:	9305      	str	r3, [sp, #20]
 80047dc:	f002 0204 	and.w	r2, r2, #4
 80047e0:	9202      	str	r2, [sp, #8]
 80047e2:	9a02      	ldr	r2, [sp, #8]
 80047e4:	9307      	str	r3, [sp, #28]
 80047e6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80047ea:	9203      	str	r2, [sp, #12]
 80047ec:	2202      	movs	r2, #2
 80047ee:	9204      	str	r2, [sp, #16]
 80047f0:	a903      	add	r1, sp, #12
 80047f2:	2203      	movs	r2, #3
 80047f4:	9206      	str	r2, [sp, #24]
 80047f6:	f7ff fce9 	bl	80041cc <HAL_GPIO_Init>
 80047fa:	68a3      	ldr	r3, [r4, #8]
 80047fc:	ea45 01c6 	orr.w	r1, r5, r6, lsl #3
 8004800:	f023 4578 	bic.w	r5, r3, #4160749568	; 0xf8000000
 8004804:	430d      	orrs	r5, r1
 8004806:	60a5      	str	r5, [r4, #8]
 8004808:	e7dd      	b.n	80047c6 <HAL_RCC_MCOConfig+0x46>
 800480a:	bf00      	nop
 800480c:	40023800 	.word	0x40023800
 8004810:	40020000 	.word	0x40020000
 8004814:	40020800 	.word	0x40020800

08004818 <HAL_RCC_ClockConfig>:
 8004818:	4b56      	ldr	r3, [pc, #344]	; (8004974 <HAL_RCC_ClockConfig+0x15c>)
 800481a:	681a      	ldr	r2, [r3, #0]
 800481c:	f002 020f 	and.w	r2, r2, #15
 8004820:	428a      	cmp	r2, r1
 8004822:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004826:	4605      	mov	r5, r0
 8004828:	460e      	mov	r6, r1
 800482a:	d330      	bcc.n	800488e <HAL_RCC_ClockConfig+0x76>
 800482c:	682a      	ldr	r2, [r5, #0]
 800482e:	0794      	lsls	r4, r2, #30
 8004830:	d437      	bmi.n	80048a2 <HAL_RCC_ClockConfig+0x8a>
 8004832:	07d0      	lsls	r0, r2, #31
 8004834:	d43d      	bmi.n	80048b2 <HAL_RCC_ClockConfig+0x9a>
 8004836:	4b4f      	ldr	r3, [pc, #316]	; (8004974 <HAL_RCC_ClockConfig+0x15c>)
 8004838:	681a      	ldr	r2, [r3, #0]
 800483a:	f002 020f 	and.w	r2, r2, #15
 800483e:	4296      	cmp	r6, r2
 8004840:	f0c0 8088 	bcc.w	8004954 <HAL_RCC_ClockConfig+0x13c>
 8004844:	682a      	ldr	r2, [r5, #0]
 8004846:	0751      	lsls	r1, r2, #29
 8004848:	f100 808c 	bmi.w	8004964 <HAL_RCC_ClockConfig+0x14c>
 800484c:	0713      	lsls	r3, r2, #28
 800484e:	d507      	bpl.n	8004860 <HAL_RCC_ClockConfig+0x48>
 8004850:	4a49      	ldr	r2, [pc, #292]	; (8004978 <HAL_RCC_ClockConfig+0x160>)
 8004852:	6929      	ldr	r1, [r5, #16]
 8004854:	6893      	ldr	r3, [r2, #8]
 8004856:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800485a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800485e:	6093      	str	r3, [r2, #8]
 8004860:	f7ff fc56 	bl	8004110 <HAL_RCC_GetSysClockFreq>
 8004864:	4b44      	ldr	r3, [pc, #272]	; (8004978 <HAL_RCC_ClockConfig+0x160>)
 8004866:	22f0      	movs	r2, #240	; 0xf0
 8004868:	689b      	ldr	r3, [r3, #8]
 800486a:	fa92 f2a2 	rbit	r2, r2
 800486e:	fab2 f282 	clz	r2, r2
 8004872:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004876:	40d3      	lsrs	r3, r2
 8004878:	4a40      	ldr	r2, [pc, #256]	; (800497c <HAL_RCC_ClockConfig+0x164>)
 800487a:	5cd3      	ldrb	r3, [r2, r3]
 800487c:	40d8      	lsrs	r0, r3
 800487e:	4b40      	ldr	r3, [pc, #256]	; (8004980 <HAL_RCC_ClockConfig+0x168>)
 8004880:	6018      	str	r0, [r3, #0]
 8004882:	200f      	movs	r0, #15
 8004884:	f7fe f91e 	bl	8002ac4 <HAL_InitTick>
 8004888:	2000      	movs	r0, #0
 800488a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800488e:	b2ca      	uxtb	r2, r1
 8004890:	701a      	strb	r2, [r3, #0]
 8004892:	681b      	ldr	r3, [r3, #0]
 8004894:	f003 030f 	and.w	r3, r3, #15
 8004898:	4299      	cmp	r1, r3
 800489a:	d0c7      	beq.n	800482c <HAL_RCC_ClockConfig+0x14>
 800489c:	2001      	movs	r0, #1
 800489e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80048a2:	4935      	ldr	r1, [pc, #212]	; (8004978 <HAL_RCC_ClockConfig+0x160>)
 80048a4:	68a8      	ldr	r0, [r5, #8]
 80048a6:	688b      	ldr	r3, [r1, #8]
 80048a8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80048ac:	4303      	orrs	r3, r0
 80048ae:	608b      	str	r3, [r1, #8]
 80048b0:	e7bf      	b.n	8004832 <HAL_RCC_ClockConfig+0x1a>
 80048b2:	686a      	ldr	r2, [r5, #4]
 80048b4:	4b30      	ldr	r3, [pc, #192]	; (8004978 <HAL_RCC_ClockConfig+0x160>)
 80048b6:	2a01      	cmp	r2, #1
 80048b8:	d11e      	bne.n	80048f8 <HAL_RCC_ClockConfig+0xe0>
 80048ba:	681b      	ldr	r3, [r3, #0]
 80048bc:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 80048c0:	d0ec      	beq.n	800489c <HAL_RCC_ClockConfig+0x84>
 80048c2:	4c2d      	ldr	r4, [pc, #180]	; (8004978 <HAL_RCC_ClockConfig+0x160>)
 80048c4:	68a3      	ldr	r3, [r4, #8]
 80048c6:	f023 0303 	bic.w	r3, r3, #3
 80048ca:	4313      	orrs	r3, r2
 80048cc:	60a3      	str	r3, [r4, #8]
 80048ce:	f000 f915 	bl	8004afc <HAL_GetTick>
 80048d2:	686b      	ldr	r3, [r5, #4]
 80048d4:	2b01      	cmp	r3, #1
 80048d6:	4607      	mov	r7, r0
 80048d8:	f241 3888 	movw	r8, #5000	; 0x1388
 80048dc:	d116      	bne.n	800490c <HAL_RCC_ClockConfig+0xf4>
 80048de:	68a3      	ldr	r3, [r4, #8]
 80048e0:	f003 030c 	and.w	r3, r3, #12
 80048e4:	2b04      	cmp	r3, #4
 80048e6:	d0a6      	beq.n	8004836 <HAL_RCC_ClockConfig+0x1e>
 80048e8:	f000 f908 	bl	8004afc <HAL_GetTick>
 80048ec:	1bc0      	subs	r0, r0, r7
 80048ee:	4540      	cmp	r0, r8
 80048f0:	d9f5      	bls.n	80048de <HAL_RCC_ClockConfig+0xc6>
 80048f2:	2003      	movs	r0, #3
 80048f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80048f8:	1e91      	subs	r1, r2, #2
 80048fa:	2901      	cmp	r1, #1
 80048fc:	681b      	ldr	r3, [r3, #0]
 80048fe:	d802      	bhi.n	8004906 <HAL_RCC_ClockConfig+0xee>
 8004900:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8004904:	e7dc      	b.n	80048c0 <HAL_RCC_ClockConfig+0xa8>
 8004906:	f013 0f02 	tst.w	r3, #2
 800490a:	e7d9      	b.n	80048c0 <HAL_RCC_ClockConfig+0xa8>
 800490c:	2b02      	cmp	r3, #2
 800490e:	d10a      	bne.n	8004926 <HAL_RCC_ClockConfig+0x10e>
 8004910:	68a3      	ldr	r3, [r4, #8]
 8004912:	f003 030c 	and.w	r3, r3, #12
 8004916:	2b08      	cmp	r3, #8
 8004918:	d08d      	beq.n	8004836 <HAL_RCC_ClockConfig+0x1e>
 800491a:	f000 f8ef 	bl	8004afc <HAL_GetTick>
 800491e:	1bc0      	subs	r0, r0, r7
 8004920:	4540      	cmp	r0, r8
 8004922:	d9f5      	bls.n	8004910 <HAL_RCC_ClockConfig+0xf8>
 8004924:	e7e5      	b.n	80048f2 <HAL_RCC_ClockConfig+0xda>
 8004926:	2b03      	cmp	r3, #3
 8004928:	d10f      	bne.n	800494a <HAL_RCC_ClockConfig+0x132>
 800492a:	68a3      	ldr	r3, [r4, #8]
 800492c:	f003 030c 	and.w	r3, r3, #12
 8004930:	2b0c      	cmp	r3, #12
 8004932:	d080      	beq.n	8004836 <HAL_RCC_ClockConfig+0x1e>
 8004934:	f000 f8e2 	bl	8004afc <HAL_GetTick>
 8004938:	1bc0      	subs	r0, r0, r7
 800493a:	4540      	cmp	r0, r8
 800493c:	d9f5      	bls.n	800492a <HAL_RCC_ClockConfig+0x112>
 800493e:	e7d8      	b.n	80048f2 <HAL_RCC_ClockConfig+0xda>
 8004940:	f000 f8dc 	bl	8004afc <HAL_GetTick>
 8004944:	1bc0      	subs	r0, r0, r7
 8004946:	4540      	cmp	r0, r8
 8004948:	d8d3      	bhi.n	80048f2 <HAL_RCC_ClockConfig+0xda>
 800494a:	68a3      	ldr	r3, [r4, #8]
 800494c:	f013 0f0c 	tst.w	r3, #12
 8004950:	d1f6      	bne.n	8004940 <HAL_RCC_ClockConfig+0x128>
 8004952:	e770      	b.n	8004836 <HAL_RCC_ClockConfig+0x1e>
 8004954:	b2f2      	uxtb	r2, r6
 8004956:	701a      	strb	r2, [r3, #0]
 8004958:	681b      	ldr	r3, [r3, #0]
 800495a:	f003 030f 	and.w	r3, r3, #15
 800495e:	429e      	cmp	r6, r3
 8004960:	d19c      	bne.n	800489c <HAL_RCC_ClockConfig+0x84>
 8004962:	e76f      	b.n	8004844 <HAL_RCC_ClockConfig+0x2c>
 8004964:	4904      	ldr	r1, [pc, #16]	; (8004978 <HAL_RCC_ClockConfig+0x160>)
 8004966:	68e8      	ldr	r0, [r5, #12]
 8004968:	688b      	ldr	r3, [r1, #8]
 800496a:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800496e:	4303      	orrs	r3, r0
 8004970:	608b      	str	r3, [r1, #8]
 8004972:	e76b      	b.n	800484c <HAL_RCC_ClockConfig+0x34>
 8004974:	40023c00 	.word	0x40023c00
 8004978:	40023800 	.word	0x40023800
 800497c:	0800663c 	.word	0x0800663c
 8004980:	200001e0 	.word	0x200001e0

08004984 <HAL_RCC_GetPCLK1Freq>:
 8004984:	4b08      	ldr	r3, [pc, #32]	; (80049a8 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004986:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
 800498a:	689b      	ldr	r3, [r3, #8]
 800498c:	fa92 f2a2 	rbit	r2, r2
 8004990:	fab2 f282 	clz	r2, r2
 8004994:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8004998:	40d3      	lsrs	r3, r2
 800499a:	4a04      	ldr	r2, [pc, #16]	; (80049ac <HAL_RCC_GetPCLK1Freq+0x28>)
 800499c:	5cd3      	ldrb	r3, [r2, r3]
 800499e:	4a04      	ldr	r2, [pc, #16]	; (80049b0 <HAL_RCC_GetPCLK1Freq+0x2c>)
 80049a0:	6810      	ldr	r0, [r2, #0]
 80049a2:	40d8      	lsrs	r0, r3
 80049a4:	4770      	bx	lr
 80049a6:	bf00      	nop
 80049a8:	40023800 	.word	0x40023800
 80049ac:	0800663c 	.word	0x0800663c
 80049b0:	200001e0 	.word	0x200001e0

080049b4 <HAL_RCC_GetPCLK2Freq>:
 80049b4:	4b08      	ldr	r3, [pc, #32]	; (80049d8 <HAL_RCC_GetPCLK2Freq+0x24>)
 80049b6:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 80049ba:	689b      	ldr	r3, [r3, #8]
 80049bc:	fa92 f2a2 	rbit	r2, r2
 80049c0:	fab2 f282 	clz	r2, r2
 80049c4:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 80049c8:	40d3      	lsrs	r3, r2
 80049ca:	4a04      	ldr	r2, [pc, #16]	; (80049dc <HAL_RCC_GetPCLK2Freq+0x28>)
 80049cc:	5cd3      	ldrb	r3, [r2, r3]
 80049ce:	4a04      	ldr	r2, [pc, #16]	; (80049e0 <HAL_RCC_GetPCLK2Freq+0x2c>)
 80049d0:	6810      	ldr	r0, [r2, #0]
 80049d2:	40d8      	lsrs	r0, r3
 80049d4:	4770      	bx	lr
 80049d6:	bf00      	nop
 80049d8:	40023800 	.word	0x40023800
 80049dc:	0800663c 	.word	0x0800663c
 80049e0:	200001e0 	.word	0x200001e0

080049e4 <HAL_RCC_GetClockConfig>:
 80049e4:	230f      	movs	r3, #15
 80049e6:	6003      	str	r3, [r0, #0]
 80049e8:	4b0b      	ldr	r3, [pc, #44]	; (8004a18 <HAL_RCC_GetClockConfig+0x34>)
 80049ea:	689a      	ldr	r2, [r3, #8]
 80049ec:	f002 0203 	and.w	r2, r2, #3
 80049f0:	6042      	str	r2, [r0, #4]
 80049f2:	689a      	ldr	r2, [r3, #8]
 80049f4:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80049f8:	6082      	str	r2, [r0, #8]
 80049fa:	689a      	ldr	r2, [r3, #8]
 80049fc:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8004a00:	60c2      	str	r2, [r0, #12]
 8004a02:	689b      	ldr	r3, [r3, #8]
 8004a04:	08db      	lsrs	r3, r3, #3
 8004a06:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8004a0a:	6103      	str	r3, [r0, #16]
 8004a0c:	4b03      	ldr	r3, [pc, #12]	; (8004a1c <HAL_RCC_GetClockConfig+0x38>)
 8004a0e:	681b      	ldr	r3, [r3, #0]
 8004a10:	f003 030f 	and.w	r3, r3, #15
 8004a14:	600b      	str	r3, [r1, #0]
 8004a16:	4770      	bx	lr
 8004a18:	40023800 	.word	0x40023800
 8004a1c:	40023c00 	.word	0x40023c00

08004a20 <HAL_MspInit>:
 8004a20:	4770      	bx	lr
	...

08004a24 <HAL_PWREx_EnableOverDrive>:
 8004a24:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004a26:	2300      	movs	r3, #0
 8004a28:	9301      	str	r3, [sp, #4]
 8004a2a:	4b22      	ldr	r3, [pc, #136]	; (8004ab4 <HAL_PWREx_EnableOverDrive+0x90>)
 8004a2c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004a2e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004a32:	641a      	str	r2, [r3, #64]	; 0x40
 8004a34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a36:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004a3a:	9301      	str	r3, [sp, #4]
 8004a3c:	9b01      	ldr	r3, [sp, #4]
 8004a3e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8004a42:	fa93 f3a3 	rbit	r3, r3
 8004a46:	fab3 f383 	clz	r3, r3
 8004a4a:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004a4e:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8004a52:	009b      	lsls	r3, r3, #2
 8004a54:	2201      	movs	r2, #1
 8004a56:	601a      	str	r2, [r3, #0]
 8004a58:	f000 f850 	bl	8004afc <HAL_GetTick>
 8004a5c:	4c16      	ldr	r4, [pc, #88]	; (8004ab8 <HAL_PWREx_EnableOverDrive+0x94>)
 8004a5e:	4605      	mov	r5, r0
 8004a60:	6863      	ldr	r3, [r4, #4]
 8004a62:	03da      	lsls	r2, r3, #15
 8004a64:	d515      	bpl.n	8004a92 <HAL_PWREx_EnableOverDrive+0x6e>
 8004a66:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8004a6a:	fa93 f3a3 	rbit	r3, r3
 8004a6e:	fab3 f383 	clz	r3, r3
 8004a72:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8004a76:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8004a7a:	009b      	lsls	r3, r3, #2
 8004a7c:	2201      	movs	r2, #1
 8004a7e:	601a      	str	r2, [r3, #0]
 8004a80:	f000 f83c 	bl	8004afc <HAL_GetTick>
 8004a84:	4c0c      	ldr	r4, [pc, #48]	; (8004ab8 <HAL_PWREx_EnableOverDrive+0x94>)
 8004a86:	4605      	mov	r5, r0
 8004a88:	6863      	ldr	r3, [r4, #4]
 8004a8a:	039b      	lsls	r3, r3, #14
 8004a8c:	d50a      	bpl.n	8004aa4 <HAL_PWREx_EnableOverDrive+0x80>
 8004a8e:	2000      	movs	r0, #0
 8004a90:	e006      	b.n	8004aa0 <HAL_PWREx_EnableOverDrive+0x7c>
 8004a92:	f000 f833 	bl	8004afc <HAL_GetTick>
 8004a96:	1b40      	subs	r0, r0, r5
 8004a98:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004a9c:	d9e0      	bls.n	8004a60 <HAL_PWREx_EnableOverDrive+0x3c>
 8004a9e:	2003      	movs	r0, #3
 8004aa0:	b003      	add	sp, #12
 8004aa2:	bd30      	pop	{r4, r5, pc}
 8004aa4:	f000 f82a 	bl	8004afc <HAL_GetTick>
 8004aa8:	1b40      	subs	r0, r0, r5
 8004aaa:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004aae:	d9eb      	bls.n	8004a88 <HAL_PWREx_EnableOverDrive+0x64>
 8004ab0:	e7f5      	b.n	8004a9e <HAL_PWREx_EnableOverDrive+0x7a>
 8004ab2:	bf00      	nop
 8004ab4:	40023800 	.word	0x40023800
 8004ab8:	40007000 	.word	0x40007000

08004abc <HAL_Init>:
 8004abc:	b508      	push	{r3, lr}
 8004abe:	4b0a      	ldr	r3, [pc, #40]	; (8004ae8 <HAL_Init+0x2c>)
 8004ac0:	681a      	ldr	r2, [r3, #0]
 8004ac2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004ac6:	601a      	str	r2, [r3, #0]
 8004ac8:	681a      	ldr	r2, [r3, #0]
 8004aca:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004ace:	601a      	str	r2, [r3, #0]
 8004ad0:	681a      	ldr	r2, [r3, #0]
 8004ad2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004ad6:	601a      	str	r2, [r3, #0]
 8004ad8:	200f      	movs	r0, #15
 8004ada:	f7fd fff3 	bl	8002ac4 <HAL_InitTick>
 8004ade:	f7ff ff9f 	bl	8004a20 <HAL_MspInit>
 8004ae2:	2000      	movs	r0, #0
 8004ae4:	bd08      	pop	{r3, pc}
 8004ae6:	bf00      	nop
 8004ae8:	40023c00 	.word	0x40023c00

08004aec <HAL_IncTick>:
 8004aec:	4a02      	ldr	r2, [pc, #8]	; (8004af8 <HAL_IncTick+0xc>)
 8004aee:	6813      	ldr	r3, [r2, #0]
 8004af0:	3301      	adds	r3, #1
 8004af2:	6013      	str	r3, [r2, #0]
 8004af4:	4770      	bx	lr
 8004af6:	bf00      	nop
 8004af8:	200021e0 	.word	0x200021e0

08004afc <HAL_GetTick>:
 8004afc:	4b01      	ldr	r3, [pc, #4]	; (8004b04 <HAL_GetTick+0x8>)
 8004afe:	6818      	ldr	r0, [r3, #0]
 8004b00:	4770      	bx	lr
 8004b02:	bf00      	nop
 8004b04:	200021e0 	.word	0x200021e0

08004b08 <mbed::donothing()>:
 8004b08:	4770      	bx	lr

08004b0a <mbed::SerialBase::lock()>:
 8004b0a:	4770      	bx	lr

08004b0c <mbed::SerialBase::unlock()>:
 8004b0c:	4770      	bx	lr

08004b0e <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 8004b0e:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8004b12:	f102 0098 	add.w	r0, r2, #152	; 0x98
 8004b16:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 8004b1a:	681b      	ldr	r3, [r3, #0]
 8004b1c:	4718      	bx	r3

08004b1e <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))>:
 8004b1e:	b410      	push	{r4}
 8004b20:	b180      	cbz	r0, 8004b44 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8004b22:	6814      	ldr	r4, [r2, #0]
 8004b24:	6853      	ldr	r3, [r2, #4]
 8004b26:	b90c      	cbnz	r4, 8004b2c <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0xe>
 8004b28:	07da      	lsls	r2, r3, #31
 8004b2a:	d50b      	bpl.n	8004b44 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8004b2c:	f013 0f01 	tst.w	r3, #1
 8004b30:	ea4f 0363 	mov.w	r3, r3, asr #1
 8004b34:	bf1c      	itt	ne
 8004b36:	58c2      	ldrne	r2, [r0, r3]
 8004b38:	5914      	ldrne	r4, [r2, r4]
 8004b3a:	4418      	add	r0, r3
 8004b3c:	4623      	mov	r3, r4
 8004b3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004b42:	4718      	bx	r3
 8004b44:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004b48:	4770      	bx	lr

08004b4a <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 8004b4a:	6803      	ldr	r3, [r0, #0]
 8004b4c:	4718      	bx	r3

08004b4e <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 8004b4e:	b108      	cbz	r0, 8004b54 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 8004b50:	680b      	ldr	r3, [r1, #0]
 8004b52:	6003      	str	r3, [r0, #0]
 8004b54:	4770      	bx	lr

08004b56 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 8004b56:	4770      	bx	lr

08004b58 <mbed::SerialBase::baud(int)>:
 8004b58:	b570      	push	{r4, r5, r6, lr}
 8004b5a:	4605      	mov	r5, r0
 8004b5c:	4604      	mov	r4, r0
 8004b5e:	f855 3b4c 	ldr.w	r3, [r5], #76
 8004b62:	460e      	mov	r6, r1
 8004b64:	681b      	ldr	r3, [r3, #0]
 8004b66:	4798      	blx	r3
 8004b68:	4628      	mov	r0, r5
 8004b6a:	4631      	mov	r1, r6
 8004b6c:	f7fe fc4a 	bl	8003404 <serial_baud>
 8004b70:	6823      	ldr	r3, [r4, #0]
 8004b72:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 8004b76:	4620      	mov	r0, r4
 8004b78:	685b      	ldr	r3, [r3, #4]
 8004b7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004b7e:	4718      	bx	r3

08004b80 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 8004b80:	4288      	cmp	r0, r1
 8004b82:	b538      	push	{r3, r4, r5, lr}
 8004b84:	4604      	mov	r4, r0
 8004b86:	460d      	mov	r5, r1
 8004b88:	d00a      	beq.n	8004ba0 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004b8a:	f7fc fa42 	bl	8001012 <mbed::Callback<void ()>::~Callback()>
 8004b8e:	b13c      	cbz	r4, 8004ba0 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004b90:	68eb      	ldr	r3, [r5, #12]
 8004b92:	b11b      	cbz	r3, 8004b9c <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8004b94:	685b      	ldr	r3, [r3, #4]
 8004b96:	4629      	mov	r1, r5
 8004b98:	4620      	mov	r0, r4
 8004b9a:	4798      	blx	r3
 8004b9c:	68eb      	ldr	r3, [r5, #12]
 8004b9e:	60e3      	str	r3, [r4, #12]
 8004ba0:	4620      	mov	r0, r4
 8004ba2:	bd38      	pop	{r3, r4, r5, pc}

08004ba4 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 8004ba4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004ba8:	b087      	sub	sp, #28
 8004baa:	2500      	movs	r5, #0
 8004bac:	4691      	mov	r9, r2
 8004bae:	9500      	str	r5, [sp, #0]
 8004bb0:	4602      	mov	r2, r0
 8004bb2:	9501      	str	r5, [sp, #4]
 8004bb4:	4604      	mov	r4, r0
 8004bb6:	4688      	mov	r8, r1
 8004bb8:	461f      	mov	r7, r3
 8004bba:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8004bbe:	4b27      	ldr	r3, [pc, #156]	; (8004c5c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xb8>)
 8004bc0:	f842 3b08 	str.w	r3, [r2], #8
 8004bc4:	4b26      	ldr	r3, [pc, #152]	; (8004c60 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xbc>)
 8004bc6:	e882 0003 	stmia.w	r2, {r0, r1}
 8004bca:	6123      	str	r3, [r4, #16]
 8004bcc:	f248 0307 	movw	r3, #32775	; 0x8007
 8004bd0:	6163      	str	r3, [r4, #20]
 8004bd2:	4b24      	ldr	r3, [pc, #144]	; (8004c64 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc0>)
 8004bd4:	61e5      	str	r5, [r4, #28]
 8004bd6:	61a4      	str	r4, [r4, #24]
 8004bd8:	6222      	str	r2, [r4, #32]
 8004bda:	6263      	str	r3, [r4, #36]	; 0x24
 8004bdc:	f3bf 8f6f 	isb	sy
 8004be0:	f3bf 8f4f 	dsb	sy
 8004be4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8004be8:	224c      	movs	r2, #76	; 0x4c
 8004bea:	6365      	str	r5, [r4, #52]	; 0x34
 8004bec:	6465      	str	r5, [r4, #68]	; 0x44
 8004bee:	f884 5048 	strb.w	r5, [r4, #72]	; 0x48
 8004bf2:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 8004bf6:	4630      	mov	r0, r6
 8004bf8:	f000 fd87 	bl	800570a <memset>
 8004bfc:	a902      	add	r1, sp, #8
 8004bfe:	f8c4 50a4 	str.w	r5, [r4, #164]	; 0xa4
 8004c02:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 8004c06:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 8004c0a:	4d17      	ldr	r5, [pc, #92]	; (8004c68 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc4>)
 8004c0c:	4f17      	ldr	r7, [pc, #92]	; (8004c6c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc8>)
 8004c0e:	9702      	str	r7, [sp, #8]
 8004c10:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8004c14:	9505      	str	r5, [sp, #20]
 8004c16:	f7ff ffb3 	bl	8004b80 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004c1a:	a802      	add	r0, sp, #8
 8004c1c:	f7fc f9f9 	bl	8001012 <mbed::Callback<void ()>::~Callback()>
 8004c20:	a902      	add	r1, sp, #8
 8004c22:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8004c26:	9702      	str	r7, [sp, #8]
 8004c28:	9505      	str	r5, [sp, #20]
 8004c2a:	f7ff ffa9 	bl	8004b80 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004c2e:	a802      	add	r0, sp, #8
 8004c30:	f7fc f9ef 	bl	8001012 <mbed::Callback<void ()>::~Callback()>
 8004c34:	464a      	mov	r2, r9
 8004c36:	4641      	mov	r1, r8
 8004c38:	4630      	mov	r0, r6
 8004c3a:	f7fe faf3 	bl	8003224 <serial_init>
 8004c3e:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 8004c42:	4630      	mov	r0, r6
 8004c44:	f7fe fbde 	bl	8003404 <serial_baud>
 8004c48:	4630      	mov	r0, r6
 8004c4a:	4622      	mov	r2, r4
 8004c4c:	4908      	ldr	r1, [pc, #32]	; (8004c70 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xcc>)
 8004c4e:	f7fe fbdd 	bl	800340c <serial_irq_handler>
 8004c52:	4620      	mov	r0, r4
 8004c54:	b007      	add	sp, #28
 8004c56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004c5a:	bf00      	nop
 8004c5c:	08006660 	.word	0x08006660
 8004c60:	e890a001 	.word	0xe890a001
 8004c64:	08004b1f 	.word	0x08004b1f
 8004c68:	0800664c 	.word	0x0800664c
 8004c6c:	08004b09 	.word	0x08004b09
 8004c70:	08004b0f 	.word	0x08004b0f

08004c74 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 8004c74:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004c78:	4605      	mov	r5, r0
 8004c7a:	4688      	mov	r8, r1
 8004c7c:	f855 3b4c 	ldr.w	r3, [r5], #76
 8004c80:	681b      	ldr	r3, [r3, #0]
 8004c82:	4604      	mov	r4, r0
 8004c84:	4616      	mov	r6, r2
 8004c86:	4798      	blx	r3
 8004c88:	f7fc fc46 	bl	8001518 <core_util_critical_section_enter>
 8004c8c:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8004c90:	0130      	lsls	r0, r6, #4
 8004c92:	b197      	cbz	r7, 8004cba <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8004c94:	3098      	adds	r0, #152	; 0x98
 8004c96:	4641      	mov	r1, r8
 8004c98:	4420      	add	r0, r4
 8004c9a:	f7ff ff71 	bl	8004b80 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004c9e:	2201      	movs	r2, #1
 8004ca0:	4631      	mov	r1, r6
 8004ca2:	4628      	mov	r0, r5
 8004ca4:	f7fe fbbe 	bl	8003424 <serial_irq_set>
 8004ca8:	f7fc fc4c 	bl	8001544 <core_util_critical_section_exit>
 8004cac:	6823      	ldr	r3, [r4, #0]
 8004cae:	4620      	mov	r0, r4
 8004cb0:	685b      	ldr	r3, [r3, #4]
 8004cb2:	4798      	blx	r3
 8004cb4:	b004      	add	sp, #16
 8004cb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004cba:	4b07      	ldr	r3, [pc, #28]	; (8004cd8 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 8004cbc:	9300      	str	r3, [sp, #0]
 8004cbe:	3098      	adds	r0, #152	; 0x98
 8004cc0:	4b06      	ldr	r3, [pc, #24]	; (8004cdc <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 8004cc2:	9303      	str	r3, [sp, #12]
 8004cc4:	4669      	mov	r1, sp
 8004cc6:	4420      	add	r0, r4
 8004cc8:	f7ff ff5a 	bl	8004b80 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004ccc:	4668      	mov	r0, sp
 8004cce:	f7fc f9a0 	bl	8001012 <mbed::Callback<void ()>::~Callback()>
 8004cd2:	463a      	mov	r2, r7
 8004cd4:	e7e4      	b.n	8004ca0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 8004cd6:	bf00      	nop
 8004cd8:	08004b09 	.word	0x08004b09
 8004cdc:	0800664c 	.word	0x0800664c

08004ce0 <mbed::RawSerial::lock()>:
 8004ce0:	4770      	bx	lr
	...

08004ce4 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8004ce4:	b510      	push	{r4, lr}
 8004ce6:	4604      	mov	r4, r0
 8004ce8:	f7ff ff5c 	bl	8004ba4 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8004cec:	4b01      	ldr	r3, [pc, #4]	; (8004cf4 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8004cee:	6023      	str	r3, [r4, #0]
 8004cf0:	4620      	mov	r0, r4
 8004cf2:	bd10      	pop	{r4, pc}
 8004cf4:	08006678 	.word	0x08006678

08004cf8 <mbed::RawSerial::~RawSerial()>:
 8004cf8:	b510      	push	{r4, lr}
 8004cfa:	4b03      	ldr	r3, [pc, #12]	; (8004d08 <mbed::RawSerial::~RawSerial()+0x10>)
 8004cfc:	6003      	str	r3, [r0, #0]
 8004cfe:	4604      	mov	r4, r0
 8004d00:	f7fc f9ca 	bl	8001098 <mbed::SerialBase::~SerialBase()>
 8004d04:	4620      	mov	r0, r4
 8004d06:	bd10      	pop	{r4, pc}
 8004d08:	08006678 	.word	0x08006678

08004d0c <mbed::RawSerial::~RawSerial()>:
 8004d0c:	b510      	push	{r4, lr}
 8004d0e:	4604      	mov	r4, r0
 8004d10:	f7ff fff2 	bl	8004cf8 <mbed::RawSerial::~RawSerial()>
 8004d14:	4620      	mov	r0, r4
 8004d16:	f000 f9c3 	bl	80050a0 <operator delete(void*)>
 8004d1a:	4620      	mov	r0, r4
 8004d1c:	bd10      	pop	{r4, pc}

08004d1e <mbed::Timer::start()>:
 8004d1e:	b510      	push	{r4, lr}
 8004d20:	4604      	mov	r4, r0
 8004d22:	f7fc fbf9 	bl	8001518 <core_util_critical_section_enter>
 8004d26:	6823      	ldr	r3, [r4, #0]
 8004d28:	b92b      	cbnz	r3, 8004d36 <mbed::Timer::start()+0x18>
 8004d2a:	68e0      	ldr	r0, [r4, #12]
 8004d2c:	f7fc fb89 	bl	8001442 <ticker_read>
 8004d30:	2301      	movs	r3, #1
 8004d32:	6060      	str	r0, [r4, #4]
 8004d34:	6023      	str	r3, [r4, #0]
 8004d36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004d3a:	f7fc bc03 	b.w	8001544 <core_util_critical_section_exit>

08004d3e <mbed::Timer::slicetime()>:
 8004d3e:	b538      	push	{r3, r4, r5, lr}
 8004d40:	4605      	mov	r5, r0
 8004d42:	f7fc fbe9 	bl	8001518 <core_util_critical_section_enter>
 8004d46:	682c      	ldr	r4, [r5, #0]
 8004d48:	b124      	cbz	r4, 8004d54 <mbed::Timer::slicetime()+0x16>
 8004d4a:	68e8      	ldr	r0, [r5, #12]
 8004d4c:	f7fc fb79 	bl	8001442 <ticker_read>
 8004d50:	686c      	ldr	r4, [r5, #4]
 8004d52:	1b04      	subs	r4, r0, r4
 8004d54:	f7fc fbf6 	bl	8001544 <core_util_critical_section_exit>
 8004d58:	4620      	mov	r0, r4
 8004d5a:	bd38      	pop	{r3, r4, r5, pc}

08004d5c <mbed::Timer::read_us()>:
 8004d5c:	b538      	push	{r3, r4, r5, lr}
 8004d5e:	4605      	mov	r5, r0
 8004d60:	f7fc fbda 	bl	8001518 <core_util_critical_section_enter>
 8004d64:	4628      	mov	r0, r5
 8004d66:	68ac      	ldr	r4, [r5, #8]
 8004d68:	f7ff ffe9 	bl	8004d3e <mbed::Timer::slicetime()>
 8004d6c:	4404      	add	r4, r0
 8004d6e:	f7fc fbe9 	bl	8001544 <core_util_critical_section_exit>
 8004d72:	4620      	mov	r0, r4
 8004d74:	bd38      	pop	{r3, r4, r5, pc}

08004d76 <mbed::Timer::read_ms()>:
 8004d76:	b508      	push	{r3, lr}
 8004d78:	f7ff fff0 	bl	8004d5c <mbed::Timer::read_us()>
 8004d7c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004d80:	fb90 f0f3 	sdiv	r0, r0, r3
 8004d84:	bd08      	pop	{r3, pc}

08004d86 <mbed::Timer::reset()>:
 8004d86:	b510      	push	{r4, lr}
 8004d88:	4604      	mov	r4, r0
 8004d8a:	f7fc fbc5 	bl	8001518 <core_util_critical_section_enter>
 8004d8e:	68e0      	ldr	r0, [r4, #12]
 8004d90:	f7fc fb57 	bl	8001442 <ticker_read>
 8004d94:	2300      	movs	r3, #0
 8004d96:	6060      	str	r0, [r4, #4]
 8004d98:	60a3      	str	r3, [r4, #8]
 8004d9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004d9e:	f7fc bbd1 	b.w	8001544 <core_util_critical_section_exit>

08004da2 <mbed::Timer::Timer()>:
 8004da2:	2300      	movs	r3, #0
 8004da4:	b510      	push	{r4, lr}
 8004da6:	6003      	str	r3, [r0, #0]
 8004da8:	6043      	str	r3, [r0, #4]
 8004daa:	6083      	str	r3, [r0, #8]
 8004dac:	4604      	mov	r4, r0
 8004dae:	f7fc fb1b 	bl	80013e8 <get_us_ticker_data>
 8004db2:	60e0      	str	r0, [r4, #12]
 8004db4:	4620      	mov	r0, r4
 8004db6:	f7ff ffe6 	bl	8004d86 <mbed::Timer::reset()>
 8004dba:	4620      	mov	r0, r4
 8004dbc:	bd10      	pop	{r4, pc}

08004dbe <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 8004dbe:	b538      	push	{r3, r4, r5, lr}
 8004dc0:	4604      	mov	r4, r0
 8004dc2:	b148      	cbz	r0, 8004dd8 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8004dc4:	3058      	adds	r0, #88	; 0x58
 8004dc6:	42a0      	cmp	r0, r4
 8004dc8:	d006      	beq.n	8004dd8 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8004dca:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 8004dce:	3814      	subs	r0, #20
 8004dd0:	f7fc f959 	bl	8001086 <mbed::Callback<void (int)>::~Callback()>
 8004dd4:	4628      	mov	r0, r5
 8004dd6:	e7f6      	b.n	8004dc6 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 8004dd8:	4620      	mov	r0, r4
 8004dda:	bd38      	pop	{r3, r4, r5, pc}

08004ddc <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 8004ddc:	b570      	push	{r4, r5, r6, lr}
 8004dde:	4c0e      	ldr	r4, [pc, #56]	; (8004e18 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 8004de0:	4620      	mov	r0, r4
 8004de2:	2500      	movs	r5, #0
 8004de4:	2628      	movs	r6, #40	; 0x28
 8004de6:	4632      	mov	r2, r6
 8004de8:	4629      	mov	r1, r5
 8004dea:	f840 5b04 	str.w	r5, [r0], #4
 8004dee:	f000 fc8c 	bl	800570a <memset>
 8004df2:	4632      	mov	r2, r6
 8004df4:	4629      	mov	r1, r5
 8004df6:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8004dfa:	62e5      	str	r5, [r4, #44]	; 0x2c
 8004dfc:	f000 fc85 	bl	800570a <memset>
 8004e00:	65a5      	str	r5, [r4, #88]	; 0x58
 8004e02:	4620      	mov	r0, r4
 8004e04:	65e5      	str	r5, [r4, #92]	; 0x5c
 8004e06:	4a05      	ldr	r2, [pc, #20]	; (8004e1c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 8004e08:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 8004e0c:	4904      	ldr	r1, [pc, #16]	; (8004e20 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 8004e0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004e12:	f000 b927 	b.w	8005064 <__aeabi_atexit>
 8004e16:	bf00      	nop
 8004e18:	20001580 	.word	0x20001580
 8004e1c:	200001c4 	.word	0x200001c4
 8004e20:	08004dbf 	.word	0x08004dbf

08004e24 <__wrap__malloc_r>:
 8004e24:	f000 bcc8 	b.w	80057b8 <_malloc_r>

08004e28 <__wrap__realloc_r>:
 8004e28:	f000 bd24 	b.w	8005874 <_realloc_r>

08004e2c <__wrap__free_r>:
 8004e2c:	f000 bc76 	b.w	800571c <_free_r>

08004e30 <wait_us>:
 8004e30:	b570      	push	{r4, r5, r6, lr}
 8004e32:	4605      	mov	r5, r0
 8004e34:	f7fe f858 	bl	8002ee8 <us_ticker_read>
 8004e38:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8004e3c:	fb95 f4f4 	sdiv	r4, r5, r4
 8004e40:	2c00      	cmp	r4, #0
 8004e42:	4606      	mov	r6, r0
 8004e44:	dd02      	ble.n	8004e4c <wait_us+0x1c>
 8004e46:	f7fc fb61 	bl	800150c <core_util_are_interrupts_enabled>
 8004e4a:	b928      	cbnz	r0, 8004e58 <wait_us+0x28>
 8004e4c:	f7fe f84c 	bl	8002ee8 <us_ticker_read>
 8004e50:	1b80      	subs	r0, r0, r6
 8004e52:	42a8      	cmp	r0, r5
 8004e54:	d3fa      	bcc.n	8004e4c <wait_us+0x1c>
 8004e56:	bd70      	pop	{r4, r5, r6, pc}
 8004e58:	4620      	mov	r0, r4
 8004e5a:	f000 f92b 	bl	80050b4 <rtos::Thread::wait(unsigned long)>
 8004e5e:	e7f5      	b.n	8004e4c <wait_us+0x1c>

08004e60 <wait_ms>:
 8004e60:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004e64:	4358      	muls	r0, r3
 8004e66:	f7ff bfe3 	b.w	8004e30 <wait_us>
	...

08004e6c <init_serial()>:
 8004e6c:	b508      	push	{r3, lr}
 8004e6e:	4b08      	ldr	r3, [pc, #32]	; (8004e90 <init_serial()+0x24>)
 8004e70:	681b      	ldr	r3, [r3, #0]
 8004e72:	b95b      	cbnz	r3, 8004e8c <init_serial()+0x20>
 8004e74:	2102      	movs	r1, #2
 8004e76:	4807      	ldr	r0, [pc, #28]	; (8004e94 <init_serial()+0x28>)
 8004e78:	2203      	movs	r2, #3
 8004e7a:	f7fe f9d3 	bl	8003224 <serial_init>
 8004e7e:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 8004e82:	4804      	ldr	r0, [pc, #16]	; (8004e94 <init_serial()+0x28>)
 8004e84:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004e88:	f7fe babc 	b.w	8003404 <serial_baud>
 8004e8c:	bd08      	pop	{r3, pc}
 8004e8e:	bf00      	nop
 8004e90:	2000137c 	.word	0x2000137c
 8004e94:	20002194 	.word	0x20002194

08004e98 <_close>:
 8004e98:	2802      	cmp	r0, #2
 8004e9a:	b510      	push	{r4, lr}
 8004e9c:	4604      	mov	r4, r0
 8004e9e:	dc01      	bgt.n	8004ea4 <_close+0xc>
 8004ea0:	2000      	movs	r0, #0
 8004ea2:	bd10      	pop	{r4, pc}
 8004ea4:	f000 f9f0 	bl	8005288 <__errno>
 8004ea8:	2309      	movs	r3, #9
 8004eaa:	6003      	str	r3, [r0, #0]
 8004eac:	3c03      	subs	r4, #3
 8004eae:	4b09      	ldr	r3, [pc, #36]	; (8004ed4 <_close+0x3c>)
 8004eb0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004eb4:	2200      	movs	r2, #0
 8004eb6:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8004eba:	b140      	cbz	r0, 8004ece <_close+0x36>
 8004ebc:	6803      	ldr	r3, [r0, #0]
 8004ebe:	691b      	ldr	r3, [r3, #16]
 8004ec0:	4798      	blx	r3
 8004ec2:	1e04      	subs	r4, r0, #0
 8004ec4:	daec      	bge.n	8004ea0 <_close+0x8>
 8004ec6:	f000 f9df 	bl	8005288 <__errno>
 8004eca:	4264      	negs	r4, r4
 8004ecc:	6004      	str	r4, [r0, #0]
 8004ece:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004ed2:	bd10      	pop	{r4, pc}
 8004ed4:	200015e4 	.word	0x200015e4

08004ed8 <_write>:
 8004ed8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004eda:	4605      	mov	r5, r0
 8004edc:	460e      	mov	r6, r1
 8004ede:	4614      	mov	r4, r2
 8004ee0:	f000 f9d2 	bl	8005288 <__errno>
 8004ee4:	2309      	movs	r3, #9
 8004ee6:	2d02      	cmp	r5, #2
 8004ee8:	6003      	str	r3, [r0, #0]
 8004eea:	dc0f      	bgt.n	8004f0c <_write+0x34>
 8004eec:	4b12      	ldr	r3, [pc, #72]	; (8004f38 <_write+0x60>)
 8004eee:	681b      	ldr	r3, [r3, #0]
 8004ef0:	b90b      	cbnz	r3, 8004ef6 <_write+0x1e>
 8004ef2:	f7ff ffbb 	bl	8004e6c <init_serial()>
 8004ef6:	4635      	mov	r5, r6
 8004ef8:	1937      	adds	r7, r6, r4
 8004efa:	4e10      	ldr	r6, [pc, #64]	; (8004f3c <_write+0x64>)
 8004efc:	42bd      	cmp	r5, r7
 8004efe:	d015      	beq.n	8004f2c <_write+0x54>
 8004f00:	f815 1b01 	ldrb.w	r1, [r5], #1
 8004f04:	4630      	mov	r0, r6
 8004f06:	f7fe fb11 	bl	800352c <serial_putc>
 8004f0a:	e7f7      	b.n	8004efc <_write+0x24>
 8004f0c:	3d03      	subs	r5, #3
 8004f0e:	4b0c      	ldr	r3, [pc, #48]	; (8004f40 <_write+0x68>)
 8004f10:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004f14:	b160      	cbz	r0, 8004f30 <_write+0x58>
 8004f16:	6803      	ldr	r3, [r0, #0]
 8004f18:	4622      	mov	r2, r4
 8004f1a:	68db      	ldr	r3, [r3, #12]
 8004f1c:	4631      	mov	r1, r6
 8004f1e:	4798      	blx	r3
 8004f20:	1e04      	subs	r4, r0, #0
 8004f22:	da03      	bge.n	8004f2c <_write+0x54>
 8004f24:	f000 f9b0 	bl	8005288 <__errno>
 8004f28:	4263      	negs	r3, r4
 8004f2a:	6003      	str	r3, [r0, #0]
 8004f2c:	4620      	mov	r0, r4
 8004f2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004f30:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8004f34:	e7fa      	b.n	8004f2c <_write+0x54>
 8004f36:	bf00      	nop
 8004f38:	2000137c 	.word	0x2000137c
 8004f3c:	20002194 	.word	0x20002194
 8004f40:	200015e4 	.word	0x200015e4

08004f44 <_read>:
 8004f44:	b570      	push	{r4, r5, r6, lr}
 8004f46:	4604      	mov	r4, r0
 8004f48:	460d      	mov	r5, r1
 8004f4a:	4616      	mov	r6, r2
 8004f4c:	f000 f99c 	bl	8005288 <__errno>
 8004f50:	2309      	movs	r3, #9
 8004f52:	2c02      	cmp	r4, #2
 8004f54:	6003      	str	r3, [r0, #0]
 8004f56:	dc0b      	bgt.n	8004f70 <_read+0x2c>
 8004f58:	4b0f      	ldr	r3, [pc, #60]	; (8004f98 <_read+0x54>)
 8004f5a:	681b      	ldr	r3, [r3, #0]
 8004f5c:	b90b      	cbnz	r3, 8004f62 <_read+0x1e>
 8004f5e:	f7ff ff85 	bl	8004e6c <init_serial()>
 8004f62:	480e      	ldr	r0, [pc, #56]	; (8004f9c <_read+0x58>)
 8004f64:	f7fe fac6 	bl	80034f4 <serial_getc>
 8004f68:	2401      	movs	r4, #1
 8004f6a:	7028      	strb	r0, [r5, #0]
 8004f6c:	4620      	mov	r0, r4
 8004f6e:	bd70      	pop	{r4, r5, r6, pc}
 8004f70:	3c03      	subs	r4, #3
 8004f72:	4b0b      	ldr	r3, [pc, #44]	; (8004fa0 <_read+0x5c>)
 8004f74:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004f78:	b158      	cbz	r0, 8004f92 <_read+0x4e>
 8004f7a:	6803      	ldr	r3, [r0, #0]
 8004f7c:	4632      	mov	r2, r6
 8004f7e:	689b      	ldr	r3, [r3, #8]
 8004f80:	4629      	mov	r1, r5
 8004f82:	4798      	blx	r3
 8004f84:	1e04      	subs	r4, r0, #0
 8004f86:	daf1      	bge.n	8004f6c <_read+0x28>
 8004f88:	f000 f97e 	bl	8005288 <__errno>
 8004f8c:	4263      	negs	r3, r4
 8004f8e:	6003      	str	r3, [r0, #0]
 8004f90:	e7ec      	b.n	8004f6c <_read+0x28>
 8004f92:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8004f96:	e7e9      	b.n	8004f6c <_read+0x28>
 8004f98:	2000137c 	.word	0x2000137c
 8004f9c:	20002194 	.word	0x20002194
 8004fa0:	200015e4 	.word	0x200015e4

08004fa4 <_lseek>:
 8004fa4:	b570      	push	{r4, r5, r6, lr}
 8004fa6:	4604      	mov	r4, r0
 8004fa8:	460d      	mov	r5, r1
 8004faa:	4616      	mov	r6, r2
 8004fac:	f000 f96c 	bl	8005288 <__errno>
 8004fb0:	2309      	movs	r3, #9
 8004fb2:	2c02      	cmp	r4, #2
 8004fb4:	6003      	str	r3, [r0, #0]
 8004fb6:	dd0b      	ble.n	8004fd0 <_lseek+0x2c>
 8004fb8:	3c03      	subs	r4, #3
 8004fba:	4b08      	ldr	r3, [pc, #32]	; (8004fdc <_lseek+0x38>)
 8004fbc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004fc0:	b140      	cbz	r0, 8004fd4 <_lseek+0x30>
 8004fc2:	6803      	ldr	r3, [r0, #0]
 8004fc4:	4632      	mov	r2, r6
 8004fc6:	4629      	mov	r1, r5
 8004fc8:	69db      	ldr	r3, [r3, #28]
 8004fca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004fce:	4718      	bx	r3
 8004fd0:	2000      	movs	r0, #0
 8004fd2:	bd70      	pop	{r4, r5, r6, pc}
 8004fd4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004fd8:	bd70      	pop	{r4, r5, r6, pc}
 8004fda:	bf00      	nop
 8004fdc:	200015e4 	.word	0x200015e4

08004fe0 <software_init_hook>:
 8004fe0:	b508      	push	{r3, lr}
 8004fe2:	f7fe fab5 	bl	8003550 <mbed_sdk_init>
 8004fe6:	f7fc fc21 	bl	800182c <software_init_hook_rtos>
 8004fea:	bd08      	pop	{r3, pc}

08004fec <mbed_main>:
 8004fec:	4770      	bx	lr

08004fee <__wrap_main>:
 8004fee:	b508      	push	{r3, lr}
 8004ff0:	f7ff fffc 	bl	8004fec <mbed_main>
 8004ff4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004ff8:	f7fb bd90 	b.w	8000b1c <main>

08004ffc <_sbrk>:
 8004ffc:	4a0c      	ldr	r2, [pc, #48]	; (8005030 <_sbrk+0x34>)
 8004ffe:	6813      	ldr	r3, [r2, #0]
 8005000:	b510      	push	{r4, lr}
 8005002:	4418      	add	r0, r3
 8005004:	f3ef 8108 	mrs	r1, MSP
 8005008:	4288      	cmp	r0, r1
 800500a:	d305      	bcc.n	8005018 <_sbrk+0x1c>
 800500c:	4b09      	ldr	r3, [pc, #36]	; (8005034 <_sbrk+0x38>)
 800500e:	220c      	movs	r2, #12
 8005010:	601a      	str	r2, [r3, #0]
 8005012:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005016:	bd10      	pop	{r4, pc}
 8005018:	4907      	ldr	r1, [pc, #28]	; (8005038 <_sbrk+0x3c>)
 800501a:	680c      	ldr	r4, [r1, #0]
 800501c:	b124      	cbz	r4, 8005028 <_sbrk+0x2c>
 800501e:	4907      	ldr	r1, [pc, #28]	; (800503c <_sbrk+0x40>)
 8005020:	6809      	ldr	r1, [r1, #0]
 8005022:	4421      	add	r1, r4
 8005024:	4288      	cmp	r0, r1
 8005026:	d2f1      	bcs.n	800500c <_sbrk+0x10>
 8005028:	6010      	str	r0, [r2, #0]
 800502a:	4618      	mov	r0, r3
 800502c:	bd10      	pop	{r4, pc}
 800502e:	bf00      	nop
 8005030:	200001e4 	.word	0x200001e4
 8005034:	200021e4 	.word	0x200021e4
 8005038:	200016e4 	.word	0x200016e4
 800503c:	200016e8 	.word	0x200016e8

08005040 <_exit>:
 8005040:	4c07      	ldr	r4, [pc, #28]	; (8005060 <_exit+0x20>)
 8005042:	b508      	push	{r3, lr}
 8005044:	6823      	ldr	r3, [r4, #0]
 8005046:	4605      	mov	r5, r0
 8005048:	6898      	ldr	r0, [r3, #8]
 800504a:	f000 f9d5 	bl	80053f8 <fflush>
 800504e:	6823      	ldr	r3, [r4, #0]
 8005050:	68d8      	ldr	r0, [r3, #12]
 8005052:	f000 f9d1 	bl	80053f8 <fflush>
 8005056:	b10d      	cbz	r5, 800505c <_exit+0x1c>
 8005058:	f7fc fa42 	bl	80014e0 <mbed_die>
 800505c:	e7fe      	b.n	800505c <_exit+0x1c>
 800505e:	bf00      	nop
 8005060:	200001e8 	.word	0x200001e8

08005064 <__aeabi_atexit>:
 8005064:	2001      	movs	r0, #1
 8005066:	4770      	bx	lr

08005068 <__wrap_exit>:
 8005068:	b508      	push	{r3, lr}
 800506a:	f7ff ffe9 	bl	8005040 <_exit>

0800506e <__malloc_lock>:
 800506e:	b508      	push	{r3, lr}
 8005070:	f7fc fbea 	bl	8001848 <__rtos_malloc_lock>
 8005074:	bd08      	pop	{r3, pc}

08005076 <__malloc_unlock>:
 8005076:	b508      	push	{r3, lr}
 8005078:	f7fc fbee 	bl	8001858 <__rtos_malloc_unlock>
 800507c:	bd08      	pop	{r3, pc}
	...

08005080 <operator new[](unsigned int)>:
 8005080:	b510      	push	{r4, lr}
 8005082:	f000 fab9 	bl	80055f8 <malloc>
 8005086:	4604      	mov	r4, r0
 8005088:	b910      	cbnz	r0, 8005090 <operator new[](unsigned int)+0x10>
 800508a:	4802      	ldr	r0, [pc, #8]	; (8005094 <operator new[](unsigned int)+0x14>)
 800508c:	f7fc fa6e 	bl	800156c <error>
 8005090:	4620      	mov	r0, r4
 8005092:	bd10      	pop	{r4, pc}
 8005094:	08006688 	.word	0x08006688

08005098 <operator delete[](void*)>:
 8005098:	b108      	cbz	r0, 800509e <operator delete[](void*)+0x6>
 800509a:	f000 bab5 	b.w	8005608 <free>
 800509e:	4770      	bx	lr

080050a0 <operator delete(void*)>:
 80050a0:	f7ff bffa 	b.w	8005098 <operator delete[](void*)>

080050a4 <thread_terminate_hook>:
 80050a4:	4b02      	ldr	r3, [pc, #8]	; (80050b0 <thread_terminate_hook+0xc>)
 80050a6:	681b      	ldr	r3, [r3, #0]
 80050a8:	b103      	cbz	r3, 80050ac <thread_terminate_hook+0x8>
 80050aa:	4718      	bx	r3
 80050ac:	4770      	bx	lr
 80050ae:	bf00      	nop
 80050b0:	200016ec 	.word	0x200016ec

080050b4 <rtos::Thread::wait(unsigned long)>:
 80050b4:	f7fc bfa6 	b.w	8002004 <osDelay>

080050b8 <rt_set_PSP>:
 80050b8:	f380 8809 	msr	PSP, r0
 80050bc:	4770      	bx	lr

080050be <rt_get_PSP>:
 80050be:	f3ef 8009 	mrs	r0, PSP
 80050c2:	4770      	bx	lr

080050c4 <os_set_env>:
 80050c4:	4668      	mov	r0, sp
 80050c6:	f380 8809 	msr	PSP, r0
 80050ca:	485a      	ldr	r0, [pc, #360]	; (8005234 <OS_Tick_Handler+0x10>)
 80050cc:	7800      	ldrb	r0, [r0, #0]
 80050ce:	07c0      	lsls	r0, r0, #31
 80050d0:	bf14      	ite	ne
 80050d2:	2002      	movne	r0, #2
 80050d4:	2003      	moveq	r0, #3
 80050d6:	f380 8814 	msr	CONTROL, r0
 80050da:	4770      	bx	lr

080050dc <_alloc_box>:
 80050dc:	f8df c158 	ldr.w	r12, [pc, #344]	; 8005238 <OS_Tick_Handler+0x14>
 80050e0:	f3ef 8305 	mrs	r3, IPSR
 80050e4:	061b      	lsls	r3, r3, #24
 80050e6:	bf18      	it	ne
 80050e8:	4760      	bxne	r12
 80050ea:	f3ef 8314 	mrs	r3, CONTROL
 80050ee:	07db      	lsls	r3, r3, #31
 80050f0:	bf08      	it	eq
 80050f2:	4760      	bxeq	r12
 80050f4:	df00      	svc	0
 80050f6:	4770      	bx	lr

080050f8 <_free_box>:
 80050f8:	f8df c140 	ldr.w	r12, [pc, #320]	; 800523c <OS_Tick_Handler+0x18>
 80050fc:	f3ef 8305 	mrs	r3, IPSR
 8005100:	061b      	lsls	r3, r3, #24
 8005102:	bf18      	it	ne
 8005104:	4760      	bxne	r12
 8005106:	f3ef 8314 	mrs	r3, CONTROL
 800510a:	07db      	lsls	r3, r3, #31
 800510c:	bf08      	it	eq
 800510e:	4760      	bxeq	r12
 8005110:	df00      	svc	0
 8005112:	4770      	bx	lr

08005114 <SVC_Handler>:
 8005114:	f3ef 8009 	mrs	r0, PSP
 8005118:	6981      	ldr	r1, [r0, #24]
 800511a:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 800511e:	bbe1      	cbnz	r1, 800519a <SVC_User>
 8005120:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8005124:	b510      	push	{r4, lr}
 8005126:	47e0      	blx	r12
 8005128:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800512c:	f3ef 8c09 	mrs	r12, PSP
 8005130:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 8005134:	4b42      	ldr	r3, [pc, #264]	; (8005240 <OS_Tick_Handler+0x1c>)
 8005136:	e893 0006 	ldmia.w	r3, {r1, r2}
 800513a:	4291      	cmp	r1, r2
 800513c:	bf08      	it	eq
 800513e:	4770      	bxeq	lr
 8005140:	b941      	cbnz	r1, 8005154 <SVC_ContextSave>
 8005142:	f01e 0f10 	tst.w	lr, #16
 8005146:	d116      	bne.n	8005176 <SVC_ContextRestore>
 8005148:	493e      	ldr	r1, [pc, #248]	; (8005244 <OS_Tick_Handler+0x20>)
 800514a:	6808      	ldr	r0, [r1, #0]
 800514c:	f020 0001 	bic.w	r0, r0, #1
 8005150:	6008      	str	r0, [r1, #0]
 8005152:	e010      	b.n	8005176 <SVC_ContextRestore>

08005154 <SVC_ContextSave>:
 8005154:	f01e 0f10 	tst.w	lr, #16
 8005158:	bf06      	itte	eq
 800515a:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 800515e:	2001      	moveq	r0, #1
 8005160:	2000      	movne	r0, #0
 8005162:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8005166:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 800516a:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 800516e:	b40c      	push	{r2, r3}
 8005170:	f7fc fc5e 	bl	8001a30 <rt_stk_check>
 8005174:	bc0c      	pop	{r2, r3}

08005176 <SVC_ContextRestore>:
 8005176:	601a      	str	r2, [r3, #0]
 8005178:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 800517c:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005180:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005184:	2800      	cmp	r0, #0
 8005186:	bf0e      	itee	eq
 8005188:	f06f 0e02 	mvneq.w	lr, #2
 800518c:	f06f 0e12 	mvnne.w	lr, #18
 8005190:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005194:	f38c 8809 	msr	PSP, r12

08005198 <SVC_Exit>:
 8005198:	4770      	bx	lr

0800519a <SVC_User>:
 800519a:	b510      	push	{r4, lr}
 800519c:	4a2a      	ldr	r2, [pc, #168]	; (8005248 <OS_Tick_Handler+0x24>)
 800519e:	6812      	ldr	r2, [r2, #0]
 80051a0:	4291      	cmp	r1, r2
 80051a2:	d809      	bhi.n	80051b8 <SVC_Done>
 80051a4:	4c29      	ldr	r4, [pc, #164]	; (800524c <OS_Tick_Handler+0x28>)
 80051a6:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 80051aa:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 80051ae:	47a0      	blx	r4
 80051b0:	f3ef 8c09 	mrs	r12, PSP
 80051b4:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

080051b8 <SVC_Done>:
 80051b8:	bd10      	pop	{r4, pc}

080051ba <PendSV_Handler>:
 80051ba:	b510      	push	{r4, lr}
 80051bc:	f7fc fbc4 	bl	8001948 <rt_pop_req>

080051c0 <Sys_Switch>:
 80051c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80051c4:	4b1e      	ldr	r3, [pc, #120]	; (8005240 <OS_Tick_Handler+0x1c>)
 80051c6:	e893 0006 	ldmia.w	r3, {r1, r2}
 80051ca:	4291      	cmp	r1, r2
 80051cc:	bf08      	it	eq
 80051ce:	4770      	bxeq	lr
 80051d0:	f3ef 8c09 	mrs	r12, PSP
 80051d4:	f01e 0f10 	tst.w	lr, #16
 80051d8:	bf06      	itte	eq
 80051da:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 80051de:	2001      	moveq	r0, #1
 80051e0:	2000      	movne	r0, #0
 80051e2:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 80051e6:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80051ea:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 80051ee:	b40c      	push	{r2, r3}
 80051f0:	f7fc fc1e 	bl	8001a30 <rt_stk_check>
 80051f4:	bc0c      	pop	{r2, r3}
 80051f6:	601a      	str	r2, [r3, #0]
 80051f8:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 80051fc:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005200:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005204:	2800      	cmp	r0, #0
 8005206:	bf0e      	itee	eq
 8005208:	f06f 0e02 	mvneq.w	lr, #2
 800520c:	f06f 0e12 	mvnne.w	lr, #18
 8005210:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005214:	f38c 8809 	msr	PSP, r12

08005218 <Sys_Exit>:
 8005218:	4770      	bx	lr

0800521a <SysTick_Handler>:
 800521a:	b510      	push	{r4, lr}
 800521c:	f7fc fbea 	bl	80019f4 <rt_systick>
 8005220:	f7ff bfce 	b.w	80051c0 <Sys_Switch>

08005224 <OS_Tick_Handler>:
 8005224:	b510      	push	{r4, lr}
 8005226:	f7fc fbe3 	bl	80019f0 <os_tick_irqack>
 800522a:	f7fc fbe3 	bl	80019f4 <rt_systick>
 800522e:	f7ff bfc7 	b.w	80051c0 <Sys_Switch>
 8005232:	0000      	.short	0x0000
 8005234:	0800649a 	.word	0x0800649a
 8005238:	08001a9f 	.word	0x08001a9f
 800523c:	08001ab9 	.word	0x08001ab9
 8005240:	2000210c 	.word	0x2000210c
 8005244:	e000ef34 	.word	0xe000ef34
 8005248:	00000000 	.word	0x00000000
 800524c:	fffffffc 	.word	0xfffffffc

08005250 <Reset_Handler>:
 8005250:	f8df d020 	ldr.w	sp, [pc, #32]	; 8005274 <LoopCopyDataInit+0x14>
 8005254:	2100      	movs	r1, #0
 8005256:	e003      	b.n	8005260 <LoopCopyDataInit>

08005258 <CopyDataInit>:
 8005258:	4b07      	ldr	r3, [pc, #28]	; (8005278 <LoopCopyDataInit+0x18>)
 800525a:	585b      	ldr	r3, [r3, r1]
 800525c:	5043      	str	r3, [r0, r1]
 800525e:	3104      	adds	r1, #4

08005260 <LoopCopyDataInit>:
 8005260:	4806      	ldr	r0, [pc, #24]	; (800527c <LoopCopyDataInit+0x1c>)
 8005262:	4b07      	ldr	r3, [pc, #28]	; (8005280 <LoopCopyDataInit+0x20>)
 8005264:	1842      	adds	r2, r0, r1
 8005266:	429a      	cmp	r2, r3
 8005268:	d3f6      	bcc.n	8005258 <CopyDataInit>
 800526a:	f7fe fa7b 	bl	8003764 <SystemInit>
 800526e:	f7fb fe7b 	bl	8000f68 <_start>
 8005272:	4770      	bx	lr
 8005274:	20020000 	.word	0x20020000
 8005278:	0800674c 	.word	0x0800674c
 800527c:	200001c4 	.word	0x200001c4
 8005280:	2000025c 	.word	0x2000025c

08005284 <ADC_IRQHandler>:
 8005284:	e7fe      	b.n	8005284 <ADC_IRQHandler>
	...

08005288 <__errno>:
 8005288:	4b01      	ldr	r3, [pc, #4]	; (8005290 <__errno+0x8>)
 800528a:	6818      	ldr	r0, [r3, #0]
 800528c:	4770      	bx	lr
 800528e:	bf00      	nop
 8005290:	200001e8 	.word	0x200001e8

08005294 <__sflush_r>:
 8005294:	898a      	ldrh	r2, [r1, #12]
 8005296:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800529a:	4605      	mov	r5, r0
 800529c:	0710      	lsls	r0, r2, #28
 800529e:	460c      	mov	r4, r1
 80052a0:	d45a      	bmi.n	8005358 <__sflush_r+0xc4>
 80052a2:	684b      	ldr	r3, [r1, #4]
 80052a4:	2b00      	cmp	r3, #0
 80052a6:	dc05      	bgt.n	80052b4 <__sflush_r+0x20>
 80052a8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80052aa:	2b00      	cmp	r3, #0
 80052ac:	dc02      	bgt.n	80052b4 <__sflush_r+0x20>
 80052ae:	2000      	movs	r0, #0
 80052b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80052b4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80052b6:	2e00      	cmp	r6, #0
 80052b8:	d0f9      	beq.n	80052ae <__sflush_r+0x1a>
 80052ba:	2300      	movs	r3, #0
 80052bc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80052c0:	682f      	ldr	r7, [r5, #0]
 80052c2:	602b      	str	r3, [r5, #0]
 80052c4:	d033      	beq.n	800532e <__sflush_r+0x9a>
 80052c6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80052c8:	89a3      	ldrh	r3, [r4, #12]
 80052ca:	075a      	lsls	r2, r3, #29
 80052cc:	d505      	bpl.n	80052da <__sflush_r+0x46>
 80052ce:	6863      	ldr	r3, [r4, #4]
 80052d0:	1ac0      	subs	r0, r0, r3
 80052d2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80052d4:	b10b      	cbz	r3, 80052da <__sflush_r+0x46>
 80052d6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80052d8:	1ac0      	subs	r0, r0, r3
 80052da:	2300      	movs	r3, #0
 80052dc:	4602      	mov	r2, r0
 80052de:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80052e0:	6a21      	ldr	r1, [r4, #32]
 80052e2:	4628      	mov	r0, r5
 80052e4:	47b0      	blx	r6
 80052e6:	1c43      	adds	r3, r0, #1
 80052e8:	89a3      	ldrh	r3, [r4, #12]
 80052ea:	d106      	bne.n	80052fa <__sflush_r+0x66>
 80052ec:	6829      	ldr	r1, [r5, #0]
 80052ee:	291d      	cmp	r1, #29
 80052f0:	d84b      	bhi.n	800538a <__sflush_r+0xf6>
 80052f2:	4a2b      	ldr	r2, [pc, #172]	; (80053a0 <__sflush_r+0x10c>)
 80052f4:	40ca      	lsrs	r2, r1
 80052f6:	07d6      	lsls	r6, r2, #31
 80052f8:	d547      	bpl.n	800538a <__sflush_r+0xf6>
 80052fa:	2200      	movs	r2, #0
 80052fc:	6062      	str	r2, [r4, #4]
 80052fe:	04d9      	lsls	r1, r3, #19
 8005300:	6922      	ldr	r2, [r4, #16]
 8005302:	6022      	str	r2, [r4, #0]
 8005304:	d504      	bpl.n	8005310 <__sflush_r+0x7c>
 8005306:	1c42      	adds	r2, r0, #1
 8005308:	d101      	bne.n	800530e <__sflush_r+0x7a>
 800530a:	682b      	ldr	r3, [r5, #0]
 800530c:	b903      	cbnz	r3, 8005310 <__sflush_r+0x7c>
 800530e:	6560      	str	r0, [r4, #84]	; 0x54
 8005310:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005312:	602f      	str	r7, [r5, #0]
 8005314:	2900      	cmp	r1, #0
 8005316:	d0ca      	beq.n	80052ae <__sflush_r+0x1a>
 8005318:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800531c:	4299      	cmp	r1, r3
 800531e:	d002      	beq.n	8005326 <__sflush_r+0x92>
 8005320:	4628      	mov	r0, r5
 8005322:	f7ff fd83 	bl	8004e2c <__wrap__free_r>
 8005326:	2000      	movs	r0, #0
 8005328:	6360      	str	r0, [r4, #52]	; 0x34
 800532a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800532e:	6a21      	ldr	r1, [r4, #32]
 8005330:	2301      	movs	r3, #1
 8005332:	4628      	mov	r0, r5
 8005334:	47b0      	blx	r6
 8005336:	1c41      	adds	r1, r0, #1
 8005338:	d1c6      	bne.n	80052c8 <__sflush_r+0x34>
 800533a:	682b      	ldr	r3, [r5, #0]
 800533c:	2b00      	cmp	r3, #0
 800533e:	d0c3      	beq.n	80052c8 <__sflush_r+0x34>
 8005340:	2b1d      	cmp	r3, #29
 8005342:	d001      	beq.n	8005348 <__sflush_r+0xb4>
 8005344:	2b16      	cmp	r3, #22
 8005346:	d101      	bne.n	800534c <__sflush_r+0xb8>
 8005348:	602f      	str	r7, [r5, #0]
 800534a:	e7b0      	b.n	80052ae <__sflush_r+0x1a>
 800534c:	89a3      	ldrh	r3, [r4, #12]
 800534e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005352:	81a3      	strh	r3, [r4, #12]
 8005354:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005358:	690f      	ldr	r7, [r1, #16]
 800535a:	2f00      	cmp	r7, #0
 800535c:	d0a7      	beq.n	80052ae <__sflush_r+0x1a>
 800535e:	0793      	lsls	r3, r2, #30
 8005360:	680e      	ldr	r6, [r1, #0]
 8005362:	bf08      	it	eq
 8005364:	694b      	ldreq	r3, [r1, #20]
 8005366:	600f      	str	r7, [r1, #0]
 8005368:	bf18      	it	ne
 800536a:	2300      	movne	r3, #0
 800536c:	eba6 0807 	sub.w	r8, r6, r7
 8005370:	608b      	str	r3, [r1, #8]
 8005372:	f1b8 0f00 	cmp.w	r8, #0
 8005376:	dd9a      	ble.n	80052ae <__sflush_r+0x1a>
 8005378:	4643      	mov	r3, r8
 800537a:	463a      	mov	r2, r7
 800537c:	6a21      	ldr	r1, [r4, #32]
 800537e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005380:	4628      	mov	r0, r5
 8005382:	47b0      	blx	r6
 8005384:	2800      	cmp	r0, #0
 8005386:	dc07      	bgt.n	8005398 <__sflush_r+0x104>
 8005388:	89a3      	ldrh	r3, [r4, #12]
 800538a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800538e:	81a3      	strh	r3, [r4, #12]
 8005390:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005394:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005398:	4407      	add	r7, r0
 800539a:	eba8 0800 	sub.w	r8, r8, r0
 800539e:	e7e8      	b.n	8005372 <__sflush_r+0xde>
 80053a0:	20400001 	.word	0x20400001

080053a4 <_fflush_r>:
 80053a4:	b538      	push	{r3, r4, r5, lr}
 80053a6:	690b      	ldr	r3, [r1, #16]
 80053a8:	4605      	mov	r5, r0
 80053aa:	460c      	mov	r4, r1
 80053ac:	b1db      	cbz	r3, 80053e6 <_fflush_r+0x42>
 80053ae:	b118      	cbz	r0, 80053b8 <_fflush_r+0x14>
 80053b0:	6983      	ldr	r3, [r0, #24]
 80053b2:	b90b      	cbnz	r3, 80053b8 <_fflush_r+0x14>
 80053b4:	f000 f872 	bl	800549c <__sinit>
 80053b8:	4b0c      	ldr	r3, [pc, #48]	; (80053ec <_fflush_r+0x48>)
 80053ba:	429c      	cmp	r4, r3
 80053bc:	d109      	bne.n	80053d2 <_fflush_r+0x2e>
 80053be:	686c      	ldr	r4, [r5, #4]
 80053c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80053c4:	b17b      	cbz	r3, 80053e6 <_fflush_r+0x42>
 80053c6:	4621      	mov	r1, r4
 80053c8:	4628      	mov	r0, r5
 80053ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80053ce:	f7ff bf61 	b.w	8005294 <__sflush_r>
 80053d2:	4b07      	ldr	r3, [pc, #28]	; (80053f0 <_fflush_r+0x4c>)
 80053d4:	429c      	cmp	r4, r3
 80053d6:	d101      	bne.n	80053dc <_fflush_r+0x38>
 80053d8:	68ac      	ldr	r4, [r5, #8]
 80053da:	e7f1      	b.n	80053c0 <_fflush_r+0x1c>
 80053dc:	4b05      	ldr	r3, [pc, #20]	; (80053f4 <_fflush_r+0x50>)
 80053de:	429c      	cmp	r4, r3
 80053e0:	bf08      	it	eq
 80053e2:	68ec      	ldreq	r4, [r5, #12]
 80053e4:	e7ec      	b.n	80053c0 <_fflush_r+0x1c>
 80053e6:	2000      	movs	r0, #0
 80053e8:	bd38      	pop	{r3, r4, r5, pc}
 80053ea:	bf00      	nop
 80053ec:	080066c8 	.word	0x080066c8
 80053f0:	080066e8 	.word	0x080066e8
 80053f4:	080066a8 	.word	0x080066a8

080053f8 <fflush>:
 80053f8:	4601      	mov	r1, r0
 80053fa:	b920      	cbnz	r0, 8005406 <fflush+0xe>
 80053fc:	4b04      	ldr	r3, [pc, #16]	; (8005410 <fflush+0x18>)
 80053fe:	4905      	ldr	r1, [pc, #20]	; (8005414 <fflush+0x1c>)
 8005400:	6818      	ldr	r0, [r3, #0]
 8005402:	f000 b8b7 	b.w	8005574 <_fwalk_reent>
 8005406:	4b04      	ldr	r3, [pc, #16]	; (8005418 <fflush+0x20>)
 8005408:	6818      	ldr	r0, [r3, #0]
 800540a:	f7ff bfcb 	b.w	80053a4 <_fflush_r>
 800540e:	bf00      	nop
 8005410:	08006708 	.word	0x08006708
 8005414:	080053a5 	.word	0x080053a5
 8005418:	200001e8 	.word	0x200001e8

0800541c <_cleanup_r>:
 800541c:	4901      	ldr	r1, [pc, #4]	; (8005424 <_cleanup_r+0x8>)
 800541e:	f000 b8a9 	b.w	8005574 <_fwalk_reent>
 8005422:	bf00      	nop
 8005424:	080053a5 	.word	0x080053a5

08005428 <std.isra.0>:
 8005428:	2300      	movs	r3, #0
 800542a:	b510      	push	{r4, lr}
 800542c:	4604      	mov	r4, r0
 800542e:	6003      	str	r3, [r0, #0]
 8005430:	6043      	str	r3, [r0, #4]
 8005432:	6083      	str	r3, [r0, #8]
 8005434:	8181      	strh	r1, [r0, #12]
 8005436:	6643      	str	r3, [r0, #100]	; 0x64
 8005438:	81c2      	strh	r2, [r0, #14]
 800543a:	6103      	str	r3, [r0, #16]
 800543c:	6143      	str	r3, [r0, #20]
 800543e:	6183      	str	r3, [r0, #24]
 8005440:	4619      	mov	r1, r3
 8005442:	2208      	movs	r2, #8
 8005444:	305c      	adds	r0, #92	; 0x5c
 8005446:	f000 f960 	bl	800570a <memset>
 800544a:	4b05      	ldr	r3, [pc, #20]	; (8005460 <std.isra.0+0x38>)
 800544c:	6263      	str	r3, [r4, #36]	; 0x24
 800544e:	4b05      	ldr	r3, [pc, #20]	; (8005464 <std.isra.0+0x3c>)
 8005450:	62a3      	str	r3, [r4, #40]	; 0x28
 8005452:	4b05      	ldr	r3, [pc, #20]	; (8005468 <std.isra.0+0x40>)
 8005454:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005456:	4b05      	ldr	r3, [pc, #20]	; (800546c <std.isra.0+0x44>)
 8005458:	6224      	str	r4, [r4, #32]
 800545a:	6323      	str	r3, [r4, #48]	; 0x30
 800545c:	bd10      	pop	{r4, pc}
 800545e:	bf00      	nop
 8005460:	08005c1d 	.word	0x08005c1d
 8005464:	08005c3f 	.word	0x08005c3f
 8005468:	08005c77 	.word	0x08005c77
 800546c:	08005c9b 	.word	0x08005c9b

08005470 <__sfmoreglue>:
 8005470:	b570      	push	{r4, r5, r6, lr}
 8005472:	1e4a      	subs	r2, r1, #1
 8005474:	2568      	movs	r5, #104	; 0x68
 8005476:	4355      	muls	r5, r2
 8005478:	460e      	mov	r6, r1
 800547a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800547e:	f7ff fcd1 	bl	8004e24 <__wrap__malloc_r>
 8005482:	4604      	mov	r4, r0
 8005484:	b140      	cbz	r0, 8005498 <__sfmoreglue+0x28>
 8005486:	2100      	movs	r1, #0
 8005488:	e880 0042 	stmia.w	r0, {r1, r6}
 800548c:	300c      	adds	r0, #12
 800548e:	60a0      	str	r0, [r4, #8]
 8005490:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8005494:	f000 f939 	bl	800570a <memset>
 8005498:	4620      	mov	r0, r4
 800549a:	bd70      	pop	{r4, r5, r6, pc}

0800549c <__sinit>:
 800549c:	6983      	ldr	r3, [r0, #24]
 800549e:	b510      	push	{r4, lr}
 80054a0:	4604      	mov	r4, r0
 80054a2:	bb33      	cbnz	r3, 80054f2 <__sinit+0x56>
 80054a4:	6483      	str	r3, [r0, #72]	; 0x48
 80054a6:	64c3      	str	r3, [r0, #76]	; 0x4c
 80054a8:	6503      	str	r3, [r0, #80]	; 0x50
 80054aa:	4b12      	ldr	r3, [pc, #72]	; (80054f4 <__sinit+0x58>)
 80054ac:	4a12      	ldr	r2, [pc, #72]	; (80054f8 <__sinit+0x5c>)
 80054ae:	681b      	ldr	r3, [r3, #0]
 80054b0:	6282      	str	r2, [r0, #40]	; 0x28
 80054b2:	4298      	cmp	r0, r3
 80054b4:	bf04      	itt	eq
 80054b6:	2301      	moveq	r3, #1
 80054b8:	6183      	streq	r3, [r0, #24]
 80054ba:	f000 f81f 	bl	80054fc <__sfp>
 80054be:	6060      	str	r0, [r4, #4]
 80054c0:	4620      	mov	r0, r4
 80054c2:	f000 f81b 	bl	80054fc <__sfp>
 80054c6:	60a0      	str	r0, [r4, #8]
 80054c8:	4620      	mov	r0, r4
 80054ca:	f000 f817 	bl	80054fc <__sfp>
 80054ce:	2200      	movs	r2, #0
 80054d0:	60e0      	str	r0, [r4, #12]
 80054d2:	2104      	movs	r1, #4
 80054d4:	6860      	ldr	r0, [r4, #4]
 80054d6:	f7ff ffa7 	bl	8005428 <std.isra.0>
 80054da:	2201      	movs	r2, #1
 80054dc:	2109      	movs	r1, #9
 80054de:	68a0      	ldr	r0, [r4, #8]
 80054e0:	f7ff ffa2 	bl	8005428 <std.isra.0>
 80054e4:	2202      	movs	r2, #2
 80054e6:	2112      	movs	r1, #18
 80054e8:	68e0      	ldr	r0, [r4, #12]
 80054ea:	f7ff ff9d 	bl	8005428 <std.isra.0>
 80054ee:	2301      	movs	r3, #1
 80054f0:	61a3      	str	r3, [r4, #24]
 80054f2:	bd10      	pop	{r4, pc}
 80054f4:	08006708 	.word	0x08006708
 80054f8:	0800541d 	.word	0x0800541d

080054fc <__sfp>:
 80054fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80054fe:	4b1c      	ldr	r3, [pc, #112]	; (8005570 <__sfp+0x74>)
 8005500:	681e      	ldr	r6, [r3, #0]
 8005502:	69b3      	ldr	r3, [r6, #24]
 8005504:	4607      	mov	r7, r0
 8005506:	b913      	cbnz	r3, 800550e <__sfp+0x12>
 8005508:	4630      	mov	r0, r6
 800550a:	f7ff ffc7 	bl	800549c <__sinit>
 800550e:	3648      	adds	r6, #72	; 0x48
 8005510:	68b4      	ldr	r4, [r6, #8]
 8005512:	6873      	ldr	r3, [r6, #4]
 8005514:	3b01      	subs	r3, #1
 8005516:	d503      	bpl.n	8005520 <__sfp+0x24>
 8005518:	6833      	ldr	r3, [r6, #0]
 800551a:	b133      	cbz	r3, 800552a <__sfp+0x2e>
 800551c:	6836      	ldr	r6, [r6, #0]
 800551e:	e7f7      	b.n	8005510 <__sfp+0x14>
 8005520:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8005524:	b16d      	cbz	r5, 8005542 <__sfp+0x46>
 8005526:	3468      	adds	r4, #104	; 0x68
 8005528:	e7f4      	b.n	8005514 <__sfp+0x18>
 800552a:	2104      	movs	r1, #4
 800552c:	4638      	mov	r0, r7
 800552e:	f7ff ff9f 	bl	8005470 <__sfmoreglue>
 8005532:	6030      	str	r0, [r6, #0]
 8005534:	2800      	cmp	r0, #0
 8005536:	d1f1      	bne.n	800551c <__sfp+0x20>
 8005538:	230c      	movs	r3, #12
 800553a:	603b      	str	r3, [r7, #0]
 800553c:	4604      	mov	r4, r0
 800553e:	4620      	mov	r0, r4
 8005540:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005542:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005546:	81e3      	strh	r3, [r4, #14]
 8005548:	2301      	movs	r3, #1
 800554a:	81a3      	strh	r3, [r4, #12]
 800554c:	6665      	str	r5, [r4, #100]	; 0x64
 800554e:	6025      	str	r5, [r4, #0]
 8005550:	60a5      	str	r5, [r4, #8]
 8005552:	6065      	str	r5, [r4, #4]
 8005554:	6125      	str	r5, [r4, #16]
 8005556:	6165      	str	r5, [r4, #20]
 8005558:	61a5      	str	r5, [r4, #24]
 800555a:	2208      	movs	r2, #8
 800555c:	4629      	mov	r1, r5
 800555e:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8005562:	f000 f8d2 	bl	800570a <memset>
 8005566:	6365      	str	r5, [r4, #52]	; 0x34
 8005568:	63a5      	str	r5, [r4, #56]	; 0x38
 800556a:	64a5      	str	r5, [r4, #72]	; 0x48
 800556c:	64e5      	str	r5, [r4, #76]	; 0x4c
 800556e:	e7e6      	b.n	800553e <__sfp+0x42>
 8005570:	08006708 	.word	0x08006708

08005574 <_fwalk_reent>:
 8005574:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005578:	4680      	mov	r8, r0
 800557a:	4689      	mov	r9, r1
 800557c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8005580:	2600      	movs	r6, #0
 8005582:	b914      	cbnz	r4, 800558a <_fwalk_reent+0x16>
 8005584:	4630      	mov	r0, r6
 8005586:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800558a:	68a5      	ldr	r5, [r4, #8]
 800558c:	6867      	ldr	r7, [r4, #4]
 800558e:	3f01      	subs	r7, #1
 8005590:	d501      	bpl.n	8005596 <_fwalk_reent+0x22>
 8005592:	6824      	ldr	r4, [r4, #0]
 8005594:	e7f5      	b.n	8005582 <_fwalk_reent+0xe>
 8005596:	89ab      	ldrh	r3, [r5, #12]
 8005598:	2b01      	cmp	r3, #1
 800559a:	d907      	bls.n	80055ac <_fwalk_reent+0x38>
 800559c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80055a0:	3301      	adds	r3, #1
 80055a2:	d003      	beq.n	80055ac <_fwalk_reent+0x38>
 80055a4:	4629      	mov	r1, r5
 80055a6:	4640      	mov	r0, r8
 80055a8:	47c8      	blx	r9
 80055aa:	4306      	orrs	r6, r0
 80055ac:	3568      	adds	r5, #104	; 0x68
 80055ae:	e7ee      	b.n	800558e <_fwalk_reent+0x1a>

080055b0 <__libc_init_array>:
 80055b0:	b570      	push	{r4, r5, r6, lr}
 80055b2:	4e0d      	ldr	r6, [pc, #52]	; (80055e8 <__libc_init_array+0x38>)
 80055b4:	4c0d      	ldr	r4, [pc, #52]	; (80055ec <__libc_init_array+0x3c>)
 80055b6:	1ba4      	subs	r4, r4, r6
 80055b8:	10a4      	asrs	r4, r4, #2
 80055ba:	2500      	movs	r5, #0
 80055bc:	42a5      	cmp	r5, r4
 80055be:	d109      	bne.n	80055d4 <__libc_init_array+0x24>
 80055c0:	4e0b      	ldr	r6, [pc, #44]	; (80055f0 <__libc_init_array+0x40>)
 80055c2:	4c0c      	ldr	r4, [pc, #48]	; (80055f4 <__libc_init_array+0x44>)
 80055c4:	f000 fd36 	bl	8006034 <_init>
 80055c8:	1ba4      	subs	r4, r4, r6
 80055ca:	10a4      	asrs	r4, r4, #2
 80055cc:	2500      	movs	r5, #0
 80055ce:	42a5      	cmp	r5, r4
 80055d0:	d105      	bne.n	80055de <__libc_init_array+0x2e>
 80055d2:	bd70      	pop	{r4, r5, r6, pc}
 80055d4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80055d8:	4798      	blx	r3
 80055da:	3501      	adds	r5, #1
 80055dc:	e7ee      	b.n	80055bc <__libc_init_array+0xc>
 80055de:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80055e2:	4798      	blx	r3
 80055e4:	3501      	adds	r5, #1
 80055e6:	e7f2      	b.n	80055ce <__libc_init_array+0x1e>
 80055e8:	2000024c 	.word	0x2000024c
 80055ec:	2000024c 	.word	0x2000024c
 80055f0:	2000024c 	.word	0x2000024c
 80055f4:	20000254 	.word	0x20000254

080055f8 <malloc>:
 80055f8:	4b02      	ldr	r3, [pc, #8]	; (8005604 <malloc+0xc>)
 80055fa:	4601      	mov	r1, r0
 80055fc:	6818      	ldr	r0, [r3, #0]
 80055fe:	f7ff bc11 	b.w	8004e24 <__wrap__malloc_r>
 8005602:	bf00      	nop
 8005604:	200001e8 	.word	0x200001e8

08005608 <free>:
 8005608:	4b02      	ldr	r3, [pc, #8]	; (8005614 <free+0xc>)
 800560a:	4601      	mov	r1, r0
 800560c:	6818      	ldr	r0, [r3, #0]
 800560e:	f7ff bc0d 	b.w	8004e2c <__wrap__free_r>
 8005612:	bf00      	nop
 8005614:	200001e8 	.word	0x200001e8
	...

08005620 <memchr>:
 8005620:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8005624:	2a10      	cmp	r2, #16
 8005626:	db2b      	blt.n	8005680 <memchr+0x60>
 8005628:	f010 0f07 	tst.w	r0, #7
 800562c:	d008      	beq.n	8005640 <memchr+0x20>
 800562e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005632:	3a01      	subs	r2, #1
 8005634:	428b      	cmp	r3, r1
 8005636:	d02d      	beq.n	8005694 <memchr+0x74>
 8005638:	f010 0f07 	tst.w	r0, #7
 800563c:	b342      	cbz	r2, 8005690 <memchr+0x70>
 800563e:	d1f6      	bne.n	800562e <memchr+0xe>
 8005640:	b4f0      	push	{r4, r5, r6, r7}
 8005642:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8005646:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800564a:	f022 0407 	bic.w	r4, r2, #7
 800564e:	f07f 0700 	mvns.w	r7, #0
 8005652:	2300      	movs	r3, #0
 8005654:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8005658:	3c08      	subs	r4, #8
 800565a:	ea85 0501 	eor.w	r5, r5, r1
 800565e:	ea86 0601 	eor.w	r6, r6, r1
 8005662:	fa85 f547 	uadd8	r5, r5, r7
 8005666:	faa3 f587 	sel	r5, r3, r7
 800566a:	fa86 f647 	uadd8	r6, r6, r7
 800566e:	faa5 f687 	sel	r6, r5, r7
 8005672:	b98e      	cbnz	r6, 8005698 <memchr+0x78>
 8005674:	d1ee      	bne.n	8005654 <memchr+0x34>
 8005676:	bcf0      	pop	{r4, r5, r6, r7}
 8005678:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800567c:	f002 0207 	and.w	r2, r2, #7
 8005680:	b132      	cbz	r2, 8005690 <memchr+0x70>
 8005682:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005686:	3a01      	subs	r2, #1
 8005688:	ea83 0301 	eor.w	r3, r3, r1
 800568c:	b113      	cbz	r3, 8005694 <memchr+0x74>
 800568e:	d1f8      	bne.n	8005682 <memchr+0x62>
 8005690:	2000      	movs	r0, #0
 8005692:	4770      	bx	lr
 8005694:	3801      	subs	r0, #1
 8005696:	4770      	bx	lr
 8005698:	2d00      	cmp	r5, #0
 800569a:	bf06      	itte	eq
 800569c:	4635      	moveq	r5, r6
 800569e:	3803      	subeq	r0, #3
 80056a0:	3807      	subne	r0, #7
 80056a2:	f015 0f01 	tst.w	r5, #1
 80056a6:	d107      	bne.n	80056b8 <memchr+0x98>
 80056a8:	3001      	adds	r0, #1
 80056aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80056ae:	bf02      	ittt	eq
 80056b0:	3001      	addeq	r0, #1
 80056b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80056b6:	3001      	addeq	r0, #1
 80056b8:	bcf0      	pop	{r4, r5, r6, r7}
 80056ba:	3801      	subs	r0, #1
 80056bc:	4770      	bx	lr
 80056be:	bf00      	nop

080056c0 <memcpy>:
 80056c0:	b510      	push	{r4, lr}
 80056c2:	1e43      	subs	r3, r0, #1
 80056c4:	440a      	add	r2, r1
 80056c6:	4291      	cmp	r1, r2
 80056c8:	d100      	bne.n	80056cc <memcpy+0xc>
 80056ca:	bd10      	pop	{r4, pc}
 80056cc:	f811 4b01 	ldrb.w	r4, [r1], #1
 80056d0:	f803 4f01 	strb.w	r4, [r3, #1]!
 80056d4:	e7f7      	b.n	80056c6 <memcpy+0x6>

080056d6 <memmove>:
 80056d6:	4288      	cmp	r0, r1
 80056d8:	b510      	push	{r4, lr}
 80056da:	eb01 0302 	add.w	r3, r1, r2
 80056de:	d803      	bhi.n	80056e8 <memmove+0x12>
 80056e0:	1e42      	subs	r2, r0, #1
 80056e2:	4299      	cmp	r1, r3
 80056e4:	d10c      	bne.n	8005700 <memmove+0x2a>
 80056e6:	bd10      	pop	{r4, pc}
 80056e8:	4298      	cmp	r0, r3
 80056ea:	d2f9      	bcs.n	80056e0 <memmove+0xa>
 80056ec:	1881      	adds	r1, r0, r2
 80056ee:	1ad2      	subs	r2, r2, r3
 80056f0:	42d3      	cmn	r3, r2
 80056f2:	d100      	bne.n	80056f6 <memmove+0x20>
 80056f4:	bd10      	pop	{r4, pc}
 80056f6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80056fa:	f801 4d01 	strb.w	r4, [r1, #-1]!
 80056fe:	e7f7      	b.n	80056f0 <memmove+0x1a>
 8005700:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005704:	f802 4f01 	strb.w	r4, [r2, #1]!
 8005708:	e7eb      	b.n	80056e2 <memmove+0xc>

0800570a <memset>:
 800570a:	4402      	add	r2, r0
 800570c:	4603      	mov	r3, r0
 800570e:	4293      	cmp	r3, r2
 8005710:	d100      	bne.n	8005714 <memset+0xa>
 8005712:	4770      	bx	lr
 8005714:	f803 1b01 	strb.w	r1, [r3], #1
 8005718:	e7f9      	b.n	800570e <memset+0x4>
	...

0800571c <_free_r>:
 800571c:	b538      	push	{r3, r4, r5, lr}
 800571e:	4605      	mov	r5, r0
 8005720:	2900      	cmp	r1, #0
 8005722:	d045      	beq.n	80057b0 <_free_r+0x94>
 8005724:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005728:	1f0c      	subs	r4, r1, #4
 800572a:	2b00      	cmp	r3, #0
 800572c:	bfb8      	it	lt
 800572e:	18e4      	addlt	r4, r4, r3
 8005730:	f7ff fc9d 	bl	800506e <__malloc_lock>
 8005734:	4a1f      	ldr	r2, [pc, #124]	; (80057b4 <_free_r+0x98>)
 8005736:	6813      	ldr	r3, [r2, #0]
 8005738:	4610      	mov	r0, r2
 800573a:	b933      	cbnz	r3, 800574a <_free_r+0x2e>
 800573c:	6063      	str	r3, [r4, #4]
 800573e:	6014      	str	r4, [r2, #0]
 8005740:	4628      	mov	r0, r5
 8005742:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005746:	f7ff bc96 	b.w	8005076 <__malloc_unlock>
 800574a:	42a3      	cmp	r3, r4
 800574c:	d90c      	bls.n	8005768 <_free_r+0x4c>
 800574e:	6821      	ldr	r1, [r4, #0]
 8005750:	1862      	adds	r2, r4, r1
 8005752:	4293      	cmp	r3, r2
 8005754:	bf04      	itt	eq
 8005756:	681a      	ldreq	r2, [r3, #0]
 8005758:	685b      	ldreq	r3, [r3, #4]
 800575a:	6063      	str	r3, [r4, #4]
 800575c:	bf04      	itt	eq
 800575e:	1852      	addeq	r2, r2, r1
 8005760:	6022      	streq	r2, [r4, #0]
 8005762:	6004      	str	r4, [r0, #0]
 8005764:	e7ec      	b.n	8005740 <_free_r+0x24>
 8005766:	4613      	mov	r3, r2
 8005768:	685a      	ldr	r2, [r3, #4]
 800576a:	b10a      	cbz	r2, 8005770 <_free_r+0x54>
 800576c:	42a2      	cmp	r2, r4
 800576e:	d9fa      	bls.n	8005766 <_free_r+0x4a>
 8005770:	6819      	ldr	r1, [r3, #0]
 8005772:	1858      	adds	r0, r3, r1
 8005774:	42a0      	cmp	r0, r4
 8005776:	d10b      	bne.n	8005790 <_free_r+0x74>
 8005778:	6820      	ldr	r0, [r4, #0]
 800577a:	4401      	add	r1, r0
 800577c:	1858      	adds	r0, r3, r1
 800577e:	4282      	cmp	r2, r0
 8005780:	6019      	str	r1, [r3, #0]
 8005782:	d1dd      	bne.n	8005740 <_free_r+0x24>
 8005784:	6810      	ldr	r0, [r2, #0]
 8005786:	6852      	ldr	r2, [r2, #4]
 8005788:	605a      	str	r2, [r3, #4]
 800578a:	4401      	add	r1, r0
 800578c:	6019      	str	r1, [r3, #0]
 800578e:	e7d7      	b.n	8005740 <_free_r+0x24>
 8005790:	d902      	bls.n	8005798 <_free_r+0x7c>
 8005792:	230c      	movs	r3, #12
 8005794:	602b      	str	r3, [r5, #0]
 8005796:	e7d3      	b.n	8005740 <_free_r+0x24>
 8005798:	6820      	ldr	r0, [r4, #0]
 800579a:	1821      	adds	r1, r4, r0
 800579c:	428a      	cmp	r2, r1
 800579e:	bf04      	itt	eq
 80057a0:	6811      	ldreq	r1, [r2, #0]
 80057a2:	6852      	ldreq	r2, [r2, #4]
 80057a4:	6062      	str	r2, [r4, #4]
 80057a6:	bf04      	itt	eq
 80057a8:	1809      	addeq	r1, r1, r0
 80057aa:	6021      	streq	r1, [r4, #0]
 80057ac:	605c      	str	r4, [r3, #4]
 80057ae:	e7c7      	b.n	8005740 <_free_r+0x24>
 80057b0:	bd38      	pop	{r3, r4, r5, pc}
 80057b2:	bf00      	nop
 80057b4:	200016f0 	.word	0x200016f0

080057b8 <_malloc_r>:
 80057b8:	b570      	push	{r4, r5, r6, lr}
 80057ba:	1ccd      	adds	r5, r1, #3
 80057bc:	f025 0503 	bic.w	r5, r5, #3
 80057c0:	3508      	adds	r5, #8
 80057c2:	2d0c      	cmp	r5, #12
 80057c4:	bf38      	it	cc
 80057c6:	250c      	movcc	r5, #12
 80057c8:	2d00      	cmp	r5, #0
 80057ca:	4606      	mov	r6, r0
 80057cc:	db01      	blt.n	80057d2 <_malloc_r+0x1a>
 80057ce:	42a9      	cmp	r1, r5
 80057d0:	d903      	bls.n	80057da <_malloc_r+0x22>
 80057d2:	230c      	movs	r3, #12
 80057d4:	6033      	str	r3, [r6, #0]
 80057d6:	2000      	movs	r0, #0
 80057d8:	bd70      	pop	{r4, r5, r6, pc}
 80057da:	f7ff fc48 	bl	800506e <__malloc_lock>
 80057de:	4a23      	ldr	r2, [pc, #140]	; (800586c <_malloc_r+0xb4>)
 80057e0:	6814      	ldr	r4, [r2, #0]
 80057e2:	4621      	mov	r1, r4
 80057e4:	b991      	cbnz	r1, 800580c <_malloc_r+0x54>
 80057e6:	4c22      	ldr	r4, [pc, #136]	; (8005870 <_malloc_r+0xb8>)
 80057e8:	6823      	ldr	r3, [r4, #0]
 80057ea:	b91b      	cbnz	r3, 80057f4 <_malloc_r+0x3c>
 80057ec:	4630      	mov	r0, r6
 80057ee:	f000 fa05 	bl	8005bfc <_sbrk_r>
 80057f2:	6020      	str	r0, [r4, #0]
 80057f4:	4629      	mov	r1, r5
 80057f6:	4630      	mov	r0, r6
 80057f8:	f000 fa00 	bl	8005bfc <_sbrk_r>
 80057fc:	1c43      	adds	r3, r0, #1
 80057fe:	d126      	bne.n	800584e <_malloc_r+0x96>
 8005800:	230c      	movs	r3, #12
 8005802:	6033      	str	r3, [r6, #0]
 8005804:	4630      	mov	r0, r6
 8005806:	f7ff fc36 	bl	8005076 <__malloc_unlock>
 800580a:	e7e4      	b.n	80057d6 <_malloc_r+0x1e>
 800580c:	680b      	ldr	r3, [r1, #0]
 800580e:	1b5b      	subs	r3, r3, r5
 8005810:	d41a      	bmi.n	8005848 <_malloc_r+0x90>
 8005812:	2b0b      	cmp	r3, #11
 8005814:	d90f      	bls.n	8005836 <_malloc_r+0x7e>
 8005816:	600b      	str	r3, [r1, #0]
 8005818:	50cd      	str	r5, [r1, r3]
 800581a:	18cc      	adds	r4, r1, r3
 800581c:	4630      	mov	r0, r6
 800581e:	f7ff fc2a 	bl	8005076 <__malloc_unlock>
 8005822:	f104 000b 	add.w	r0, r4, #11
 8005826:	1d23      	adds	r3, r4, #4
 8005828:	f020 0007 	bic.w	r0, r0, #7
 800582c:	1ac3      	subs	r3, r0, r3
 800582e:	d01b      	beq.n	8005868 <_malloc_r+0xb0>
 8005830:	425a      	negs	r2, r3
 8005832:	50e2      	str	r2, [r4, r3]
 8005834:	bd70      	pop	{r4, r5, r6, pc}
 8005836:	428c      	cmp	r4, r1
 8005838:	bf0d      	iteet	eq
 800583a:	6863      	ldreq	r3, [r4, #4]
 800583c:	684b      	ldrne	r3, [r1, #4]
 800583e:	6063      	strne	r3, [r4, #4]
 8005840:	6013      	streq	r3, [r2, #0]
 8005842:	bf18      	it	ne
 8005844:	460c      	movne	r4, r1
 8005846:	e7e9      	b.n	800581c <_malloc_r+0x64>
 8005848:	460c      	mov	r4, r1
 800584a:	6849      	ldr	r1, [r1, #4]
 800584c:	e7ca      	b.n	80057e4 <_malloc_r+0x2c>
 800584e:	1cc4      	adds	r4, r0, #3
 8005850:	f024 0403 	bic.w	r4, r4, #3
 8005854:	42a0      	cmp	r0, r4
 8005856:	d005      	beq.n	8005864 <_malloc_r+0xac>
 8005858:	1a21      	subs	r1, r4, r0
 800585a:	4630      	mov	r0, r6
 800585c:	f000 f9ce 	bl	8005bfc <_sbrk_r>
 8005860:	3001      	adds	r0, #1
 8005862:	d0cd      	beq.n	8005800 <_malloc_r+0x48>
 8005864:	6025      	str	r5, [r4, #0]
 8005866:	e7d9      	b.n	800581c <_malloc_r+0x64>
 8005868:	bd70      	pop	{r4, r5, r6, pc}
 800586a:	bf00      	nop
 800586c:	200016f0 	.word	0x200016f0
 8005870:	200016f4 	.word	0x200016f4

08005874 <_realloc_r>:
 8005874:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005876:	4607      	mov	r7, r0
 8005878:	4614      	mov	r4, r2
 800587a:	460e      	mov	r6, r1
 800587c:	b921      	cbnz	r1, 8005888 <_realloc_r+0x14>
 800587e:	4611      	mov	r1, r2
 8005880:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005884:	f7ff bace 	b.w	8004e24 <__wrap__malloc_r>
 8005888:	b922      	cbnz	r2, 8005894 <_realloc_r+0x20>
 800588a:	f7ff facf 	bl	8004e2c <__wrap__free_r>
 800588e:	4625      	mov	r5, r4
 8005890:	4628      	mov	r0, r5
 8005892:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005894:	f000 fa64 	bl	8005d60 <_malloc_usable_size_r>
 8005898:	4284      	cmp	r4, r0
 800589a:	d90f      	bls.n	80058bc <_realloc_r+0x48>
 800589c:	4621      	mov	r1, r4
 800589e:	4638      	mov	r0, r7
 80058a0:	f7ff fac0 	bl	8004e24 <__wrap__malloc_r>
 80058a4:	4605      	mov	r5, r0
 80058a6:	2800      	cmp	r0, #0
 80058a8:	d0f2      	beq.n	8005890 <_realloc_r+0x1c>
 80058aa:	4631      	mov	r1, r6
 80058ac:	4622      	mov	r2, r4
 80058ae:	f7ff ff07 	bl	80056c0 <memcpy>
 80058b2:	4631      	mov	r1, r6
 80058b4:	4638      	mov	r0, r7
 80058b6:	f7ff fab9 	bl	8004e2c <__wrap__free_r>
 80058ba:	e7e9      	b.n	8005890 <_realloc_r+0x1c>
 80058bc:	4635      	mov	r5, r6
 80058be:	e7e7      	b.n	8005890 <_realloc_r+0x1c>

080058c0 <_printf_common>:
 80058c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80058c4:	4691      	mov	r9, r2
 80058c6:	461f      	mov	r7, r3
 80058c8:	688a      	ldr	r2, [r1, #8]
 80058ca:	690b      	ldr	r3, [r1, #16]
 80058cc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80058d0:	4293      	cmp	r3, r2
 80058d2:	bfb8      	it	lt
 80058d4:	4613      	movlt	r3, r2
 80058d6:	f8c9 3000 	str.w	r3, [r9]
 80058da:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80058de:	4606      	mov	r6, r0
 80058e0:	460c      	mov	r4, r1
 80058e2:	b112      	cbz	r2, 80058ea <_printf_common+0x2a>
 80058e4:	3301      	adds	r3, #1
 80058e6:	f8c9 3000 	str.w	r3, [r9]
 80058ea:	6823      	ldr	r3, [r4, #0]
 80058ec:	0699      	lsls	r1, r3, #26
 80058ee:	bf42      	ittt	mi
 80058f0:	f8d9 3000 	ldrmi.w	r3, [r9]
 80058f4:	3302      	addmi	r3, #2
 80058f6:	f8c9 3000 	strmi.w	r3, [r9]
 80058fa:	6825      	ldr	r5, [r4, #0]
 80058fc:	f015 0506 	ands.w	r5, r5, #6
 8005900:	d107      	bne.n	8005912 <_printf_common+0x52>
 8005902:	f104 0a19 	add.w	r10, r4, #25
 8005906:	68e3      	ldr	r3, [r4, #12]
 8005908:	f8d9 2000 	ldr.w	r2, [r9]
 800590c:	1a9b      	subs	r3, r3, r2
 800590e:	429d      	cmp	r5, r3
 8005910:	db29      	blt.n	8005966 <_printf_common+0xa6>
 8005912:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8005916:	6822      	ldr	r2, [r4, #0]
 8005918:	3300      	adds	r3, #0
 800591a:	bf18      	it	ne
 800591c:	2301      	movne	r3, #1
 800591e:	0692      	lsls	r2, r2, #26
 8005920:	d42e      	bmi.n	8005980 <_printf_common+0xc0>
 8005922:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005926:	4639      	mov	r1, r7
 8005928:	4630      	mov	r0, r6
 800592a:	47c0      	blx	r8
 800592c:	3001      	adds	r0, #1
 800592e:	d021      	beq.n	8005974 <_printf_common+0xb4>
 8005930:	6823      	ldr	r3, [r4, #0]
 8005932:	68e5      	ldr	r5, [r4, #12]
 8005934:	f8d9 2000 	ldr.w	r2, [r9]
 8005938:	f003 0306 	and.w	r3, r3, #6
 800593c:	2b04      	cmp	r3, #4
 800593e:	bf08      	it	eq
 8005940:	1aad      	subeq	r5, r5, r2
 8005942:	68a3      	ldr	r3, [r4, #8]
 8005944:	6922      	ldr	r2, [r4, #16]
 8005946:	bf0c      	ite	eq
 8005948:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800594c:	2500      	movne	r5, #0
 800594e:	4293      	cmp	r3, r2
 8005950:	bfc4      	itt	gt
 8005952:	1a9b      	subgt	r3, r3, r2
 8005954:	18ed      	addgt	r5, r5, r3
 8005956:	f04f 0900 	mov.w	r9, #0
 800595a:	341a      	adds	r4, #26
 800595c:	454d      	cmp	r5, r9
 800595e:	d11b      	bne.n	8005998 <_printf_common+0xd8>
 8005960:	2000      	movs	r0, #0
 8005962:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005966:	2301      	movs	r3, #1
 8005968:	4652      	mov	r2, r10
 800596a:	4639      	mov	r1, r7
 800596c:	4630      	mov	r0, r6
 800596e:	47c0      	blx	r8
 8005970:	3001      	adds	r0, #1
 8005972:	d103      	bne.n	800597c <_printf_common+0xbc>
 8005974:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005978:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800597c:	3501      	adds	r5, #1
 800597e:	e7c2      	b.n	8005906 <_printf_common+0x46>
 8005980:	18e1      	adds	r1, r4, r3
 8005982:	1c5a      	adds	r2, r3, #1
 8005984:	2030      	movs	r0, #48	; 0x30
 8005986:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800598a:	4422      	add	r2, r4
 800598c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005990:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005994:	3302      	adds	r3, #2
 8005996:	e7c4      	b.n	8005922 <_printf_common+0x62>
 8005998:	2301      	movs	r3, #1
 800599a:	4622      	mov	r2, r4
 800599c:	4639      	mov	r1, r7
 800599e:	4630      	mov	r0, r6
 80059a0:	47c0      	blx	r8
 80059a2:	3001      	adds	r0, #1
 80059a4:	d0e6      	beq.n	8005974 <_printf_common+0xb4>
 80059a6:	f109 0901 	add.w	r9, r9, #1
 80059aa:	e7d7      	b.n	800595c <_printf_common+0x9c>

080059ac <_printf_i>:
 80059ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80059b0:	4617      	mov	r7, r2
 80059b2:	7e0a      	ldrb	r2, [r1, #24]
 80059b4:	b085      	sub	sp, #20
 80059b6:	2a6e      	cmp	r2, #110	; 0x6e
 80059b8:	4698      	mov	r8, r3
 80059ba:	4606      	mov	r6, r0
 80059bc:	460c      	mov	r4, r1
 80059be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80059c0:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 80059c4:	f000 80bc 	beq.w	8005b40 <_printf_i+0x194>
 80059c8:	d81a      	bhi.n	8005a00 <_printf_i+0x54>
 80059ca:	2a63      	cmp	r2, #99	; 0x63
 80059cc:	d02e      	beq.n	8005a2c <_printf_i+0x80>
 80059ce:	d80a      	bhi.n	80059e6 <_printf_i+0x3a>
 80059d0:	2a00      	cmp	r2, #0
 80059d2:	f000 80c8 	beq.w	8005b66 <_printf_i+0x1ba>
 80059d6:	2a58      	cmp	r2, #88	; 0x58
 80059d8:	f000 808a 	beq.w	8005af0 <_printf_i+0x144>
 80059dc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80059e0:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 80059e4:	e02a      	b.n	8005a3c <_printf_i+0x90>
 80059e6:	2a64      	cmp	r2, #100	; 0x64
 80059e8:	d001      	beq.n	80059ee <_printf_i+0x42>
 80059ea:	2a69      	cmp	r2, #105	; 0x69
 80059ec:	d1f6      	bne.n	80059dc <_printf_i+0x30>
 80059ee:	6821      	ldr	r1, [r4, #0]
 80059f0:	681a      	ldr	r2, [r3, #0]
 80059f2:	f011 0f80 	tst.w	r1, #128	; 0x80
 80059f6:	d023      	beq.n	8005a40 <_printf_i+0x94>
 80059f8:	1d11      	adds	r1, r2, #4
 80059fa:	6019      	str	r1, [r3, #0]
 80059fc:	6813      	ldr	r3, [r2, #0]
 80059fe:	e027      	b.n	8005a50 <_printf_i+0xa4>
 8005a00:	2a73      	cmp	r2, #115	; 0x73
 8005a02:	f000 80b4 	beq.w	8005b6e <_printf_i+0x1c2>
 8005a06:	d808      	bhi.n	8005a1a <_printf_i+0x6e>
 8005a08:	2a6f      	cmp	r2, #111	; 0x6f
 8005a0a:	d02a      	beq.n	8005a62 <_printf_i+0xb6>
 8005a0c:	2a70      	cmp	r2, #112	; 0x70
 8005a0e:	d1e5      	bne.n	80059dc <_printf_i+0x30>
 8005a10:	680a      	ldr	r2, [r1, #0]
 8005a12:	f042 0220 	orr.w	r2, r2, #32
 8005a16:	600a      	str	r2, [r1, #0]
 8005a18:	e003      	b.n	8005a22 <_printf_i+0x76>
 8005a1a:	2a75      	cmp	r2, #117	; 0x75
 8005a1c:	d021      	beq.n	8005a62 <_printf_i+0xb6>
 8005a1e:	2a78      	cmp	r2, #120	; 0x78
 8005a20:	d1dc      	bne.n	80059dc <_printf_i+0x30>
 8005a22:	2278      	movs	r2, #120	; 0x78
 8005a24:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8005a28:	496e      	ldr	r1, [pc, #440]	; (8005be4 <_printf_i+0x238>)
 8005a2a:	e064      	b.n	8005af6 <_printf_i+0x14a>
 8005a2c:	681a      	ldr	r2, [r3, #0]
 8005a2e:	f101 0542 	add.w	r5, r1, #66	; 0x42
 8005a32:	1d11      	adds	r1, r2, #4
 8005a34:	6019      	str	r1, [r3, #0]
 8005a36:	6813      	ldr	r3, [r2, #0]
 8005a38:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005a3c:	2301      	movs	r3, #1
 8005a3e:	e0a3      	b.n	8005b88 <_printf_i+0x1dc>
 8005a40:	f011 0f40 	tst.w	r1, #64	; 0x40
 8005a44:	f102 0104 	add.w	r1, r2, #4
 8005a48:	6019      	str	r1, [r3, #0]
 8005a4a:	d0d7      	beq.n	80059fc <_printf_i+0x50>
 8005a4c:	f9b2 3000 	ldrsh.w	r3, [r2]
 8005a50:	2b00      	cmp	r3, #0
 8005a52:	da03      	bge.n	8005a5c <_printf_i+0xb0>
 8005a54:	222d      	movs	r2, #45	; 0x2d
 8005a56:	425b      	negs	r3, r3
 8005a58:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8005a5c:	4962      	ldr	r1, [pc, #392]	; (8005be8 <_printf_i+0x23c>)
 8005a5e:	220a      	movs	r2, #10
 8005a60:	e017      	b.n	8005a92 <_printf_i+0xe6>
 8005a62:	6820      	ldr	r0, [r4, #0]
 8005a64:	6819      	ldr	r1, [r3, #0]
 8005a66:	f010 0f80 	tst.w	r0, #128	; 0x80
 8005a6a:	d003      	beq.n	8005a74 <_printf_i+0xc8>
 8005a6c:	1d08      	adds	r0, r1, #4
 8005a6e:	6018      	str	r0, [r3, #0]
 8005a70:	680b      	ldr	r3, [r1, #0]
 8005a72:	e006      	b.n	8005a82 <_printf_i+0xd6>
 8005a74:	f010 0f40 	tst.w	r0, #64	; 0x40
 8005a78:	f101 0004 	add.w	r0, r1, #4
 8005a7c:	6018      	str	r0, [r3, #0]
 8005a7e:	d0f7      	beq.n	8005a70 <_printf_i+0xc4>
 8005a80:	880b      	ldrh	r3, [r1, #0]
 8005a82:	4959      	ldr	r1, [pc, #356]	; (8005be8 <_printf_i+0x23c>)
 8005a84:	2a6f      	cmp	r2, #111	; 0x6f
 8005a86:	bf14      	ite	ne
 8005a88:	220a      	movne	r2, #10
 8005a8a:	2208      	moveq	r2, #8
 8005a8c:	2000      	movs	r0, #0
 8005a8e:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8005a92:	6865      	ldr	r5, [r4, #4]
 8005a94:	60a5      	str	r5, [r4, #8]
 8005a96:	2d00      	cmp	r5, #0
 8005a98:	f2c0 809c 	blt.w	8005bd4 <_printf_i+0x228>
 8005a9c:	6820      	ldr	r0, [r4, #0]
 8005a9e:	f020 0004 	bic.w	r0, r0, #4
 8005aa2:	6020      	str	r0, [r4, #0]
 8005aa4:	2b00      	cmp	r3, #0
 8005aa6:	d13f      	bne.n	8005b28 <_printf_i+0x17c>
 8005aa8:	2d00      	cmp	r5, #0
 8005aaa:	f040 8095 	bne.w	8005bd8 <_printf_i+0x22c>
 8005aae:	4675      	mov	r5, lr
 8005ab0:	2a08      	cmp	r2, #8
 8005ab2:	d10b      	bne.n	8005acc <_printf_i+0x120>
 8005ab4:	6823      	ldr	r3, [r4, #0]
 8005ab6:	07da      	lsls	r2, r3, #31
 8005ab8:	d508      	bpl.n	8005acc <_printf_i+0x120>
 8005aba:	6923      	ldr	r3, [r4, #16]
 8005abc:	6862      	ldr	r2, [r4, #4]
 8005abe:	429a      	cmp	r2, r3
 8005ac0:	bfde      	ittt	le
 8005ac2:	2330      	movle	r3, #48	; 0x30
 8005ac4:	f805 3c01 	strble.w	r3, [r5, #-1]
 8005ac8:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8005acc:	ebae 0305 	sub.w	r3, lr, r5
 8005ad0:	6123      	str	r3, [r4, #16]
 8005ad2:	f8cd 8000 	str.w	r8, [sp]
 8005ad6:	463b      	mov	r3, r7
 8005ad8:	aa03      	add	r2, sp, #12
 8005ada:	4621      	mov	r1, r4
 8005adc:	4630      	mov	r0, r6
 8005ade:	f7ff feef 	bl	80058c0 <_printf_common>
 8005ae2:	3001      	adds	r0, #1
 8005ae4:	d155      	bne.n	8005b92 <_printf_i+0x1e6>
 8005ae6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005aea:	b005      	add	sp, #20
 8005aec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005af0:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8005af4:	493c      	ldr	r1, [pc, #240]	; (8005be8 <_printf_i+0x23c>)
 8005af6:	6822      	ldr	r2, [r4, #0]
 8005af8:	6818      	ldr	r0, [r3, #0]
 8005afa:	f012 0f80 	tst.w	r2, #128	; 0x80
 8005afe:	f100 0504 	add.w	r5, r0, #4
 8005b02:	601d      	str	r5, [r3, #0]
 8005b04:	d001      	beq.n	8005b0a <_printf_i+0x15e>
 8005b06:	6803      	ldr	r3, [r0, #0]
 8005b08:	e002      	b.n	8005b10 <_printf_i+0x164>
 8005b0a:	0655      	lsls	r5, r2, #25
 8005b0c:	d5fb      	bpl.n	8005b06 <_printf_i+0x15a>
 8005b0e:	8803      	ldrh	r3, [r0, #0]
 8005b10:	07d0      	lsls	r0, r2, #31
 8005b12:	bf44      	itt	mi
 8005b14:	f042 0220 	orrmi.w	r2, r2, #32
 8005b18:	6022      	strmi	r2, [r4, #0]
 8005b1a:	b91b      	cbnz	r3, 8005b24 <_printf_i+0x178>
 8005b1c:	6822      	ldr	r2, [r4, #0]
 8005b1e:	f022 0220 	bic.w	r2, r2, #32
 8005b22:	6022      	str	r2, [r4, #0]
 8005b24:	2210      	movs	r2, #16
 8005b26:	e7b1      	b.n	8005a8c <_printf_i+0xe0>
 8005b28:	4675      	mov	r5, lr
 8005b2a:	fbb3 f0f2 	udiv	r0, r3, r2
 8005b2e:	fb02 3310 	mls	r3, r2, r0, r3
 8005b32:	5ccb      	ldrb	r3, [r1, r3]
 8005b34:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8005b38:	4603      	mov	r3, r0
 8005b3a:	2800      	cmp	r0, #0
 8005b3c:	d1f5      	bne.n	8005b2a <_printf_i+0x17e>
 8005b3e:	e7b7      	b.n	8005ab0 <_printf_i+0x104>
 8005b40:	6808      	ldr	r0, [r1, #0]
 8005b42:	681a      	ldr	r2, [r3, #0]
 8005b44:	6949      	ldr	r1, [r1, #20]
 8005b46:	f010 0f80 	tst.w	r0, #128	; 0x80
 8005b4a:	d004      	beq.n	8005b56 <_printf_i+0x1aa>
 8005b4c:	1d10      	adds	r0, r2, #4
 8005b4e:	6018      	str	r0, [r3, #0]
 8005b50:	6813      	ldr	r3, [r2, #0]
 8005b52:	6019      	str	r1, [r3, #0]
 8005b54:	e007      	b.n	8005b66 <_printf_i+0x1ba>
 8005b56:	f010 0f40 	tst.w	r0, #64	; 0x40
 8005b5a:	f102 0004 	add.w	r0, r2, #4
 8005b5e:	6018      	str	r0, [r3, #0]
 8005b60:	6813      	ldr	r3, [r2, #0]
 8005b62:	d0f6      	beq.n	8005b52 <_printf_i+0x1a6>
 8005b64:	8019      	strh	r1, [r3, #0]
 8005b66:	2300      	movs	r3, #0
 8005b68:	6123      	str	r3, [r4, #16]
 8005b6a:	4675      	mov	r5, lr
 8005b6c:	e7b1      	b.n	8005ad2 <_printf_i+0x126>
 8005b6e:	681a      	ldr	r2, [r3, #0]
 8005b70:	1d11      	adds	r1, r2, #4
 8005b72:	6019      	str	r1, [r3, #0]
 8005b74:	6815      	ldr	r5, [r2, #0]
 8005b76:	6862      	ldr	r2, [r4, #4]
 8005b78:	2100      	movs	r1, #0
 8005b7a:	4628      	mov	r0, r5
 8005b7c:	f7ff fd50 	bl	8005620 <memchr>
 8005b80:	b108      	cbz	r0, 8005b86 <_printf_i+0x1da>
 8005b82:	1b40      	subs	r0, r0, r5
 8005b84:	6060      	str	r0, [r4, #4]
 8005b86:	6863      	ldr	r3, [r4, #4]
 8005b88:	6123      	str	r3, [r4, #16]
 8005b8a:	2300      	movs	r3, #0
 8005b8c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005b90:	e79f      	b.n	8005ad2 <_printf_i+0x126>
 8005b92:	6923      	ldr	r3, [r4, #16]
 8005b94:	462a      	mov	r2, r5
 8005b96:	4639      	mov	r1, r7
 8005b98:	4630      	mov	r0, r6
 8005b9a:	47c0      	blx	r8
 8005b9c:	3001      	adds	r0, #1
 8005b9e:	d0a2      	beq.n	8005ae6 <_printf_i+0x13a>
 8005ba0:	6823      	ldr	r3, [r4, #0]
 8005ba2:	079b      	lsls	r3, r3, #30
 8005ba4:	d507      	bpl.n	8005bb6 <_printf_i+0x20a>
 8005ba6:	2500      	movs	r5, #0
 8005ba8:	f104 0919 	add.w	r9, r4, #25
 8005bac:	68e3      	ldr	r3, [r4, #12]
 8005bae:	9a03      	ldr	r2, [sp, #12]
 8005bb0:	1a9b      	subs	r3, r3, r2
 8005bb2:	429d      	cmp	r5, r3
 8005bb4:	db05      	blt.n	8005bc2 <_printf_i+0x216>
 8005bb6:	68e0      	ldr	r0, [r4, #12]
 8005bb8:	9b03      	ldr	r3, [sp, #12]
 8005bba:	4298      	cmp	r0, r3
 8005bbc:	bfb8      	it	lt
 8005bbe:	4618      	movlt	r0, r3
 8005bc0:	e793      	b.n	8005aea <_printf_i+0x13e>
 8005bc2:	2301      	movs	r3, #1
 8005bc4:	464a      	mov	r2, r9
 8005bc6:	4639      	mov	r1, r7
 8005bc8:	4630      	mov	r0, r6
 8005bca:	47c0      	blx	r8
 8005bcc:	3001      	adds	r0, #1
 8005bce:	d08a      	beq.n	8005ae6 <_printf_i+0x13a>
 8005bd0:	3501      	adds	r5, #1
 8005bd2:	e7eb      	b.n	8005bac <_printf_i+0x200>
 8005bd4:	2b00      	cmp	r3, #0
 8005bd6:	d1a7      	bne.n	8005b28 <_printf_i+0x17c>
 8005bd8:	780b      	ldrb	r3, [r1, #0]
 8005bda:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005bde:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005be2:	e765      	b.n	8005ab0 <_printf_i+0x104>
 8005be4:	0800671d 	.word	0x0800671d
 8005be8:	0800670c 	.word	0x0800670c

08005bec <realloc>:
 8005bec:	4b02      	ldr	r3, [pc, #8]	; (8005bf8 <realloc+0xc>)
 8005bee:	460a      	mov	r2, r1
 8005bf0:	4601      	mov	r1, r0
 8005bf2:	6818      	ldr	r0, [r3, #0]
 8005bf4:	f7ff b918 	b.w	8004e28 <__wrap__realloc_r>
 8005bf8:	200001e8 	.word	0x200001e8

08005bfc <_sbrk_r>:
 8005bfc:	b538      	push	{r3, r4, r5, lr}
 8005bfe:	4c06      	ldr	r4, [pc, #24]	; (8005c18 <_sbrk_r+0x1c>)
 8005c00:	2300      	movs	r3, #0
 8005c02:	4605      	mov	r5, r0
 8005c04:	4608      	mov	r0, r1
 8005c06:	6023      	str	r3, [r4, #0]
 8005c08:	f7ff f9f8 	bl	8004ffc <_sbrk>
 8005c0c:	1c43      	adds	r3, r0, #1
 8005c0e:	d102      	bne.n	8005c16 <_sbrk_r+0x1a>
 8005c10:	6823      	ldr	r3, [r4, #0]
 8005c12:	b103      	cbz	r3, 8005c16 <_sbrk_r+0x1a>
 8005c14:	602b      	str	r3, [r5, #0]
 8005c16:	bd38      	pop	{r3, r4, r5, pc}
 8005c18:	200021e4 	.word	0x200021e4

08005c1c <__sread>:
 8005c1c:	b510      	push	{r4, lr}
 8005c1e:	460c      	mov	r4, r1
 8005c20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005c24:	f000 f9f4 	bl	8006010 <_read_r>
 8005c28:	2800      	cmp	r0, #0
 8005c2a:	bfab      	itete	ge
 8005c2c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8005c2e:	89a3      	ldrhlt	r3, [r4, #12]
 8005c30:	181b      	addge	r3, r3, r0
 8005c32:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005c36:	bfac      	ite	ge
 8005c38:	6563      	strge	r3, [r4, #84]	; 0x54
 8005c3a:	81a3      	strhlt	r3, [r4, #12]
 8005c3c:	bd10      	pop	{r4, pc}

08005c3e <__swrite>:
 8005c3e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005c42:	461f      	mov	r7, r3
 8005c44:	898b      	ldrh	r3, [r1, #12]
 8005c46:	05db      	lsls	r3, r3, #23
 8005c48:	4605      	mov	r5, r0
 8005c4a:	460c      	mov	r4, r1
 8005c4c:	4616      	mov	r6, r2
 8005c4e:	d505      	bpl.n	8005c5c <__swrite+0x1e>
 8005c50:	2302      	movs	r3, #2
 8005c52:	2200      	movs	r2, #0
 8005c54:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005c58:	f000 f870 	bl	8005d3c <_lseek_r>
 8005c5c:	89a3      	ldrh	r3, [r4, #12]
 8005c5e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005c62:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005c66:	81a3      	strh	r3, [r4, #12]
 8005c68:	4632      	mov	r2, r6
 8005c6a:	463b      	mov	r3, r7
 8005c6c:	4628      	mov	r0, r5
 8005c6e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005c72:	f000 b841 	b.w	8005cf8 <_write_r>

08005c76 <__sseek>:
 8005c76:	b510      	push	{r4, lr}
 8005c78:	460c      	mov	r4, r1
 8005c7a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005c7e:	f000 f85d 	bl	8005d3c <_lseek_r>
 8005c82:	1c43      	adds	r3, r0, #1
 8005c84:	89a3      	ldrh	r3, [r4, #12]
 8005c86:	bf15      	itete	ne
 8005c88:	6560      	strne	r0, [r4, #84]	; 0x54
 8005c8a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8005c8e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8005c92:	81a3      	strheq	r3, [r4, #12]
 8005c94:	bf18      	it	ne
 8005c96:	81a3      	strhne	r3, [r4, #12]
 8005c98:	bd10      	pop	{r4, pc}

08005c9a <__sclose>:
 8005c9a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005c9e:	f000 b83d 	b.w	8005d1c <_close_r>

08005ca2 <strlen>:
 8005ca2:	4603      	mov	r3, r0
 8005ca4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005ca8:	2a00      	cmp	r2, #0
 8005caa:	d1fb      	bne.n	8005ca4 <strlen+0x2>
 8005cac:	1a18      	subs	r0, r3, r0
 8005cae:	3801      	subs	r0, #1
 8005cb0:	4770      	bx	lr

08005cb2 <_vsiprintf_r>:
 8005cb2:	b510      	push	{r4, lr}
 8005cb4:	b09a      	sub	sp, #104	; 0x68
 8005cb6:	f44f 7402 	mov.w	r4, #520	; 0x208
 8005cba:	9100      	str	r1, [sp, #0]
 8005cbc:	9104      	str	r1, [sp, #16]
 8005cbe:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8005cc2:	9102      	str	r1, [sp, #8]
 8005cc4:	9105      	str	r1, [sp, #20]
 8005cc6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8005cca:	f8ad 100e 	strh.w	r1, [sp, #14]
 8005cce:	4669      	mov	r1, sp
 8005cd0:	f8ad 400c 	strh.w	r4, [sp, #12]
 8005cd4:	f000 f8a8 	bl	8005e28 <_svfiprintf_r>
 8005cd8:	9b00      	ldr	r3, [sp, #0]
 8005cda:	2200      	movs	r2, #0
 8005cdc:	701a      	strb	r2, [r3, #0]
 8005cde:	b01a      	add	sp, #104	; 0x68
 8005ce0:	bd10      	pop	{r4, pc}
	...

08005ce4 <vsiprintf>:
 8005ce4:	4613      	mov	r3, r2
 8005ce6:	460a      	mov	r2, r1
 8005ce8:	4601      	mov	r1, r0
 8005cea:	4802      	ldr	r0, [pc, #8]	; (8005cf4 <vsiprintf+0x10>)
 8005cec:	6800      	ldr	r0, [r0, #0]
 8005cee:	f7ff bfe0 	b.w	8005cb2 <_vsiprintf_r>
 8005cf2:	bf00      	nop
 8005cf4:	200001e8 	.word	0x200001e8

08005cf8 <_write_r>:
 8005cf8:	b538      	push	{r3, r4, r5, lr}
 8005cfa:	4c07      	ldr	r4, [pc, #28]	; (8005d18 <_write_r+0x20>)
 8005cfc:	4605      	mov	r5, r0
 8005cfe:	4608      	mov	r0, r1
 8005d00:	4611      	mov	r1, r2
 8005d02:	2200      	movs	r2, #0
 8005d04:	6022      	str	r2, [r4, #0]
 8005d06:	461a      	mov	r2, r3
 8005d08:	f7ff f8e6 	bl	8004ed8 <_write>
 8005d0c:	1c43      	adds	r3, r0, #1
 8005d0e:	d102      	bne.n	8005d16 <_write_r+0x1e>
 8005d10:	6823      	ldr	r3, [r4, #0]
 8005d12:	b103      	cbz	r3, 8005d16 <_write_r+0x1e>
 8005d14:	602b      	str	r3, [r5, #0]
 8005d16:	bd38      	pop	{r3, r4, r5, pc}
 8005d18:	200021e4 	.word	0x200021e4

08005d1c <_close_r>:
 8005d1c:	b538      	push	{r3, r4, r5, lr}
 8005d1e:	4c06      	ldr	r4, [pc, #24]	; (8005d38 <_close_r+0x1c>)
 8005d20:	2300      	movs	r3, #0
 8005d22:	4605      	mov	r5, r0
 8005d24:	4608      	mov	r0, r1
 8005d26:	6023      	str	r3, [r4, #0]
 8005d28:	f7ff f8b6 	bl	8004e98 <_close>
 8005d2c:	1c43      	adds	r3, r0, #1
 8005d2e:	d102      	bne.n	8005d36 <_close_r+0x1a>
 8005d30:	6823      	ldr	r3, [r4, #0]
 8005d32:	b103      	cbz	r3, 8005d36 <_close_r+0x1a>
 8005d34:	602b      	str	r3, [r5, #0]
 8005d36:	bd38      	pop	{r3, r4, r5, pc}
 8005d38:	200021e4 	.word	0x200021e4

08005d3c <_lseek_r>:
 8005d3c:	b538      	push	{r3, r4, r5, lr}
 8005d3e:	4c07      	ldr	r4, [pc, #28]	; (8005d5c <_lseek_r+0x20>)
 8005d40:	4605      	mov	r5, r0
 8005d42:	4608      	mov	r0, r1
 8005d44:	4611      	mov	r1, r2
 8005d46:	2200      	movs	r2, #0
 8005d48:	6022      	str	r2, [r4, #0]
 8005d4a:	461a      	mov	r2, r3
 8005d4c:	f7ff f92a 	bl	8004fa4 <_lseek>
 8005d50:	1c43      	adds	r3, r0, #1
 8005d52:	d102      	bne.n	8005d5a <_lseek_r+0x1e>
 8005d54:	6823      	ldr	r3, [r4, #0]
 8005d56:	b103      	cbz	r3, 8005d5a <_lseek_r+0x1e>
 8005d58:	602b      	str	r3, [r5, #0]
 8005d5a:	bd38      	pop	{r3, r4, r5, pc}
 8005d5c:	200021e4 	.word	0x200021e4

08005d60 <_malloc_usable_size_r>:
 8005d60:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8005d64:	2800      	cmp	r0, #0
 8005d66:	f1a0 0004 	sub.w	r0, r0, #4
 8005d6a:	bfbc      	itt	lt
 8005d6c:	580b      	ldrlt	r3, [r1, r0]
 8005d6e:	18c0      	addlt	r0, r0, r3
 8005d70:	4770      	bx	lr

08005d72 <__ssputs_r>:
 8005d72:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8005d76:	688e      	ldr	r6, [r1, #8]
 8005d78:	429e      	cmp	r6, r3
 8005d7a:	4682      	mov	r10, r0
 8005d7c:	460c      	mov	r4, r1
 8005d7e:	4691      	mov	r9, r2
 8005d80:	4698      	mov	r8, r3
 8005d82:	d835      	bhi.n	8005df0 <__ssputs_r+0x7e>
 8005d84:	898a      	ldrh	r2, [r1, #12]
 8005d86:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8005d8a:	d031      	beq.n	8005df0 <__ssputs_r+0x7e>
 8005d8c:	6825      	ldr	r5, [r4, #0]
 8005d8e:	6909      	ldr	r1, [r1, #16]
 8005d90:	1a6f      	subs	r7, r5, r1
 8005d92:	6965      	ldr	r5, [r4, #20]
 8005d94:	2302      	movs	r3, #2
 8005d96:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005d9a:	fb95 f5f3 	sdiv	r5, r5, r3
 8005d9e:	f108 0301 	add.w	r3, r8, #1
 8005da2:	443b      	add	r3, r7
 8005da4:	429d      	cmp	r5, r3
 8005da6:	bf38      	it	cc
 8005da8:	461d      	movcc	r5, r3
 8005daa:	0553      	lsls	r3, r2, #21
 8005dac:	d531      	bpl.n	8005e12 <__ssputs_r+0xa0>
 8005dae:	4629      	mov	r1, r5
 8005db0:	f7ff f838 	bl	8004e24 <__wrap__malloc_r>
 8005db4:	4606      	mov	r6, r0
 8005db6:	b950      	cbnz	r0, 8005dce <__ssputs_r+0x5c>
 8005db8:	230c      	movs	r3, #12
 8005dba:	f8ca 3000 	str.w	r3, [r10]
 8005dbe:	89a3      	ldrh	r3, [r4, #12]
 8005dc0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005dc4:	81a3      	strh	r3, [r4, #12]
 8005dc6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005dca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005dce:	463a      	mov	r2, r7
 8005dd0:	6921      	ldr	r1, [r4, #16]
 8005dd2:	f7ff fc75 	bl	80056c0 <memcpy>
 8005dd6:	89a3      	ldrh	r3, [r4, #12]
 8005dd8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005ddc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005de0:	81a3      	strh	r3, [r4, #12]
 8005de2:	6126      	str	r6, [r4, #16]
 8005de4:	6165      	str	r5, [r4, #20]
 8005de6:	443e      	add	r6, r7
 8005de8:	1bed      	subs	r5, r5, r7
 8005dea:	6026      	str	r6, [r4, #0]
 8005dec:	60a5      	str	r5, [r4, #8]
 8005dee:	4646      	mov	r6, r8
 8005df0:	4546      	cmp	r6, r8
 8005df2:	bf28      	it	cs
 8005df4:	4646      	movcs	r6, r8
 8005df6:	4632      	mov	r2, r6
 8005df8:	4649      	mov	r1, r9
 8005dfa:	6820      	ldr	r0, [r4, #0]
 8005dfc:	f7ff fc6b 	bl	80056d6 <memmove>
 8005e00:	68a3      	ldr	r3, [r4, #8]
 8005e02:	1b9b      	subs	r3, r3, r6
 8005e04:	60a3      	str	r3, [r4, #8]
 8005e06:	6823      	ldr	r3, [r4, #0]
 8005e08:	441e      	add	r6, r3
 8005e0a:	6026      	str	r6, [r4, #0]
 8005e0c:	2000      	movs	r0, #0
 8005e0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005e12:	462a      	mov	r2, r5
 8005e14:	f7ff f808 	bl	8004e28 <__wrap__realloc_r>
 8005e18:	4606      	mov	r6, r0
 8005e1a:	2800      	cmp	r0, #0
 8005e1c:	d1e1      	bne.n	8005de2 <__ssputs_r+0x70>
 8005e1e:	6921      	ldr	r1, [r4, #16]
 8005e20:	4650      	mov	r0, r10
 8005e22:	f7ff f803 	bl	8004e2c <__wrap__free_r>
 8005e26:	e7c7      	b.n	8005db8 <__ssputs_r+0x46>

08005e28 <_svfiprintf_r>:
 8005e28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8005e2c:	b09d      	sub	sp, #116	; 0x74
 8005e2e:	4680      	mov	r8, r0
 8005e30:	9303      	str	r3, [sp, #12]
 8005e32:	898b      	ldrh	r3, [r1, #12]
 8005e34:	061c      	lsls	r4, r3, #24
 8005e36:	460d      	mov	r5, r1
 8005e38:	4616      	mov	r6, r2
 8005e3a:	d50f      	bpl.n	8005e5c <_svfiprintf_r+0x34>
 8005e3c:	690b      	ldr	r3, [r1, #16]
 8005e3e:	b96b      	cbnz	r3, 8005e5c <_svfiprintf_r+0x34>
 8005e40:	2140      	movs	r1, #64	; 0x40
 8005e42:	f7fe ffef 	bl	8004e24 <__wrap__malloc_r>
 8005e46:	6028      	str	r0, [r5, #0]
 8005e48:	6128      	str	r0, [r5, #16]
 8005e4a:	b928      	cbnz	r0, 8005e58 <_svfiprintf_r+0x30>
 8005e4c:	230c      	movs	r3, #12
 8005e4e:	f8c8 3000 	str.w	r3, [r8]
 8005e52:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005e56:	e0c5      	b.n	8005fe4 <_svfiprintf_r+0x1bc>
 8005e58:	2340      	movs	r3, #64	; 0x40
 8005e5a:	616b      	str	r3, [r5, #20]
 8005e5c:	2300      	movs	r3, #0
 8005e5e:	9309      	str	r3, [sp, #36]	; 0x24
 8005e60:	2320      	movs	r3, #32
 8005e62:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005e66:	2330      	movs	r3, #48	; 0x30
 8005e68:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005e6c:	f04f 0b01 	mov.w	r11, #1
 8005e70:	4637      	mov	r7, r6
 8005e72:	463c      	mov	r4, r7
 8005e74:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005e78:	2b00      	cmp	r3, #0
 8005e7a:	d13c      	bne.n	8005ef6 <_svfiprintf_r+0xce>
 8005e7c:	ebb7 0a06 	subs.w	r10, r7, r6
 8005e80:	d00b      	beq.n	8005e9a <_svfiprintf_r+0x72>
 8005e82:	4653      	mov	r3, r10
 8005e84:	4632      	mov	r2, r6
 8005e86:	4629      	mov	r1, r5
 8005e88:	4640      	mov	r0, r8
 8005e8a:	f7ff ff72 	bl	8005d72 <__ssputs_r>
 8005e8e:	3001      	adds	r0, #1
 8005e90:	f000 80a3 	beq.w	8005fda <_svfiprintf_r+0x1b2>
 8005e94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005e96:	4453      	add	r3, r10
 8005e98:	9309      	str	r3, [sp, #36]	; 0x24
 8005e9a:	783b      	ldrb	r3, [r7, #0]
 8005e9c:	2b00      	cmp	r3, #0
 8005e9e:	f000 809c 	beq.w	8005fda <_svfiprintf_r+0x1b2>
 8005ea2:	2300      	movs	r3, #0
 8005ea4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005ea8:	9304      	str	r3, [sp, #16]
 8005eaa:	9307      	str	r3, [sp, #28]
 8005eac:	9205      	str	r2, [sp, #20]
 8005eae:	9306      	str	r3, [sp, #24]
 8005eb0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005eb4:	931a      	str	r3, [sp, #104]	; 0x68
 8005eb6:	2205      	movs	r2, #5
 8005eb8:	7821      	ldrb	r1, [r4, #0]
 8005eba:	4850      	ldr	r0, [pc, #320]	; (8005ffc <_svfiprintf_r+0x1d4>)
 8005ebc:	f7ff fbb0 	bl	8005620 <memchr>
 8005ec0:	1c67      	adds	r7, r4, #1
 8005ec2:	9b04      	ldr	r3, [sp, #16]
 8005ec4:	b9d8      	cbnz	r0, 8005efe <_svfiprintf_r+0xd6>
 8005ec6:	06d9      	lsls	r1, r3, #27
 8005ec8:	bf44      	itt	mi
 8005eca:	2220      	movmi	r2, #32
 8005ecc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005ed0:	071a      	lsls	r2, r3, #28
 8005ed2:	bf44      	itt	mi
 8005ed4:	222b      	movmi	r2, #43	; 0x2b
 8005ed6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005eda:	7822      	ldrb	r2, [r4, #0]
 8005edc:	2a2a      	cmp	r2, #42	; 0x2a
 8005ede:	d016      	beq.n	8005f0e <_svfiprintf_r+0xe6>
 8005ee0:	9a07      	ldr	r2, [sp, #28]
 8005ee2:	2100      	movs	r1, #0
 8005ee4:	200a      	movs	r0, #10
 8005ee6:	4627      	mov	r7, r4
 8005ee8:	3401      	adds	r4, #1
 8005eea:	783b      	ldrb	r3, [r7, #0]
 8005eec:	3b30      	subs	r3, #48	; 0x30
 8005eee:	2b09      	cmp	r3, #9
 8005ef0:	d951      	bls.n	8005f96 <_svfiprintf_r+0x16e>
 8005ef2:	b1c9      	cbz	r1, 8005f28 <_svfiprintf_r+0x100>
 8005ef4:	e011      	b.n	8005f1a <_svfiprintf_r+0xf2>
 8005ef6:	2b25      	cmp	r3, #37	; 0x25
 8005ef8:	d0c0      	beq.n	8005e7c <_svfiprintf_r+0x54>
 8005efa:	4627      	mov	r7, r4
 8005efc:	e7b9      	b.n	8005e72 <_svfiprintf_r+0x4a>
 8005efe:	4a3f      	ldr	r2, [pc, #252]	; (8005ffc <_svfiprintf_r+0x1d4>)
 8005f00:	1a80      	subs	r0, r0, r2
 8005f02:	fa0b f000 	lsl.w	r0, r11, r0
 8005f06:	4318      	orrs	r0, r3
 8005f08:	9004      	str	r0, [sp, #16]
 8005f0a:	463c      	mov	r4, r7
 8005f0c:	e7d3      	b.n	8005eb6 <_svfiprintf_r+0x8e>
 8005f0e:	9a03      	ldr	r2, [sp, #12]
 8005f10:	1d11      	adds	r1, r2, #4
 8005f12:	6812      	ldr	r2, [r2, #0]
 8005f14:	9103      	str	r1, [sp, #12]
 8005f16:	2a00      	cmp	r2, #0
 8005f18:	db01      	blt.n	8005f1e <_svfiprintf_r+0xf6>
 8005f1a:	9207      	str	r2, [sp, #28]
 8005f1c:	e004      	b.n	8005f28 <_svfiprintf_r+0x100>
 8005f1e:	4252      	negs	r2, r2
 8005f20:	f043 0302 	orr.w	r3, r3, #2
 8005f24:	9207      	str	r2, [sp, #28]
 8005f26:	9304      	str	r3, [sp, #16]
 8005f28:	783b      	ldrb	r3, [r7, #0]
 8005f2a:	2b2e      	cmp	r3, #46	; 0x2e
 8005f2c:	d10e      	bne.n	8005f4c <_svfiprintf_r+0x124>
 8005f2e:	787b      	ldrb	r3, [r7, #1]
 8005f30:	2b2a      	cmp	r3, #42	; 0x2a
 8005f32:	f107 0101 	add.w	r1, r7, #1
 8005f36:	d132      	bne.n	8005f9e <_svfiprintf_r+0x176>
 8005f38:	9b03      	ldr	r3, [sp, #12]
 8005f3a:	1d1a      	adds	r2, r3, #4
 8005f3c:	681b      	ldr	r3, [r3, #0]
 8005f3e:	9203      	str	r2, [sp, #12]
 8005f40:	2b00      	cmp	r3, #0
 8005f42:	bfb8      	it	lt
 8005f44:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8005f48:	3702      	adds	r7, #2
 8005f4a:	9305      	str	r3, [sp, #20]
 8005f4c:	4c2c      	ldr	r4, [pc, #176]	; (8006000 <_svfiprintf_r+0x1d8>)
 8005f4e:	7839      	ldrb	r1, [r7, #0]
 8005f50:	2203      	movs	r2, #3
 8005f52:	4620      	mov	r0, r4
 8005f54:	f7ff fb64 	bl	8005620 <memchr>
 8005f58:	b138      	cbz	r0, 8005f6a <_svfiprintf_r+0x142>
 8005f5a:	2340      	movs	r3, #64	; 0x40
 8005f5c:	1b00      	subs	r0, r0, r4
 8005f5e:	fa03 f000 	lsl.w	r0, r3, r0
 8005f62:	9b04      	ldr	r3, [sp, #16]
 8005f64:	4303      	orrs	r3, r0
 8005f66:	9304      	str	r3, [sp, #16]
 8005f68:	3701      	adds	r7, #1
 8005f6a:	7839      	ldrb	r1, [r7, #0]
 8005f6c:	4825      	ldr	r0, [pc, #148]	; (8006004 <_svfiprintf_r+0x1dc>)
 8005f6e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005f72:	2206      	movs	r2, #6
 8005f74:	1c7e      	adds	r6, r7, #1
 8005f76:	f7ff fb53 	bl	8005620 <memchr>
 8005f7a:	2800      	cmp	r0, #0
 8005f7c:	d035      	beq.n	8005fea <_svfiprintf_r+0x1c2>
 8005f7e:	4b22      	ldr	r3, [pc, #136]	; (8006008 <_svfiprintf_r+0x1e0>)
 8005f80:	b9fb      	cbnz	r3, 8005fc2 <_svfiprintf_r+0x19a>
 8005f82:	9b03      	ldr	r3, [sp, #12]
 8005f84:	3307      	adds	r3, #7
 8005f86:	f023 0307 	bic.w	r3, r3, #7
 8005f8a:	3308      	adds	r3, #8
 8005f8c:	9303      	str	r3, [sp, #12]
 8005f8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005f90:	444b      	add	r3, r9
 8005f92:	9309      	str	r3, [sp, #36]	; 0x24
 8005f94:	e76c      	b.n	8005e70 <_svfiprintf_r+0x48>
 8005f96:	fb00 3202 	mla	r2, r0, r2, r3
 8005f9a:	2101      	movs	r1, #1
 8005f9c:	e7a3      	b.n	8005ee6 <_svfiprintf_r+0xbe>
 8005f9e:	2300      	movs	r3, #0
 8005fa0:	9305      	str	r3, [sp, #20]
 8005fa2:	4618      	mov	r0, r3
 8005fa4:	240a      	movs	r4, #10
 8005fa6:	460f      	mov	r7, r1
 8005fa8:	3101      	adds	r1, #1
 8005faa:	783a      	ldrb	r2, [r7, #0]
 8005fac:	3a30      	subs	r2, #48	; 0x30
 8005fae:	2a09      	cmp	r2, #9
 8005fb0:	d903      	bls.n	8005fba <_svfiprintf_r+0x192>
 8005fb2:	2b00      	cmp	r3, #0
 8005fb4:	d0ca      	beq.n	8005f4c <_svfiprintf_r+0x124>
 8005fb6:	9005      	str	r0, [sp, #20]
 8005fb8:	e7c8      	b.n	8005f4c <_svfiprintf_r+0x124>
 8005fba:	fb04 2000 	mla	r0, r4, r0, r2
 8005fbe:	2301      	movs	r3, #1
 8005fc0:	e7f1      	b.n	8005fa6 <_svfiprintf_r+0x17e>
 8005fc2:	ab03      	add	r3, sp, #12
 8005fc4:	9300      	str	r3, [sp, #0]
 8005fc6:	462a      	mov	r2, r5
 8005fc8:	4b10      	ldr	r3, [pc, #64]	; (800600c <_svfiprintf_r+0x1e4>)
 8005fca:	a904      	add	r1, sp, #16
 8005fcc:	4640      	mov	r0, r8
 8005fce:	f3af 8000 	nop.w
 8005fd2:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8005fd6:	4681      	mov	r9, r0
 8005fd8:	d1d9      	bne.n	8005f8e <_svfiprintf_r+0x166>
 8005fda:	89ab      	ldrh	r3, [r5, #12]
 8005fdc:	065b      	lsls	r3, r3, #25
 8005fde:	f53f af38 	bmi.w	8005e52 <_svfiprintf_r+0x2a>
 8005fe2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005fe4:	b01d      	add	sp, #116	; 0x74
 8005fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8005fea:	ab03      	add	r3, sp, #12
 8005fec:	9300      	str	r3, [sp, #0]
 8005fee:	462a      	mov	r2, r5
 8005ff0:	4b06      	ldr	r3, [pc, #24]	; (800600c <_svfiprintf_r+0x1e4>)
 8005ff2:	a904      	add	r1, sp, #16
 8005ff4:	4640      	mov	r0, r8
 8005ff6:	f7ff fcd9 	bl	80059ac <_printf_i>
 8005ffa:	e7ea      	b.n	8005fd2 <_svfiprintf_r+0x1aa>
 8005ffc:	0800672e 	.word	0x0800672e
 8006000:	08006734 	.word	0x08006734
 8006004:	08006738 	.word	0x08006738
 8006008:	00000000 	.word	0x00000000
 800600c:	08005d73 	.word	0x08005d73

08006010 <_read_r>:
 8006010:	b538      	push	{r3, r4, r5, lr}
 8006012:	4c07      	ldr	r4, [pc, #28]	; (8006030 <_read_r+0x20>)
 8006014:	4605      	mov	r5, r0
 8006016:	4608      	mov	r0, r1
 8006018:	4611      	mov	r1, r2
 800601a:	2200      	movs	r2, #0
 800601c:	6022      	str	r2, [r4, #0]
 800601e:	461a      	mov	r2, r3
 8006020:	f7fe ff90 	bl	8004f44 <_read>
 8006024:	1c43      	adds	r3, r0, #1
 8006026:	d102      	bne.n	800602e <_read_r+0x1e>
 8006028:	6823      	ldr	r3, [r4, #0]
 800602a:	b103      	cbz	r3, 800602e <_read_r+0x1e>
 800602c:	602b      	str	r3, [r5, #0]
 800602e:	bd38      	pop	{r3, r4, r5, pc}
 8006030:	200021e4 	.word	0x200021e4

08006034 <_init>:
 8006034:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006036:	bf00      	nop
 8006038:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800603a:	bc08      	pop	{r3}
 800603c:	469e      	mov	lr, r3
 800603e:	4770      	bx	lr

08006040 <_fini>:
 8006040:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006042:	bf00      	nop
 8006044:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006046:	bc08      	pop	{r3}
 8006048:	469e      	mov	lr, r3
 800604a:	4770      	bx	lr

0800604c <vtable for std_msgs::Time>:
	...
 8006054:	0231 0800 0259 0800 0295 0800 029d 0800     1...Y...........

08006064 <vtable for rosserial_msgs::TopicInfo>:
	...
 800606c:	03fd 0800 0605 0800 02a5 0800 02ad 0800     ................

0800607c <vtable for rosserial_msgs::Log>:
	...
 8006084:	03d1 0800 04a1 0800 02b5 0800 02bd 0800     ................

08006094 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 800609c:	02ef 0800 04d7 0800 02c5 0800 02cd 0800     ................

080060ac <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 80060b4:	083d 0800 08fd 0800 02d5 0800 6639 6530     =...........9f0e
 80060c4:	3839 6462 3661 3935 3138 3839 6436 6664     98bda65981986ddf
 80060d4:	3335 6661 3761 3461 6530 3934 3100 6131     53afa7a40e49.11a
 80060e4:	6462 3337 6331 3532 3339 3233 3136 6463     bd731c25933261cd
 80060f4:	3136 3338 6462 3231 3664 3932 0035 6f72     6183bd12d6295.ro
 8006104:	7373 7265 6169 5f6c 736d 7367 4c2f 676f     sserial_msgs/Log
 8006114:	3000 6461 3135 3866 6638 3463 3834 3239     .0ad51f88fc44892
 8006124:	3866 3163 3630 3438 3730 3637 3634 3030     f8c1068407764600
 8006134:	0035 6f72 7373 7265 6169 5f6c 736d 7367     5.rosserial_msgs
 8006144:	542f 706f 6369 6e49 6f66 7200                    /TopicInfo.

0800614f <rosserial_msgs::REQUESTPARAM>:
 800614f:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 800615f:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 800616f:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 800617f:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 800618f:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 800619f:	6566 2e72 6300 3764 3631 6336 3437 3563     fer..cd7166c74c5
 80061af:	3235 3363 3131 6266 6363 6632 3565 3761     52c311fbcc2fe5a7
 80061bf:	6362 3832 0039 7473 5f64 736d 7367 542f     bc289.std_msgs/T
 80061cf:	6d69 0065 0000                                   ime..

080061d4 <vtable for std_msgs::Bool>:
	...
 80061dc:	0c1d 0800 0c25 0800 0c2d 0800 0c35 0800     ....%...-...5...

080061ec <vtable for std_msgs::Int32>:
	...
 80061f4:	0c3d 0800 0c51 0800 0c59 0800 0c61 0800     =...Q...Y...a...

08006204 <vtable for std_srvs::EmptyRequest>:
	...
 800620c:	0c69 0800 0c6d 0800 0c71 0800 0c79 0800     i...m...q...y...

0800621c <vtable for std_srvs::EmptyResponse>:
	...
 8006224:	0c81 0800 0c85 0800 0c89 0800 0c91 0800     ................

08006234 <vtable for ros::Subscriber<std_msgs::Bool, testClass>>:
	...
 800623c:	0d19 0800 0d3f 0800 0d45 0800 0d4d 0800     ....?...E...M...

0800624c <vtable for ros::Subscriber<std_msgs::Int32, testClass>>:
	...
 8006254:	0cd5 0800 0d03 0800 0d09 0800 0d11 0800     ................

08006264 <vtable for ros::ServiceServer<std_srvs::EmptyRequest, std_srvs::EmptyResponse, testClass>>:
	...
 800626c:	0d81 0800 0cbf 0800 0cc5 0800 0ccd 0800     ................
 800627c:	6238 3439 3163 3562 6433 3662 6631 3662     8b94c1b53db61fb6
 800628c:	6561 3464 3630 3230 6138 3664 3333 6132     aed406028ad6332a
 800629c:	7300 6474 6d5f 6773 2f73 6f42 6c6f 6400     .std_msgs/Bool.d
 80062ac:	3561 3039 6639 6562 3733 6138 6165 3866     a5909fbe378aeaf8
 80062bc:	6535 3435 6537 3338 6330 3163 6262 0037     5e547e830cc1bb7.
 80062cc:	7473 5f64 736d 7367 492f 746e 3233 6400     std_msgs/Int32.d
 80062dc:	3134 3864 6463 3839 3066 6230 3032 6534     41d8cd98f00b204e
 80062ec:	3839 3030 3939 6538 6663 3438 3732 0065     9800998ecf8427e.

080062fc <std_srvs::EMPTY>:
 80062fc:	7473 5f64 7273 7376 452f 706d 7974 2f00     std_srvs/Empty./
 800630c:	7473 7461 7375 6c2f 6465 2f00 7473 7461     status/led./stat
 800631c:	7375 762f 6c61 6575 2f00 6d63 2f64 656c     us/value./cmd/le
 800632c:	0064 632f 646d 762f 6c61 6575 2f00 6d63     d./cmd/value./cm
 800633c:	2f64 6f74 6767 656c 0000 0000               d/toggle....

08006348 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8006348:	0ffb 0800 0fed 0800 0ff9 0800 682f 6d6f     ............/hom
 8006358:	2f65 6166 616c 7470 706f 722f 736f 6c2f     e/falaptop/ros/l
 8006368:	6269 722f 736f 6c5f 6269 422f 6675 6566     ib/ros_lib/Buffe
 8006378:	6572 5364 7265 6169 2f6c 7542 6666 7265     redSerial/Buffer
 8006388:	6465 6553 6972 6c61 632e 7070 2500 2073     edSerial.cpp.%s 
 8006398:	6425 6220 6675 6566 2072 766f 7265 7277     %d buffer overwr
 80063a8:	7469 2065 6d28 7861 625f 6675 735f 7a69     ite (max_buf_siz
 80063b8:	3a65 2520 2064 7865 6563 6465 6465 203a     e: %d exceeded: 
 80063c8:	6425 2129 0a0d 0000                         %d)!....

080063d0 <vtable for BufferedSerial>:
	...
 80063d8:	4ce1 0800 4ce1 0800 10e5 0800 113d 0800     .L...L......=...
 80063e8:	0fad 0800 0fbd 0800 0fc1 0800 125d 0800     ............]...
 80063f8:	1275 0800 12f1 0800 12b3 0800               u...........

08006404 <us_data>:
 8006404:	640c 0800 027c 2000                         .d..|.. 

0800640c <us_interface>:
 800640c:	2ec5 0800 2ee9 0800 2f21 0800 2f39 0800     ........!/..9/..
 800641c:	2f05 0800 6970 6d6e 7061 6d20 7369 6d2d     ./..pinmap mis-m
 800642c:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
 800643c:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
 800644c:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
 800645c:	6e69 756f 0074 0000                         inout...

08006464 <mp_stk_size>:
 8006464:	0210 0000                                   ....

08006468 <mp_tcb_size>:
 8006468:	03cc                                        ..

0800646a <mp_tmr_size>:
	...

0800646c <os_clockrate>:
 800646c:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 800647c:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 800648c:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

08006499 <os_fifo_size>:
 8006499:	0110                                             .

0800649a <os_flags>:
 800649a:	0001                                        ..

0800649c <os_maxtaskrun>:
 800649c:	000f 0000                                   ....

080064a0 <os_messageQ_def_osTimerMessageQ>:
 80064a0:	0004 0000 02a0 2000                         ....... 

080064a8 <os_mutex_def_env_mutex>:
 80064a8:	02c0 2000                                   ... 

080064ac <os_mutex_def_malloc_mutex>:
 80064ac:	02d0 2000                                   ... 

080064b0 <os_mutex_def_singleton_mutex>:
 80064b0:	02e0 2000                                   ... 

080064b4 <os_rrobin>:
 80064b4:	0005 0001                                   ....

080064b8 <os_stackinfo>:
 80064b8:	0200 0100                                   ....

080064bc <os_thread_def_osTimerThread>:
 80064bc:	23f9 0800 0002 0000 0001 0000 0320 0000     .#.......... ...
 80064cc:	17b8 2000                                   ... 

080064d0 <os_trv>:
 80064d0:	bf1f 0002                                   ....

080064d4 <os_mutex_def_osThreadMutex>:
 80064d4:	12f4 2000 6950 6d6e 7061 6520 7272 726f     ... Pinmap error
 80064e4:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 80064f4:	6562 2e72 0000 0000                         ber.....

080064fc <ll_pin_defines>:
 80064fc:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 800650c:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 800651c:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 800652c:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
 800653c:	6143 6e6e 746f 6920 696e 6974 6c61 7a69     Cannot initializ
 800654c:	2065 4155 5452 000a                         e UART..

08006554 <PinMap_UART_RX>:
 8006554:	0001 0000 4c00 4000 0812 0000 0003 0000     .....L.@........
 8006564:	4400 4000 0712 0000 000a 0000 1000 4001     .D.@...........@
 8006574:	0712 0000 0017 0000 1000 4001 0712 0000     ...........@....
 8006584:	0025 0000 4800 4000 0712 0000 0027 0000     %....H.@....'...
 8006594:	1400 4001 0812 0000 002b 0000 4800 4000     ...@....+....H.@
 80065a4:	0712 0000 0032 0000 5000 4000 0812 0000     ....2....P.@....
 80065b4:	ffff 0000 ffff ffff 0000 0000               ............

080065c0 <PinMap_UART_TX>:
 80065c0:	0000 0000 4c00 4000 0812 0000 0002 0000     .....L.@........
 80065d0:	4400 4000 0712 0000 0009 0000 1000 4001     .D.@...........@
 80065e0:	0712 0000 0016 0000 1000 4001 0712 0000     ...........@....
 80065f0:	001a 0000 4800 4000 0712 0000 0026 0000     .....H.@....&...
 8006600:	1400 4001 0812 0000 002a 0000 4800 4000     ...@....*....H.@
 8006610:	0712 0000 002c 0000 5000 4000 0812 0000     ....,....P.@....
 8006620:	ffff 0000 ffff ffff 0000 0000               ............

0800662c <AHBPrescTable>:
	...
 8006634:	0201 0403 0706 0908                         ........

0800663c <APBAHBPrescTable>:
 800663c:	0000 0000 0201 0403 0201 0403 0706 0908     ................

0800664c <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 800664c:	4b4b 0800 4b4f 0800 4b57 0800               KK..OK..WK..

08006658 <vtable for mbed::SerialBase>:
	...
 8006660:	4b0b 0800 4b0d 0800 1099 0800 10d1 0800     .K...K..........

08006670 <vtable for mbed::RawSerial>:
	...
 8006678:	4ce1 0800 4ce1 0800 4cf9 0800 4d0d 0800     .L...L...L...M..
 8006688:	704f 7265 7461 726f 6e20 7765 5d5b 6f20     Operator new[] o
 8006698:	7475 6f20 2066 656d 6f6d 7972 0a0d 0000     ut of memory....

080066a8 <__sf_fake_stderr>:
	...

080066c8 <__sf_fake_stdin>:
	...

080066e8 <__sf_fake_stdout>:
	...

08006708 <_global_impure_ptr>:
 8006708:	01ec 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 8006718:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 8006728:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 8006738:	6665 4567 4746 0000                         efgEFG..

08006740 <__EH_FRAME_BEGIN__>:
 8006740:	0000 0000                                   ....
